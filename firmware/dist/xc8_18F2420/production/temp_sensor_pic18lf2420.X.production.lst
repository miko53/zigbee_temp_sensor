

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Aug 28 13:33:11 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  000CC4                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _zb_frameID
    59  000CC4  01                 	db	1
    60                           
    61                           ;initializer for _zb_frameToSend
    62  000CC5  7E                 	db	126
    63  000CC6  00                 	db	0
    64  000CC7  04                 	db	4
    65  000CC8  10                 	db	16
    66  000CC9  02                 	db	2
    67  000CCA  00                 	db	0
    68  000CCB  00                 	db	0
    69  000CCC  00                 	db	0
    70  000CCD  00                 	db	0
    71  000CCE  00                 	db	0
    72  000CCF  00                 	db	0
    73  000CD0  00                 	db	0
    74  000CD1  00                 	db	0
    75  000CD2  FF                 	db	255
    76  000CD3  FE                 	db	254
    77  000CD4  00                 	db	0
    78  000CD5  00                 	db	0
    79  000CD6  00                 	db	0
    80  000CD7  00                 	db	0
    81  000CD8  03                 	db	3
    82  000CD9  01                 	db	1
    83  000CDA  00                 	db	0
    84  000CDB  00                 	db	0
    85  000CDC  00                 	db	0
    86  000CDD  02                 	db	2
    87  000CDE  00                 	db	0
    88  000CDF  00                 	db	0
    89  000CE0  00                 	db	0
    90  000CE1  03                 	db	3
    91  000CE2  00                 	db	0
    92  000CE3  00                 	db	0
    93  000CE4  00                 	db	0
    94  000CE5  00                 	db	0
    95  0000                     _TMR0	set	4054
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADCON1	set	4033
    98  0000                     _ADCON2	set	4032
    99  0000                     _ADRESH	set	4036
   100  0000                     _ADRESL	set	4035
   101  0000                     _BAUDCON	set	4024
   102  0000                     _INTCONbits	set	4082
   103  0000                     _LATA	set	3977
   104  0000                     _LATAbits	set	3977
   105  0000                     _LATBbits	set	3978
   106  0000                     _LATCbits	set	3979
   107  0000                     _OSCCON	set	4051
   108  0000                     _OSCCONbits	set	4051
   109  0000                     _OSCTUNE	set	3995
   110  0000                     _PIE1bits	set	3997
   111  0000                     _PIR1bits	set	3998
   112  0000                     _PIR2bits	set	4001
   113  0000                     _PORTA	set	3968
   114  0000                     _PORTBbits	set	3969
   115  0000                     _PORTCbits	set	3970
   116  0000                     _RCREG	set	4014
   117  0000                     _RCSTA	set	4011
   118  0000                     _RCSTAbits	set	4011
   119  0000                     _SPBRG	set	4015
   120  0000                     _SPBRGH	set	4016
   121  0000                     _SSPADD	set	4040
   122  0000                     _SSPBUF	set	4041
   123  0000                     _SSPCON1	set	4038
   124  0000                     _SSPCON2	set	4037
   125  0000                     _SSPCON2bits	set	4037
   126  0000                     _SSPSTAT	set	4039
   127  0000                     _SSPSTATbits	set	4039
   128  0000                     _T0CON	set	4053
   129  0000                     _T0CONbits	set	4053
   130  0000                     _T1CON	set	4045
   131  0000                     _TMR1H	set	4047
   132  0000                     _TMR1L	set	4046
   133  0000                     _TRISA	set	3986
   134  0000                     _TRISBbits	set	3987
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISCbits	set	3988
   137  0000                     _TXREG	set	4013
   138  0000                     _TXSTA	set	4012
   139  0000                     _TXSTAbits	set	4012
   140  0000                     _WDTCONbits	set	4049
   141                           
   142                           ; #config settings
   143  0000                     
   144                           	psect	cinit
   145  000A92                     __pcinit:
   146                           	opt stack 0
   147  000A92                     start_initialization:
   148                           	opt stack 0
   149  000A92                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Clear objects allocated to BANK1 (50 bytes)
   153  000A92  EE01  F000         	lfsr	0,__pbssBANK1
   154  000A96  0E32               	movlw	50
   155  000A98                     clear_0:
   156  000A98  6AEE               	clrf	postinc0,c
   157  000A9A  06E8               	decf	wreg,f,c
   158  000A9C  E1FD               	bnz	clear_0
   159                           
   160                           ; Clear objects allocated to BANK0 (86 bytes)
   161  000A9E  EE00  F080         	lfsr	0,__pbssBANK0
   162  000AA2  0E56               	movlw	86
   163  000AA4                     clear_1:
   164  000AA4  6AEE               	clrf	postinc0,c
   165  000AA6  06E8               	decf	wreg,f,c
   166  000AA8  E1FD               	bnz	clear_1
   167                           
   168                           ; Clear objects allocated to COMRAM (34 bytes)
   169  000AAA  EE00  F02C         	lfsr	0,__pbssCOMRAM
   170  000AAE  0E22               	movlw	34
   171  000AB0                     clear_2:
   172  000AB0  6AEE               	clrf	postinc0,c
   173  000AB2  06E8               	decf	wreg,f,c
   174  000AB4  E1FD               	bnz	clear_2
   175                           
   176                           ; Initialize objects allocated to COMRAM (34 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178  000AB6  0EC4               	movlw	low __pidataCOMRAM
   179  000AB8  6EF6               	movwf	tblptrl,c
   180  000ABA  0E0C               	movlw	high __pidataCOMRAM
   181  000ABC  6EF7               	movwf	tblptrh,c
   182  000ABE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183  000AC0  6EF8               	movwf	tblptru,c
   184  000AC2  EE00  F04E         	lfsr	0,__pdataCOMRAM
   185  000AC6  EE10 F022          	lfsr	1,34
   186  000ACA                     copy_data0:
   187  000ACA  0009               	tblrd		*+
   188  000ACC  CFF5 FFEE          	movff	tablat,postinc0
   189  000AD0  50E5               	movf	postdec1,w,c
   190  000AD2  50E1               	movf	fsr1l,w,c
   191  000AD4  E1FA               	bnz	copy_data0
   192  000AD6                     end_of_initialization:
   193                           	opt stack 0
   194  000AD6                     __end_of__initialization:
   195                           	opt stack 0
   196  000AD6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197  000AD8  6EF8               	movwf	tblptru,c
   198  000ADA  0100               	movlb	0
   199  000ADC  EF20  F005         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           	psect	bssCOMRAM
   210  00002C                     __pbssCOMRAM:
   211                           	opt stack 0
   212  00002C                     _sensor_data:
   213                           	opt stack 0
   214  00002C                     	ds	9
   215  000035                     _gData:
   216                           	opt stack 0
   217  000035                     	ds	4
   218  000039                     _UART_errorStatus:
   219                           	opt stack 0
   220  000039                     	ds	3
   221  00003C                     _batt_counter:
   222                           	opt stack 0
   223  00003C                     	ds	3
   224  00003F                     _batt_value:
   225                           	opt stack 0
   226  00003F                     	ds	2
   227  000041                     _UART_readIndex:
   228                           	opt stack 0
   229  000041                     	ds	1
   230  000042                     _UART_rxBufferNb:
   231                           	opt stack 0
   232  000042                     	ds	1
   233  000043                     _UART_writeIndex:
   234                           	opt stack 0
   235  000043                     	ds	1
   236  000044                     _calibr:
   237                           	opt stack 0
   238  000044                     	ds	1
   239  000045                     _i2c_interupt_done:
   240                           	opt stack 0
   241  000045                     	ds	1
   242  000046                     _main_state:
   243                           	opt stack 0
   244  000046                     	ds	1
   245  000047                     _timer0_interupt_done:
   246                           	opt stack 0
   247  000047                     	ds	1
   248  000048                     _wait_join_counter:
   249                           	opt stack 0
   250  000048                     	ds	1
   251  000049                     _zb_counter:
   252                           	opt stack 0
   253  000049                     	ds	1
   254  00004A                     _zb_currentAck:
   255                           	opt stack 0
   256  00004A                     	ds	1
   257  00004B                     _zb_currentFrameID:
   258                           	opt stack 0
   259  00004B                     	ds	1
   260  00004C                     _zb_state:
   261                           	opt stack 0
   262  00004C                     	ds	1
   263  00004D                     _zb_status:
   264                           	opt stack 0
   265  00004D                     	ds	1
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           postdec1	equ	0xFE5
   273                           fsr1l	equ	0xFE1
   274                           
   275                           	psect	dataCOMRAM
   276  00004E                     __pdataCOMRAM:
   277                           	opt stack 0
   278  00004E                     _zb_frameID:
   279                           	opt stack 0
   280  00004E                     	ds	1
   281  00004F                     _zb_frameToSend:
   282                           	opt stack 0
   283  00004F                     	ds	33
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	bssBANK0
   294  000080                     __pbssBANK0:
   295                           	opt stack 0
   296  000080                     _zb_frameReceived:
   297                           	opt stack 0
   298  000080                     	ds	50
   299  0000B2                     _filter_data:
   300                           	opt stack 0
   301  0000B2                     	ds	36
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           postdec1	equ	0xFE5
   309                           fsr1l	equ	0xFE1
   310                           
   311                           	psect	bssBANK1
   312  000100                     __pbssBANK1:
   313                           	opt stack 0
   314  000100                     _UART_rxBuffer:
   315                           	opt stack 0
   316  000100                     	ds	50
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	cstackBANK0
   327  0000D6                     __pcstackBANK0:
   328                           	opt stack 0
   329  0000D6                     zb_handle_waitAck@waitCounter:
   330                           	opt stack 0
   331  0000D6                     filter@filtered:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x0
   335  0000D6                     	ds	1
   336  0000D7                     zb_handle_waitAck@bAckReceived:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x1
   340  0000D7                     	ds	1
   341  0000D8                     filter@sum:
   342                           	opt stack 0
   343                           
   344                           ; 4 bytes @ 0x2
   345  0000D8                     	ds	4
   346  0000DC                     filter@i:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x6
   350  0000DC                     	ds	1
   351  0000DD                     filter@id:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x7
   355  0000DD                     	ds	1
   356  0000DE                     main_loop@zb_status:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x8
   360  0000DE                     	ds	1
   361  0000DF                     main_loop@hyt221_status:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x9
   365  0000DF                     	ds	1
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	cstackCOMRAM
   376  000001                     __pcstackCOMRAM:
   377                           	opt stack 0
   378  000001                     ??_isr_hi:
   379  000001                     
   380                           ; 2 bytes @ 0x0
   381  000001                     	ds	15
   382  000010                     isr_hi@dummy:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0xF
   386  000010                     	ds	1
   387  000011                     ??_leds_green_glitch:
   388  000011                     ??_leds_yellow_glitch:
   389  000011                     ??_leds_red_glitch:
   390  000011                     ??_leds_red_and_yellow_glitch:
   391  000011                     ??_i2c_wait_idle:
   392  000011                     ?_hyt221_getTemp:
   393                           	opt stack 0
   394  000011                     ?_hyt221_getHumidity:
   395                           	opt stack 0
   396  000011                     ?___lldiv:
   397                           	opt stack 0
   398  000011                     uart_write@buffer:
   399                           	opt stack 0
   400  000011                     uart_read@buffer:
   401                           	opt stack 0
   402  000011                     zb_doChecksum@frame:
   403                           	opt stack 0
   404  000011                     zb_handle_setbatVolt@battVoltage:
   405                           	opt stack 0
   406  000011                     ___lldiv@dividend:
   407                           	opt stack 0
   408                           
   409                           ; 4 bytes @ 0x10
   410  000011                     	ds	1
   411  000012                     ??_calibration:
   412  000012                     ??_hyt221_operation:
   413  000012                     
   414                           ; 0 bytes @ 0x11
   415  000012                     	ds	1
   416  000013                     ??_batt_launch_acq:
   417  000013                     ??_hyt221_getTemp:
   418  000013                     uart_read@nbToRead:
   419                           	opt stack 0
   420  000013                     zb_doChecksum@size:
   421                           	opt stack 0
   422  000013                     calibration@tryCounter:
   423                           	opt stack 0
   424  000013                     uart_write@b:
   425                           	opt stack 0
   426  000013                     hyt221_getHumidity@humidity_raw:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x12
   430  000013                     	ds	1
   431  000014                     zb_doChecksum@checksum:
   432                           	opt stack 0
   433  000014                     hyt221_operation@bDeviceDataAreStale:
   434                           	opt stack 0
   435  000014                     calibration@w:
   436                           	opt stack 0
   437  000014                     uart_read@b:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x13
   441  000014                     	ds	1
   442  000015                     uart_write@size:
   443                           	opt stack 0
   444  000015                     zb_doChecksum@i:
   445                           	opt stack 0
   446  000015                     hyt221_operation@index:
   447                           	opt stack 0
   448  000015                     hyt221_getTemp@temp_raw:
   449                           	opt stack 0
   450  000015                     ___lldiv@divisor:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0x14
   454  000015                     	ds	1
   455  000016                     uart_write@i:
   456                           	opt stack 0
   457  000016                     uart_read@expectedNbRead:
   458                           	opt stack 0
   459  000016                     zb_decodage@frame:
   460                           	opt stack 0
   461  000016                     zigbee_appendChecksum@buffer:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x15
   465  000016                     	ds	1
   466  000017                     uart_read@i:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x16
   470  000017                     	ds	1
   471  000018                     zb_decodage@frameSize:
   472                           	opt stack 0
   473  000018                     zigbee_appendChecksum@sizeFrame:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x17
   477  000018                     	ds	1
   478  000019                     zb_decodage@decodedFrame:
   479                           	opt stack 0
   480  000019                     ___lldiv@quotient:
   481                           	opt stack 0
   482                           
   483                           ; 4 bytes @ 0x18
   484  000019                     	ds	1
   485  00001A                     ??_zigbee_appendChecksum:
   486                           
   487                           ; 0 bytes @ 0x19
   488  00001A                     	ds	1
   489  00001B                     ??_zb_decodage:
   490                           
   491                           ; 0 bytes @ 0x1A
   492  00001B                     	ds	2
   493  00001D                     ??_zb_handle_sendData:
   494  00001D                     ___lldiv@counter:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x1C
   498  00001D                     	ds	1
   499  00001E                     ?_filter:
   500                           	opt stack 0
   501  00001E                     filter@value:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1D
   505  00001E                     	ds	1
   506  00001F                     zb_decodage@checksum:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x1E
   510  00001F                     	ds	1
   511  000020                     ??_filter:
   512  000020                     zb_decodage@bCorrectlyDecoded:
   513                           	opt stack 0
   514  000020                     zb_handle_sendData@frameSize:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x1F
   518  000020                     	ds	1
   519  000021                     zb_handle@sizeOfNextData:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x20
   523  000021                     	ds	2
   524  000023                     zb_handle@bSuccess:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x22
   528  000023                     	ds	1
   529  000024                     zb_handle@decodedFrame:
   530                           	opt stack 0
   531                           
   532                           ; 8 bytes @ 0x23
   533  000024                     	ds	1
   534  000025                     zb_handle_setTempRaw@tempRaw:
   535                           	opt stack 0
   536  000025                     zb_handle_setHumidityRaw@humidityRaw:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x24
   540  000025                     	ds	2
   541  000027                     
   542                           ; 0 bytes @ 0x26
   543  000027                     	ds	5
   544  00002C                     tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           ; 0 bytes @ 0x2B
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 38 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2   98[COMRAM] int 
   566 ;; Registers used:
   567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   573 ;;      Params:         0       0       0       0
   574 ;;      Locals:         0       0       0       0
   575 ;;      Temps:          0       0       0       0
   576 ;;      Totals:         0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels required when called:    6
   579 ;; This function calls:
   580 ;;		_calibration
   581 ;;		_i2c_setup
   582 ;;		_main_loop
   583 ;;		_uart_setup
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text0
   590  000A40                     __ptext0:
   591                           	opt stack 0
   592  000A40                     _main:
   593                           	opt stack 25
   594                           
   595                           ;main.c: 40: OSCTUNE = 0x00;
   596                           
   597                           ;incstack = 0
   598  000A40  0E00               	movlw	0
   599  000A42  6E9B               	movwf	3995,c	;volatile
   600                           
   601                           ;main.c: 42: OSCCON = 0x40;
   602  000A44  0E40               	movlw	64
   603  000A46  6ED3               	movwf	4051,c	;volatile
   604                           
   605                           ;main.c: 45: PORTA = 0x0;
   606  000A48  0E00               	movlw	0
   607  000A4A  6E80               	movwf	3968,c	;volatile
   608                           
   609                           ;main.c: 46: TRISA = 0x0;
   610  000A4C  0E00               	movlw	0
   611  000A4E  6E92               	movwf	3986,c	;volatile
   612                           
   613                           ;main.c: 49: TRISBbits.RB0 = 0;
   614  000A50  9093               	bcf	3987,0,c	;volatile
   615                           
   616                           ;main.c: 50: PORTBbits.RB0 = 0;
   617  000A52  9081               	bcf	3969,0,c	;volatile
   618                           
   619                           ;main.c: 51: TRISBbits.RB3 = 0;
   620  000A54  9693               	bcf	3987,3,c	;volatile
   621                           
   622                           ;main.c: 52: PORTBbits.RB3 = 0;
   623  000A56  9681               	bcf	3969,3,c	;volatile
   624                           
   625                           ;main.c: 53: TRISBbits.RB4 = 0;
   626  000A58  9893               	bcf	3987,4,c	;volatile
   627                           
   628                           ;main.c: 54: PORTBbits.RB4 = 0;
   629  000A5A  9881               	bcf	3969,4,c	;volatile
   630                           
   631                           ;main.c: 55: TRISCbits.RC2 = 0;
   632  000A5C  9494               	bcf	3988,2,c	;volatile
   633                           
   634                           ;main.c: 56: PORTCbits.RC2 = 0;
   635  000A5E  9482               	bcf	3970,2,c	;volatile
   636                           
   637                           ;main.c: 57: TRISCbits.RC5 = 0;
   638  000A60  9A94               	bcf	3988,5,c	;volatile
   639                           
   640                           ;main.c: 58: PORTCbits.RC5 = 0;
   641  000A62  9A82               	bcf	3970,5,c	;volatile
   642                           
   643                           ;main.c: 61: PORTBbits.RB1 = 0;
   644  000A64  9281               	bcf	3969,1,c	;volatile
   645                           
   646                           ;main.c: 62: TRISBbits.RB1 = 0;
   647  000A66  9293               	bcf	3987,1,c	;volatile
   648                           
   649                           ;main.c: 63: TRISBbits.RB2 = 1;
   650  000A68  8493               	bsf	3987,2,c	;volatile
   651                           
   652                           ;main.c: 64: PIR1bits.ADIF = 0;
   653  000A6A  9C9E               	bcf	3998,6,c	;volatile
   654                           
   655                           ;main.c: 65: PIE1bits.ADIE = 1;
   656  000A6C  8C9D               	bsf	3997,6,c	;volatile
   657                           
   658                           ;main.c: 67: _delay((unsigned long)((5)*((1000000)/4000.0)));
   659  000A6E  0EFA               	movlw	250
   660  000A70                     u1587:
   661  000A70  D000               	nop2	
   662  000A72  2EE8               	decfsz	wreg,f,c
   663  000A74  D7FD               	goto	u1587
   664                           
   665                           ;main.c: 69: calibration();
   666  000A76  EC8E  F003         	call	_calibration	;wreg free
   667                           
   668                           ;main.c: 74: i2c_setup();
   669  000A7A  ECEC  F005         	call	_i2c_setup	;wreg free
   670                           
   671                           ;main.c: 75: uart_setup();
   672  000A7E  EC95  F006         	call	_uart_setup	;wreg free
   673                           
   674                           ;main.c: 77: INTCONbits.PEIE = 1;
   675  000A82  8CF2               	bsf	intcon,6,c	;volatile
   676                           
   677                           ;main.c: 78: INTCONbits.GIE = 1;
   678  000A84  8EF2               	bsf	intcon,7,c	;volatile
   679                           
   680                           ;main.c: 80: (LATAbits.LA1 = 0);
   681  000A86  9289               	bcf	3977,1,c	;volatile
   682                           
   683                           ;main.c: 81: (LATAbits.LA1 = 1);
   684  000A88  8289               	bsf	3977,1,c	;volatile
   685                           
   686                           ;main.c: 83: main_loop();
   687  000A8A  EC86  F002         	call	_main_loop	;wreg free
   688  000A8E  EF0C  F000         	goto	start
   689  000A92                     __end_of_main:
   690                           	opt stack 0
   691                           tblptru	equ	0xFF8
   692                           tblptrh	equ	0xFF7
   693                           tblptrl	equ	0xFF6
   694                           tablat	equ	0xFF5
   695                           intcon	equ	0xFF2
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           postdec1	equ	0xFE5
   699                           fsr1l	equ	0xFE1
   700                           
   701 ;; *************** function _uart_setup *****************
   702 ;; Defined at:
   703 ;;		line 11 in file "uart.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;		None               void
   710 ;; Registers used:
   711 ;;		wreg, status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   717 ;;      Params:         0       0       0       0
   718 ;;      Locals:         0       0       0       0
   719 ;;      Temps:          0       0       0       0
   720 ;;      Totals:         0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text1
   732  000D2A                     __ptext1:
   733                           	opt stack 0
   734  000D2A                     _uart_setup:
   735                           	opt stack 29
   736                           
   737                           ;uart.c: 14: TRISCbits.RC7 = 1;
   738                           
   739                           ;incstack = 0
   740  000D2A  8E94               	bsf	3988,7,c	;volatile
   741                           
   742                           ;uart.c: 15: TRISCbits.RC6 = 1;
   743  000D2C  8C94               	bsf	3988,6,c	;volatile
   744                           
   745                           ;uart.c: 17: TXSTA = 0x24;
   746  000D2E  0E24               	movlw	36
   747  000D30  6EAC               	movwf	4012,c	;volatile
   748                           
   749                           ;uart.c: 18: RCSTA = 0x90;
   750  000D32  0E90               	movlw	144
   751  000D34  6EAB               	movwf	4011,c	;volatile
   752                           
   753                           ;uart.c: 19: BAUDCON = 0x48;
   754  000D36  0E48               	movlw	72
   755  000D38  6EB8               	movwf	4024,c	;volatile
   756                           
   757                           ;uart.c: 20: SPBRGH = 0;
   758  000D3A  0E00               	movlw	0
   759  000D3C  6EB0               	movwf	4016,c	;volatile
   760                           
   761                           ;uart.c: 21: SPBRG = 12;
   762  000D3E  0E0C               	movlw	12
   763  000D40  6EAF               	movwf	4015,c	;volatile
   764                           
   765                           ;uart.c: 23: PIR1bits.RCIF = 0;
   766  000D42  9A9E               	bcf	3998,5,c	;volatile
   767                           
   768                           ;uart.c: 24: PIE1bits.RCIE = 1;
   769  000D44  8A9D               	bsf	3997,5,c	;volatile
   770  000D46  0012               	return	
   771  000D48                     __end_of_uart_setup:
   772                           	opt stack 0
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           intcon	equ	0xFF2
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           postdec1	equ	0xFE5
   781                           fsr1l	equ	0xFE1
   782                           
   783 ;; *************** function _main_loop *****************
   784 ;; Defined at:
   785 ;;		line 86 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  hyt221_statu    1    9[BANK0 ] enum E3779
   790 ;;  zb_status       1    8[BANK0 ] enum E3761
   791 ;; Return value:  Size  Location     Type
   792 ;;		None               void
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   800 ;;      Params:         0       0       0       0
   801 ;;      Locals:         0       2       0       0
   802 ;;      Temps:          0       0       0       0
   803 ;;      Totals:         0       2       0       0
   804 ;;Total ram usage:        2 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    5
   807 ;; This function calls:
   808 ;;		_batt_launch_acq
   809 ;;		_hyt221_getHumidity
   810 ;;		_hyt221_getTemp
   811 ;;		_hyt221_launch_acq
   812 ;;		_hyt221_operation
   813 ;;		_leds_green_glitch
   814 ;;		_leds_red_glitch
   815 ;;		_leds_yellow_glitch
   816 ;;		_timer0_wait_262ms
   817 ;;		_timer0_wait_65ms
   818 ;;		_zb_handle
   819 ;;		_zb_handle_getStatus
   820 ;;		_zb_handle_resetStatus
   821 ;;		_zb_handle_sendData
   822 ;;		_zb_handle_setHumidityRaw
   823 ;;		_zb_handle_setTempRaw
   824 ;;		_zb_handle_waitAck
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text2
   831  00050C                     __ptext2:
   832                           	opt stack 0
   833  00050C                     _main_loop:
   834                           	opt stack 25
   835                           
   836                           ;main.c: 88: zb_statusT zb_status;
   837                           ;main.c: 89: STATUS_T hyt221_status;
   838                           ;main.c: 91: batt_counter = (60);
   839                           
   840                           ;incstack = 0
   841  00050C  0E3C               	movlw	60
   842  00050E  6E3C               	movwf	_batt_counter,c
   843  000510  0E00               	movlw	0
   844  000512  6E3D               	movwf	_batt_counter+1,c
   845  000514  0E00               	movlw	0
   846  000516  6E3E               	movwf	_batt_counter+2,c
   847                           
   848                           ;main.c: 92: wait_join_counter = 0;
   849  000518  0E00               	movlw	0
   850  00051A  6E48               	movwf	_wait_join_counter,c
   851                           
   852                           ;main.c: 93: zb_state = NOT_JOINED;
   853  00051C  0E00               	movlw	0
   854  00051E  6E4C               	movwf	_zb_state,c
   855                           
   856                           ;main.c: 94: main_state = LAUNCH_ACQ;
   857  000520  0E00               	movlw	0
   858  000522  6E46               	movwf	_main_state,c
   859                           
   860                           ;main.c: 96: leds_green_glitch();
   861  000524  ECBC  F006         	call	_leds_green_glitch	;wreg free
   862  000528                     l2789:
   863                           
   864                           ;main.c: 99: {
   865                           ;main.c: 100: zb_handle();
   866  000528  EC22  F003         	call	_zb_handle	;wreg free
   867                           
   868                           ;main.c: 101: zb_status = zb_handle_getStatus();
   869  00052C  EC04  F007         	call	_zb_handle_getStatus	;wreg free
   870  000530  0100               	movlb	0	; () banked
   871  000532  6FDE               	movwf	main_loop@zb_status& (0+255),b
   872                           
   873                           ;main.c: 102: switch (zb_status)
   874  000534  D012               	goto	l2809
   875  000536                     l2793:
   876                           
   877                           ; BSR set to: 0
   878                           ;main.c: 105: zb_state = NOT_JOINED;
   879  000536  0E00               	movlw	0
   880  000538  6E4C               	movwf	_zb_state,c
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 106: leds_yellow_glitch();
   884  00053A  ECB1  F006         	call	_leds_yellow_glitch	;wreg free
   885                           
   886                           ;main.c: 107: timer0_wait_262ms();
   887  00053E  EC73  F006         	call	_timer0_wait_262ms	;wreg free
   888                           
   889                           ;main.c: 108: timer0_wait_262ms();
   890  000542  EC73  F006         	call	_timer0_wait_262ms	;wreg free
   891                           
   892                           ;main.c: 109: break;
   893  000546  D076               	goto	l2861
   894  000548                     l2801:
   895                           
   896                           ;main.c: 112: zb_state = JOINED;
   897  000548  0E01               	movlw	1
   898  00054A  6E4C               	movwf	_zb_state,c
   899                           
   900                           ;main.c: 113: break;
   901  00054C  D073               	goto	l2861
   902  00054E                     l2803:
   903                           
   904                           ;main.c: 117: zb_state = NOT_JOINED;
   905  00054E  0E00               	movlw	0
   906  000550  6E4C               	movwf	_zb_state,c
   907                           
   908                           ;main.c: 118: leds_red_glitch();
   909  000552  ECC7  F006         	call	_leds_red_glitch	;wreg free
   910  000556  00FF               	reset		;# 
   911                           
   912                           ;main.c: 120: break;
   913  000558  D06D               	goto	l2861
   914  00055A                     l2809:
   915  00055A  0100               	movlb	0	; () banked
   916  00055C  51DE               	movf	main_loop@zb_status& (0+255),w,b
   917                           
   918                           ; Switch size 1, requested type "space"
   919                           ; Number of cases is 3, Range of values is 0 to 2
   920                           ; switch strategies available:
   921                           ; Name         Instructions Cycles
   922                           ; simple_byte           10     6 (average)
   923                           ;	Chosen strategy is simple_byte
   924  00055E  0A00               	xorlw	0	; case 0
   925  000560  B4D8               	btfsc	status,2,c
   926  000562  D7E9               	goto	l2793
   927  000564  0A01               	xorlw	1	; case 1
   928  000566  B4D8               	btfsc	status,2,c
   929  000568  D7EF               	goto	l2801
   930  00056A  0A03               	xorlw	3	; case 2
   931  00056C  D7F0               	goto	l2803
   932  00056E                     l2811:
   933                           
   934                           ;main.c: 129: zb_handle_resetStatus();
   935  00056E  ECEC  F006         	call	_zb_handle_resetStatus	;wreg free
   936                           
   937                           ;main.c: 131: batt_counter++;
   938  000572  0E01               	movlw	1
   939  000574  263C               	addwf	_batt_counter,f,c
   940  000576  0E00               	movlw	0
   941  000578  223D               	addwfc	_batt_counter+1,f,c
   942  00057A  0E00               	movlw	0
   943  00057C  223E               	addwfc	_batt_counter+2,f,c
   944                           
   945                           ;main.c: 132: if (!(batt_counter < (60)))
   946  00057E  0E3C               	movlw	60
   947  000580  5C3C               	subwf	_batt_counter,w,c
   948  000582  0E00               	movlw	0
   949  000584  583D               	subwfb	_batt_counter+1,w,c
   950  000586  0E00               	movlw	0
   951  000588  583E               	subwfb	_batt_counter+2,w,c
   952  00058A  A0D8               	btfss	status,0,c
   953  00058C  D008               	goto	l2821
   954                           
   955                           ;main.c: 133: {
   956                           ;main.c: 134: batt_counter = 0;
   957  00058E  0E00               	movlw	0
   958  000590  6E3C               	movwf	_batt_counter,c
   959  000592  0E00               	movlw	0
   960  000594  6E3D               	movwf	_batt_counter+1,c
   961  000596  0E00               	movlw	0
   962  000598  6E3E               	movwf	_batt_counter+2,c
   963                           
   964                           ;main.c: 135: batt_launch_acq();
   965  00059A  EC70  F005         	call	_batt_launch_acq	;wreg free
   966  00059E                     l2821:
   967                           
   968                           ;main.c: 136: }
   969                           ;main.c: 138: hyt221_status = hyt221_launch_acq();
   970  00059E  EC19  F006         	call	_hyt221_launch_acq	;wreg free
   971  0005A2  0100               	movlb	0	; () banked
   972  0005A4  6FDF               	movwf	main_loop@hyt221_status& (0+255),b
   973                           
   974                           ; BSR set to: 0
   975                           ;main.c: 139: if (hyt221_status == STATUS_OK)
   976  0005A6  0100               	movlb	0	; () banked
   977  0005A8  67DF               	tstfsz	main_loop@hyt221_status& (0+255),b
   978  0005AA  D7BE               	goto	l2789
   979                           
   980                           ; BSR set to: 0
   981                           ;main.c: 140: {
   982                           ;main.c: 141: main_state = WAIT_HYT221_ACQ;
   983  0005AC  0E02               	movlw	2
   984  0005AE  D02C               	goto	L2
   985  0005B0                     l2827:
   986                           
   987                           ;main.c: 146: timer0_wait_65ms();
   988  0005B0  EC84  F006         	call	_timer0_wait_65ms	;wreg free
   989                           
   990                           ;main.c: 147: hyt221_status = hyt221_operation();
   991  0005B4  ECEE  F003         	call	_hyt221_operation	;wreg free
   992  0005B8  0100               	movlb	0	; () banked
   993  0005BA  6FDF               	movwf	main_loop@hyt221_status& (0+255),b
   994                           
   995                           ; BSR set to: 0
   996                           ;main.c: 148: if (hyt221_status == STATUS_OK)
   997  0005BC  0100               	movlb	0	; () banked
   998  0005BE  67DF               	tstfsz	main_loop@hyt221_status& (0+255),b
   999  0005C0  D018               	goto	l2843
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 149: {
  1003                           ;main.c: 150: (LATAbits.LATA0 = 0);
  1004  0005C2  9089               	bcf	3977,0,c	;volatile
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;main.c: 152: zb_handle_setTempRaw(hyt221_getTemp());
  1008  0005C4  EC92  F005         	call	_hyt221_getTemp	;wreg free
  1009  0005C8  C011  F025         	movff	?_hyt221_getTemp,zb_handle_setTempRaw@tempRaw
  1010  0005CC  C012  F026         	movff	?_hyt221_getTemp+1,zb_handle_setTempRaw@tempRaw+1
  1011  0005D0  EC2C  F006         	call	_zb_handle_setTempRaw	;wreg free
  1012                           
  1013                           ;main.c: 153: zb_handle_setHumidityRaw(hyt221_getHumidity());
  1014  0005D4  EC50  F006         	call	_hyt221_getHumidity	;wreg free
  1015  0005D8  C011  F025         	movff	?_hyt221_getHumidity,zb_handle_setHumidityRaw@humidityRaw
  1016  0005DC  C012  F026         	movff	?_hyt221_getHumidity+1,zb_handle_setHumidityRaw@humidityRaw+1
  1017  0005E0  EC3E  F006         	call	_zb_handle_setHumidityRaw	;wreg free
  1018                           
  1019                           ;main.c: 154: zb_handle_sendData();
  1020  0005E4  EC3C  F004         	call	_zb_handle_sendData	;wreg free
  1021                           
  1022                           ;main.c: 155: zb_handle_waitAck();
  1023  0005E8  ECD0  F005         	call	_zb_handle_waitAck	;wreg free
  1024                           
  1025                           ;main.c: 156: (LATAbits.LATA0 = 1);
  1026  0005EC  8089               	bsf	3977,0,c	;volatile
  1027                           
  1028                           ;main.c: 157: main_state = SLEEP;
  1029  0005EE  0E01               	movlw	1
  1030  0005F0  D00B               	goto	L2
  1031  0005F2                     l2843:
  1032                           
  1033                           ;main.c: 159: else if (hyt221_status == STATUS_ERROR)
  1034  0005F2  0100               	movlb	0	; () banked
  1035  0005F4  05DF               	decf	main_loop@hyt221_status& (0+255),w,b
  1036  0005F6  A4D8               	btfss	status,2,c
  1037  0005F8  D797               	goto	l2789
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;main.c: 160: {
  1041                           ;main.c: 161: leds_red_glitch();
  1042  0005FA  ECC7  F006         	call	_leds_red_glitch	;wreg free
  1043  0005FE  D794               	goto	l2789
  1044  000600                     l121:
  1045  000600  80D1               	bsf	4049,0,c	;volatile
  1046  000602  0003               	sleep		;# 
  1047  000604  90D1               	bcf	4049,0,c	;volatile
  1048  000606  D014               	goto	l127
  1049  000608                     L2:
  1050  000608  6E46               	movwf	_main_state,c
  1051                           
  1052                           ;main.c: 169: break;
  1053  00060A  D78E               	goto	l2789
  1054  00060C                     l2851:
  1055  00060C  5046               	movf	_main_state,w,c
  1056                           
  1057                           ; Switch size 1, requested type "space"
  1058                           ; Number of cases is 3, Range of values is 0 to 2
  1059                           ; switch strategies available:
  1060                           ; Name         Instructions Cycles
  1061                           ; simple_byte           10     6 (average)
  1062                           ;	Chosen strategy is simple_byte
  1063  00060E  0A00               	xorlw	0	; case 0
  1064  000610  B4D8               	btfsc	status,2,c
  1065  000612  D7AD               	goto	l2811
  1066  000614  0A01               	xorlw	1	; case 1
  1067  000616  B4D8               	btfsc	status,2,c
  1068  000618  D7F3               	goto	l121
  1069  00061A  0A03               	xorlw	3	; case 2
  1070  00061C  B4D8               	btfsc	status,2,c
  1071  00061E  D7C8               	goto	l2827
  1072  000620  D783               	goto	l2789
  1073  000622                     l2853:
  1074                           
  1075                           ;main.c: 179: wait_join_counter++;
  1076  000622  2A48               	incf	_wait_join_counter,f,c
  1077                           
  1078                           ;main.c: 180: if (wait_join_counter >= 50)
  1079  000624  0E31               	movlw	49
  1080  000626  6448               	cpfsgt	_wait_join_counter,c
  1081  000628  D003               	goto	l127
  1082                           
  1083                           ;main.c: 181: {
  1084                           ;main.c: 182: wait_join_counter = 0;
  1085  00062A  0E00               	movlw	0
  1086  00062C  6E48               	movwf	_wait_join_counter,c
  1087  00062E  00FF               	reset		;# 
  1088  000630                     l127:
  1089                           
  1090                           ;main.c: 184: }
  1091                           ;main.c: 185: main_state = LAUNCH_ACQ;
  1092  000630  0E00               	movlw	0
  1093  000632  D7EA               	goto	L2
  1094  000634                     l2861:
  1095  000634  504C               	movf	_zb_state,w,c
  1096                           
  1097                           ; Switch size 1, requested type "space"
  1098                           ; Number of cases is 2, Range of values is 0 to 1
  1099                           ; switch strategies available:
  1100                           ; Name         Instructions Cycles
  1101                           ; simple_byte            7     4 (average)
  1102                           ;	Chosen strategy is simple_byte
  1103  000636  0A00               	xorlw	0	; case 0
  1104  000638  B4D8               	btfsc	status,2,c
  1105  00063A  D7F3               	goto	l2853
  1106  00063C  0A01               	xorlw	1	; case 1
  1107  00063E  B4D8               	btfsc	status,2,c
  1108  000640  D7E5               	goto	l2851
  1109  000642  D7EF               	goto	l2853
  1110  000644                     __end_of_main_loop:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           intcon	equ	0xFF2
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _zb_handle_waitAck *****************
  1124 ;; Defined at:
  1125 ;;		line 268 in file "zb_handle.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  bAckReceived    1    1[BANK0 ] enum E3195
  1130 ;;  waitCounter     1    0[BANK0 ] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      enum E3083
  1133 ;; Registers used:
  1134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1140 ;;      Params:         0       0       0       0
  1141 ;;      Locals:         0       2       0       0
  1142 ;;      Temps:          0       0       0       0
  1143 ;;      Totals:         0       2       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    4
  1147 ;; This function calls:
  1148 ;;		_timer0_wait_262ms
  1149 ;;		_zb_handle
  1150 ;; This function is called by:
  1151 ;;		_main_loop
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text3
  1156  000BA0                     __ptext3:
  1157                           	opt stack 0
  1158  000BA0                     _zb_handle_waitAck:
  1159                           	opt stack 25
  1160                           
  1161                           ;zb_handle.c: 270: uint8_t waitCounter;
  1162                           ;zb_handle.c: 271: BOOL bAckReceived;
  1163                           ;zb_handle.c: 273: bAckReceived = FALSE;
  1164                           
  1165                           ;incstack = 0
  1166  000BA0  0E00               	movlw	0
  1167  000BA2  0100               	movlb	0	; () banked
  1168  000BA4  6FD7               	movwf	zb_handle_waitAck@bAckReceived& (0+255),b
  1169                           
  1170                           ;zb_handle.c: 274: waitCounter = 0;
  1171  000BA6  0E00               	movlw	0
  1172  000BA8  0100               	movlb	0	; () banked
  1173  000BAA  6FD6               	movwf	zb_handle_waitAck@waitCounter& (0+255),b
  1174                           
  1175                           ;zb_handle.c: 276: while ((waitCounter < 8) && (bAckReceived == FALSE))
  1176  000BAC  D00B               	goto	l2731
  1177  000BAE                     l2721:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;zb_handle.c: 277: {
  1181                           ;zb_handle.c: 278: timer0_wait_262ms();
  1182  000BAE  EC73  F006         	call	_timer0_wait_262ms	;wreg free
  1183                           
  1184                           ;zb_handle.c: 279: zb_handle();
  1185  000BB2  EC22  F003         	call	_zb_handle	;wreg free
  1186                           
  1187                           ;zb_handle.c: 280: if (zb_currentAck == 0)
  1188  000BB6  664A               	tstfsz	_zb_currentAck,c
  1189  000BB8  D003               	goto	l2729
  1190                           
  1191                           ;zb_handle.c: 281: {
  1192                           ;zb_handle.c: 282: bAckReceived = TRUE;
  1193  000BBA  0E01               	movlw	1
  1194  000BBC  0100               	movlb	0	; () banked
  1195  000BBE  6FD7               	movwf	zb_handle_waitAck@bAckReceived& (0+255),b
  1196  000BC0                     l2729:
  1197                           
  1198                           ;zb_handle.c: 284: }
  1199                           ;zb_handle.c: 286: waitCounter++;
  1200  000BC0  0100               	movlb	0	; () banked
  1201  000BC2  2BD6               	incf	zb_handle_waitAck@waitCounter& (0+255),f,b
  1202  000BC4                     l2731:
  1203                           
  1204                           ; BSR set to: 0
  1205  000BC4  0E08               	movlw	8
  1206  000BC6  0100               	movlb	0	; () banked
  1207  000BC8  5DD6               	subwf	zb_handle_waitAck@waitCounter& (0+255),w,b
  1208  000BCA  B0D8               	btfsc	status,0,c
  1209  000BCC  D004               	goto	l365
  1210                           
  1211                           ; BSR set to: 0
  1212  000BCE  0100               	movlb	0	; () banked
  1213  000BD0  51D7               	movf	zb_handle_waitAck@bAckReceived& (0+255),w,b
  1214  000BD2  B4D8               	btfsc	status,2,c
  1215  000BD4  D7EC               	goto	l2721
  1216  000BD6                     l365:
  1217                           
  1218                           ; BSR set to: 0
  1219  000BD6  0012               	return	
  1220  000BD8                     __end_of_zb_handle_waitAck:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           intcon	equ	0xFF2
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1l	equ	0xFE1
  1231                           status	equ	0xFD8
  1232                           
  1233 ;; *************** function _zb_handle *****************
  1234 ;; Defined at:
  1235 ;;		line 161 in file "zb_handle.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  decodedFrame    8   35[COMRAM] struct .
  1240 ;;  sizeOfNextDa    2   32[COMRAM] unsigned int 
  1241 ;;  bSuccess        1   34[COMRAM] enum E3195
  1242 ;; Return value:  Size  Location     Type
  1243 ;;		None               void
  1244 ;; Registers used:
  1245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1251 ;;      Params:         0       0       0       0
  1252 ;;      Locals:        11       0       0       0
  1253 ;;      Temps:          0       0       0       0
  1254 ;;      Totals:        11       0       0       0
  1255 ;;Total ram usage:       11 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    3
  1258 ;; This function calls:
  1259 ;;		_uart_read
  1260 ;;		_zb_decodage
  1261 ;; This function is called by:
  1262 ;;		_main_loop
  1263 ;;		_zb_handle_waitAck
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text4
  1268  000644                     __ptext4:
  1269                           	opt stack 0
  1270  000644                     _zb_handle:
  1271                           	opt stack 25
  1272                           
  1273                           ;zb_handle.c: 163: BOOL bSuccess;
  1274                           ;zb_handle.c: 164: uint16_t sizeOfNextData;
  1275                           ;zb_handle.c: 165: zigbee_decodedFrame decodedFrame;
  1276                           ;zb_handle.c: 167: bSuccess = uart_read(zb_frameReceived, (3));
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;incstack = 0
  1280  000644  0100               	movlb	0	; () banked
  1281  000646  0E00               	movlw	high _zb_frameReceived
  1282  000648  6E12               	movwf	uart_read@buffer+1,c
  1283  00064A  0100               	movlb	0	; () banked
  1284  00064C  0E80               	movlw	low _zb_frameReceived
  1285  00064E  6E11               	movwf	uart_read@buffer,c
  1286  000650  0E03               	movlw	3
  1287  000652  6E13               	movwf	uart_read@nbToRead,c
  1288  000654  ECC3  F004         	call	_uart_read	;wreg free
  1289  000658  6E23               	movwf	zb_handle@bSuccess,c
  1290                           
  1291                           ;zb_handle.c: 168: if (bSuccess)
  1292  00065A  5023               	movf	zb_handle@bSuccess,w,c
  1293  00065C  B4D8               	btfsc	status,2,c
  1294  00065E  D01E               	goto	l335
  1295                           
  1296                           ;zb_handle.c: 169: {
  1297                           ;zb_handle.c: 170: if (zb_frameReceived[0] == (0x7E))
  1298  000660  0100               	movlb	0	; () banked
  1299  000662  5180               	movf	_zb_frameReceived& (0+255),w,b
  1300  000664  0A7E               	xorlw	126
  1301  000666  A4D8               	btfss	status,2,c
  1302  000668  D017               	goto	l2391
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;zb_handle.c: 171: {
  1306                           ;zb_handle.c: 172: sizeOfNextData = (((uint16_t) zb_frameReceived[1]) << 8) | (zb_frameR
      +                          eceived[2]);
  1307  00066A  0100               	movlb	0	; () banked
  1308  00066C  5181               	movf	(_zb_frameReceived+1)& (0+255),w,b
  1309  00066E  6E22               	movwf	zb_handle@sizeOfNextData+1,c
  1310  000670  0100               	movlb	0	; () banked
  1311  000672  5182               	movf	(_zb_frameReceived+2)& (0+255),w,b
  1312  000674  6E21               	movwf	zb_handle@sizeOfNextData,c
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;zb_handle.c: 173: if (sizeOfNextData <= ((50) - (3)))
  1316  000676  0E30               	movlw	48
  1317  000678  5C21               	subwf	zb_handle@sizeOfNextData,w,c
  1318  00067A  0E00               	movlw	0
  1319  00067C  5822               	subwfb	zb_handle@sizeOfNextData+1,w,c
  1320  00067E  B0D8               	btfsc	status,0,c
  1321  000680  D00B               	goto	l2391
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;zb_handle.c: 174: {
  1325                           ;zb_handle.c: 175: bSuccess = uart_read(zb_frameReceived + (3), sizeOfNextData + 1);
  1326  000682  0100               	movlb	0	; () banked
  1327  000684  0E00               	movlw	high (_zb_frameReceived+3)
  1328  000686  6E12               	movwf	uart_read@buffer+1,c
  1329  000688  0100               	movlb	0	; () banked
  1330  00068A  0E83               	movlw	low (_zb_frameReceived+3)
  1331  00068C  6E11               	movwf	uart_read@buffer,c
  1332  00068E  2821               	incf	zb_handle@sizeOfNextData,w,c
  1333  000690  6E13               	movwf	uart_read@nbToRead,c
  1334  000692  ECC3  F004         	call	_uart_read	;wreg free
  1335  000696  D001               	goto	L6
  1336  000698                     l2391:
  1337                           
  1338                           ;zb_handle.c: 182: else
  1339                           ;zb_handle.c: 183: {
  1340                           ;zb_handle.c: 184: bSuccess = FALSE;
  1341  000698  0E00               	movlw	0
  1342  00069A                     L6:
  1343  00069A  6E23               	movwf	zb_handle@bSuccess,c
  1344  00069C                     l335:
  1345                           
  1346                           ;zb_handle.c: 185: }
  1347                           ;zb_handle.c: 186: }
  1348                           ;zb_handle.c: 188: if (bSuccess)
  1349  00069C  5023               	movf	zb_handle@bSuccess,w,c
  1350  00069E  B4D8               	btfsc	status,2,c
  1351  0006A0  D00F               	goto	l2395
  1352                           
  1353                           ;zb_handle.c: 189: {
  1354                           ;zb_handle.c: 190: bSuccess = zb_decodage(zb_frameReceived + (3), sizeOfNextData + 1, &d
      +                          ecodedFrame);
  1355  0006A2  0100               	movlb	0	; () banked
  1356  0006A4  0E00               	movlw	high (_zb_frameReceived+3)
  1357  0006A6  6E17               	movwf	zb_decodage@frame+1,c
  1358  0006A8  0100               	movlb	0	; () banked
  1359  0006AA  0E83               	movlw	low (_zb_frameReceived+3)
  1360  0006AC  6E16               	movwf	zb_decodage@frame,c
  1361  0006AE  2821               	incf	zb_handle@sizeOfNextData,w,c
  1362  0006B0  6E18               	movwf	zb_decodage@frameSize,c
  1363  0006B2  0E00               	movlw	high zb_handle@decodedFrame
  1364  0006B4  6E1A               	movwf	zb_decodage@decodedFrame+1,c
  1365  0006B6  0E24               	movlw	low zb_handle@decodedFrame
  1366  0006B8  6E19               	movwf	zb_decodage@decodedFrame,c
  1367  0006BA  EC0B  F001         	call	_zb_decodage	;wreg free
  1368  0006BE  6E23               	movwf	zb_handle@bSuccess,c
  1369  0006C0                     l2395:
  1370                           
  1371                           ;zb_handle.c: 191: }
  1372                           ;zb_handle.c: 193: if (bSuccess)
  1373  0006C0  5023               	movf	zb_handle@bSuccess,w,c
  1374  0006C2  A4D8               	btfss	status,2,c
  1375  0006C4  D019               	goto	l2415
  1376  0006C6  D029               	goto	l356
  1377  0006C8                     l2399:
  1378                           
  1379                           ;zb_handle.c: 207: if (decodedFrame.status == 0x02)
  1380  0006C8  5025               	movf	zb_handle@decodedFrame+1,w,c
  1381  0006CA  0A02               	xorlw	2
  1382  0006CC  A4D8               	btfss	status,2,c
  1383  0006CE  D002               	goto	l2403
  1384                           
  1385                           ;zb_handle.c: 208: {
  1386                           ;zb_handle.c: 209: zb_status = ZB_STATUS_JOINED;
  1387  0006D0  0E01               	movlw	1
  1388  0006D2  D008               	goto	L5
  1389  0006D4                     l2403:
  1390                           
  1391                           ;zb_handle.c: 212: else if (decodedFrame.status > 0x03)
  1392  0006D4  EE20  F025         	lfsr	2,zb_handle@decodedFrame+1
  1393  0006D8  0E03               	movlw	3
  1394  0006DA  64DF               	cpfsgt	indf2,c
  1395  0006DC  D002               	goto	l2407
  1396                           
  1397                           ;zb_handle.c: 213: {
  1398                           ;zb_handle.c: 214: zb_status = ZB_STATUS_IN_ERROR;
  1399  0006DE  0E02               	movlw	2
  1400  0006E0  D001               	goto	L5
  1401  0006E2                     l2407:
  1402                           
  1403                           ;zb_handle.c: 217: else
  1404                           ;zb_handle.c: 218: {
  1405                           ;zb_handle.c: 219: zb_status = ZB_STATUS_NOT_JOINED;
  1406  0006E2  0E00               	movlw	0
  1407  0006E4                     L5:
  1408  0006E4  6E4D               	movwf	_zb_status,c
  1409  0006E6  D019               	goto	l356
  1410  0006E8                     l2409:
  1411                           
  1412                           ;zb_handle.c: 225: if (zb_currentFrameID == decodedFrame.frameID)
  1413  0006E8  504B               	movf	_zb_currentFrameID,w,c
  1414  0006EA  EE20  F02B         	lfsr	2,zb_handle@decodedFrame+7
  1415  0006EE  62DF               	cpfseq	indf2,c
  1416  0006F0  D014               	goto	l356
  1417                           
  1418                           ;zb_handle.c: 226: {
  1419                           ;zb_handle.c: 227: zb_currentAck = decodedFrame.status;
  1420  0006F2  C025  F04A         	movff	zb_handle@decodedFrame+1,_zb_currentAck
  1421  0006F6  D011               	goto	l356
  1422  0006F8                     l2415:
  1423  0006F8  5024               	movf	zb_handle@decodedFrame,w,c
  1424                           
  1425                           ; Switch size 1, requested type "space"
  1426                           ; Number of cases is 6, Range of values is 8 to 144
  1427                           ; switch strategies available:
  1428                           ; Name         Instructions Cycles
  1429                           ; simple_byte           19    10 (average)
  1430                           ;	Chosen strategy is simple_byte
  1431  0006FA  0A08               	xorlw	8	; case 8
  1432  0006FC  B4D8               	btfsc	status,2,c
  1433  0006FE  D00D               	goto	l356
  1434  000700  0A18               	xorlw	24	; case 16
  1435  000702  B4D8               	btfsc	status,2,c
  1436  000704  D00A               	goto	l356
  1437  000706  0A98               	xorlw	152	; case 136
  1438  000708  B4D8               	btfsc	status,2,c
  1439  00070A  D007               	goto	l356
  1440  00070C  0A02               	xorlw	2	; case 138
  1441  00070E  B4D8               	btfsc	status,2,c
  1442  000710  D7DB               	goto	l2399
  1443  000712  0A01               	xorlw	1	; case 139
  1444  000714  B4D8               	btfsc	status,2,c
  1445  000716  D7E8               	goto	l2409
  1446  000718  0A1B               	xorlw	27	; case 144
  1447  00071A                     l356:
  1448  00071A  0012               	return	
  1449  00071C                     __end_of_zb_handle:
  1450                           	opt stack 0
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           intcon	equ	0xFF2
  1456                           postinc0	equ	0xFEE
  1457                           wreg	equ	0xFE8
  1458                           postdec1	equ	0xFE5
  1459                           fsr1l	equ	0xFE1
  1460                           indf2	equ	0xFDF
  1461                           status	equ	0xFD8
  1462                           
  1463 ;; *************** function _zb_decodage *****************
  1464 ;; Defined at:
  1465 ;;		line 22 in file "zb.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  frame           2   21[COMRAM] PTR unsigned char 
  1468 ;;		 -> zb_frameReceived(50), 
  1469 ;;  frameSize       1   23[COMRAM] unsigned char 
  1470 ;;  decodedFrame    2   24[COMRAM] PTR struct .
  1471 ;;		 -> zb_handle@decodedFrame(8), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  bCorrectlyDe    1   31[COMRAM] enum E3083
  1474 ;;  checksum        1   30[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      enum E3083
  1477 ;; Registers used:
  1478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1484 ;;      Params:         5       0       0       0
  1485 ;;      Locals:         2       0       0       0
  1486 ;;      Temps:          4       0       0       0
  1487 ;;      Totals:        11       0       0       0
  1488 ;;Total ram usage:       11 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    2
  1491 ;; This function calls:
  1492 ;;		_zb_doChecksum
  1493 ;; This function is called by:
  1494 ;;		_zb_handle
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text5
  1499  000216                     __ptext5:
  1500                           	opt stack 0
  1501  000216                     _zb_decodage:
  1502                           	opt stack 25
  1503                           
  1504                           ;zb.c: 24: BOOL bCorrectlyDecoded;
  1505                           ;zb.c: 25: uint8_t checksum;
  1506                           ;zb.c: 26: bCorrectlyDecoded = FALSE;
  1507                           
  1508                           ;incstack = 0
  1509  000216  0E00               	movlw	0
  1510  000218  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1511                           
  1512                           ;zb.c: 28: if (frameSize >= 1)
  1513  00021A  5018               	movf	zb_decodage@frameSize,w,c
  1514  00021C  B4D8               	btfsc	status,2,c
  1515  00021E  D022               	goto	l268
  1516                           
  1517                           ;zb.c: 29: {
  1518                           ;zb.c: 30: checksum = zb_doChecksum(frame, frameSize - 1);
  1519  000220  C017  F012         	movff	zb_decodage@frame+1,zb_doChecksum@frame+1
  1520  000224  C016  F011         	movff	zb_decodage@frame,zb_doChecksum@frame
  1521  000228  0418               	decf	zb_decodage@frameSize,w,c
  1522  00022A  6E13               	movwf	zb_doChecksum@size,c
  1523  00022C  EC04  F006         	call	_zb_doChecksum	;wreg free
  1524  000230  6E1F               	movwf	zb_decodage@checksum,c
  1525                           
  1526                           ;zb.c: 31: if (checksum != frame[frameSize - 1])
  1527  000232  0EFF               	movlw	255
  1528  000234  6E1B               	movwf	??_zb_decodage& (0+255),c
  1529  000236  0EFF               	movlw	255
  1530  000238  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  1531  00023A  5018               	movf	zb_decodage@frameSize,w,c
  1532  00023C  6E1D               	movwf	(??_zb_decodage+2)& (0+255),c
  1533  00023E  6A1E               	clrf	(??_zb_decodage+3)& (0+255),c
  1534  000240  501B               	movf	??_zb_decodage,w,c
  1535  000242  261D               	addwf	??_zb_decodage+2,f,c
  1536  000244  501C               	movf	??_zb_decodage+1,w,c
  1537  000246  221E               	addwfc	??_zb_decodage+3,f,c
  1538  000248  501D               	movf	??_zb_decodage+2,w,c
  1539  00024A  2416               	addwf	zb_decodage@frame,w,c
  1540  00024C  6ED9               	movwf	fsr2l,c
  1541  00024E  501E               	movf	??_zb_decodage+3,w,c
  1542  000250  2017               	addwfc	zb_decodage@frame+1,w,c
  1543  000252  6EDA               	movwf	fsr2h,c
  1544  000254  50DF               	movf	indf2,w,c
  1545  000256  181F               	xorwf	zb_decodage@checksum,w,c
  1546  000258  B4D8               	btfsc	status,2,c
  1547  00025A  D002               	goto	l2321
  1548                           
  1549                           ;zb.c: 32: {
  1550                           ;zb.c: 34: bCorrectlyDecoded = FALSE;
  1551  00025C  0E00               	movlw	0
  1552  00025E  D001               	goto	L7
  1553  000260                     l2321:
  1554                           
  1555                           ;zb.c: 36: else
  1556                           ;zb.c: 37: {
  1557                           ;zb.c: 38: bCorrectlyDecoded = TRUE;
  1558  000260  0E01               	movlw	1
  1559  000262                     L7:
  1560  000262  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1561  000264                     l268:
  1562                           
  1563                           ;zb.c: 39: }
  1564                           ;zb.c: 40: }
  1565                           ;zb.c: 42: if (bCorrectlyDecoded)
  1566  000264  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  1567  000266  B4D8               	btfsc	status,2,c
  1568  000268  D0B0               	goto	l2347
  1569                           
  1570                           ;zb.c: 43: {
  1571                           ;zb.c: 44: decodedFrame->type = frame[0];
  1572  00026A  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  1573  00026E  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  1574  000272  C019  FFE1         	movff	zb_decodage@decodedFrame,fsr1l
  1575  000276  C01A  FFE2         	movff	zb_decodage@decodedFrame+1,fsr1h
  1576  00027A  CFDF FFE7          	movff	indf2,indf1
  1577                           
  1578                           ;zb.c: 45: switch (frame[0])
  1579  00027E  D096               	goto	l2345
  1580  000280                     l2325:
  1581                           
  1582                           ;zb.c: 48: decodedFrame->frameID = frame[1];
  1583  000280  EE20 F001          	lfsr	2,1
  1584  000284  5016               	movf	zb_decodage@frame,w,c
  1585  000286  26D9               	addwf	fsr2l,f,c
  1586  000288  5017               	movf	zb_decodage@frame+1,w,c
  1587  00028A  22DA               	addwfc	fsr2h,f,c
  1588  00028C  EE10 F007          	lfsr	1,7
  1589  000290  5019               	movf	zb_decodage@decodedFrame,w,c
  1590  000292  26E1               	addwf	fsr1l,f,c
  1591  000294  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1592  000296  22E2               	addwfc	fsr1h,f,c
  1593  000298  CFDF FFE7          	movff	indf2,indf1
  1594                           
  1595                           ;zb.c: 49: decodedFrame->AT[0] = frame[2];
  1596  00029C  EE20 F002          	lfsr	2,2
  1597  0002A0  5016               	movf	zb_decodage@frame,w,c
  1598  0002A2  26D9               	addwf	fsr2l,f,c
  1599  0002A4  5017               	movf	zb_decodage@frame+1,w,c
  1600  0002A6  22DA               	addwfc	fsr2h,f,c
  1601  0002A8  EE10 F002          	lfsr	1,2
  1602  0002AC  5019               	movf	zb_decodage@decodedFrame,w,c
  1603  0002AE  26E1               	addwf	fsr1l,f,c
  1604  0002B0  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1605  0002B2  22E2               	addwfc	fsr1h,f,c
  1606  0002B4  CFDF FFE7          	movff	indf2,indf1
  1607                           
  1608                           ;zb.c: 50: decodedFrame->AT[1] = frame[3];
  1609  0002B8  EE20 F003          	lfsr	2,3
  1610  0002BC  5016               	movf	zb_decodage@frame,w,c
  1611  0002BE  26D9               	addwf	fsr2l,f,c
  1612  0002C0  5017               	movf	zb_decodage@frame+1,w,c
  1613  0002C2  22DA               	addwfc	fsr2h,f,c
  1614  0002C4  EE10 F003          	lfsr	1,3
  1615  0002C8  5019               	movf	zb_decodage@decodedFrame,w,c
  1616  0002CA  26E1               	addwf	fsr1l,f,c
  1617  0002CC  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1618  0002CE  22E2               	addwfc	fsr1h,f,c
  1619  0002D0  CFDF FFE7          	movff	indf2,indf1
  1620                           
  1621                           ;zb.c: 51: decodedFrame->status = frame[4];
  1622  0002D4  EE20 F004          	lfsr	2,4
  1623  0002D8  5016               	movf	zb_decodage@frame,w,c
  1624  0002DA  26D9               	addwf	fsr2l,f,c
  1625  0002DC  5017               	movf	zb_decodage@frame+1,w,c
  1626  0002DE  22DA               	addwfc	fsr2h,f,c
  1627  0002E0  EE10 F001          	lfsr	1,1
  1628  0002E4  5019               	movf	zb_decodage@decodedFrame,w,c
  1629  0002E6  26E1               	addwf	fsr1l,f,c
  1630  0002E8  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1631  0002EA  22E2               	addwfc	fsr1h,f,c
  1632  0002EC  CFDF FFE7          	movff	indf2,indf1
  1633                           
  1634                           ;zb.c: 52: decodedFrame->size = frameSize - 6;
  1635  0002F0  EE20 F006          	lfsr	2,6
  1636  0002F4  5019               	movf	zb_decodage@decodedFrame,w,c
  1637  0002F6  26D9               	addwf	fsr2l,f,c
  1638  0002F8  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1639  0002FA  22DA               	addwfc	fsr2h,f,c
  1640  0002FC  5018               	movf	zb_decodage@frameSize,w,c
  1641  0002FE  0FFA               	addlw	250
  1642  000300  6EDF               	movwf	indf2,c
  1643                           
  1644                           ;zb.c: 53: if (decodedFrame->size == 0)
  1645  000302  EE20 F006          	lfsr	2,6
  1646  000306  5019               	movf	zb_decodage@decodedFrame,w,c
  1647  000308  26D9               	addwf	fsr2l,f,c
  1648  00030A  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1649  00030C  22DA               	addwfc	fsr2h,f,c
  1650  00030E  50DF               	movf	indf2,w,c
  1651  000310  A4D8               	btfss	status,2,c
  1652  000312  D00B               	goto	l2333
  1653                           
  1654                           ;zb.c: 54: {
  1655                           ;zb.c: 55: decodedFrame->data = (0);
  1656  000314  EE20 F004          	lfsr	2,4
  1657  000318  5019               	movf	zb_decodage@decodedFrame,w,c
  1658  00031A  26D9               	addwf	fsr2l,f,c
  1659  00031C  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1660  00031E  22DA               	addwfc	fsr2h,f,c
  1661  000320  0E00               	movlw	0
  1662  000322  6EDE               	movwf	postinc2,c
  1663  000324  0E00               	movlw	0
  1664  000326  6EDD               	movwf	postdec2,c
  1665                           
  1666                           ;zb.c: 56: }
  1667  000328  D050               	goto	l2347
  1668  00032A                     l2333:
  1669                           
  1670                           ;zb.c: 57: else
  1671                           ;zb.c: 58: {
  1672                           ;zb.c: 59: decodedFrame->data = &frame[5];
  1673  00032A  0E05               	movlw	5
  1674  00032C  2416               	addwf	zb_decodage@frame,w,c
  1675  00032E  6E1B               	movwf	??_zb_decodage& (0+255),c
  1676  000330  0E00               	movlw	0
  1677  000332  2017               	addwfc	zb_decodage@frame+1,w,c
  1678  000334  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  1679  000336  EE20 F004          	lfsr	2,4
  1680  00033A  5019               	movf	zb_decodage@decodedFrame,w,c
  1681  00033C  26D9               	addwf	fsr2l,f,c
  1682  00033E  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1683  000340  22DA               	addwfc	fsr2h,f,c
  1684  000342  C01B  FFDE         	movff	??_zb_decodage,postinc2
  1685  000346  C01C  FFDD         	movff	??_zb_decodage+1,postdec2
  1686  00034A  D03F               	goto	l2347
  1687  00034C                     l2335:
  1688                           
  1689                           ;zb.c: 64: decodedFrame->status = frame[1];
  1690  00034C  EE20 F001          	lfsr	2,1
  1691  000350  5016               	movf	zb_decodage@frame,w,c
  1692  000352  26D9               	addwf	fsr2l,f,c
  1693  000354  5017               	movf	zb_decodage@frame+1,w,c
  1694  000356  22DA               	addwfc	fsr2h,f,c
  1695  000358  EE10 F001          	lfsr	1,1
  1696  00035C  5019               	movf	zb_decodage@decodedFrame,w,c
  1697  00035E  26E1               	addwf	fsr1l,f,c
  1698  000360  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1699  000362  22E2               	addwfc	fsr1h,f,c
  1700  000364  CFDF FFE7          	movff	indf2,indf1
  1701                           
  1702                           ;zb.c: 65: bCorrectlyDecoded = TRUE;
  1703  000368  0E01               	movlw	1
  1704  00036A  D01E               	goto	L8
  1705  00036C                     l2339:
  1706                           
  1707                           ;zb.c: 69: decodedFrame->frameID = frame[1];
  1708  00036C  EE20 F001          	lfsr	2,1
  1709  000370  5016               	movf	zb_decodage@frame,w,c
  1710  000372  26D9               	addwf	fsr2l,f,c
  1711  000374  5017               	movf	zb_decodage@frame+1,w,c
  1712  000376  22DA               	addwfc	fsr2h,f,c
  1713  000378  EE10 F007          	lfsr	1,7
  1714  00037C  5019               	movf	zb_decodage@decodedFrame,w,c
  1715  00037E  26E1               	addwf	fsr1l,f,c
  1716  000380  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1717  000382  22E2               	addwfc	fsr1h,f,c
  1718  000384  CFDF FFE7          	movff	indf2,indf1
  1719                           
  1720                           ;zb.c: 70: decodedFrame->status = frame[5];
  1721  000388  EE20 F005          	lfsr	2,5
  1722  00038C  5016               	movf	zb_decodage@frame,w,c
  1723  00038E  26D9               	addwf	fsr2l,f,c
  1724  000390  5017               	movf	zb_decodage@frame+1,w,c
  1725  000392  22DA               	addwfc	fsr2h,f,c
  1726  000394  EE10 F001          	lfsr	1,1
  1727  000398  5019               	movf	zb_decodage@decodedFrame,w,c
  1728  00039A  26E1               	addwf	fsr1l,f,c
  1729  00039C  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1730  00039E  22E2               	addwfc	fsr1h,f,c
  1731  0003A0  CFDF FFE7          	movff	indf2,indf1
  1732                           
  1733                           ;zb.c: 71: break;
  1734  0003A4  D012               	goto	l2347
  1735  0003A6                     l2341:
  1736                           
  1737                           ;zb.c: 74: bCorrectlyDecoded = FALSE;
  1738  0003A6  0E00               	movlw	0
  1739  0003A8                     L8:
  1740  0003A8  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1741                           
  1742                           ;zb.c: 75: break;
  1743  0003AA  D00F               	goto	l2347
  1744  0003AC                     l2345:
  1745  0003AC  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  1746  0003B0  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  1747  0003B4  50DF               	movf	indf2,w,c
  1748                           
  1749                           ; Switch size 1, requested type "space"
  1750                           ; Number of cases is 3, Range of values is 136 to 139
  1751                           ; switch strategies available:
  1752                           ; Name         Instructions Cycles
  1753                           ; simple_byte           10     6 (average)
  1754                           ;	Chosen strategy is simple_byte
  1755  0003B6  0A88               	xorlw	136	; case 136
  1756  0003B8  B4D8               	btfsc	status,2,c
  1757  0003BA  D762               	goto	l2325
  1758  0003BC  0A02               	xorlw	2	; case 138
  1759  0003BE  B4D8               	btfsc	status,2,c
  1760  0003C0  D7C5               	goto	l2335
  1761  0003C2  0A01               	xorlw	1	; case 139
  1762  0003C4  B4D8               	btfsc	status,2,c
  1763  0003C6  D7D2               	goto	l2339
  1764  0003C8  D7EE               	goto	l2341
  1765  0003CA                     l2347:
  1766                           
  1767                           ;zb.c: 77: }
  1768                           ;zb.c: 79: return bCorrectlyDecoded;
  1769  0003CA  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  1770  0003CC  0012               	return	
  1771  0003CE                     __end_of_zb_decodage:
  1772                           	opt stack 0
  1773                           tblptru	equ	0xFF8
  1774                           tblptrh	equ	0xFF7
  1775                           tblptrl	equ	0xFF6
  1776                           tablat	equ	0xFF5
  1777                           intcon	equ	0xFF2
  1778                           postinc0	equ	0xFEE
  1779                           wreg	equ	0xFE8
  1780                           indf1	equ	0xFE7
  1781                           postdec1	equ	0xFE5
  1782                           fsr1h	equ	0xFE2
  1783                           fsr1l	equ	0xFE1
  1784                           indf2	equ	0xFDF
  1785                           postinc2	equ	0xFDE
  1786                           postdec2	equ	0xFDD
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _uart_read *****************
  1792 ;; Defined at:
  1793 ;;		line 45 in file "uart.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  1796 ;;		 -> zb_frameReceived(50), 
  1797 ;;  nbToRead        1   18[COMRAM] unsigned char 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  b               2   19[COMRAM] PTR unsigned char 
  1800 ;;		 -> zb_frameReceived(50), 
  1801 ;;  i               1   22[COMRAM] unsigned char 
  1802 ;;  expectedNbRe    1   21[COMRAM] enum E3083
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      enum E3083
  1805 ;; Registers used:
  1806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1812 ;;      Params:         3       0       0       0
  1813 ;;      Locals:         4       0       0       0
  1814 ;;      Temps:          0       0       0       0
  1815 ;;      Totals:         7       0       0       0
  1816 ;;Total ram usage:        7 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_zb_handle
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text6
  1827  000986                     __ptext6:
  1828                           	opt stack 0
  1829  000986                     _uart_read:
  1830                           	opt stack 26
  1831                           
  1832                           ;uart.c: 47: BOOL expectedNbRead;
  1833                           ;uart.c: 48: uint8_t i;
  1834                           ;uart.c: 49: uint8_t* b;
  1835                           ;uart.c: 50: b = buffer;
  1836                           
  1837                           ;incstack = 0
  1838  000986  C012  F015         	movff	uart_read@buffer+1,uart_read@b+1
  1839  00098A  C011  F014         	movff	uart_read@buffer,uart_read@b
  1840                           
  1841                           ;uart.c: 52: if (nbToRead <= UART_rxBufferNb)
  1842  00098E  5013               	movf	uart_read@nbToRead,w,c
  1843  000990  5C42               	subwf	_UART_rxBufferNb,w,c
  1844  000992  A0D8               	btfss	status,0,c
  1845  000994  D024               	goto	l2309
  1846                           
  1847                           ;uart.c: 53: {
  1848                           ;uart.c: 55: for (i = 0; i < nbToRead; i++)
  1849  000996  0E00               	movlw	0
  1850  000998  6E17               	movwf	uart_read@i,c
  1851  00099A  D019               	goto	l2303
  1852  00099C                     l2291:
  1853                           
  1854                           ;uart.c: 56: {
  1855                           ;uart.c: 57: *b = UART_rxBuffer[UART_readIndex];
  1856  00099C  5041               	movf	_UART_readIndex,w,c
  1857  00099E  0D01               	mullw	1
  1858  0009A0  0101               	movlb	1	; () banked
  1859  0009A2  0E00               	movlw	low _UART_rxBuffer
  1860  0009A4  24F3               	addwf	prodl,w,c
  1861  0009A6  6ED9               	movwf	fsr2l,c
  1862  0009A8  0101               	movlb	1	; () banked
  1863  0009AA  0E01               	movlw	high _UART_rxBuffer
  1864  0009AC  20F4               	addwfc	prodh,w,c
  1865  0009AE  6EDA               	movwf	fsr2h,c
  1866  0009B0  C014  FFE1         	movff	uart_read@b,fsr1l
  1867  0009B4  C015  FFE2         	movff	uart_read@b+1,fsr1h
  1868  0009B8  CFDF FFE7          	movff	indf2,indf1
  1869                           
  1870                           ; BSR set to: 1
  1871                           ;uart.c: 58: UART_readIndex++;
  1872  0009BC  2A41               	incf	_UART_readIndex,f,c
  1873                           
  1874                           ; BSR set to: 1
  1875                           ;uart.c: 59: if (UART_readIndex >= (50))
  1876  0009BE  0E31               	movlw	49
  1877  0009C0  6441               	cpfsgt	_UART_readIndex,c
  1878  0009C2  D002               	goto	l2299
  1879                           
  1880                           ; BSR set to: 1
  1881                           ;uart.c: 60: {
  1882                           ;uart.c: 61: UART_readIndex = 0;
  1883  0009C4  0E00               	movlw	0
  1884  0009C6  6E41               	movwf	_UART_readIndex,c
  1885  0009C8                     l2299:
  1886                           
  1887                           ; BSR set to: 1
  1888                           ;uart.c: 62: }
  1889                           ;uart.c: 63: b++;
  1890  0009C8  4A14               	infsnz	uart_read@b,f,c
  1891  0009CA  2A15               	incf	uart_read@b+1,f,c
  1892                           
  1893                           ; BSR set to: 1
  1894  0009CC  2A17               	incf	uart_read@i,f,c
  1895  0009CE                     l2303:
  1896  0009CE  5013               	movf	uart_read@nbToRead,w,c
  1897  0009D0  5C17               	subwf	uart_read@i,w,c
  1898  0009D2  A0D8               	btfss	status,0,c
  1899  0009D4  D7E3               	goto	l2291
  1900                           
  1901                           ;uart.c: 64: }
  1902                           ;uart.c: 65: UART_rxBufferNb -= nbToRead;
  1903  0009D6  5013               	movf	uart_read@nbToRead,w,c
  1904  0009D8  5E42               	subwf	_UART_rxBufferNb,f,c
  1905                           
  1906                           ;uart.c: 66: expectedNbRead = TRUE;
  1907  0009DA  0E01               	movlw	1
  1908  0009DC  D001               	goto	L9
  1909  0009DE                     l2309:
  1910                           
  1911                           ;uart.c: 68: else
  1912                           ;uart.c: 69: {
  1913                           ;uart.c: 70: expectedNbRead = FALSE;
  1914  0009DE  0E00               	movlw	0
  1915  0009E0                     L9:
  1916  0009E0  6E16               	movwf	uart_read@expectedNbRead,c
  1917                           
  1918                           ;uart.c: 71: }
  1919                           ;uart.c: 73: return expectedNbRead;
  1920  0009E2  5016               	movf	uart_read@expectedNbRead,w,c
  1921  0009E4  0012               	return	
  1922  0009E6                     __end_of_uart_read:
  1923                           	opt stack 0
  1924                           tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           prodh	equ	0xFF4
  1929                           prodl	equ	0xFF3
  1930                           intcon	equ	0xFF2
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           indf1	equ	0xFE7
  1934                           postdec1	equ	0xFE5
  1935                           fsr1h	equ	0xFE2
  1936                           fsr1l	equ	0xFE1
  1937                           indf2	equ	0xFDF
  1938                           postinc2	equ	0xFDE
  1939                           postdec2	equ	0xFDD
  1940                           fsr2h	equ	0xFDA
  1941                           fsr2l	equ	0xFD9
  1942                           status	equ	0xFD8
  1943                           
  1944 ;; *************** function _timer0_wait_262ms *****************
  1945 ;; Defined at:
  1946 ;;		line 26 in file "timer.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1960 ;;      Params:         0       0       0       0
  1961 ;;      Locals:         0       0       0       0
  1962 ;;      Temps:          0       0       0       0
  1963 ;;      Totals:         0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    2
  1967 ;; This function calls:
  1968 ;;		_timer0_wait_ready
  1969 ;; This function is called by:
  1970 ;;		_main_loop
  1971 ;;		_zb_handle_waitAck
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text7
  1976  000CE6                     __ptext7:
  1977                           	opt stack 0
  1978  000CE6                     _timer0_wait_262ms:
  1979                           	opt stack 26
  1980                           
  1981                           ;timer.c: 29: TMR0 = 0;
  1982                           
  1983                           ;incstack = 0
  1984  000CE6  0E00               	movlw	0
  1985  000CE8  6ED7               	movwf	4055,c	;volatile
  1986  000CEA  0E00               	movlw	0
  1987  000CEC  6ED6               	movwf	4054,c	;volatile
  1988                           
  1989                           ;timer.c: 30: T0CON = 0x47;
  1990  000CEE  0E47               	movlw	71
  1991  000CF0  6ED5               	movwf	4053,c	;volatile
  1992                           
  1993                           ;timer.c: 31: INTCONbits.TMR0IF = 0;
  1994  000CF2  94F2               	bcf	intcon,2,c	;volatile
  1995                           
  1996                           ;timer.c: 32: INTCONbits.TMR0IE = 1;
  1997  000CF4  8AF2               	bsf	intcon,5,c	;volatile
  1998                           
  1999                           ;timer.c: 33: T0CONbits.TMR0ON = 1;
  2000  000CF6  8ED5               	bsf	4053,7,c	;volatile
  2001                           
  2002                           ;timer.c: 34: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2003  000CF8  8ED3               	bsf	4051,7,c	;volatile
  2004  000CFA  0003               	sleep		;# 
  2005  000CFC  9ED3               	bcf	4051,7,c	;volatile
  2006                           
  2007                           ;timer.c: 35: timer0_wait_ready();
  2008  000CFE  ECD2  F006         	call	_timer0_wait_ready	;wreg free
  2009                           
  2010                           ;timer.c: 36: T0CONbits.TMR0ON = 0;
  2011  000D02  9ED5               	bcf	4053,7,c	;volatile
  2012                           
  2013                           ;timer.c: 37: INTCONbits.TMR0IE = 0;
  2014  000D04  9AF2               	bcf	intcon,5,c	;volatile
  2015  000D06  0012               	return	
  2016  000D08                     __end_of_timer0_wait_262ms:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           intcon	equ	0xFF2
  2025                           postinc0	equ	0xFEE
  2026                           wreg	equ	0xFE8
  2027                           indf1	equ	0xFE7
  2028                           postdec1	equ	0xFE5
  2029                           fsr1h	equ	0xFE2
  2030                           fsr1l	equ	0xFE1
  2031                           indf2	equ	0xFDF
  2032                           postinc2	equ	0xFDE
  2033                           postdec2	equ	0xFDD
  2034                           fsr2h	equ	0xFDA
  2035                           fsr2l	equ	0xFD9
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _zb_handle_setTempRaw *****************
  2039 ;; Defined at:
  2040 ;;		line 97 in file "zb_handle.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  tempRaw         2   36[COMRAM] unsigned int 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;		None               void
  2047 ;; Registers used:
  2048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2054 ;;      Params:         2       0       0       0
  2055 ;;      Locals:         0       0       0       0
  2056 ;;      Temps:          0       0       0       0
  2057 ;;      Totals:         2       0       0       0
  2058 ;;Total ram usage:        2 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    3
  2061 ;; This function calls:
  2062 ;;		_filter
  2063 ;; This function is called by:
  2064 ;;		_main_loop
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text8
  2069  000C58                     __ptext8:
  2070                           	opt stack 0
  2071  000C58                     _zb_handle_setTempRaw:
  2072                           	opt stack 26
  2073                           
  2074                           ;zb_handle.c: 99: tempRaw = filter(TEMPERATURE_ID, tempRaw);
  2075                           
  2076                           ;incstack = 0
  2077  000C58  C025  F01E         	movff	zb_handle_setTempRaw@tempRaw,filter@value
  2078  000C5C  C026  F01F         	movff	zb_handle_setTempRaw@tempRaw+1,filter@value+1
  2079  000C60  0E00               	movlw	0
  2080  000C62  EC0E  F000         	call	_filter
  2081  000C66  C01E  F025         	movff	?_filter,zb_handle_setTempRaw@tempRaw
  2082  000C6A  C01F  F026         	movff	?_filter+1,zb_handle_setTempRaw@tempRaw+1
  2083                           
  2084                           ;zb_handle.c: 100: sensor_data.tempRaw = tempRaw;
  2085  000C6E  C025  F02C         	movff	zb_handle_setTempRaw@tempRaw,_sensor_data
  2086  000C72  C026  F02D         	movff	zb_handle_setTempRaw@tempRaw+1,_sensor_data+1
  2087                           
  2088                           ;zb_handle.c: 101: sensor_data.tempStatus = (0x03);
  2089  000C76  0E03               	movlw	3
  2090  000C78  6E2E               	movwf	_sensor_data+2,c
  2091  000C7A  0012               	return	
  2092  000C7C                     __end_of_zb_handle_setTempRaw:
  2093                           	opt stack 0
  2094                           tblptru	equ	0xFF8
  2095                           tblptrh	equ	0xFF7
  2096                           tblptrl	equ	0xFF6
  2097                           tablat	equ	0xFF5
  2098                           prodh	equ	0xFF4
  2099                           prodl	equ	0xFF3
  2100                           intcon	equ	0xFF2
  2101                           postinc0	equ	0xFEE
  2102                           wreg	equ	0xFE8
  2103                           indf1	equ	0xFE7
  2104                           postdec1	equ	0xFE5
  2105                           fsr1h	equ	0xFE2
  2106                           fsr1l	equ	0xFE1
  2107                           indf2	equ	0xFDF
  2108                           postinc2	equ	0xFDE
  2109                           postdec2	equ	0xFDD
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8
  2113                           
  2114 ;; *************** function _zb_handle_setHumidityRaw *****************
  2115 ;; Defined at:
  2116 ;;		line 104 in file "zb_handle.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  humidityRaw     2   36[COMRAM] unsigned int 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;		None               void
  2123 ;; Registers used:
  2124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2130 ;;      Params:         2       0       0       0
  2131 ;;      Locals:         0       0       0       0
  2132 ;;      Temps:          0       0       0       0
  2133 ;;      Totals:         2       0       0       0
  2134 ;;Total ram usage:        2 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    3
  2137 ;; This function calls:
  2138 ;;		_filter
  2139 ;; This function is called by:
  2140 ;;		_main_loop
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text9
  2145  000C7C                     __ptext9:
  2146                           	opt stack 0
  2147  000C7C                     _zb_handle_setHumidityRaw:
  2148                           	opt stack 26
  2149                           
  2150                           ;zb_handle.c: 106: humidityRaw = filter(HUMIDITY_ID, humidityRaw);
  2151                           
  2152                           ;incstack = 0
  2153  000C7C  C025  F01E         	movff	zb_handle_setHumidityRaw@humidityRaw,filter@value
  2154  000C80  C026  F01F         	movff	zb_handle_setHumidityRaw@humidityRaw+1,filter@value+1
  2155  000C84  0E01               	movlw	1
  2156  000C86  EC0E  F000         	call	_filter
  2157  000C8A  C01E  F025         	movff	?_filter,zb_handle_setHumidityRaw@humidityRaw
  2158  000C8E  C01F  F026         	movff	?_filter+1,zb_handle_setHumidityRaw@humidityRaw+1
  2159                           
  2160                           ;zb_handle.c: 107: sensor_data.humidityRaw = humidityRaw;
  2161  000C92  C025  F02F         	movff	zb_handle_setHumidityRaw@humidityRaw,_sensor_data+3
  2162  000C96  C026  F030         	movff	zb_handle_setHumidityRaw@humidityRaw+1,_sensor_data+4
  2163                           
  2164                           ;zb_handle.c: 108: sensor_data.humidityStatus = (0x03);
  2165  000C9A  0E03               	movlw	3
  2166  000C9C  6E31               	movwf	_sensor_data+5,c
  2167  000C9E  0012               	return	
  2168  000CA0                     __end_of_zb_handle_setHumidityRaw:
  2169                           	opt stack 0
  2170                           tblptru	equ	0xFF8
  2171                           tblptrh	equ	0xFF7
  2172                           tblptrl	equ	0xFF6
  2173                           tablat	equ	0xFF5
  2174                           prodh	equ	0xFF4
  2175                           prodl	equ	0xFF3
  2176                           intcon	equ	0xFF2
  2177                           postinc0	equ	0xFEE
  2178                           wreg	equ	0xFE8
  2179                           indf1	equ	0xFE7
  2180                           postdec1	equ	0xFE5
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           indf2	equ	0xFDF
  2184                           postinc2	equ	0xFDE
  2185                           postdec2	equ	0xFDD
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _filter *****************
  2191 ;; Defined at:
  2192 ;;		line 16 in file "filter.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  id              1    wreg     enum E29
  2195 ;;  value           2   29[COMRAM] unsigned int 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  id              1    7[BANK0 ] enum E29
  2198 ;;  i               1    6[BANK0 ] unsigned char 
  2199 ;;  sum             4    2[BANK0 ] unsigned long 
  2200 ;;  filtered        2    0[BANK0 ] unsigned int 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  2   29[COMRAM] unsigned int 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2210 ;;      Params:         2       0       0       0
  2211 ;;      Locals:         0       8       0       0
  2212 ;;      Temps:          5       0       0       0
  2213 ;;      Totals:         7       8       0       0
  2214 ;;Total ram usage:       15 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    2
  2217 ;; This function calls:
  2218 ;;		___lldiv
  2219 ;; This function is called by:
  2220 ;;		_zb_handle_setTempRaw
  2221 ;;		_zb_handle_setHumidityRaw
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text10
  2226  00001C                     __ptext10:
  2227                           	opt stack 0
  2228  00001C                     _filter:
  2229                           	opt stack 26
  2230                           
  2231                           ;incstack = 0
  2232                           ;filter@id stored from wreg
  2233  00001C  0100               	movlb	0	; () banked
  2234  00001E  6FDD               	movwf	filter@id& (0+255),b
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;filter.c: 18: uint16_t filtered;
  2238                           ;filter.c: 19: uint32_t sum = 0;
  2239  000020  0E00               	movlw	0
  2240  000022  0100               	movlb	0	; () banked
  2241  000024  6FD8               	movwf	filter@sum& (0+255),b
  2242  000026  0E00               	movlw	0
  2243  000028  0100               	movlb	0	; () banked
  2244  00002A  6FD9               	movwf	(filter@sum+1)& (0+255),b
  2245  00002C  0E00               	movlw	0
  2246  00002E  0100               	movlb	0	; () banked
  2247  000030  6FDA               	movwf	(filter@sum+2)& (0+255),b
  2248  000032  0E00               	movlw	0
  2249  000034  0100               	movlb	0	; () banked
  2250  000036  6FDB               	movwf	(filter@sum+3)& (0+255),b
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;filter.c: 21: if (filter_data[id].offset >= (8))
  2254  000038  0100               	movlb	0	; () banked
  2255  00003A  51DD               	movf	filter@id& (0+255),w,b
  2256  00003C  0D12               	mullw	18
  2257  00003E  0E10               	movlw	16
  2258  000040  26F3               	addwf	prodl,f,c
  2259  000042  0E00               	movlw	0
  2260  000044  22F4               	addwfc	prodh,f,c
  2261  000046  0100               	movlb	0	; () banked
  2262  000048  0EB2               	movlw	low _filter_data
  2263  00004A  24F3               	addwf	prodl,w,c
  2264  00004C  6ED9               	movwf	fsr2l,c
  2265  00004E  0100               	movlb	0	; () banked
  2266  000050  0E00               	movlw	high _filter_data
  2267  000052  20F4               	addwfc	prodh,w,c
  2268  000054  6EDA               	movwf	fsr2h,c
  2269  000056  0E07               	movlw	7
  2270  000058  64DF               	cpfsgt	indf2,c
  2271  00005A  D011               	goto	l512
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;filter.c: 22: {
  2275                           ;filter.c: 23: filter_data[id].offset = 0;
  2276  00005C  0100               	movlb	0	; () banked
  2277  00005E  51DD               	movf	filter@id& (0+255),w,b
  2278  000060  0D12               	mullw	18
  2279  000062  0E10               	movlw	16
  2280  000064  26F3               	addwf	prodl,f,c
  2281  000066  0E00               	movlw	0
  2282  000068  22F4               	addwfc	prodh,f,c
  2283  00006A  0100               	movlb	0	; () banked
  2284  00006C  0EB2               	movlw	low _filter_data
  2285  00006E  24F3               	addwf	prodl,w,c
  2286  000070  6ED9               	movwf	fsr2l,c
  2287  000072  0100               	movlb	0	; () banked
  2288  000074  0E00               	movlw	high _filter_data
  2289  000076  20F4               	addwfc	prodh,w,c
  2290  000078  6EDA               	movwf	fsr2h,c
  2291  00007A  0E00               	movlw	0
  2292  00007C  6EDF               	movwf	indf2,c
  2293  00007E                     l512:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;filter.c: 24: }
  2297                           ;filter.c: 26: filter_data[id].data[filter_data[id].offset] = value;
  2298  00007E  0100               	movlb	0	; () banked
  2299  000080  51DD               	movf	filter@id& (0+255),w,b
  2300  000082  0D12               	mullw	18
  2301  000084  0EB2               	movlw	low _filter_data
  2302  000086  6E20               	movwf	??_filter& (0+255),c
  2303  000088  0E00               	movlw	high _filter_data
  2304  00008A  6E21               	movwf	(??_filter+1)& (0+255),c
  2305  00008C  50F3               	movf	prodl,w,c
  2306  00008E  2620               	addwf	??_filter,f,c
  2307  000090  50F4               	movf	prodh,w,c
  2308  000092  2221               	addwfc	??_filter+1,f,c
  2309  000094  0100               	movlb	0	; () banked
  2310  000096  51DD               	movf	filter@id& (0+255),w,b
  2311  000098  0D12               	mullw	18
  2312  00009A  0E10               	movlw	16
  2313  00009C  26F3               	addwf	prodl,f,c
  2314  00009E  0E00               	movlw	0
  2315  0000A0  22F4               	addwfc	prodh,f,c
  2316  0000A2  0100               	movlb	0	; () banked
  2317  0000A4  0EB2               	movlw	low _filter_data
  2318  0000A6  24F3               	addwf	prodl,w,c
  2319  0000A8  6ED9               	movwf	fsr2l,c
  2320  0000AA  0100               	movlb	0	; () banked
  2321  0000AC  0E00               	movlw	high _filter_data
  2322  0000AE  20F4               	addwfc	prodh,w,c
  2323  0000B0  6EDA               	movwf	fsr2h,c
  2324  0000B2  50DF               	movf	indf2,w,c
  2325  0000B4  6E22               	movwf	(??_filter+2)& (0+255),c
  2326  0000B6  5022               	movf	??_filter+2,w,c
  2327  0000B8  0D02               	mullw	2
  2328  0000BA  50F3               	movf	prodl,w,c
  2329  0000BC  2420               	addwf	??_filter,w,c
  2330  0000BE  6ED9               	movwf	fsr2l,c
  2331  0000C0  50F4               	movf	prodh,w,c
  2332  0000C2  2021               	addwfc	??_filter+1,w,c
  2333  0000C4  6EDA               	movwf	fsr2h,c
  2334  0000C6  C01E  FFDE         	movff	filter@value,postinc2
  2335  0000CA  C01F  FFDD         	movff	filter@value+1,postdec2
  2336                           
  2337                           ;filter.c: 27: filter_data[id].offset++;
  2338  0000CE  0100               	movlb	0	; () banked
  2339  0000D0  51DD               	movf	filter@id& (0+255),w,b
  2340  0000D2  0D12               	mullw	18
  2341  0000D4  0E10               	movlw	16
  2342  0000D6  26F3               	addwf	prodl,f,c
  2343  0000D8  0E00               	movlw	0
  2344  0000DA  22F4               	addwfc	prodh,f,c
  2345  0000DC  0100               	movlb	0	; () banked
  2346  0000DE  0EB2               	movlw	low _filter_data
  2347  0000E0  24F3               	addwf	prodl,w,c
  2348  0000E2  6ED9               	movwf	fsr2l,c
  2349  0000E4  0100               	movlb	0	; () banked
  2350  0000E6  0E00               	movlw	high _filter_data
  2351  0000E8  20F4               	addwfc	prodh,w,c
  2352  0000EA  6EDA               	movwf	fsr2h,c
  2353  0000EC  2ADF               	incf	indf2,f,c
  2354                           
  2355                           ;filter.c: 29: if (filter_data[id].nb < (8))
  2356  0000EE  0100               	movlb	0	; () banked
  2357  0000F0  51DD               	movf	filter@id& (0+255),w,b
  2358  0000F2  0D12               	mullw	18
  2359  0000F4  0E11               	movlw	17
  2360  0000F6  26F3               	addwf	prodl,f,c
  2361  0000F8  0E00               	movlw	0
  2362  0000FA  22F4               	addwfc	prodh,f,c
  2363  0000FC  0100               	movlb	0	; () banked
  2364  0000FE  0EB2               	movlw	low _filter_data
  2365  000100  24F3               	addwf	prodl,w,c
  2366  000102  6ED9               	movwf	fsr2l,c
  2367  000104  0100               	movlb	0	; () banked
  2368  000106  0E00               	movlw	high _filter_data
  2369  000108  20F4               	addwfc	prodh,w,c
  2370  00010A  6EDA               	movwf	fsr2h,c
  2371  00010C  50DF               	movf	indf2,w,c
  2372  00010E  6E20               	movwf	??_filter& (0+255),c
  2373  000110  0E08               	movlw	8
  2374  000112  5C20               	subwf	??_filter,w,c
  2375  000114  B0D8               	btfsc	status,0,c
  2376  000116  D010               	goto	l2475
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;filter.c: 30: {
  2380                           ;filter.c: 31: filter_data[id].nb++;
  2381  000118  0100               	movlb	0	; () banked
  2382  00011A  51DD               	movf	filter@id& (0+255),w,b
  2383  00011C  0D12               	mullw	18
  2384  00011E  0E11               	movlw	17
  2385  000120  26F3               	addwf	prodl,f,c
  2386  000122  0E00               	movlw	0
  2387  000124  22F4               	addwfc	prodh,f,c
  2388  000126  0100               	movlb	0	; () banked
  2389  000128  0EB2               	movlw	low _filter_data
  2390  00012A  24F3               	addwf	prodl,w,c
  2391  00012C  6ED9               	movwf	fsr2l,c
  2392  00012E  0100               	movlb	0	; () banked
  2393  000130  0E00               	movlw	high _filter_data
  2394  000132  20F4               	addwfc	prodh,w,c
  2395  000134  6EDA               	movwf	fsr2h,c
  2396  000136  2ADF               	incf	indf2,f,c
  2397  000138                     l2475:
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;filter.c: 32: }
  2401                           ;filter.c: 35: for (uint8_t i = 0; i < filter_data[id].nb; i++)
  2402  000138  0E00               	movlw	0
  2403  00013A  0100               	movlb	0	; () banked
  2404  00013C  6FDC               	movwf	filter@i& (0+255),b
  2405  00013E  D026               	goto	l2481
  2406  000140                     l2477:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;filter.c: 36: {
  2410                           ;filter.c: 37: sum += filter_data[id].data[i];
  2411  000140  0100               	movlb	0	; () banked
  2412  000142  51DD               	movf	filter@id& (0+255),w,b
  2413  000144  0D12               	mullw	18
  2414  000146  0EB2               	movlw	low _filter_data
  2415  000148  6E20               	movwf	??_filter& (0+255),c
  2416  00014A  0E00               	movlw	high _filter_data
  2417  00014C  6E21               	movwf	(??_filter+1)& (0+255),c
  2418  00014E  50F3               	movf	prodl,w,c
  2419  000150  2620               	addwf	??_filter,f,c
  2420  000152  50F4               	movf	prodh,w,c
  2421  000154  2221               	addwfc	??_filter+1,f,c
  2422  000156  0100               	movlb	0	; () banked
  2423  000158  51DC               	movf	filter@i& (0+255),w,b
  2424  00015A  0D02               	mullw	2
  2425  00015C  50F3               	movf	prodl,w,c
  2426  00015E  2420               	addwf	??_filter,w,c
  2427  000160  6ED9               	movwf	fsr2l,c
  2428  000162  50F4               	movf	prodh,w,c
  2429  000164  2021               	addwfc	??_filter+1,w,c
  2430  000166  6EDA               	movwf	fsr2h,c
  2431  000168  CFDE F022          	movff	postinc2,??_filter+2
  2432  00016C  CFDD F023          	movff	postdec2,??_filter+3
  2433  000170  5022               	movf	??_filter+2,w,c
  2434  000172  0100               	movlb	0	; () banked
  2435  000174  27D8               	addwf	filter@sum& (0+255),f,b
  2436  000176  5023               	movf	??_filter+3,w,c
  2437  000178  0100               	movlb	0	; () banked
  2438  00017A  23D9               	addwfc	(filter@sum+1)& (0+255),f,b
  2439  00017C  0E00               	movlw	0
  2440  00017E  0100               	movlb	0	; () banked
  2441  000180  23DA               	addwfc	(filter@sum+2)& (0+255),f,b
  2442  000182  0E00               	movlw	0
  2443  000184  0100               	movlb	0	; () banked
  2444  000186  23DB               	addwfc	(filter@sum+3)& (0+255),f,b
  2445                           
  2446                           ; BSR set to: 0
  2447  000188  0100               	movlb	0	; () banked
  2448  00018A  2BDC               	incf	filter@i& (0+255),f,b
  2449  00018C                     l2481:
  2450                           
  2451                           ; BSR set to: 0
  2452  00018C  0100               	movlb	0	; () banked
  2453  00018E  51DD               	movf	filter@id& (0+255),w,b
  2454  000190  0D12               	mullw	18
  2455  000192  0E11               	movlw	17
  2456  000194  26F3               	addwf	prodl,f,c
  2457  000196  0E00               	movlw	0
  2458  000198  22F4               	addwfc	prodh,f,c
  2459  00019A  0100               	movlb	0	; () banked
  2460  00019C  0EB2               	movlw	low _filter_data
  2461  00019E  24F3               	addwf	prodl,w,c
  2462  0001A0  6ED9               	movwf	fsr2l,c
  2463  0001A2  0100               	movlb	0	; () banked
  2464  0001A4  0E00               	movlw	high _filter_data
  2465  0001A6  20F4               	addwfc	prodh,w,c
  2466  0001A8  6EDA               	movwf	fsr2h,c
  2467  0001AA  50DF               	movf	indf2,w,c
  2468  0001AC  0100               	movlb	0	; () banked
  2469  0001AE  5DDC               	subwf	filter@i& (0+255),w,b
  2470  0001B0  A0D8               	btfss	status,0,c
  2471  0001B2  D7C6               	goto	l2477
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;filter.c: 38: }
  2475                           ;filter.c: 40: filtered = sum / filter_data[id].nb;
  2476                           
  2477                           ; BSR set to: 0
  2478  0001B4  C0D8  F011         	movff	filter@sum,___lldiv@dividend
  2479  0001B8  C0D9  F012         	movff	filter@sum+1,___lldiv@dividend+1
  2480  0001BC  C0DA  F013         	movff	filter@sum+2,___lldiv@dividend+2
  2481  0001C0  C0DB  F014         	movff	filter@sum+3,___lldiv@dividend+3
  2482  0001C4  0100               	movlb	0	; () banked
  2483  0001C6  51DD               	movf	filter@id& (0+255),w,b
  2484  0001C8  0D12               	mullw	18
  2485  0001CA  0E11               	movlw	17
  2486  0001CC  26F3               	addwf	prodl,f,c
  2487  0001CE  0E00               	movlw	0
  2488  0001D0  22F4               	addwfc	prodh,f,c
  2489  0001D2  0100               	movlb	0	; () banked
  2490  0001D4  0EB2               	movlw	low _filter_data
  2491  0001D6  24F3               	addwf	prodl,w,c
  2492  0001D8  6ED9               	movwf	fsr2l,c
  2493  0001DA  0100               	movlb	0	; () banked
  2494  0001DC  0E00               	movlw	high _filter_data
  2495  0001DE  20F4               	addwfc	prodh,w,c
  2496  0001E0  6EDA               	movwf	fsr2h,c
  2497  0001E2  50DF               	movf	indf2,w,c
  2498  0001E4  6E20               	movwf	??_filter& (0+255),c
  2499  0001E6  5020               	movf	??_filter,w,c
  2500  0001E8  6E15               	movwf	___lldiv@divisor,c
  2501  0001EA  6A16               	clrf	___lldiv@divisor+1,c
  2502  0001EC  6A17               	clrf	___lldiv@divisor+2,c
  2503  0001EE  6A18               	clrf	___lldiv@divisor+3,c
  2504  0001F0  EC82  F004         	call	___lldiv	;wreg free
  2505  0001F4  C011  F021         	movff	?___lldiv,??_filter+1
  2506  0001F8  C012  F022         	movff	?___lldiv+1,??_filter+2
  2507  0001FC  C013  F023         	movff	?___lldiv+2,??_filter+3
  2508  000200  C014  F024         	movff	?___lldiv+3,??_filter+4
  2509  000204  C021  F0D6         	movff	??_filter+1,filter@filtered
  2510  000208  C022  F0D7         	movff	??_filter+2,filter@filtered+1
  2511                           
  2512                           ;filter.c: 67: return filtered;
  2513  00020C  C0D6  F01E         	movff	filter@filtered,?_filter
  2514  000210  C0D7  F01F         	movff	filter@filtered+1,?_filter+1
  2515  000214  0012               	return	
  2516  000216                     __end_of_filter:
  2517                           	opt stack 0
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           prodh	equ	0xFF4
  2523                           prodl	equ	0xFF3
  2524                           intcon	equ	0xFF2
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           indf1	equ	0xFE7
  2528                           postdec1	equ	0xFE5
  2529                           fsr1h	equ	0xFE2
  2530                           fsr1l	equ	0xFE1
  2531                           indf2	equ	0xFDF
  2532                           postinc2	equ	0xFDE
  2533                           postdec2	equ	0xFDD
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function ___lldiv *****************
  2539 ;; Defined at:
  2540 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/lldiv.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  dividend        4   16[COMRAM] unsigned long 
  2543 ;;  divisor         4   20[COMRAM] unsigned long 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  quotient        4   24[COMRAM] unsigned long 
  2546 ;;  counter         1   28[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  4   16[COMRAM] unsigned long 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2556 ;;      Params:         8       0       0       0
  2557 ;;      Locals:         5       0       0       0
  2558 ;;      Temps:          0       0       0       0
  2559 ;;      Totals:        13       0       0       0
  2560 ;;Total ram usage:       13 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    1
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_filter
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text11
  2571  000904                     __ptext11:
  2572                           	opt stack 0
  2573  000904                     ___lldiv:
  2574                           	opt stack 26
  2575                           
  2576                           ;incstack = 0
  2577  000904  0E00               	movlw	0
  2578  000906  6E19               	movwf	___lldiv@quotient,c
  2579  000908  0E00               	movlw	0
  2580  00090A  6E1A               	movwf	___lldiv@quotient+1,c
  2581  00090C  0E00               	movlw	0
  2582  00090E  6E1B               	movwf	___lldiv@quotient+2,c
  2583  000910  0E00               	movlw	0
  2584  000912  6E1C               	movwf	___lldiv@quotient+3,c
  2585  000914  5018               	movf	___lldiv@divisor+3,w,c
  2586  000916  1015               	iorwf	___lldiv@divisor,w,c
  2587  000918  1016               	iorwf	___lldiv@divisor+1,w,c
  2588  00091A  1017               	iorwf	___lldiv@divisor+2,w,c
  2589  00091C  B4D8               	btfsc	status,2,c
  2590  00091E  D02A               	goto	l969
  2591  000920  0E01               	movlw	1
  2592  000922  6E1D               	movwf	___lldiv@counter,c
  2593  000924  D006               	goto	l2363
  2594  000926                     l2361:
  2595  000926  90D8               	bcf	status,0,c
  2596  000928  3615               	rlcf	___lldiv@divisor,f,c
  2597  00092A  3616               	rlcf	___lldiv@divisor+1,f,c
  2598  00092C  3617               	rlcf	___lldiv@divisor+2,f,c
  2599  00092E  3618               	rlcf	___lldiv@divisor+3,f,c
  2600  000930  2A1D               	incf	___lldiv@counter,f,c
  2601  000932                     l2363:
  2602  000932  AE18               	btfss	___lldiv@divisor+3,7,c
  2603  000934  D7F8               	goto	l2361
  2604  000936                     l2365:
  2605  000936  90D8               	bcf	status,0,c
  2606  000938  3619               	rlcf	___lldiv@quotient,f,c
  2607  00093A  361A               	rlcf	___lldiv@quotient+1,f,c
  2608  00093C  361B               	rlcf	___lldiv@quotient+2,f,c
  2609  00093E  361C               	rlcf	___lldiv@quotient+3,f,c
  2610  000940  5015               	movf	___lldiv@divisor,w,c
  2611  000942  5C11               	subwf	___lldiv@dividend,w,c
  2612  000944  5016               	movf	___lldiv@divisor+1,w,c
  2613  000946  5812               	subwfb	___lldiv@dividend+1,w,c
  2614  000948  5017               	movf	___lldiv@divisor+2,w,c
  2615  00094A  5813               	subwfb	___lldiv@dividend+2,w,c
  2616  00094C  5018               	movf	___lldiv@divisor+3,w,c
  2617  00094E  5814               	subwfb	___lldiv@dividend+3,w,c
  2618  000950  A0D8               	btfss	status,0,c
  2619  000952  D009               	goto	l2373
  2620  000954  5015               	movf	___lldiv@divisor,w,c
  2621  000956  5E11               	subwf	___lldiv@dividend,f,c
  2622  000958  5016               	movf	___lldiv@divisor+1,w,c
  2623  00095A  5A12               	subwfb	___lldiv@dividend+1,f,c
  2624  00095C  5017               	movf	___lldiv@divisor+2,w,c
  2625  00095E  5A13               	subwfb	___lldiv@dividend+2,f,c
  2626  000960  5018               	movf	___lldiv@divisor+3,w,c
  2627  000962  5A14               	subwfb	___lldiv@dividend+3,f,c
  2628  000964  8019               	bsf	___lldiv@quotient,0,c
  2629  000966                     l2373:
  2630  000966  90D8               	bcf	status,0,c
  2631  000968  3218               	rrcf	___lldiv@divisor+3,f,c
  2632  00096A  3217               	rrcf	___lldiv@divisor+2,f,c
  2633  00096C  3216               	rrcf	___lldiv@divisor+1,f,c
  2634  00096E  3215               	rrcf	___lldiv@divisor,f,c
  2635  000970  2E1D               	decfsz	___lldiv@counter,f,c
  2636  000972  D7E1               	goto	l2365
  2637  000974                     l969:
  2638  000974  C019  F011         	movff	___lldiv@quotient,?___lldiv
  2639  000978  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
  2640  00097C  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
  2641  000980  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
  2642  000984  0012               	return	
  2643  000986                     __end_of___lldiv:
  2644                           	opt stack 0
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           prodh	equ	0xFF4
  2650                           prodl	equ	0xFF3
  2651                           intcon	equ	0xFF2
  2652                           postinc0	equ	0xFEE
  2653                           wreg	equ	0xFE8
  2654                           indf1	equ	0xFE7
  2655                           postdec1	equ	0xFE5
  2656                           fsr1h	equ	0xFE2
  2657                           fsr1l	equ	0xFE1
  2658                           indf2	equ	0xFDF
  2659                           postinc2	equ	0xFDE
  2660                           postdec2	equ	0xFDD
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _zb_handle_sendData *****************
  2666 ;; Defined at:
  2667 ;;		line 125 in file "zb_handle.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  frameSize       1   31[COMRAM] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2681 ;;      Params:         0       0       0       0
  2682 ;;      Locals:         1       0       0       0
  2683 ;;      Temps:          3       0       0       0
  2684 ;;      Totals:         4       0       0       0
  2685 ;;Total ram usage:        4 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    3
  2688 ;; This function calls:
  2689 ;;		_uart_write
  2690 ;;		_zigbee_appendChecksum
  2691 ;; This function is called by:
  2692 ;;		_main_loop
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text12
  2697  000878                     __ptext12:
  2698                           	opt stack 0
  2699  000878                     _zb_handle_sendData:
  2700                           	opt stack 26
  2701                           
  2702                           ;zb_handle.c: 127: zb_currentFrameID = zb_frameID;
  2703                           
  2704                           ;incstack = 0
  2705  000878  C04E  F04B         	movff	_zb_frameID,_zb_currentFrameID
  2706                           
  2707                           ;zb_handle.c: 128: zb_frameID++;
  2708  00087C  2A4E               	incf	_zb_frameID,f,c
  2709                           
  2710                           ;zb_handle.c: 129: if (zb_frameID == 0)
  2711  00087E  664E               	tstfsz	_zb_frameID,c
  2712  000880  D002               	goto	l2683
  2713                           
  2714                           ;zb_handle.c: 130: {
  2715                           ;zb_handle.c: 131: zb_frameID = 1;
  2716  000882  0E01               	movlw	1
  2717  000884  6E4E               	movwf	_zb_frameID,c
  2718  000886                     l2683:
  2719                           
  2720                           ;zb_handle.c: 132: }
  2721                           ;zb_handle.c: 133: zb_currentAck = -1;
  2722  000886  684A               	setf	_zb_currentAck,c
  2723                           
  2724                           ;zb_handle.c: 135: zb_frameToSend[(4)] = zb_currentFrameID;
  2725  000888  C04B  F053         	movff	_zb_currentFrameID,_zb_frameToSend+4
  2726                           
  2727                           ;zb_handle.c: 136: zb_frameToSend[(18)] = zb_counter++;
  2728  00088C  C049  F061         	movff	_zb_counter,_zb_frameToSend+18
  2729  000890  2A49               	incf	_zb_counter,f,c
  2730                           
  2731                           ;zb_handle.c: 137: zb_frameToSend[(21)] = sensor_data.tempStatus;
  2732  000892  C02E  F064         	movff	_sensor_data+2,_zb_frameToSend+21
  2733                           
  2734                           ;zb_handle.c: 138: zb_frameToSend[(22)] = sensor_data.tempRaw >> 8;
  2735  000896  C02D  F01D         	movff	_sensor_data+1,??_zb_handle_sendData
  2736  00089A  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2737  00089E  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2738  0008A0  501E               	movf	??_zb_handle_sendData+1,w,c
  2739  0008A2  6E65               	movwf	_zb_frameToSend+22,c
  2740                           
  2741                           ;zb_handle.c: 139: zb_frameToSend[(22) + 1] = sensor_data.tempRaw;
  2742  0008A4  C02C  F066         	movff	_sensor_data,_zb_frameToSend+23
  2743                           
  2744                           ;zb_handle.c: 140: zb_frameToSend[(25)] = sensor_data.humidityStatus;
  2745  0008A8  C031  F068         	movff	_sensor_data+5,_zb_frameToSend+25
  2746                           
  2747                           ;zb_handle.c: 141: zb_frameToSend[(26)] = sensor_data.humidityRaw >> 8;
  2748  0008AC  C030  F01D         	movff	_sensor_data+4,??_zb_handle_sendData
  2749  0008B0  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2750  0008B4  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2751  0008B6  501E               	movf	??_zb_handle_sendData+1,w,c
  2752  0008B8  6E69               	movwf	_zb_frameToSend+26,c
  2753                           
  2754                           ;zb_handle.c: 142: zb_frameToSend[(26) + 1] = sensor_data.humidityRaw;
  2755  0008BA  C02F  F06A         	movff	_sensor_data+3,_zb_frameToSend+27
  2756                           
  2757                           ;zb_handle.c: 143: zb_frameToSend[(29)] = sensor_data.battStatus;
  2758  0008BE  C034  F06C         	movff	_sensor_data+8,_zb_frameToSend+29
  2759                           
  2760                           ;zb_handle.c: 144: zb_frameToSend[(30)] = sensor_data.battRaw >> 8;
  2761  0008C2  C033  F01D         	movff	_sensor_data+7,??_zb_handle_sendData
  2762  0008C6  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2763  0008CA  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2764  0008CC  501E               	movf	??_zb_handle_sendData+1,w,c
  2765  0008CE  6E6D               	movwf	_zb_frameToSend+30,c
  2766                           
  2767                           ;zb_handle.c: 145: zb_frameToSend[(30) + 1] = sensor_data.battRaw;
  2768  0008D0  C032  F06E         	movff	_sensor_data+6,_zb_frameToSend+31
  2769                           
  2770                           ;zb_handle.c: 146: zb_frameToSend[(1)] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0xFF00) >
      +                          > 8;
  2771  0008D4  0E00               	movlw	0
  2772  0008D6  6E50               	movwf	_zb_frameToSend+1,c
  2773                           
  2774                           ;zb_handle.c: 147: zb_frameToSend[(1) + 1] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0x00F
      +                          F);
  2775  0008D8  0E1D               	movlw	29
  2776  0008DA  6E51               	movwf	_zb_frameToSend+2,c
  2777                           
  2778                           ;zb_handle.c: 149: uint8_t frameSize = sizeof(zb_frameToSend) - 1;
  2779  0008DC  0E20               	movlw	32
  2780  0008DE  6E20               	movwf	zb_handle_sendData@frameSize,c
  2781                           
  2782                           ;zb_handle.c: 150: zigbee_appendChecksum(zb_frameToSend, &frameSize);
  2783  0008E0  0E00               	movlw	high _zb_frameToSend
  2784  0008E2  6E17               	movwf	zigbee_appendChecksum@buffer+1,c
  2785  0008E4  0E4F               	movlw	low _zb_frameToSend
  2786  0008E6  6E16               	movwf	zigbee_appendChecksum@buffer,c
  2787  0008E8  0E00               	movlw	high zb_handle_sendData@frameSize
  2788  0008EA  6E19               	movwf	zigbee_appendChecksum@sizeFrame+1,c
  2789  0008EC  0E20               	movlw	low zb_handle_sendData@frameSize
  2790  0008EE  6E18               	movwf	zigbee_appendChecksum@sizeFrame,c
  2791  0008F0  ECF3  F004         	call	_zigbee_appendChecksum	;wreg free
  2792                           
  2793                           ;zb_handle.c: 151: uart_write(frameSize, zb_frameToSend);
  2794  0008F4  0E00               	movlw	high _zb_frameToSend
  2795  0008F6  6E12               	movwf	uart_write@buffer+1,c
  2796  0008F8  0E4F               	movlw	low _zb_frameToSend
  2797  0008FA  6E11               	movwf	uart_write@buffer,c
  2798  0008FC  5020               	movf	zb_handle_sendData@frameSize,w,c
  2799  0008FE  ECB3  F005         	call	_uart_write
  2800  000902  0012               	return	
  2801  000904                     __end_of_zb_handle_sendData:
  2802                           	opt stack 0
  2803                           tblptru	equ	0xFF8
  2804                           tblptrh	equ	0xFF7
  2805                           tblptrl	equ	0xFF6
  2806                           tablat	equ	0xFF5
  2807                           prodh	equ	0xFF4
  2808                           prodl	equ	0xFF3
  2809                           intcon	equ	0xFF2
  2810                           postinc0	equ	0xFEE
  2811                           wreg	equ	0xFE8
  2812                           indf1	equ	0xFE7
  2813                           postdec1	equ	0xFE5
  2814                           fsr1h	equ	0xFE2
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           postdec2	equ	0xFDD
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _zigbee_appendChecksum *****************
  2824 ;; Defined at:
  2825 ;;		line 155 in file "zb_handle.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  buffer          2   21[COMRAM] PTR unsigned char 
  2828 ;;		 -> zb_frameToSend(33), 
  2829 ;;  sizeFrame       2   23[COMRAM] PTR unsigned char 
  2830 ;;		 -> zb_handle_sendData@frameSize(1), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;		None               void
  2835 ;; Registers used:
  2836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2842 ;;      Params:         4       0       0       0
  2843 ;;      Locals:         0       0       0       0
  2844 ;;      Temps:          3       0       0       0
  2845 ;;      Totals:         7       0       0       0
  2846 ;;Total ram usage:        7 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    2
  2849 ;; This function calls:
  2850 ;;		_zb_doChecksum
  2851 ;; This function is called by:
  2852 ;;		_zb_handle_sendData
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text13
  2857  0009E6                     __ptext13:
  2858                           	opt stack 0
  2859  0009E6                     _zigbee_appendChecksum:
  2860                           	opt stack 26
  2861                           
  2862                           ;zb_handle.c: 157: buffer[*sizeFrame] = zb_doChecksum(&buffer[(3)], &buffer[*sizeFrame] 
      +                          - &buffer[(3)]);
  2863                           
  2864                           ;incstack = 0
  2865  0009E6  0E03               	movlw	3
  2866  0009E8  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2867  0009EA  6E11               	movwf	zb_doChecksum@frame,c
  2868  0009EC  0E00               	movlw	0
  2869  0009EE  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  2870  0009F0  6E12               	movwf	zb_doChecksum@frame+1,c
  2871  0009F2  5016               	movf	zigbee_appendChecksum@buffer,w,c
  2872  0009F4  0F03               	addlw	3
  2873  0009F6  0800               	sublw	0
  2874  0009F8  6E1A               	movwf	??_zigbee_appendChecksum& (0+255),c
  2875  0009FA  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2876  0009FE  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2877  000A02  50DF               	movf	indf2,w,c
  2878  000A04  0D01               	mullw	1
  2879  000A06  50F3               	movf	prodl,w,c
  2880  000A08  241A               	addwf	??_zigbee_appendChecksum,w,c
  2881  000A0A  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2882  000A0C  6E13               	movwf	zb_doChecksum@size,c
  2883  000A0E  EC04  F006         	call	_zb_doChecksum	;wreg free
  2884  000A12  6E1B               	movwf	(??_zigbee_appendChecksum+1)& (0+255),c
  2885  000A14  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2886  000A18  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2887  000A1C  50DF               	movf	indf2,w,c
  2888  000A1E  6E1C               	movwf	(??_zigbee_appendChecksum+2)& (0+255),c
  2889  000A20  501C               	movf	??_zigbee_appendChecksum+2,w,c
  2890  000A22  0D01               	mullw	1
  2891  000A24  50F3               	movf	prodl,w,c
  2892  000A26  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2893  000A28  6ED9               	movwf	fsr2l,c
  2894  000A2A  50F4               	movf	prodh,w,c
  2895  000A2C  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  2896  000A2E  6EDA               	movwf	fsr2h,c
  2897  000A30  C01B  FFDF         	movff	??_zigbee_appendChecksum+1,indf2
  2898                           
  2899                           ;zb_handle.c: 158: (*sizeFrame)++;
  2900  000A34  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2901  000A38  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2902  000A3C  2ADF               	incf	indf2,f,c
  2903  000A3E  0012               	return	
  2904  000A40                     __end_of_zigbee_appendChecksum:
  2905                           	opt stack 0
  2906                           tblptru	equ	0xFF8
  2907                           tblptrh	equ	0xFF7
  2908                           tblptrl	equ	0xFF6
  2909                           tablat	equ	0xFF5
  2910                           prodh	equ	0xFF4
  2911                           prodl	equ	0xFF3
  2912                           intcon	equ	0xFF2
  2913                           postinc0	equ	0xFEE
  2914                           wreg	equ	0xFE8
  2915                           indf1	equ	0xFE7
  2916                           postdec1	equ	0xFE5
  2917                           fsr1h	equ	0xFE2
  2918                           fsr1l	equ	0xFE1
  2919                           indf2	equ	0xFDF
  2920                           postinc2	equ	0xFDE
  2921                           postdec2	equ	0xFDD
  2922                           fsr2h	equ	0xFDA
  2923                           fsr2l	equ	0xFD9
  2924                           status	equ	0xFD8
  2925                           
  2926 ;; *************** function _zb_doChecksum *****************
  2927 ;; Defined at:
  2928 ;;		line 9 in file "zb.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  frame           2   16[COMRAM] PTR unsigned char 
  2931 ;;		 -> zb_frameReceived(50), zb_frameToSend(33), 
  2932 ;;  size            1   18[COMRAM] unsigned char 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  i               1   20[COMRAM] unsigned char 
  2935 ;;  checksum        1   19[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      unsigned char 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2945 ;;      Params:         3       0       0       0
  2946 ;;      Locals:         2       0       0       0
  2947 ;;      Temps:          0       0       0       0
  2948 ;;      Totals:         5       0       0       0
  2949 ;;Total ram usage:        5 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_zb_decodage
  2956 ;;		_zigbee_appendChecksum
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text14
  2961  000C08                     __ptext14:
  2962                           	opt stack 0
  2963  000C08                     _zb_doChecksum:
  2964                           	opt stack 25
  2965                           
  2966                           ;zb.c: 11: uint8_t checksum;
  2967                           ;zb.c: 13: checksum = 0xFF;
  2968                           
  2969                           ;incstack = 0
  2970  000C08  6814               	setf	zb_doChecksum@checksum,c
  2971                           
  2972                           ;zb.c: 14: for (uint8_t i = 0; i < size; i++)
  2973  000C0A  0E00               	movlw	0
  2974  000C0C  6E15               	movwf	zb_doChecksum@i,c
  2975  000C0E  D00B               	goto	l2271
  2976  000C10                     l2267:
  2977                           
  2978                           ;zb.c: 15: {
  2979                           ;zb.c: 16: checksum -= frame[i];
  2980  000C10  5015               	movf	zb_doChecksum@i,w,c
  2981  000C12  0D01               	mullw	1
  2982  000C14  50F3               	movf	prodl,w,c
  2983  000C16  2411               	addwf	zb_doChecksum@frame,w,c
  2984  000C18  6ED9               	movwf	fsr2l,c
  2985  000C1A  50F4               	movf	prodh,w,c
  2986  000C1C  2012               	addwfc	zb_doChecksum@frame+1,w,c
  2987  000C1E  6EDA               	movwf	fsr2h,c
  2988  000C20  50DF               	movf	indf2,w,c
  2989  000C22  5E14               	subwf	zb_doChecksum@checksum,f,c
  2990  000C24  2A15               	incf	zb_doChecksum@i,f,c
  2991  000C26                     l2271:
  2992  000C26  5013               	movf	zb_doChecksum@size,w,c
  2993  000C28  5C15               	subwf	zb_doChecksum@i,w,c
  2994  000C2A  A0D8               	btfss	status,0,c
  2995  000C2C  D7F1               	goto	l2267
  2996                           
  2997                           ;zb.c: 17: }
  2998                           ;zb.c: 19: return checksum;
  2999  000C2E  5014               	movf	zb_doChecksum@checksum,w,c
  3000  000C30  0012               	return	
  3001  000C32                     __end_of_zb_doChecksum:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           prodh	equ	0xFF4
  3008                           prodl	equ	0xFF3
  3009                           intcon	equ	0xFF2
  3010                           postinc0	equ	0xFEE
  3011                           wreg	equ	0xFE8
  3012                           indf1	equ	0xFE7
  3013                           postdec1	equ	0xFE5
  3014                           fsr1h	equ	0xFE2
  3015                           fsr1l	equ	0xFE1
  3016                           indf2	equ	0xFDF
  3017                           postinc2	equ	0xFDE
  3018                           postdec2	equ	0xFDD
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _uart_write *****************
  3024 ;; Defined at:
  3025 ;;		line 28 in file "uart.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  size            1    wreg     unsigned char 
  3028 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  3029 ;;		 -> zb_frameToSend(33), 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  size            1   20[COMRAM] unsigned char 
  3032 ;;  b               2   18[COMRAM] PTR unsigned char 
  3033 ;;		 -> zb_frameToSend(33), 
  3034 ;;  i               1   21[COMRAM] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3044 ;;      Params:         2       0       0       0
  3045 ;;      Locals:         4       0       0       0
  3046 ;;      Temps:          0       0       0       0
  3047 ;;      Totals:         6       0       0       0
  3048 ;;Total ram usage:        6 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_zb_handle_sendData
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text15
  3059  000B66                     __ptext15:
  3060                           	opt stack 0
  3061  000B66                     _uart_write:
  3062                           	opt stack 27
  3063                           
  3064                           ;incstack = 0
  3065                           ;uart_write@size stored from wreg
  3066  000B66  6E15               	movwf	uart_write@size,c
  3067                           
  3068                           ;uart.c: 30: uint8_t i;
  3069                           ;uart.c: 31: uint8_t* b;
  3070                           ;uart.c: 33: b = buffer;
  3071  000B68  C012  F014         	movff	uart_write@buffer+1,uart_write@b+1
  3072  000B6C  C011  F013         	movff	uart_write@buffer,uart_write@b
  3073                           
  3074                           ;uart.c: 34: for (i = 0; i < size; i++)
  3075  000B70  0E00               	movlw	0
  3076  000B72  6E16               	movwf	uart_write@i,c
  3077  000B74  D00F               	goto	l2465
  3078  000B76                     l2461:
  3079                           
  3080                           ;uart.c: 35: {
  3081                           ;uart.c: 36: TXREG = buffer[i];
  3082  000B76  5016               	movf	uart_write@i,w,c
  3083  000B78  0D01               	mullw	1
  3084  000B7A  50F3               	movf	prodl,w,c
  3085  000B7C  2411               	addwf	uart_write@buffer,w,c
  3086  000B7E  6ED9               	movwf	fsr2l,c
  3087  000B80  50F4               	movf	prodh,w,c
  3088  000B82  2012               	addwfc	uart_write@buffer+1,w,c
  3089  000B84  6EDA               	movwf	fsr2h,c
  3090  000B86  50DF               	movf	indf2,w,c
  3091  000B88  6EAD               	movwf	4013,c	;volatile
  3092  000B8A                     l246:
  3093  000B8A  A2AC               	btfss	4012,1,c	;volatile
  3094  000B8C  D7FE               	goto	l246
  3095                           
  3096                           ;uart.c: 39: b++;
  3097  000B8E  4A13               	infsnz	uart_write@b,f,c
  3098  000B90  2A14               	incf	uart_write@b+1,f,c
  3099  000B92  2A16               	incf	uart_write@i,f,c
  3100  000B94                     l2465:
  3101  000B94  5015               	movf	uart_write@size,w,c
  3102  000B96  5C16               	subwf	uart_write@i,w,c
  3103  000B98  A0D8               	btfss	status,0,c
  3104  000B9A  D7ED               	goto	l2461
  3105                           
  3106                           ;uart.c: 40: }
  3107                           ;uart.c: 41: __nop();
  3108  000B9C  F000               	nop	
  3109  000B9E  0012               	return	
  3110  000BA0                     __end_of_uart_write:
  3111                           	opt stack 0
  3112                           tblptru	equ	0xFF8
  3113                           tblptrh	equ	0xFF7
  3114                           tblptrl	equ	0xFF6
  3115                           tablat	equ	0xFF5
  3116                           prodh	equ	0xFF4
  3117                           prodl	equ	0xFF3
  3118                           intcon	equ	0xFF2
  3119                           postinc0	equ	0xFEE
  3120                           wreg	equ	0xFE8
  3121                           indf1	equ	0xFE7
  3122                           postdec1	equ	0xFE5
  3123                           fsr1h	equ	0xFE2
  3124                           fsr1l	equ	0xFE1
  3125                           indf2	equ	0xFDF
  3126                           postinc2	equ	0xFDE
  3127                           postdec2	equ	0xFDD
  3128                           fsr2h	equ	0xFDA
  3129                           fsr2l	equ	0xFD9
  3130                           status	equ	0xFD8
  3131                           
  3132 ;; *************** function _zb_handle_resetStatus *****************
  3133 ;; Defined at:
  3134 ;;		line 117 in file "zb_handle.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;		None               void
  3141 ;; Registers used:
  3142 ;;		wreg, status,2
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3148 ;;      Params:         0       0       0       0
  3149 ;;      Locals:         0       0       0       0
  3150 ;;      Temps:          0       0       0       0
  3151 ;;      Totals:         0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    1
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_main_loop
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text16
  3163  000DD8                     __ptext16:
  3164                           	opt stack 0
  3165  000DD8                     _zb_handle_resetStatus:
  3166                           	opt stack 28
  3167                           
  3168                           ;zb_handle.c: 119: sensor_data.battStatus = (0x00);
  3169                           
  3170                           ;incstack = 0
  3171  000DD8  0E00               	movlw	0
  3172  000DDA  6E34               	movwf	_sensor_data+8,c
  3173                           
  3174                           ;zb_handle.c: 120: sensor_data.humidityStatus = (0x00);
  3175  000DDC  0E00               	movlw	0
  3176  000DDE  6E31               	movwf	_sensor_data+5,c
  3177                           
  3178                           ;zb_handle.c: 121: sensor_data.tempStatus = (0x00);
  3179  000DE0  0E00               	movlw	0
  3180  000DE2  6E2E               	movwf	_sensor_data+2,c
  3181  000DE4  0012               	return	
  3182  000DE6                     __end_of_zb_handle_resetStatus:
  3183                           	opt stack 0
  3184                           tblptru	equ	0xFF8
  3185                           tblptrh	equ	0xFF7
  3186                           tblptrl	equ	0xFF6
  3187                           tablat	equ	0xFF5
  3188                           prodh	equ	0xFF4
  3189                           prodl	equ	0xFF3
  3190                           intcon	equ	0xFF2
  3191                           postinc0	equ	0xFEE
  3192                           wreg	equ	0xFE8
  3193                           indf1	equ	0xFE7
  3194                           postdec1	equ	0xFE5
  3195                           fsr1h	equ	0xFE2
  3196                           fsr1l	equ	0xFE1
  3197                           indf2	equ	0xFDF
  3198                           postinc2	equ	0xFDE
  3199                           postdec2	equ	0xFDD
  3200                           fsr2h	equ	0xFDA
  3201                           fsr2l	equ	0xFD9
  3202                           status	equ	0xFD8
  3203                           
  3204 ;; *************** function _zb_handle_getStatus *****************
  3205 ;; Defined at:
  3206 ;;		line 92 in file "zb_handle.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      enum E3761
  3213 ;; Registers used:
  3214 ;;		wreg, status,2
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3220 ;;      Params:         0       0       0       0
  3221 ;;      Locals:         0       0       0       0
  3222 ;;      Temps:          0       0       0       0
  3223 ;;      Totals:         0       0       0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    1
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_main_loop
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text17
  3235  000E08                     __ptext17:
  3236                           	opt stack 0
  3237  000E08                     _zb_handle_getStatus:
  3238                           	opt stack 28
  3239                           
  3240                           ;zb_handle.c: 94: return zb_status;
  3241                           
  3242                           ;incstack = 0
  3243  000E08  504D               	movf	_zb_status,w,c
  3244  000E0A  0012               	return	
  3245  000E0C                     __end_of_zb_handle_getStatus:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           indf1	equ	0xFE7
  3257                           postdec1	equ	0xFE5
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           indf2	equ	0xFDF
  3261                           postinc2	equ	0xFDE
  3262                           postdec2	equ	0xFDD
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _timer0_wait_65ms *****************
  3268 ;; Defined at:
  3269 ;;		line 11 in file "timer.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3283 ;;      Params:         0       0       0       0
  3284 ;;      Locals:         0       0       0       0
  3285 ;;      Temps:          0       0       0       0
  3286 ;;      Totals:         0       0       0       0
  3287 ;;Total ram usage:        0 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		_timer0_wait_ready
  3292 ;; This function is called by:
  3293 ;;		_main_loop
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text18
  3298  000D08                     __ptext18:
  3299                           	opt stack 0
  3300  000D08                     _timer0_wait_65ms:
  3301                           	opt stack 27
  3302                           
  3303                           ;timer.c: 13: TMR0 = 0;
  3304                           
  3305                           ;incstack = 0
  3306  000D08  0E00               	movlw	0
  3307  000D0A  6ED7               	movwf	4055,c	;volatile
  3308  000D0C  0E00               	movlw	0
  3309  000D0E  6ED6               	movwf	4054,c	;volatile
  3310                           
  3311                           ;timer.c: 14: T0CON = 0x45;
  3312  000D10  0E45               	movlw	69
  3313  000D12  6ED5               	movwf	4053,c	;volatile
  3314                           
  3315                           ;timer.c: 15: INTCONbits.TMR0IF = 0;
  3316  000D14  94F2               	bcf	intcon,2,c	;volatile
  3317                           
  3318                           ;timer.c: 16: INTCONbits.TMR0IE = 1;
  3319  000D16  8AF2               	bsf	intcon,5,c	;volatile
  3320                           
  3321                           ;timer.c: 17: T0CONbits.TMR0ON = 1;
  3322  000D18  8ED5               	bsf	4053,7,c	;volatile
  3323                           
  3324                           ;timer.c: 19: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  3325  000D1A  8ED3               	bsf	4051,7,c	;volatile
  3326  000D1C  0003               	sleep		;# 
  3327  000D1E  9ED3               	bcf	4051,7,c	;volatile
  3328                           
  3329                           ;timer.c: 20: timer0_wait_ready();
  3330  000D20  ECD2  F006         	call	_timer0_wait_ready	;wreg free
  3331                           
  3332                           ;timer.c: 22: T0CONbits.TMR0ON = 0;
  3333  000D24  9ED5               	bcf	4053,7,c	;volatile
  3334                           
  3335                           ;timer.c: 23: INTCONbits.TMR0IE = 0;
  3336  000D26  9AF2               	bcf	intcon,5,c	;volatile
  3337  000D28  0012               	return	
  3338  000D2A                     __end_of_timer0_wait_65ms:
  3339                           	opt stack 0
  3340                           tblptru	equ	0xFF8
  3341                           tblptrh	equ	0xFF7
  3342                           tblptrl	equ	0xFF6
  3343                           tablat	equ	0xFF5
  3344                           prodh	equ	0xFF4
  3345                           prodl	equ	0xFF3
  3346                           intcon	equ	0xFF2
  3347                           postinc0	equ	0xFEE
  3348                           wreg	equ	0xFE8
  3349                           indf1	equ	0xFE7
  3350                           postdec1	equ	0xFE5
  3351                           fsr1h	equ	0xFE2
  3352                           fsr1l	equ	0xFE1
  3353                           indf2	equ	0xFDF
  3354                           postinc2	equ	0xFDE
  3355                           postdec2	equ	0xFDD
  3356                           fsr2h	equ	0xFDA
  3357                           fsr2l	equ	0xFD9
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function _timer0_wait_ready *****************
  3361 ;; Defined at:
  3362 ;;		line 42 in file "timer.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;		None               void
  3369 ;; Registers used:
  3370 ;;		wreg, status,2
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3376 ;;      Params:         0       0       0       0
  3377 ;;      Locals:         0       0       0       0
  3378 ;;      Temps:          0       0       0       0
  3379 ;;      Totals:         0       0       0       0
  3380 ;;Total ram usage:        0 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_timer0_wait_65ms
  3387 ;;		_timer0_wait_262ms
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text19
  3392  000DA4                     __ptext19:
  3393                           	opt stack 0
  3394  000DA4                     _timer0_wait_ready:
  3395                           	opt stack 26
  3396                           
  3397                           ;incstack = 0
  3398                           ;timer.c: 44: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  3399  000DA4  8ED3               	bsf	4051,7,c	;volatile
  3400  000DA6  0003               	sleep		;# 
  3401  000DA8  9ED3               	bcf	4051,7,c	;volatile
  3402  000DAA                     l2351:
  3403  000DAA  5047               	movf	_timer0_interupt_done,w,c
  3404  000DAC  B4D8               	btfsc	status,2,c
  3405  000DAE  D7FD               	goto	l2351
  3406                           
  3407                           ;timer.c: 48: timer0_interupt_done = FALSE;
  3408  000DB0  0E00               	movlw	0
  3409  000DB2  6E47               	movwf	_timer0_interupt_done,c
  3410  000DB4  0012               	return	
  3411  000DB6                     __end_of_timer0_wait_ready:
  3412                           	opt stack 0
  3413                           tblptru	equ	0xFF8
  3414                           tblptrh	equ	0xFF7
  3415                           tblptrl	equ	0xFF6
  3416                           tablat	equ	0xFF5
  3417                           prodh	equ	0xFF4
  3418                           prodl	equ	0xFF3
  3419                           intcon	equ	0xFF2
  3420                           postinc0	equ	0xFEE
  3421                           wreg	equ	0xFE8
  3422                           indf1	equ	0xFE7
  3423                           postdec1	equ	0xFE5
  3424                           fsr1h	equ	0xFE2
  3425                           fsr1l	equ	0xFE1
  3426                           indf2	equ	0xFDF
  3427                           postinc2	equ	0xFDE
  3428                           postdec2	equ	0xFDD
  3429                           fsr2h	equ	0xFDA
  3430                           fsr2l	equ	0xFD9
  3431                           status	equ	0xFD8
  3432                           
  3433 ;; *************** function _leds_yellow_glitch *****************
  3434 ;; Defined at:
  3435 ;;		line 28 in file "leds.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;		None               void
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3449 ;;      Params:         0       0       0       0
  3450 ;;      Locals:         0       0       0       0
  3451 ;;      Temps:          1       0       0       0
  3452 ;;      Totals:         1       0       0       0
  3453 ;;Total ram usage:        1 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_main_loop
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text20
  3464  000D62                     __ptext20:
  3465                           	opt stack 0
  3466  000D62                     _leds_yellow_glitch:
  3467                           	opt stack 28
  3468                           
  3469                           ;leds.c: 30: LATA |= (0x04);
  3470                           
  3471                           ;incstack = 0
  3472  000D62  8489               	bsf	3977,2,c	;volatile
  3473                           
  3474                           ;leds.c: 31: _delay((unsigned long)((100)*((1000000)/4000.0)));
  3475  000D64  0E21               	movlw	33
  3476  000D66  6E11               	movwf	??_leds_yellow_glitch& (0+255),c
  3477  000D68  0E76               	movlw	118
  3478  000D6A                     u1597:
  3479  000D6A  2EE8               	decfsz	wreg,f,c
  3480  000D6C  D7FE               	goto	u1597
  3481  000D6E  2E11               	decfsz	??_leds_yellow_glitch& (0+255),f,c
  3482  000D70  D7FC               	goto	u1597
  3483  000D72  D000               	nop2	
  3484                           
  3485                           ;leds.c: 32: LATA &= ~(0x04);
  3486  000D74  9489               	bcf	3977,2,c	;volatile
  3487  000D76  0012               	return	
  3488  000D78                     __end_of_leds_yellow_glitch:
  3489                           	opt stack 0
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           intcon	equ	0xFF2
  3497                           postinc0	equ	0xFEE
  3498                           wreg	equ	0xFE8
  3499                           indf1	equ	0xFE7
  3500                           postdec1	equ	0xFE5
  3501                           fsr1h	equ	0xFE2
  3502                           fsr1l	equ	0xFE1
  3503                           indf2	equ	0xFDF
  3504                           postinc2	equ	0xFDE
  3505                           postdec2	equ	0xFDD
  3506                           fsr2h	equ	0xFDA
  3507                           fsr2l	equ	0xFD9
  3508                           status	equ	0xFD8
  3509                           
  3510 ;; *************** function _leds_green_glitch *****************
  3511 ;; Defined at:
  3512 ;;		line 35 in file "leds.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;		None               void
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3526 ;;      Params:         0       0       0       0
  3527 ;;      Locals:         0       0       0       0
  3528 ;;      Temps:          1       0       0       0
  3529 ;;      Totals:         1       0       0       0
  3530 ;;Total ram usage:        1 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    1
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_main_loop
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text21
  3541  000D78                     __ptext21:
  3542                           	opt stack 0
  3543  000D78                     _leds_green_glitch:
  3544                           	opt stack 28
  3545                           
  3546                           ;leds.c: 37: LATA |= (0x10);
  3547                           
  3548                           ;incstack = 0
  3549  000D78  8889               	bsf	3977,4,c	;volatile
  3550                           
  3551                           ;leds.c: 38: _delay((unsigned long)((100)*((1000000)/4000.0)));
  3552  000D7A  0E21               	movlw	33
  3553  000D7C  6E11               	movwf	??_leds_green_glitch& (0+255),c
  3554  000D7E  0E76               	movlw	118
  3555  000D80                     u1607:
  3556  000D80  2EE8               	decfsz	wreg,f,c
  3557  000D82  D7FE               	goto	u1607
  3558  000D84  2E11               	decfsz	??_leds_green_glitch& (0+255),f,c
  3559  000D86  D7FC               	goto	u1607
  3560  000D88  D000               	nop2	
  3561                           
  3562                           ;leds.c: 39: LATA &= ~(0x10);
  3563  000D8A  9889               	bcf	3977,4,c	;volatile
  3564  000D8C  0012               	return	
  3565  000D8E                     __end_of_leds_green_glitch:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           prodh	equ	0xFF4
  3572                           prodl	equ	0xFF3
  3573                           intcon	equ	0xFF2
  3574                           postinc0	equ	0xFEE
  3575                           wreg	equ	0xFE8
  3576                           indf1	equ	0xFE7
  3577                           postdec1	equ	0xFE5
  3578                           fsr1h	equ	0xFE2
  3579                           fsr1l	equ	0xFE1
  3580                           indf2	equ	0xFDF
  3581                           postinc2	equ	0xFDE
  3582                           postdec2	equ	0xFDD
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8
  3586                           
  3587 ;; *************** function _hyt221_operation *****************
  3588 ;; Defined at:
  3589 ;;		line 44 in file "hyt221.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  index           1   20[COMRAM] char 
  3594 ;;  bDeviceDataA    1   19[COMRAM] enum E3083
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      enum E3779
  3597 ;; Registers used:
  3598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3604 ;;      Params:         0       0       0       0
  3605 ;;      Locals:         2       0       0       0
  3606 ;;      Temps:          2       0       0       0
  3607 ;;      Totals:         4       0       0       0
  3608 ;;Total ram usage:        4 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    3
  3611 ;; This function calls:
  3612 ;;		_i2c_trig_start
  3613 ;;		_i2c_trig_stop
  3614 ;;		_i2c_wait_idle
  3615 ;;		_i2c_wait_ready
  3616 ;;		_leds_red_and_yellow_glitch
  3617 ;; This function is called by:
  3618 ;;		_main_loop
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text22
  3623  0007DC                     __ptext22:
  3624                           	opt stack 0
  3625  0007DC                     _hyt221_operation:
  3626                           	opt stack 26
  3627                           
  3628                           ;hyt221.c: 46: int8_t index;
  3629                           ;hyt221.c: 47: BOOL bDeviceDataAreStale;
  3630                           ;hyt221.c: 48: bDeviceDataAreStale = FALSE;
  3631                           
  3632                           ;incstack = 0
  3633  0007DC  0E00               	movlw	0
  3634  0007DE  6E14               	movwf	hyt221_operation@bDeviceDataAreStale,c
  3635                           
  3636                           ;hyt221.c: 51: i2c_trig_start();
  3637  0007E0  ECFA  F006         	call	_i2c_trig_start	;wreg free
  3638                           
  3639                           ;hyt221.c: 54: SSPBUF = (0x51);
  3640  0007E4  0E51               	movlw	81
  3641  0007E6  6EC9               	movwf	4041,c	;volatile
  3642                           
  3643                           ;hyt221.c: 55: i2c_wait_ready();
  3644  0007E8  ECDB  F006         	call	_i2c_wait_ready	;wreg free
  3645                           
  3646                           ;hyt221.c: 58: if (SSPCON2bits.ACKSTAT == 1)
  3647  0007EC  ACC5               	btfss	4037,6,c	;volatile
  3648  0007EE  D006               	goto	l2597
  3649                           
  3650                           ;hyt221.c: 59: {
  3651                           ;hyt221.c: 60: leds_red_and_yellow_glitch();
  3652  0007F0  ECA4  F006         	call	_leds_red_and_yellow_glitch	;wreg free
  3653                           
  3654                           ;hyt221.c: 61: i2c_trig_stop();
  3655  0007F4  EC00  F007         	call	_i2c_trig_stop	;wreg free
  3656                           
  3657                           ;hyt221.c: 62: return STATUS_ERROR;
  3658  0007F8  0E01               	movlw	1
  3659  0007FA  D03D               	goto	l391
  3660  0007FC                     l2597:
  3661                           
  3662                           ;hyt221.c: 63: }
  3663                           ;hyt221.c: 65: index = 0;
  3664  0007FC  0E00               	movlw	0
  3665  0007FE  6E15               	movwf	hyt221_operation@index,c
  3666                           
  3667                           ;hyt221.c: 66: while (index < 4)
  3668  000800  D02B               	goto	l2627
  3669  000802                     l2599:
  3670                           
  3671                           ;hyt221.c: 67: {
  3672                           ;hyt221.c: 68: i2c_wait_idle();
  3673  000802  ECE4  F006         	call	_i2c_wait_idle	;wreg free
  3674                           
  3675                           ;hyt221.c: 69: SSPCON2bits.RCEN = 1;
  3676  000806  86C5               	bsf	4037,3,c	;volatile
  3677                           
  3678                           ;hyt221.c: 71: i2c_wait_ready();
  3679  000808  ECDB  F006         	call	_i2c_wait_ready	;wreg free
  3680                           
  3681                           ;hyt221.c: 73: gData[index] = SSPBUF;
  3682  00080C  5015               	movf	hyt221_operation@index,w,c
  3683  00080E  0D01               	mullw	1
  3684  000810  0E35               	movlw	low _gData
  3685  000812  24F3               	addwf	prodl,w,c
  3686  000814  6ED9               	movwf	fsr2l,c
  3687  000816  0E00               	movlw	high _gData
  3688  000818  20F4               	addwfc	prodh,w,c
  3689  00081A  6EDA               	movwf	fsr2h,c
  3690  00081C  CFC9 FFDF          	movff	4041,indf2	;volatile
  3691                           
  3692                           ;hyt221.c: 74: if (index == 0)
  3693  000820  6615               	tstfsz	hyt221_operation@index,c
  3694  000822  D00D               	goto	l2615
  3695                           
  3696                           ;hyt221.c: 75: {
  3697                           ;hyt221.c: 77: if ((gData[0] & 0x40) == 0x40)
  3698  000824  C035  F012         	movff	_gData,??_hyt221_operation
  3699  000828  6A13               	clrf	(??_hyt221_operation+1)& (0+255),c
  3700  00082A  BE12               	btfsc	??_hyt221_operation& (0+255),7,c
  3701  00082C  0613               	decf	(??_hyt221_operation+1)& (0+255),f,c
  3702  00082E  AC12               	btfss	??_hyt221_operation,6,c
  3703  000830  D00C               	goto	l398
  3704                           
  3705                           ;hyt221.c: 78: {
  3706                           ;hyt221.c: 80: SSPCON2bits.ACKDT = 1;
  3707  000832  8AC5               	bsf	4037,5,c	;volatile
  3708                           
  3709                           ;hyt221.c: 81: index = 3;
  3710  000834  0E03               	movlw	3
  3711  000836  6E15               	movwf	hyt221_operation@index,c
  3712                           
  3713                           ;hyt221.c: 82: bDeviceDataAreStale = TRUE;
  3714  000838  0E01               	movlw	1
  3715  00083A  6E14               	movwf	hyt221_operation@bDeviceDataAreStale,c
  3716                           
  3717                           ;hyt221.c: 83: }
  3718  00083C  D007               	goto	l2619
  3719  00083E                     l2615:
  3720                           
  3721                           ;hyt221.c: 89: else if (index == 3)
  3722  00083E  5015               	movf	hyt221_operation@index,w,c
  3723  000840  0A03               	xorlw	3
  3724  000842  A4D8               	btfss	status,2,c
  3725  000844  D002               	goto	l398
  3726                           
  3727                           ;hyt221.c: 90: {
  3728                           ;hyt221.c: 91: SSPCON2bits.ACKDT = 1;
  3729  000846  8AC5               	bsf	4037,5,c	;volatile
  3730                           
  3731                           ;hyt221.c: 92: }
  3732  000848  D001               	goto	l2619
  3733  00084A                     l398:
  3734                           
  3735                           ;hyt221.c: 93: else
  3736                           ;hyt221.c: 94: {
  3737                           ;hyt221.c: 95: SSPCON2bits.ACKDT = 0;
  3738  00084A  9AC5               	bcf	4037,5,c	;volatile
  3739  00084C                     l2619:
  3740                           
  3741                           ;hyt221.c: 96: }
  3742                           ;hyt221.c: 98: i2c_wait_idle();
  3743  00084C  ECE4  F006         	call	_i2c_wait_idle	;wreg free
  3744                           
  3745                           ;hyt221.c: 101: SSPCON2bits.ACKEN = 1;
  3746  000850  88C5               	bsf	4037,4,c	;volatile
  3747                           
  3748                           ;hyt221.c: 102: i2c_wait_ready();
  3749  000852  ECDB  F006         	call	_i2c_wait_ready	;wreg free
  3750                           
  3751                           ;hyt221.c: 103: index++;
  3752  000856  2A15               	incf	hyt221_operation@index,f,c
  3753  000858                     l2627:
  3754  000858  5015               	movf	hyt221_operation@index,w,c
  3755  00085A  0A80               	xorlw	128
  3756  00085C  0F7C               	addlw	-132
  3757  00085E  A0D8               	btfss	status,0,c
  3758  000860  D7D0               	goto	l2599
  3759                           
  3760                           ;hyt221.c: 104: }
  3761                           ;hyt221.c: 106: i2c_wait_idle();
  3762  000862  ECE4  F006         	call	_i2c_wait_idle	;wreg free
  3763                           
  3764                           ;hyt221.c: 107: i2c_trig_stop();
  3765  000866  EC00  F007         	call	_i2c_trig_stop	;wreg free
  3766                           
  3767                           ;hyt221.c: 109: if (bDeviceDataAreStale == TRUE)
  3768  00086A  0414               	decf	hyt221_operation@bDeviceDataAreStale,w,c
  3769  00086C  A4D8               	btfss	status,2,c
  3770  00086E  D002               	goto	l2639
  3771                           
  3772                           ;hyt221.c: 110: {
  3773                           ;hyt221.c: 111: return STATUS_EBUSY;
  3774  000870  0E02               	movlw	2
  3775  000872  D001               	goto	l391
  3776  000874                     l2639:
  3777                           
  3778                           ;hyt221.c: 112: }
  3779                           ;hyt221.c: 114: return STATUS_OK;
  3780  000874  0E00               	movlw	0
  3781  000876                     l391:
  3782  000876  0012               	return	
  3783  000878                     __end_of_hyt221_operation:
  3784                           	opt stack 0
  3785                           tblptru	equ	0xFF8
  3786                           tblptrh	equ	0xFF7
  3787                           tblptrl	equ	0xFF6
  3788                           tablat	equ	0xFF5
  3789                           prodh	equ	0xFF4
  3790                           prodl	equ	0xFF3
  3791                           intcon	equ	0xFF2
  3792                           postinc0	equ	0xFEE
  3793                           wreg	equ	0xFE8
  3794                           indf1	equ	0xFE7
  3795                           postdec1	equ	0xFE5
  3796                           fsr1h	equ	0xFE2
  3797                           fsr1l	equ	0xFE1
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           postdec2	equ	0xFDD
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function _hyt221_launch_acq *****************
  3806 ;; Defined at:
  3807 ;;		line 20 in file "hyt221.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      enum E3779
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3821 ;;      Params:         0       0       0       0
  3822 ;;      Locals:         0       0       0       0
  3823 ;;      Temps:          0       0       0       0
  3824 ;;      Totals:         0       0       0       0
  3825 ;;Total ram usage:        0 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    3
  3828 ;; This function calls:
  3829 ;;		_i2c_trig_start
  3830 ;;		_i2c_trig_stop
  3831 ;;		_i2c_wait_idle
  3832 ;;		_i2c_wait_ready
  3833 ;;		_leds_red_and_yellow_glitch
  3834 ;; This function is called by:
  3835 ;;		_main_loop
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text23
  3840  000C32                     __ptext23:
  3841                           	opt stack 0
  3842  000C32                     _hyt221_launch_acq:
  3843                           	opt stack 26
  3844                           
  3845                           ;hyt221.c: 22: i2c_trig_start();
  3846                           
  3847                           ;incstack = 0
  3848  000C32  ECFA  F006         	call	_i2c_trig_start	;wreg free
  3849                           
  3850                           ;hyt221.c: 25: SSPBUF = (0x50);
  3851  000C36  0E50               	movlw	80
  3852  000C38  6EC9               	movwf	4041,c	;volatile
  3853                           
  3854                           ;hyt221.c: 27: i2c_wait_ready();
  3855  000C3A  ECDB  F006         	call	_i2c_wait_ready	;wreg free
  3856                           
  3857                           ;hyt221.c: 31: if (SSPCON2bits.ACKSTAT == 1)
  3858  000C3E  ACC5               	btfss	4037,6,c	;volatile
  3859  000C40  D004               	goto	l2551
  3860                           
  3861                           ;hyt221.c: 32: {
  3862                           ;hyt221.c: 33: leds_red_and_yellow_glitch();
  3863  000C42  ECA4  F006         	call	_leds_red_and_yellow_glitch	;wreg free
  3864                           
  3865                           ;hyt221.c: 34: return STATUS_ERROR;
  3866  000C46  0E01               	movlw	1
  3867  000C48  D006               	goto	l387
  3868  000C4A                     l2551:
  3869                           
  3870                           ;hyt221.c: 35: }
  3871                           ;hyt221.c: 37: i2c_wait_idle();
  3872  000C4A  ECE4  F006         	call	_i2c_wait_idle	;wreg free
  3873                           
  3874                           ;hyt221.c: 38: i2c_trig_stop();
  3875  000C4E  EC00  F007         	call	_i2c_trig_stop	;wreg free
  3876                           
  3877                           ;hyt221.c: 39: __nop();
  3878  000C52  F000               	nop	
  3879                           
  3880                           ;hyt221.c: 40: return STATUS_OK;
  3881  000C54  0E00               	movlw	0
  3882  000C56                     l387:
  3883  000C56  0012               	return	
  3884  000C58                     __end_of_hyt221_launch_acq:
  3885                           	opt stack 0
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           prodh	equ	0xFF4
  3891                           prodl	equ	0xFF3
  3892                           intcon	equ	0xFF2
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           indf1	equ	0xFE7
  3896                           postdec1	equ	0xFE5
  3897                           fsr1h	equ	0xFE2
  3898                           fsr1l	equ	0xFE1
  3899                           indf2	equ	0xFDF
  3900                           postinc2	equ	0xFDE
  3901                           postdec2	equ	0xFDD
  3902                           fsr2h	equ	0xFDA
  3903                           fsr2l	equ	0xFD9
  3904                           status	equ	0xFD8
  3905                           
  3906 ;; *************** function _leds_red_and_yellow_glitch *****************
  3907 ;; Defined at:
  3908 ;;		line 43 in file "leds.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;		None               void
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3922 ;;      Params:         0       0       0       0
  3923 ;;      Locals:         0       0       0       0
  3924 ;;      Temps:          1       0       0       0
  3925 ;;      Totals:         1       0       0       0
  3926 ;;Total ram usage:        1 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    1
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_hyt221_launch_acq
  3933 ;;		_hyt221_operation
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text24
  3938  000D48                     __ptext24:
  3939                           	opt stack 0
  3940  000D48                     _leds_red_and_yellow_glitch:
  3941                           	opt stack 27
  3942                           
  3943                           ;leds.c: 45: LATA |= (0x08);
  3944                           
  3945                           ;incstack = 0
  3946  000D48  8689               	bsf	3977,3,c	;volatile
  3947                           
  3948                           ;leds.c: 46: LATA |= (0x04);
  3949  000D4A  8489               	bsf	3977,2,c	;volatile
  3950                           
  3951                           ;leds.c: 47: _delay((unsigned long)((100)*((1000000)/4000.0)));
  3952  000D4C  0E21               	movlw	33
  3953  000D4E  6E11               	movwf	??_leds_red_and_yellow_glitch& (0+255),c
  3954  000D50  0E76               	movlw	118
  3955  000D52                     u1617:
  3956  000D52  2EE8               	decfsz	wreg,f,c
  3957  000D54  D7FE               	goto	u1617
  3958  000D56  2E11               	decfsz	??_leds_red_and_yellow_glitch& (0+255),f,c
  3959  000D58  D7FC               	goto	u1617
  3960  000D5A  D000               	nop2	
  3961                           
  3962                           ;leds.c: 48: LATA &= ~(0x08);
  3963  000D5C  9689               	bcf	3977,3,c	;volatile
  3964                           
  3965                           ;leds.c: 49: LATA &= ~(0x04);
  3966  000D5E  9489               	bcf	3977,2,c	;volatile
  3967  000D60  0012               	return	
  3968  000D62                     __end_of_leds_red_and_yellow_glitch:
  3969                           	opt stack 0
  3970                           tblptru	equ	0xFF8
  3971                           tblptrh	equ	0xFF7
  3972                           tblptrl	equ	0xFF6
  3973                           tablat	equ	0xFF5
  3974                           prodh	equ	0xFF4
  3975                           prodl	equ	0xFF3
  3976                           intcon	equ	0xFF2
  3977                           postinc0	equ	0xFEE
  3978                           wreg	equ	0xFE8
  3979                           indf1	equ	0xFE7
  3980                           postdec1	equ	0xFE5
  3981                           fsr1h	equ	0xFE2
  3982                           fsr1l	equ	0xFE1
  3983                           indf2	equ	0xFDF
  3984                           postinc2	equ	0xFDE
  3985                           postdec2	equ	0xFDD
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           status	equ	0xFD8
  3989                           
  3990 ;; *************** function _i2c_trig_stop *****************
  3991 ;; Defined at:
  3992 ;;		line 61 in file "i2c.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;		None               void
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4006 ;;      Params:         0       0       0       0
  4007 ;;      Locals:         0       0       0       0
  4008 ;;      Temps:          0       0       0       0
  4009 ;;      Totals:         0       0       0       0
  4010 ;;Total ram usage:        0 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    2
  4013 ;; This function calls:
  4014 ;;		_i2c_wait_ready
  4015 ;; This function is called by:
  4016 ;;		_hyt221_launch_acq
  4017 ;;		_hyt221_operation
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text25
  4022  000E00                     __ptext25:
  4023                           	opt stack 0
  4024  000E00                     _i2c_trig_stop:
  4025                           	opt stack 26
  4026                           
  4027                           ;i2c.c: 64: SSPCON2bits.PEN = 1;
  4028                           
  4029                           ;incstack = 0
  4030  000E00  84C5               	bsf	4037,2,c	;volatile
  4031                           
  4032                           ;i2c.c: 65: i2c_wait_ready();
  4033  000E02  ECDB  F006         	call	_i2c_wait_ready	;wreg free
  4034  000E06  0012               	return	
  4035  000E08                     __end_of_i2c_trig_stop:
  4036                           	opt stack 0
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf1	equ	0xFE7
  4047                           postdec1	equ	0xFE5
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           postdec2	equ	0xFDD
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function _i2c_trig_start *****************
  4058 ;; Defined at:
  4059 ;;		line 53 in file "i2c.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;		None               void
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4073 ;;      Params:         0       0       0       0
  4074 ;;      Locals:         0       0       0       0
  4075 ;;      Temps:          0       0       0       0
  4076 ;;      Totals:         0       0       0       0
  4077 ;;Total ram usage:        0 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    2
  4080 ;; This function calls:
  4081 ;;		_i2c_wait_idle
  4082 ;;		_i2c_wait_ready
  4083 ;; This function is called by:
  4084 ;;		_hyt221_launch_acq
  4085 ;;		_hyt221_operation
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text26
  4090  000DF4                     __ptext26:
  4091                           	opt stack 0
  4092  000DF4                     _i2c_trig_start:
  4093                           	opt stack 26
  4094                           
  4095                           ;i2c.c: 55: i2c_wait_idle();
  4096                           
  4097                           ;incstack = 0
  4098  000DF4  ECE4  F006         	call	_i2c_wait_idle	;wreg free
  4099                           
  4100                           ;i2c.c: 57: SSPCON2bits.SEN = 1;
  4101  000DF8  80C5               	bsf	4037,0,c	;volatile
  4102                           
  4103                           ;i2c.c: 58: i2c_wait_ready();
  4104  000DFA  ECDB  F006         	call	_i2c_wait_ready	;wreg free
  4105  000DFE  0012               	return	
  4106  000E00                     __end_of_i2c_trig_start:
  4107                           	opt stack 0
  4108                           tblptru	equ	0xFF8
  4109                           tblptrh	equ	0xFF7
  4110                           tblptrl	equ	0xFF6
  4111                           tablat	equ	0xFF5
  4112                           prodh	equ	0xFF4
  4113                           prodl	equ	0xFF3
  4114                           intcon	equ	0xFF2
  4115                           postinc0	equ	0xFEE
  4116                           wreg	equ	0xFE8
  4117                           indf1	equ	0xFE7
  4118                           postdec1	equ	0xFE5
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _i2c_wait_ready *****************
  4129 ;; Defined at:
  4130 ;;		line 35 in file "i2c.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;		None               void
  4137 ;; Registers used:
  4138 ;;		wreg, status,2
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4144 ;;      Params:         0       0       0       0
  4145 ;;      Locals:         0       0       0       0
  4146 ;;      Temps:          0       0       0       0
  4147 ;;      Totals:         0       0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    1
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_i2c_trig_start
  4155 ;;		_i2c_trig_stop
  4156 ;;		_hyt221_launch_acq
  4157 ;;		_hyt221_operation
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text27
  4162  000DB6                     __ptext27:
  4163                           	opt stack 0
  4164  000DB6                     _i2c_wait_ready:
  4165                           	opt stack 27
  4166                           
  4167                           ;incstack = 0
  4168                           ;i2c.c: 37: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while (0
      +                          );;
  4169  000DB6  8ED3               	bsf	4051,7,c	;volatile
  4170  000DB8  0003               	sleep		;# 
  4171  000DBA  9ED3               	bcf	4051,7,c	;volatile
  4172  000DBC                     l2277:
  4173  000DBC  5045               	movf	_i2c_interupt_done,w,c
  4174  000DBE  B4D8               	btfsc	status,2,c
  4175  000DC0  D7FD               	goto	l2277
  4176                           
  4177                           ;i2c.c: 43: i2c_interupt_done = FALSE;
  4178  000DC2  0E00               	movlw	0
  4179  000DC4  6E45               	movwf	_i2c_interupt_done,c
  4180  000DC6  0012               	return	
  4181  000DC8                     __end_of_i2c_wait_ready:
  4182                           	opt stack 0
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           prodh	equ	0xFF4
  4188                           prodl	equ	0xFF3
  4189                           intcon	equ	0xFF2
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           indf1	equ	0xFE7
  4193                           postdec1	equ	0xFE5
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           indf2	equ	0xFDF
  4197                           postinc2	equ	0xFDE
  4198                           postdec2	equ	0xFDD
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function _i2c_wait_idle *****************
  4204 ;; Defined at:
  4205 ;;		line 46 in file "i2c.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;		None               void
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4219 ;;      Params:         0       0       0       0
  4220 ;;      Locals:         0       0       0       0
  4221 ;;      Temps:          1       0       0       0
  4222 ;;      Totals:         1       0       0       0
  4223 ;;Total ram usage:        1 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    1
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_i2c_trig_start
  4230 ;;		_hyt221_launch_acq
  4231 ;;		_hyt221_operation
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text28
  4236  000DC8                     __ptext28:
  4237                           	opt stack 0
  4238  000DC8                     _i2c_wait_idle:
  4239                           	opt stack 27
  4240  000DC8                     l2283:
  4241  000DC8  CFC5 F011          	movff	4037,??_i2c_wait_idle	;volatile
  4242  000DCC  0E1F               	movlw	31
  4243  000DCE  1611               	andwf	??_i2c_wait_idle,f,c
  4244  000DD0  B4D8               	btfsc	status,2,c
  4245  000DD2  B4C7               	btfsc	4039,2,c	;volatile
  4246  000DD4  D7F9               	goto	l2283
  4247  000DD6  0012               	return	
  4248  000DD8                     __end_of_i2c_wait_idle:
  4249                           	opt stack 0
  4250                           tblptru	equ	0xFF8
  4251                           tblptrh	equ	0xFF7
  4252                           tblptrl	equ	0xFF6
  4253                           tablat	equ	0xFF5
  4254                           prodh	equ	0xFF4
  4255                           prodl	equ	0xFF3
  4256                           intcon	equ	0xFF2
  4257                           postinc0	equ	0xFEE
  4258                           wreg	equ	0xFE8
  4259                           indf1	equ	0xFE7
  4260                           postdec1	equ	0xFE5
  4261                           fsr1h	equ	0xFE2
  4262                           fsr1l	equ	0xFE1
  4263                           indf2	equ	0xFDF
  4264                           postinc2	equ	0xFDE
  4265                           postdec2	equ	0xFDD
  4266                           fsr2h	equ	0xFDA
  4267                           fsr2l	equ	0xFD9
  4268                           status	equ	0xFD8
  4269                           
  4270 ;; *************** function _hyt221_getTemp *****************
  4271 ;; Defined at:
  4272 ;;		line 118 in file "hyt221.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  temp_raw        2   20[COMRAM] unsigned int 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  2   16[COMRAM] unsigned int 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4286 ;;      Params:         2       0       0       0
  4287 ;;      Locals:         2       0       0       0
  4288 ;;      Temps:          2       0       0       0
  4289 ;;      Totals:         6       0       0       0
  4290 ;;Total ram usage:        6 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    1
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_main_loop
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text29
  4301  000B24                     __ptext29:
  4302                           	opt stack 0
  4303  000B24                     _hyt221_getTemp:
  4304                           	opt stack 28
  4305                           
  4306                           ;hyt221.c: 120: uint16_t temp_raw;
  4307                           ;hyt221.c: 121: temp_raw = gData[2];
  4308                           
  4309                           ;incstack = 0
  4310  000B24  5037               	movf	_gData+2,w,c
  4311  000B26  6E15               	movwf	hyt221_getTemp@temp_raw,c
  4312  000B28  6A16               	clrf	hyt221_getTemp@temp_raw+1,c
  4313  000B2A  BE15               	btfsc	hyt221_getTemp@temp_raw,7,c
  4314  000B2C  0616               	decf	hyt221_getTemp@temp_raw+1,f,c
  4315                           
  4316                           ;hyt221.c: 122: temp_raw = temp_raw << 8;
  4317  000B2E  5015               	movf	hyt221_getTemp@temp_raw,w,c
  4318  000B30  6E16               	movwf	hyt221_getTemp@temp_raw+1,c
  4319  000B32  6A15               	clrf	hyt221_getTemp@temp_raw,c
  4320                           
  4321                           ;hyt221.c: 123: temp_raw += gData[3];
  4322  000B34  5038               	movf	_gData+3,w,c
  4323  000B36  2615               	addwf	hyt221_getTemp@temp_raw,f,c
  4324  000B38  0E00               	movlw	0
  4325  000B3A  BE38               	btfsc	_gData+3,7,c
  4326  000B3C  0EFF               	movlw	255
  4327  000B3E  2216               	addwfc	hyt221_getTemp@temp_raw+1,f,c
  4328                           
  4329                           ;hyt221.c: 124: temp_raw = temp_raw >> 2;
  4330  000B40  C015  F013         	movff	hyt221_getTemp@temp_raw,??_hyt221_getTemp
  4331  000B44  C016  F014         	movff	hyt221_getTemp@temp_raw+1,??_hyt221_getTemp+1
  4332  000B48  90D8               	bcf	status,0,c
  4333  000B4A  3214               	rrcf	??_hyt221_getTemp+1,f,c
  4334  000B4C  3213               	rrcf	??_hyt221_getTemp,f,c
  4335  000B4E  90D8               	bcf	status,0,c
  4336  000B50  3214               	rrcf	??_hyt221_getTemp+1,f,c
  4337  000B52  3213               	rrcf	??_hyt221_getTemp,f,c
  4338  000B54  C013  F015         	movff	??_hyt221_getTemp,hyt221_getTemp@temp_raw
  4339  000B58  C014  F016         	movff	??_hyt221_getTemp+1,hyt221_getTemp@temp_raw+1
  4340                           
  4341                           ;hyt221.c: 125: return temp_raw;
  4342  000B5C  C015  F011         	movff	hyt221_getTemp@temp_raw,?_hyt221_getTemp
  4343  000B60  C016  F012         	movff	hyt221_getTemp@temp_raw+1,?_hyt221_getTemp+1
  4344  000B64  0012               	return	
  4345  000B66                     __end_of_hyt221_getTemp:
  4346                           	opt stack 0
  4347                           tblptru	equ	0xFF8
  4348                           tblptrh	equ	0xFF7
  4349                           tblptrl	equ	0xFF6
  4350                           tablat	equ	0xFF5
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           intcon	equ	0xFF2
  4354                           postinc0	equ	0xFEE
  4355                           wreg	equ	0xFE8
  4356                           indf1	equ	0xFE7
  4357                           postdec1	equ	0xFE5
  4358                           fsr1h	equ	0xFE2
  4359                           fsr1l	equ	0xFE1
  4360                           indf2	equ	0xFDF
  4361                           postinc2	equ	0xFDE
  4362                           postdec2	equ	0xFDD
  4363                           fsr2h	equ	0xFDA
  4364                           fsr2l	equ	0xFD9
  4365                           status	equ	0xFD8
  4366                           
  4367 ;; *************** function _hyt221_getHumidity *****************
  4368 ;; Defined at:
  4369 ;;		line 128 in file "hyt221.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  humidity_raw    2   18[COMRAM] unsigned int 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  2   16[COMRAM] unsigned int 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4383 ;;      Params:         2       0       0       0
  4384 ;;      Locals:         2       0       0       0
  4385 ;;      Temps:          0       0       0       0
  4386 ;;      Totals:         4       0       0       0
  4387 ;;Total ram usage:        4 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_main_loop
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text30
  4398  000CA0                     __ptext30:
  4399                           	opt stack 0
  4400  000CA0                     _hyt221_getHumidity:
  4401                           	opt stack 28
  4402                           
  4403                           ;hyt221.c: 130: uint16_t humidity_raw;
  4404                           ;hyt221.c: 131: humidity_raw = (gData[0] & 0x3F);
  4405                           
  4406                           ;incstack = 0
  4407  000CA0  0E3F               	movlw	63
  4408  000CA2  1435               	andwf	_gData,w,c
  4409  000CA4  6E13               	movwf	hyt221_getHumidity@humidity_raw,c
  4410  000CA6  6A14               	clrf	hyt221_getHumidity@humidity_raw+1,c
  4411                           
  4412                           ;hyt221.c: 132: humidity_raw = humidity_raw << 8;
  4413  000CA8  5013               	movf	hyt221_getHumidity@humidity_raw,w,c
  4414  000CAA  6E14               	movwf	hyt221_getHumidity@humidity_raw+1,c
  4415  000CAC  6A13               	clrf	hyt221_getHumidity@humidity_raw,c
  4416                           
  4417                           ;hyt221.c: 133: humidity_raw += gData[1];
  4418  000CAE  5036               	movf	_gData+1,w,c
  4419  000CB0  2613               	addwf	hyt221_getHumidity@humidity_raw,f,c
  4420  000CB2  0E00               	movlw	0
  4421  000CB4  BE36               	btfsc	_gData+1,7,c
  4422  000CB6  0EFF               	movlw	255
  4423  000CB8  2214               	addwfc	hyt221_getHumidity@humidity_raw+1,f,c
  4424                           
  4425                           ;hyt221.c: 135: return humidity_raw;
  4426  000CBA  C013  F011         	movff	hyt221_getHumidity@humidity_raw,?_hyt221_getHumidity
  4427  000CBE  C014  F012         	movff	hyt221_getHumidity@humidity_raw+1,?_hyt221_getHumidity+1
  4428  000CC2  0012               	return	
  4429  000CC4                     __end_of_hyt221_getHumidity:
  4430                           	opt stack 0
  4431                           tblptru	equ	0xFF8
  4432                           tblptrh	equ	0xFF7
  4433                           tblptrl	equ	0xFF6
  4434                           tablat	equ	0xFF5
  4435                           prodh	equ	0xFF4
  4436                           prodl	equ	0xFF3
  4437                           intcon	equ	0xFF2
  4438                           postinc0	equ	0xFEE
  4439                           wreg	equ	0xFE8
  4440                           indf1	equ	0xFE7
  4441                           postdec1	equ	0xFE5
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           indf2	equ	0xFDF
  4445                           postinc2	equ	0xFDE
  4446                           postdec2	equ	0xFDD
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _batt_launch_acq *****************
  4452 ;; Defined at:
  4453 ;;		line 191 in file "main.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;		None               void
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4467 ;;      Params:         0       0       0       0
  4468 ;;      Locals:         0       0       0       0
  4469 ;;      Temps:          2       0       0       0
  4470 ;;      Totals:         2       0       0       0
  4471 ;;Total ram usage:        2 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    2
  4474 ;; This function calls:
  4475 ;;		_zb_handle_setbatVolt
  4476 ;; This function is called by:
  4477 ;;		_main_loop
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text31
  4482  000AE0                     __ptext31:
  4483                           	opt stack 0
  4484  000AE0                     _batt_launch_acq:
  4485                           	opt stack 27
  4486                           
  4487                           ;main.c: 193: LATBbits.LATB1 = 1;
  4488                           
  4489                           ;incstack = 0
  4490  000AE0  828A               	bsf	3978,1,c	;volatile
  4491                           
  4492                           ;main.c: 194: ADCON1 = 0x00;
  4493  000AE2  0E00               	movlw	0
  4494  000AE4  6EC1               	movwf	4033,c	;volatile
  4495                           
  4496                           ;main.c: 195: ADCON0 = 0x20;
  4497  000AE6  0E20               	movlw	32
  4498  000AE8  6EC2               	movwf	4034,c	;volatile
  4499                           
  4500                           ;main.c: 196: ADCON2 = 0x8B;
  4501  000AEA  0E8B               	movlw	139
  4502  000AEC  6EC0               	movwf	4032,c	;volatile
  4503                           
  4504                           ;main.c: 197: ADCON0 |= 0x01;
  4505  000AEE  80C2               	bsf	4034,0,c	;volatile
  4506                           
  4507                           ;main.c: 198: ADCON0 |= 0x02 ;
  4508  000AF0  82C2               	bsf	4034,1,c	;volatile
  4509                           
  4510                           ;main.c: 200: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  4511  000AF2  8ED3               	bsf	4051,7,c	;volatile
  4512  000AF4  0003               	sleep		;# 
  4513  000AF6  9ED3               	bcf	4051,7,c	;volatile
  4514  000AF8                     l135:
  4515  000AF8  B2C2               	btfsc	4034,1,c	;volatile
  4516  000AFA  D7FE               	goto	l135
  4517                           
  4518                           ;main.c: 205: batt_value = (ADRESH << 8) | ADRESL;
  4519  000AFC  50C3               	movf	4035,w,c	;volatile
  4520  000AFE  CFC4 F013          	movff	4036,??_batt_launch_acq	;volatile
  4521  000B02  6A14               	clrf	(??_batt_launch_acq+1)& (0+255),c
  4522  000B04  C013  F014         	movff	??_batt_launch_acq,??_batt_launch_acq+1
  4523  000B08  6A13               	clrf	??_batt_launch_acq,c
  4524  000B0A  1013               	iorwf	??_batt_launch_acq,w,c
  4525  000B0C  6E3F               	movwf	_batt_value,c
  4526  000B0E  5014               	movf	??_batt_launch_acq+1,w,c
  4527  000B10  6E40               	movwf	_batt_value+1,c
  4528                           
  4529                           ;main.c: 206: LATBbits.LATB1 = 0;
  4530  000B12  928A               	bcf	3978,1,c	;volatile
  4531                           
  4532                           ;main.c: 207: ADCON0 &= ~0x01;
  4533  000B14  90C2               	bcf	4034,0,c	;volatile
  4534                           
  4535                           ;main.c: 208: zb_handle_setbatVolt(batt_value);
  4536  000B16  C03F  F011         	movff	_batt_value,zb_handle_setbatVolt@battVoltage
  4537  000B1A  C040  F012         	movff	_batt_value+1,zb_handle_setbatVolt@battVoltage+1
  4538  000B1E  ECF3  F006         	call	_zb_handle_setbatVolt	;wreg free
  4539  000B22  0012               	return	
  4540  000B24                     __end_of_batt_launch_acq:
  4541                           	opt stack 0
  4542                           tblptru	equ	0xFF8
  4543                           tblptrh	equ	0xFF7
  4544                           tblptrl	equ	0xFF6
  4545                           tablat	equ	0xFF5
  4546                           prodh	equ	0xFF4
  4547                           prodl	equ	0xFF3
  4548                           intcon	equ	0xFF2
  4549                           postinc0	equ	0xFEE
  4550                           wreg	equ	0xFE8
  4551                           indf1	equ	0xFE7
  4552                           postdec1	equ	0xFE5
  4553                           fsr1h	equ	0xFE2
  4554                           fsr1l	equ	0xFE1
  4555                           indf2	equ	0xFDF
  4556                           postinc2	equ	0xFDE
  4557                           postdec2	equ	0xFDD
  4558                           fsr2h	equ	0xFDA
  4559                           fsr2l	equ	0xFD9
  4560                           status	equ	0xFD8
  4561                           
  4562 ;; *************** function _zb_handle_setbatVolt *****************
  4563 ;; Defined at:
  4564 ;;		line 111 in file "zb_handle.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  battVoltage     2   16[COMRAM] unsigned int 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;		None               void
  4571 ;; Registers used:
  4572 ;;		wreg, status,2
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4578 ;;      Params:         2       0       0       0
  4579 ;;      Locals:         0       0       0       0
  4580 ;;      Temps:          0       0       0       0
  4581 ;;      Totals:         2       0       0       0
  4582 ;;Total ram usage:        2 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_batt_launch_acq
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text32
  4593  000DE6                     __ptext32:
  4594                           	opt stack 0
  4595  000DE6                     _zb_handle_setbatVolt:
  4596                           	opt stack 27
  4597                           
  4598                           ;zb_handle.c: 113: sensor_data.battRaw = battVoltage;
  4599                           
  4600                           ;incstack = 0
  4601  000DE6  C011  F032         	movff	zb_handle_setbatVolt@battVoltage,_sensor_data+6
  4602  000DEA  C012  F033         	movff	zb_handle_setbatVolt@battVoltage+1,_sensor_data+7
  4603                           
  4604                           ;zb_handle.c: 114: sensor_data.battStatus = (0x03);
  4605  000DEE  0E03               	movlw	3
  4606  000DF0  6E34               	movwf	_sensor_data+8,c
  4607  000DF2  0012               	return	
  4608  000DF4                     __end_of_zb_handle_setbatVolt:
  4609                           	opt stack 0
  4610                           tblptru	equ	0xFF8
  4611                           tblptrh	equ	0xFF7
  4612                           tblptrl	equ	0xFF6
  4613                           tablat	equ	0xFF5
  4614                           prodh	equ	0xFF4
  4615                           prodl	equ	0xFF3
  4616                           intcon	equ	0xFF2
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           indf1	equ	0xFE7
  4620                           postdec1	equ	0xFE5
  4621                           fsr1h	equ	0xFE2
  4622                           fsr1l	equ	0xFE1
  4623                           indf2	equ	0xFDF
  4624                           postinc2	equ	0xFDE
  4625                           postdec2	equ	0xFDD
  4626                           fsr2h	equ	0xFDA
  4627                           fsr2l	equ	0xFD9
  4628                           status	equ	0xFD8
  4629                           
  4630 ;; *************** function _i2c_setup *****************
  4631 ;; Defined at:
  4632 ;;		line 9 in file "i2c.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;		None               void
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4646 ;;      Params:         0       0       0       0
  4647 ;;      Locals:         0       0       0       0
  4648 ;;      Temps:          0       0       0       0
  4649 ;;      Totals:         0       0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_main
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text33
  4661  000BD8                     __ptext33:
  4662                           	opt stack 0
  4663  000BD8                     _i2c_setup:
  4664                           	opt stack 29
  4665                           
  4666                           ;i2c.c: 15: TRISC &= ~0x18;
  4667                           
  4668                           ;incstack = 0
  4669  000BD8  0EE7               	movlw	231
  4670  000BDA  1694               	andwf	3988,f,c	;volatile
  4671                           
  4672                           ;i2c.c: 16: LATCbits.LATC3 = 0;
  4673  000BDC  968B               	bcf	3979,3,c	;volatile
  4674                           
  4675                           ;i2c.c: 17: LATCbits.LATC4 = 0;
  4676  000BDE  988B               	bcf	3979,4,c	;volatile
  4677                           
  4678                           ;i2c.c: 18: _delay((unsigned long)((100)*((1000000)/4000000.0)));
  4679  000BE0  0E08               	movlw	8
  4680  000BE2                     u1627:
  4681  000BE2  2EE8               	decfsz	wreg,f,c
  4682  000BE4  D7FE               	goto	u1627
  4683  000BE6  F000               	nop	
  4684                           
  4685                           ;i2c.c: 20: TRISC |= 0x18;
  4686  000BE8  0E18               	movlw	24
  4687  000BEA  1294               	iorwf	3988,f,c	;volatile
  4688                           
  4689                           ;i2c.c: 23: SSPSTAT = 0x80;
  4690  000BEC  0E80               	movlw	128
  4691  000BEE  6EC7               	movwf	4039,c	;volatile
  4692                           
  4693                           ;i2c.c: 24: SSPADD = 0x01;
  4694  000BF0  0E01               	movlw	1
  4695  000BF2  6EC8               	movwf	4040,c	;volatile
  4696                           
  4697                           ;i2c.c: 25: SSPCON1 = 0x28;
  4698  000BF4  0E28               	movlw	40
  4699  000BF6  6EC6               	movwf	4038,c	;volatile
  4700                           
  4701                           ;i2c.c: 26: SSPCON2 = 0x00;
  4702  000BF8  0E00               	movlw	0
  4703  000BFA  6EC5               	movwf	4037,c	;volatile
  4704                           
  4705                           ;i2c.c: 29: i2c_interupt_done = FALSE;
  4706  000BFC  0E00               	movlw	0
  4707  000BFE  6E45               	movwf	_i2c_interupt_done,c
  4708                           
  4709                           ;i2c.c: 30: PIR1bits.SSPIF = 0;
  4710  000C00  969E               	bcf	3998,3,c	;volatile
  4711                           
  4712                           ;i2c.c: 31: PIR2bits.BCLIF = 0;
  4713  000C02  96A1               	bcf	4001,3,c	;volatile
  4714                           
  4715                           ;i2c.c: 32: PIE1bits.SSPIE = 1;
  4716  000C04  869D               	bsf	3997,3,c	;volatile
  4717  000C06  0012               	return	
  4718  000C08                     __end_of_i2c_setup:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           prodh	equ	0xFF4
  4725                           prodl	equ	0xFF3
  4726                           intcon	equ	0xFF2
  4727                           postinc0	equ	0xFEE
  4728                           wreg	equ	0xFE8
  4729                           indf1	equ	0xFE7
  4730                           postdec1	equ	0xFE5
  4731                           fsr1h	equ	0xFE2
  4732                           fsr1l	equ	0xFE1
  4733                           indf2	equ	0xFDF
  4734                           postinc2	equ	0xFDE
  4735                           postdec2	equ	0xFDD
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _calibration *****************
  4741 ;; Defined at:
  4742 ;;		line 12 in file "osc.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  w               1   19[COMRAM] char 
  4747 ;;  tryCounter      1   18[COMRAM] char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;		None               void
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4757 ;;      Params:         0       0       0       0
  4758 ;;      Locals:         2       0       0       0
  4759 ;;      Temps:          1       0       0       0
  4760 ;;      Totals:         3       0       0       0
  4761 ;;Total ram usage:        3 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    2
  4764 ;; This function calls:
  4765 ;;		_leds_red_glitch
  4766 ;; This function is called by:
  4767 ;;		_main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text34
  4772  00071C                     __ptext34:
  4773                           	opt stack 0
  4774  00071C                     _calibration:
  4775                           	opt stack 28
  4776                           
  4777                           ;osc.c: 14: int8_t w;
  4778                           ;osc.c: 15: int8_t tryCounter;
  4779                           ;osc.c: 17: T1CON = 0x0F;
  4780                           
  4781                           ;incstack = 0
  4782  00071C  0E0F               	movlw	15
  4783  00071E  6ECD               	movwf	4045,c	;volatile
  4784                           
  4785                           ;osc.c: 18: tryCounter = 0;
  4786  000720  0E00               	movlw	0
  4787  000722  6E13               	movwf	calibration@tryCounter,c
  4788                           
  4789                           ;osc.c: 19: while (tryCounter < 32)
  4790  000724  D035               	goto	l462
  4791  000726                     l2737:
  4792                           
  4793                           ;osc.c: 20: {
  4794                           ;osc.c: 21: calibr = 0;
  4795  000726  0E00               	movlw	0
  4796  000728  6E44               	movwf	_calibr,c	;volatile
  4797                           
  4798                           ;osc.c: 22: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4799  00072A  0E52               	movlw	82
  4800  00072C  6E12               	movwf	??_calibration& (0+255),c
  4801  00072E  0E2A               	movlw	42
  4802  000730                     u1637:
  4803  000730  2EE8               	decfsz	wreg,f,c
  4804  000732  D7FE               	goto	u1637
  4805  000734  2E12               	decfsz	??_calibration& (0+255),f,c
  4806  000736  D7FC               	goto	u1637
  4807                           
  4808                           ;osc.c: 23: T1CON = 0x0F;
  4809  000738  0E0F               	movlw	15
  4810  00073A  6ECD               	movwf	4045,c	;volatile
  4811                           
  4812                           ;osc.c: 26: TMR1H = 0xFF;
  4813  00073C  68CF               	setf	4047,c	;volatile
  4814                           
  4815                           ;osc.c: 27: TMR1L = 0xE7;
  4816  00073E  0EE7               	movlw	231
  4817  000740  6ECE               	movwf	4046,c	;volatile
  4818                           
  4819                           ;osc.c: 28: PIR1bits.TMR1IF = 0;
  4820  000742  909E               	bcf	3998,0,c	;volatile
  4821                           
  4822                           ;osc.c: 31: while (PIR1bits.TMR1IF == 0)
  4823  000744  D001               	goto	l2751
  4824  000746                     l2749:
  4825                           
  4826                           ;osc.c: 32: {
  4827                           ;osc.c: 33: calibr++;
  4828  000746  2A44               	incf	_calibr,f,c	;volatile
  4829  000748                     l2751:
  4830  000748  A09E               	btfss	3998,0,c	;volatile
  4831  00074A  D7FD               	goto	l2749
  4832                           
  4833                           ;osc.c: 34: }
  4834                           ;osc.c: 36: w = ((int8_t)(0x30)) - calibr;
  4835  00074C  5044               	movf	_calibr,w,c
  4836  00074E  0800               	sublw	0
  4837  000750  0F30               	addlw	48
  4838  000752  6E14               	movwf	calibration@w,c
  4839                           
  4840                           ;osc.c: 37: if (w > 0)
  4841  000754  5014               	movf	calibration@w,w,c
  4842  000756  0A80               	xorlw	128
  4843  000758  0F7F               	addlw	-129
  4844  00075A  A0D8               	btfss	status,0,c
  4845  00075C  D009               	goto	l2759
  4846                           
  4847                           ;osc.c: 38: {
  4848                           ;osc.c: 40: w -= ((int8_t) (2));
  4849  00075E  0EFE               	movlw	254
  4850  000760  2614               	addwf	calibration@w,f,c
  4851                           
  4852                           ;osc.c: 41: if (w > 0)
  4853  000762  5014               	movf	calibration@w,w,c
  4854  000764  0A80               	xorlw	128
  4855  000766  0F7F               	addlw	-129
  4856  000768  A0D8               	btfss	status,0,c
  4857  00076A  D017               	goto	l2767
  4858                           
  4859                           ;osc.c: 42: {
  4860                           ;osc.c: 44: OSCTUNE = (OSCTUNE + 1) & 0x1F;
  4861  00076C  289B               	incf	3995,w,c	;volatile
  4862  00076E  D00A               	goto	L10
  4863  000770                     l2759:
  4864                           
  4865                           ;osc.c: 51: else
  4866                           ;osc.c: 52: {
  4867                           ;osc.c: 54: w = ((int8_t) (2)) - w;
  4868  000770  5014               	movf	calibration@w,w,c
  4869  000772  0800               	sublw	0
  4870  000774  0F02               	addlw	2
  4871  000776  6E14               	movwf	calibration@w,c
  4872                           
  4873                           ;osc.c: 55: if (w > 0)
  4874  000778  5014               	movf	calibration@w,w,c
  4875  00077A  0A80               	xorlw	128
  4876  00077C  0F7F               	addlw	-129
  4877  00077E  A0D8               	btfss	status,0,c
  4878  000780  D00C               	goto	l2767
  4879                           
  4880                           ;osc.c: 56: {
  4881                           ;osc.c: 57: OSCTUNE = (OSCTUNE - 1) & 0x1F;
  4882  000782  049B               	decf	3995,w,c	;volatile
  4883  000784                     L10:
  4884  000784  0B1F               	andlw	31
  4885  000786  6E9B               	movwf	3995,c	;volatile
  4886                           
  4887                           ;osc.c: 62: }
  4888                           ;osc.c: 63: }
  4889                           ;osc.c: 64: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4890                           
  4891                           ;osc.c: 59: else
  4892                           ;osc.c: 60: {
  4893                           ;osc.c: 61: break;
  4894                           
  4895                           ;osc.c: 58: }
  4896  000788  0E19               	movlw	25
  4897  00078A                     u1647:
  4898  00078A  2EE8               	decfsz	wreg,f,c
  4899  00078C  D7FE               	goto	u1647
  4900                           
  4901                           ;osc.c: 65: tryCounter++;
  4902  00078E  2A13               	incf	calibration@tryCounter,f,c
  4903  000790                     l462:
  4904  000790  5013               	movf	calibration@tryCounter,w,c
  4905  000792  0A80               	xorlw	128
  4906  000794  0F60               	addlw	-160
  4907  000796  A0D8               	btfss	status,0,c
  4908  000798  D7C6               	goto	l2737
  4909  00079A                     l2767:
  4910                           
  4911                           ;osc.c: 66: }
  4912                           ;osc.c: 68: if (tryCounter >= 32)
  4913  00079A  5013               	movf	calibration@tryCounter,w,c
  4914  00079C  0A80               	xorlw	128
  4915  00079E  0F60               	addlw	-160
  4916  0007A0  A0D8               	btfss	status,0,c
  4917  0007A2  D019               	goto	l2783
  4918                           
  4919                           ;osc.c: 69: {
  4920                           ;osc.c: 70: OSCTUNE = 0;
  4921  0007A4  0E00               	movlw	0
  4922  0007A6  6E9B               	movwf	3995,c	;volatile
  4923                           
  4924                           ;osc.c: 71: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4925  0007A8  0E19               	movlw	25
  4926  0007AA                     u1657:
  4927  0007AA  2EE8               	decfsz	wreg,f,c
  4928  0007AC  D7FE               	goto	u1657
  4929                           
  4930                           ;osc.c: 72: leds_red_glitch();
  4931  0007AE  ECC7  F006         	call	_leds_red_glitch	;wreg free
  4932                           
  4933                           ;osc.c: 73: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4934  0007B2  0E52               	movlw	82
  4935  0007B4  6E12               	movwf	??_calibration& (0+255),c
  4936  0007B6  0E2A               	movlw	42
  4937  0007B8                     u1667:
  4938  0007B8  2EE8               	decfsz	wreg,f,c
  4939  0007BA  D7FE               	goto	u1667
  4940  0007BC  2E12               	decfsz	??_calibration& (0+255),f,c
  4941  0007BE  D7FC               	goto	u1667
  4942                           
  4943                           ;osc.c: 74: leds_red_glitch();
  4944  0007C0  ECC7  F006         	call	_leds_red_glitch	;wreg free
  4945                           
  4946                           ;osc.c: 75: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4947  0007C4  0E52               	movlw	82
  4948  0007C6  6E12               	movwf	??_calibration& (0+255),c
  4949  0007C8  0E2A               	movlw	42
  4950  0007CA                     u1677:
  4951  0007CA  2EE8               	decfsz	wreg,f,c
  4952  0007CC  D7FE               	goto	u1677
  4953  0007CE  2E12               	decfsz	??_calibration& (0+255),f,c
  4954  0007D0  D7FC               	goto	u1677
  4955                           
  4956                           ;osc.c: 76: leds_red_glitch();
  4957  0007D2  ECC7  F006         	call	_leds_red_glitch	;wreg free
  4958  0007D6                     l2783:
  4959                           
  4960                           ;osc.c: 77: }
  4961                           ;osc.c: 80: T1CON = 0;
  4962  0007D6  0E00               	movlw	0
  4963  0007D8  6ECD               	movwf	4045,c	;volatile
  4964  0007DA  0012               	return	
  4965  0007DC                     __end_of_calibration:
  4966                           	opt stack 0
  4967                           tblptru	equ	0xFF8
  4968                           tblptrh	equ	0xFF7
  4969                           tblptrl	equ	0xFF6
  4970                           tablat	equ	0xFF5
  4971                           prodh	equ	0xFF4
  4972                           prodl	equ	0xFF3
  4973                           intcon	equ	0xFF2
  4974                           postinc0	equ	0xFEE
  4975                           wreg	equ	0xFE8
  4976                           indf1	equ	0xFE7
  4977                           postdec1	equ	0xFE5
  4978                           fsr1h	equ	0xFE2
  4979                           fsr1l	equ	0xFE1
  4980                           indf2	equ	0xFDF
  4981                           postinc2	equ	0xFDE
  4982                           postdec2	equ	0xFDD
  4983                           fsr2h	equ	0xFDA
  4984                           fsr2l	equ	0xFD9
  4985                           status	equ	0xFD8
  4986                           
  4987 ;; *************** function _leds_red_glitch *****************
  4988 ;; Defined at:
  4989 ;;		line 21 in file "leds.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;		None               void
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5003 ;;      Params:         0       0       0       0
  5004 ;;      Locals:         0       0       0       0
  5005 ;;      Temps:          1       0       0       0
  5006 ;;      Totals:         1       0       0       0
  5007 ;;Total ram usage:        1 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    1
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_main_loop
  5014 ;;		_calibration
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text35
  5019  000D8E                     __ptext35:
  5020                           	opt stack 0
  5021  000D8E                     _leds_red_glitch:
  5022                           	opt stack 28
  5023                           
  5024                           ;leds.c: 23: LATA |= (0x08);
  5025                           
  5026                           ;incstack = 0
  5027  000D8E  8689               	bsf	3977,3,c	;volatile
  5028                           
  5029                           ;leds.c: 24: _delay((unsigned long)((100)*((1000000)/4000.0)));
  5030  000D90  0E21               	movlw	33
  5031  000D92  6E11               	movwf	??_leds_red_glitch& (0+255),c
  5032  000D94  0E76               	movlw	118
  5033  000D96                     u1687:
  5034  000D96  2EE8               	decfsz	wreg,f,c
  5035  000D98  D7FE               	goto	u1687
  5036  000D9A  2E11               	decfsz	??_leds_red_glitch& (0+255),f,c
  5037  000D9C  D7FC               	goto	u1687
  5038  000D9E  D000               	nop2	
  5039                           
  5040                           ;leds.c: 25: LATA &= ~(0x08);
  5041  000DA0  9689               	bcf	3977,3,c	;volatile
  5042  000DA2  0012               	return	
  5043  000DA4                     __end_of_leds_red_glitch:
  5044                           	opt stack 0
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           intcon	equ	0xFF2
  5052                           postinc0	equ	0xFEE
  5053                           wreg	equ	0xFE8
  5054                           indf1	equ	0xFE7
  5055                           postdec1	equ	0xFE5
  5056                           fsr1h	equ	0xFE2
  5057                           fsr1l	equ	0xFE1
  5058                           indf2	equ	0xFDF
  5059                           postinc2	equ	0xFDE
  5060                           postdec2	equ	0xFDD
  5061                           fsr2h	equ	0xFDA
  5062                           fsr2l	equ	0xFD9
  5063                           status	equ	0xFD8
  5064                           
  5065 ;; *************** function _isr_hi *****************
  5066 ;; Defined at:
  5067 ;;		line 17 in file "interrupt.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  dummy           1   15[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;		None               void
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5081 ;;      Params:         0       0       0       0
  5082 ;;      Locals:         1       0       0       0
  5083 ;;      Temps:         15       0       0       0
  5084 ;;      Totals:        16       0       0       0
  5085 ;;Total ram usage:       16 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		Interrupt level 2
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	intcode
  5095  000008                     __pintcode:
  5096                           	opt stack 0
  5097  000008                     _isr_hi:
  5098                           	opt stack 25
  5099                           
  5100                           ;incstack = 0
  5101  000008  CFFA F002          	movff	pclath,??_isr_hi+1
  5102  00000C  CFFB F003          	movff	pclatu,??_isr_hi+2
  5103  000010  CFE9 F004          	movff	fsr0l,??_isr_hi+3
  5104  000014  EDE7  F001         	call	int_func,f	;refresh shadow registers
  5105                           pclatu	equ	0xFFB
  5106                           pclath	equ	0xFFA
  5107                           tblptru	equ	0xFF8
  5108                           tblptrh	equ	0xFF7
  5109                           tblptrl	equ	0xFF6
  5110                           tablat	equ	0xFF5
  5111                           prodh	equ	0xFF4
  5112                           prodl	equ	0xFF3
  5113                           intcon	equ	0xFF2
  5114                           postinc0	equ	0xFEE
  5115                           fsr0l	equ	0xFE9
  5116                           wreg	equ	0xFE8
  5117                           indf1	equ	0xFE7
  5118                           postdec1	equ	0xFE5
  5119                           fsr1h	equ	0xFE2
  5120                           fsr1l	equ	0xFE1
  5121                           indf2	equ	0xFDF
  5122                           postinc2	equ	0xFDE
  5123                           postdec2	equ	0xFDD
  5124                           fsr2h	equ	0xFDA
  5125                           fsr2l	equ	0xFD9
  5126                           status	equ	0xFD8
  5127                           
  5128                           	psect	intcode_body
  5129  0003CE                     __pintcode_body:
  5130                           	opt stack 25
  5131  0003CE                     int_func:
  5132                           	opt stack 25
  5133  0003CE  0006               	pop		; remove dummy address from shadow register refresh
  5134  0003D0  CFEA F005          	movff	fsr0h,??_isr_hi+4
  5135  0003D4  CFE1 F006          	movff	fsr1l,??_isr_hi+5
  5136  0003D8  CFE2 F007          	movff	fsr1h,??_isr_hi+6
  5137  0003DC  CFD9 F008          	movff	fsr2l,??_isr_hi+7
  5138  0003E0  CFDA F009          	movff	fsr2h,??_isr_hi+8
  5139  0003E4  CFF3 F00A          	movff	prodl,??_isr_hi+9
  5140  0003E8  CFF4 F00B          	movff	prodh,??_isr_hi+10
  5141  0003EC  CFF6 F00C          	movff	tblptrl,??_isr_hi+11
  5142  0003F0  CFF7 F00D          	movff	tblptrh,??_isr_hi+12
  5143  0003F4  CFF8 F00E          	movff	tblptru,??_isr_hi+13
  5144  0003F8  CFF5 F00F          	movff	tablat,??_isr_hi+14
  5145                           
  5146                           ;interrupt.c: 20: if (PIE1bits.SSPIE & PIR1bits.SSPIF)
  5147  0003FC  0E01               	movlw	1
  5148  0003FE  A69D               	btfss	3997,3,c	;volatile
  5149  000400  0E00               	movlw	0
  5150  000402  A69E               	btfss	3998,3,c	;volatile
  5151  000404  0E00               	movlw	0
  5152  000406  A0E8               	btfss	wreg,0,c
  5153  000408  D003               	goto	i2u95_40
  5154  00040A  6A01               	clrf	??_isr_hi& (0+255),c
  5155  00040C  2A01               	incf	??_isr_hi& (0+255),f,c
  5156  00040E  D001               	goto	i2u95_48
  5157  000410                     i2u95_40:
  5158  000410  6A01               	clrf	??_isr_hi& (0+255),c
  5159  000412                     i2u95_48:
  5160  000412  5001               	movf	??_isr_hi,w,c
  5161  000414  B4D8               	btfsc	status,2,c
  5162  000416  D004               	goto	i2l2219
  5163                           
  5164                           ;interrupt.c: 21: {
  5165                           ;interrupt.c: 22: PIR1bits.SSPIF = 0;
  5166  000418  969E               	bcf	3998,3,c	;volatile
  5167                           
  5168                           ;interrupt.c: 23: i2c_interupt_done = TRUE;
  5169  00041A  0E01               	movlw	1
  5170  00041C  6E45               	movwf	_i2c_interupt_done,c
  5171  00041E  D059               	goto	i2l433
  5172  000420                     i2l2219:
  5173                           
  5174                           ;interrupt.c: 25: }
  5175                           ;interrupt.c: 28: if (INTCONbits.TMR0IE & INTCONbits.TMR0IF)
  5176  000420  0E01               	movlw	1
  5177  000422  AAF2               	btfss	intcon,5,c	;volatile
  5178  000424  0E00               	movlw	0
  5179  000426  A4F2               	btfss	intcon,2,c	;volatile
  5180  000428  0E00               	movlw	0
  5181  00042A  A0E8               	btfss	wreg,0,c
  5182  00042C  D003               	goto	i2u97_40
  5183  00042E  6A01               	clrf	??_isr_hi& (0+255),c
  5184  000430  2A01               	incf	??_isr_hi& (0+255),f,c
  5185  000432  D001               	goto	i2u97_48
  5186  000434                     i2u97_40:
  5187  000434  6A01               	clrf	??_isr_hi& (0+255),c
  5188  000436                     i2u97_48:
  5189  000436  5001               	movf	??_isr_hi,w,c
  5190  000438  B4D8               	btfsc	status,2,c
  5191  00043A  D004               	goto	i2l2227
  5192                           
  5193                           ;interrupt.c: 29: {
  5194                           ;interrupt.c: 30: timer0_interupt_done = TRUE;
  5195  00043C  0E01               	movlw	1
  5196  00043E  6E47               	movwf	_timer0_interupt_done,c
  5197                           
  5198                           ;interrupt.c: 49: INTCONbits.TMR0IF = 0;
  5199  000440  94F2               	bcf	intcon,2,c	;volatile
  5200  000442  D047               	goto	i2l433
  5201  000444                     i2l2227:
  5202                           
  5203                           ;interrupt.c: 51: }
  5204                           ;interrupt.c: 54: if (PIE1bits.ADIE & PIR1bits.ADIF)
  5205  000444  0E01               	movlw	1
  5206  000446  AC9D               	btfss	3997,6,c	;volatile
  5207  000448  0E00               	movlw	0
  5208  00044A  AC9E               	btfss	3998,6,c	;volatile
  5209  00044C  0E00               	movlw	0
  5210  00044E  A0E8               	btfss	wreg,0,c
  5211  000450  D003               	goto	i2u99_40
  5212  000452  6A01               	clrf	??_isr_hi& (0+255),c
  5213  000454  2A01               	incf	??_isr_hi& (0+255),f,c
  5214  000456  D001               	goto	i2u99_48
  5215  000458                     i2u99_40:
  5216  000458  6A01               	clrf	??_isr_hi& (0+255),c
  5217  00045A                     i2u99_48:
  5218  00045A  5001               	movf	??_isr_hi,w,c
  5219  00045C  B4D8               	btfsc	status,2,c
  5220  00045E  D002               	goto	i2l2231
  5221                           
  5222                           ;interrupt.c: 55: {
  5223                           ;interrupt.c: 56: PIR1bits.ADIF = 0;
  5224  000460  9C9E               	bcf	3998,6,c	;volatile
  5225                           
  5226                           ;interrupt.c: 57: return;
  5227  000462  D037               	goto	i2l433
  5228  000464                     i2l2231:
  5229                           
  5230                           ;interrupt.c: 58: }
  5231                           ;interrupt.c: 61: if (PIE1bits.RC1IE & PIR1bits.RCIF)
  5232  000464  0E01               	movlw	1
  5233  000466  AA9D               	btfss	3997,5,c	;volatile
  5234  000468  0E00               	movlw	0
  5235  00046A  AA9E               	btfss	3998,5,c	;volatile
  5236  00046C  0E00               	movlw	0
  5237  00046E  A0E8               	btfss	wreg,0,c
  5238  000470  D003               	goto	i2u101_40
  5239  000472  6A01               	clrf	??_isr_hi& (0+255),c
  5240  000474  2A01               	incf	??_isr_hi& (0+255),f,c
  5241  000476  D001               	goto	i2u101_48
  5242  000478                     i2u101_40:
  5243  000478  6A01               	clrf	??_isr_hi& (0+255),c
  5244  00047A                     i2u101_48:
  5245  00047A  5001               	movf	??_isr_hi,w,c
  5246  00047C  B4D8               	btfsc	status,2,c
  5247  00047E  D029               	goto	i2l433
  5248                           
  5249                           ;interrupt.c: 62: {
  5250                           ;interrupt.c: 63: uint8_t dummy;
  5251                           ;interrupt.c: 67: if (RCSTAbits.FERR)
  5252  000480  A4AB               	btfss	4011,2,c	;volatile
  5253  000482  D005               	goto	i2l437
  5254                           
  5255                           ;interrupt.c: 68: {
  5256                           ;interrupt.c: 70: UART_errorStatus.framingError++;
  5257  000484  2A39               	incf	_UART_errorStatus,f,c
  5258                           
  5259                           ;interrupt.c: 72: dummy = RCREG;
  5260  000486  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  5261  00048A  00FF               	reset		;# 
  5262                           
  5263                           ;interrupt.c: 74: }
  5264  00048C  D022               	goto	i2l433
  5265  00048E                     i2l437:
  5266                           
  5267                           ;interrupt.c: 75: else if (RCSTAbits.OERR)
  5268  00048E  A2AB               	btfss	4011,1,c	;volatile
  5269  000490  D005               	goto	i2l2245
  5270                           
  5271                           ;interrupt.c: 76: {
  5272                           ;interrupt.c: 78: UART_errorStatus.overrunError++;
  5273  000492  2A3A               	incf	_UART_errorStatus+1,f,c
  5274                           
  5275                           ;interrupt.c: 79: dummy = RCREG;
  5276  000494  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  5277                           
  5278                           ;interrupt.c: 81: RCSTAbits.CREN = 0;
  5279  000498  98AB               	bcf	4011,4,c	;volatile
  5280                           
  5281                           ;interrupt.c: 82: }
  5282  00049A  D01B               	goto	i2l433
  5283  00049C                     i2l2245:
  5284                           
  5285                           ;interrupt.c: 83: else if (UART_rxBufferNb < (50))
  5286  00049C  0E32               	movlw	50
  5287  00049E  5C42               	subwf	_UART_rxBufferNb,w,c
  5288  0004A0  B0D8               	btfsc	status,0,c
  5289  0004A2  D014               	goto	i2l2257
  5290                           
  5291                           ;interrupt.c: 84: {
  5292                           ;interrupt.c: 85: UART_rxBuffer[UART_writeIndex] = RCREG;
  5293  0004A4  5043               	movf	_UART_writeIndex,w,c
  5294  0004A6  0D01               	mullw	1
  5295  0004A8  0101               	movlb	1	; () banked
  5296  0004AA  0E00               	movlw	low _UART_rxBuffer
  5297  0004AC  24F3               	addwf	prodl,w,c
  5298  0004AE  6ED9               	movwf	fsr2l,c
  5299  0004B0  0101               	movlb	1	; () banked
  5300  0004B2  0E01               	movlw	high _UART_rxBuffer
  5301  0004B4  20F4               	addwfc	prodh,w,c
  5302  0004B6  6EDA               	movwf	fsr2h,c
  5303  0004B8  CFAE FFDF          	movff	4014,indf2	;volatile
  5304                           
  5305                           ; BSR set to: 1
  5306                           ;interrupt.c: 86: UART_writeIndex++;
  5307  0004BC  2A43               	incf	_UART_writeIndex,f,c
  5308                           
  5309                           ; BSR set to: 1
  5310                           ;interrupt.c: 87: if (UART_writeIndex >= (50))
  5311  0004BE  0E31               	movlw	49
  5312  0004C0  6443               	cpfsgt	_UART_writeIndex,c
  5313  0004C2  D002               	goto	i2l2255
  5314                           
  5315                           ; BSR set to: 1
  5316                           ;interrupt.c: 88: {
  5317                           ;interrupt.c: 89: UART_writeIndex = 0;
  5318  0004C4  0E00               	movlw	0
  5319  0004C6  6E43               	movwf	_UART_writeIndex,c
  5320  0004C8                     i2l2255:
  5321                           
  5322                           ; BSR set to: 1
  5323                           ;interrupt.c: 90: }
  5324                           ;interrupt.c: 91: UART_rxBufferNb++;
  5325  0004C8  2A42               	incf	_UART_rxBufferNb,f,c
  5326                           
  5327                           ;interrupt.c: 92: }
  5328  0004CA  D003               	goto	i2l433
  5329  0004CC                     i2l2257:
  5330                           
  5331                           ;interrupt.c: 93: else
  5332                           ;interrupt.c: 94: {
  5333                           ;interrupt.c: 96: UART_errorStatus.bufferOverrunError++;
  5334  0004CC  2A3B               	incf	_UART_errorStatus+2,f,c
  5335                           
  5336                           ;interrupt.c: 97: dummy = RCREG;
  5337  0004CE  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  5338  0004D2                     i2l433:
  5339  0004D2  C00F  FFF5         	movff	??_isr_hi+14,tablat
  5340  0004D6  C00E  FFF8         	movff	??_isr_hi+13,tblptru
  5341  0004DA  C00D  FFF7         	movff	??_isr_hi+12,tblptrh
  5342  0004DE  C00C  FFF6         	movff	??_isr_hi+11,tblptrl
  5343  0004E2  C00B  FFF4         	movff	??_isr_hi+10,prodh
  5344  0004E6  C00A  FFF3         	movff	??_isr_hi+9,prodl
  5345  0004EA  C009  FFDA         	movff	??_isr_hi+8,fsr2h
  5346  0004EE  C008  FFD9         	movff	??_isr_hi+7,fsr2l
  5347  0004F2  C007  FFE2         	movff	??_isr_hi+6,fsr1h
  5348  0004F6  C006  FFE1         	movff	??_isr_hi+5,fsr1l
  5349  0004FA  C005  FFEA         	movff	??_isr_hi+4,fsr0h
  5350  0004FE  C004  FFE9         	movff	??_isr_hi+3,fsr0l
  5351  000502  C003  FFFB         	movff	??_isr_hi+2,pclatu
  5352  000506  C002  FFFA         	movff	??_isr_hi+1,pclath
  5353  00050A  0011               	retfie		f
  5354  00050C                     __end_of_isr_hi:
  5355                           	opt stack 0
  5356  0000                     pclatu	equ	0xFFB
  5357                           pclath	equ	0xFFA
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           postinc0	equ	0xFEE
  5366                           fsr0h	equ	0xFEA
  5367                           fsr0l	equ	0xFE9
  5368                           wreg	equ	0xFE8
  5369                           indf1	equ	0xFE7
  5370                           postdec1	equ	0xFE5
  5371                           fsr1h	equ	0xFE2
  5372                           fsr1l	equ	0xFE1
  5373                           indf2	equ	0xFDF
  5374                           postinc2	equ	0xFDE
  5375                           postdec2	equ	0xFDD
  5376                           fsr2h	equ	0xFDA
  5377                           fsr2l	equ	0xFD9
  5378                           status	equ	0xFD8
  5379                           pclatu	equ	0xFFB
  5380                           pclath	equ	0xFFA
  5381                           tblptru	equ	0xFF8
  5382                           tblptrh	equ	0xFF7
  5383                           tblptrl	equ	0xFF6
  5384                           tablat	equ	0xFF5
  5385                           prodh	equ	0xFF4
  5386                           prodl	equ	0xFF3
  5387                           intcon	equ	0xFF2
  5388                           postinc0	equ	0xFEE
  5389                           fsr0h	equ	0xFEA
  5390                           fsr0l	equ	0xFE9
  5391                           wreg	equ	0xFE8
  5392                           indf1	equ	0xFE7
  5393                           postdec1	equ	0xFE5
  5394                           fsr1h	equ	0xFE2
  5395                           fsr1l	equ	0xFE1
  5396                           indf2	equ	0xFDF
  5397                           postinc2	equ	0xFDE
  5398                           postdec2	equ	0xFDD
  5399                           fsr2h	equ	0xFDA
  5400                           fsr2l	equ	0xFD9
  5401                           status	equ	0xFD8
  5402                           
  5403                           	psect	rparam
  5404  0000                     pclatu	equ	0xFFB
  5405                           pclath	equ	0xFFA
  5406                           tblptru	equ	0xFF8
  5407                           tblptrh	equ	0xFF7
  5408                           tblptrl	equ	0xFF6
  5409                           tablat	equ	0xFF5
  5410                           prodh	equ	0xFF4
  5411                           prodl	equ	0xFF3
  5412                           intcon	equ	0xFF2
  5413                           postinc0	equ	0xFEE
  5414                           fsr0h	equ	0xFEA
  5415                           fsr0l	equ	0xFE9
  5416                           wreg	equ	0xFE8
  5417                           indf1	equ	0xFE7
  5418                           postdec1	equ	0xFE5
  5419                           fsr1h	equ	0xFE2
  5420                           fsr1l	equ	0xFE1
  5421                           indf2	equ	0xFDF
  5422                           postinc2	equ	0xFDE
  5423                           postdec2	equ	0xFDD
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43     111
    BANK0           128     10      96
    BANK1           256      0      50
    BANK2           256      0       0

Pointer List with Targets:

    decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zigbee_appendChecksum@sizeFrame	PTR unsigned char  size(2) Largest target is 1
		 -> zb_handle_sendData@frameSize(COMRAM[1]), 

    zigbee_appendChecksum@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    S1409$data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame	PTR struct . size(2) Largest target is 9
		 -> zb_handle@decodedFrame(COMRAM[8]), 

    zb_decodage@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    zb_doChecksum@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), zb_frameToSend(COMRAM[33]), 

    uart_read@buffer	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_read@b	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_write@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    uart_write@b	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 


Critical Paths under _main in COMRAM

    _main_loop->_zb_handle
    _zb_handle_waitAck->_zb_handle
    _zb_handle->_zb_decodage
    _zb_decodage->_zb_doChecksum
    _zb_handle_setTempRaw->_filter
    _zb_handle_setHumidityRaw->_filter
    _filter->___lldiv
    _zb_handle_sendData->_zigbee_appendChecksum
    _zigbee_appendChecksum->_zb_doChecksum
    _hyt221_operation->_i2c_wait_idle
    _hyt221_operation->_leds_red_and_yellow_glitch
    _hyt221_launch_acq->_i2c_wait_idle
    _hyt221_launch_acq->_leds_red_and_yellow_glitch
    _i2c_trig_start->_i2c_wait_idle
    _batt_launch_acq->_zb_handle_setbatVolt
    _calibration->_leds_red_glitch

Critical Paths under _isr_hi in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_loop
    _zb_handle_setTempRaw->_filter
    _zb_handle_setHumidityRaw->_filter

Critical Paths under _isr_hi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_hi in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_hi in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9034
                        _calibration
                          _i2c_setup
                          _main_loop
                         _uart_setup
 ---------------------------------------------------------------------------------
 (1) _uart_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                            2     2      0    8897
                                              8 BANK0      2     2      0
                    _batt_launch_acq
                 _hyt221_getHumidity
                     _hyt221_getTemp
                  _hyt221_launch_acq
                   _hyt221_operation
                  _leds_green_glitch
                    _leds_red_glitch
                 _leds_yellow_glitch
                  _timer0_wait_262ms
                   _timer0_wait_65ms
                          _zb_handle
                _zb_handle_getStatus
              _zb_handle_resetStatus
                 _zb_handle_sendData
           _zb_handle_setHumidityRaw
               _zb_handle_setTempRaw
                  _zb_handle_waitAck
 ---------------------------------------------------------------------------------
 (2) _zb_handle_waitAck                                    2     2      0    2648
                                              0 BANK0      2     2      0
                  _timer0_wait_262ms
                          _zb_handle
 ---------------------------------------------------------------------------------
 (3) _zb_handle                                           11    11      0    2567
                                             32 COMRAM    11    11      0
                          _uart_read
                        _zb_decodage
 ---------------------------------------------------------------------------------
 (4) _zb_decodage                                         11     6      5    1601
                                             21 COMRAM    11     6      5
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (4) _uart_read                                            7     4      3     495
                                             16 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (3) _timer0_wait_262ms                                    0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setTempRaw                                 2     0      2    1111
                                             36 COMRAM     2     0      2
                             _filter
                     _hyt221_getTemp (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setHumidityRaw                             2     0      2    1111
                                             36 COMRAM     2     0      2
                             _filter
                 _hyt221_getHumidity (ARG)
 ---------------------------------------------------------------------------------
 (3) _filter                                              15    13      2     981
                                             29 COMRAM     7     5      2
                                              0 BANK0      8     8      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     371
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _zb_handle_sendData                                   4     4      0    1020
                                             28 COMRAM     4     4      0
                         _uart_write
              _zigbee_appendChecksum
 ---------------------------------------------------------------------------------
 (3) _zigbee_appendChecksum                                7     3      4     774
                                             21 COMRAM     7     3      4
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (5) _zb_doChecksum                                        5     2      3     427
                                             16 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _uart_write                                           6     4      2     169
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _zb_handle_resetStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _zb_handle_getStatus                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer0_wait_65ms                                     0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (4) _timer0_wait_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leds_yellow_glitch                                   1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _leds_green_glitch                                    1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_operation                                     4     4      0     115
                                             17 COMRAM     4     4      0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
         _leds_red_and_yellow_glitch
 ---------------------------------------------------------------------------------
 (2) _hyt221_launch_acq                                    0     0      0       0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
         _leds_red_and_yellow_glitch
 ---------------------------------------------------------------------------------
 (3) _leds_red_and_yellow_glitch                           1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_stop                                        0     0      0       0
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_start                                       0     0      0       0
                      _i2c_wait_idle
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_idle                                        1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_getTemp                                       6     4      2      70
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _hyt221_getHumidity                                   4     2      2      47
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _batt_launch_acq                                      2     2      0      75
                                             18 COMRAM     2     2      0
               _zb_handle_setbatVolt
 ---------------------------------------------------------------------------------
 (3) _zb_handle_setbatVolt                                 2     0      2      75
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration                                          3     3      0     137
                                             17 COMRAM     3     3      0
                    _leds_red_glitch
 ---------------------------------------------------------------------------------
 (2) _leds_red_glitch                                      1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr_hi                                              16    16      0       3
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration
     _leds_red_glitch
   _i2c_setup
   _main_loop
     _batt_launch_acq
       _zb_handle_setbatVolt
     _hyt221_getHumidity
     _hyt221_getTemp
     _hyt221_launch_acq
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_red_and_yellow_glitch
     _hyt221_operation
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_red_and_yellow_glitch
     _leds_green_glitch
     _leds_red_glitch
     _leds_yellow_glitch
     _timer0_wait_262ms
       _timer0_wait_ready
     _timer0_wait_65ms
       _timer0_wait_ready
     _zb_handle
       _uart_read
       _zb_decodage
         _zb_doChecksum
     _zb_handle_getStatus
     _zb_handle_resetStatus
     _zb_handle_sendData
       _uart_write
       _zigbee_appendChecksum
         _zb_doChecksum
     _zb_handle_setHumidityRaw
       _filter
         ___lldiv
       _hyt221_getHumidity (ARG)
     _zb_handle_setTempRaw
       _filter
         ___lldiv
       _hyt221_getTemp (ARG)
     _zb_handle_waitAck
       _timer0_wait_262ms
         _timer0_wait_ready
       _zb_handle
         _uart_read
         _zb_decodage
           _zb_doChecksum
   _uart_setup

 _isr_hi (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      60       5       75.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101       3        0.0%
DATA                 0      0     101      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Aug 28 13:33:11 2016

            __size_of_i2c_trig_start 000C                          _SSPSTATbits 000FC7  
                     uart_write@size 0015                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                                l121 0600                                  l135 0AF8  
                                l127 0630                                  l246 0B8A  
                                l335 069C                                  l512 007E  
                                l268 0264                                  l356 071A  
                                l365 0BD6                                  l462 0790  
                                l391 0876                                  l387 0C56  
                                l398 084A                                  l969 0974  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                prod 000FF3                                  wreg 000FE8  
        __end_of_zb_handle_getStatus 0E0C           __end_of_zb_handle_sendData 0904  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               l2303 09CE                                 l2321 0260  
                               l2403 06D4                                 l2309 09DE  
                               l2341 03A6                                 l2333 032A  
                               l2325 0280                                 l2351 0DAA  
                               l2271 0C26                                 l2335 034C  
                               l2407 06E2                                 l2415 06F8  
                               l2361 0926                                 l2345 03AC  
                               l2409 06E8                                 l2283 0DC8  
                               l2267 0C10                                 l2363 0932  
                               l2291 099C                                 l2339 036C  
                               l2347 03CA                                 l2277 0DBC  
                               l2461 0B76                                 l2373 0966  
                               l2365 0936                                 l2551 0C4A  
                               l2615 083E                                 l2391 0698  
                               l2465 0B94                                 l2481 018C  
                               l2721 0BAE                                 l2801 0548  
                               l2619 084C                                 l2627 0858  
                               l2475 0138                                 l2299 09C8  
                               l2395 06C0                                 l2731 0BC4  
                               l2811 056E                                 l2803 054E  
                               l2477 0140                                 l2821 059E  
                               l2751 0748                                 l2639 0874  
                               l2399 06C8                                 l2737 0726  
                               l2729 0BC0                                 l2809 055A  
                               l2683 0886                                 l2843 05F2  
                               l2827 05B0                                 l2851 060C  
                               l2749 0746                                 l2597 07FC  
                               l2853 0622                                 l2861 0634  
                               l2783 07D6                                 l2767 079A  
                               l2759 0770                                 l2599 0802  
                               l2793 0536                                 l2789 0528  
                   uart_write@buffer 0011                                 _LATA 000F89  
                               u1607 0D80                                 u1617 0D52  
                               u1627 0BE2                        __CFG_DEBUG$ON 000000  
                               u1637 0730                                 u1647 078A  
                               u1657 07AA                                 u1667 07B8  
                               u1587 0A70                                 u1677 07CA  
                               u1597 0D6A                                 u1687 0D96  
                               _TMR0 000FD6              ??_zigbee_appendChecksum 001A  
                               _main 0A40                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0018                        __CFG_IESO$OFF 000000  
                        filter@value 001E              ??_zb_handle_resetStatus 0011  
                      __CFG_MCLRE$ON 000000                    ??_batt_launch_acq 0013  
                      _i2c_wait_idle 0DC8             __size_of_leds_red_glitch 0016  
                              ?_main 0001                 __size_of_calibration 00C0  
                    __end_of___lldiv 0986                                _T0CON 000FD5  
                              _T1CON 000FCD                                i2l433 04D2  
                              i2l437 048E                                _RCREG 000FAE  
                              _RCSTA 000FAB                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _SPBRG 000FAF  
                              _PORTA 000F80                                _TRISA 000F92  
                              _TRISC 000F94                                _TXREG 000FAD  
                              _TXSTA 000FAC                        __CFG_PWRT$OFF 000000  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                                _gData 0035  
                      _i2c_trig_stop 0E00                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                tablat 000FF5  
                              status 000FD8  hyt221_operation@bDeviceDataAreStale 0014  
                zb_decodage@checksum 001F                       __CFG_PBADEN$ON 000000  
                  _wait_join_counter 0048                      _UART_rxBufferNb 0042  
                    __initialization 0A92                         __end_of_main 0A92  
       ??_leds_red_and_yellow_glitch 0011                       ?_i2c_wait_idle 0001  
                             ??_main 002C                        __activetblptr 000002  
       __end_of_zb_handle_setTempRaw 0C7C                       ?_i2c_trig_stop 0001  
                     _i2c_wait_ready 0DB6                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
       __end_of_zb_handle_setbatVolt 0DF4                               _ADRESH 000FC4  
                             _ADRESL 000FC3            __size_of_hyt221_operation 009C  
                             i2l2231 0464                               i2l2227 0444  
                             i2l2219 0420                               i2l2245 049C  
                             i2l2255 04C8                               i2l2257 04CC  
                             _OSCCON 000FD3                               _SPBRGH 000FB0  
                             _SSPADD 000FC8                   __size_of_i2c_setup 0030  
                             _SSPBUF 000FC9                hyt221_operation@index 0015  
__size_of_leds_red_and_yellow_glitch 001A                     _UART_errorStatus 0039  
                   _timer0_wait_65ms 0D08                       __CFG_XINST$OFF 000000  
                     _i2c_trig_start 0DF4                         ?_zb_decodage 0016  
                             _calibr 0044                       __CFG_STVREN$ON 000000  
                   ??_hyt221_getTemp 0013                            ??___lldiv 0019  
                             _filter 001C                               clear_0 0A98  
                             clear_1 0AA4                               clear_2 0AB0  
                             _isr_hi 0008             _zb_handle_setHumidityRaw 0C7C  
             __end_of_i2c_wait_ready 0DC8                      _UART_writeIndex 0043  
                       __pdataCOMRAM 004E                   zb_doChecksum@frame 0011  
                  ??_leds_red_glitch 0011                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0080              __end_of__initialization 0AD6  
              __end_of_zb_doChecksum 0C32               __end_of_i2c_trig_start 0E00  
                 _hyt221_getHumidity 0CA0                     zb_decodage@frame 0016  
                     __pcstackCOMRAM 0001                      ??_i2c_wait_idle 0011  
         __end_of_leds_yellow_glitch 0D78                 zb_decodage@frameSize 0018  
                ?_hyt221_getHumidity 0011                    __end_of_i2c_setup 0C08  
                    ??_i2c_trig_stop 0011                         _batt_counter 003C  
                        isr_hi@dummy 0010                      ?_i2c_wait_ready 0001  
     hyt221_getHumidity@humidity_raw 0013                           __pbssBANK0 0080  
                         __pbssBANK1 0100                   __size_of_main_loop 0138  
               ??_hyt221_getHumidity 0013                      _batt_launch_acq 0AE0  
     __size_of_zigbee_appendChecksum 005A        __end_of_zigbee_appendChecksum 0A40  
                         _batt_value 003F                      ?_i2c_trig_start 0001  
                 _zb_handle_sendData 0878                 _zb_handle_setTempRaw 0C58  
 __end_of_leds_red_and_yellow_glitch 0D62           _leds_red_and_yellow_glitch 0D48  
     __size_of_zb_handle_resetStatus 000E        __end_of_zb_handle_resetStatus 0DE6  
        zigbee_appendChecksum@buffer 0016                 _zb_handle_setbatVolt 0DE6  
                            ?_filter 001E                  ?_zb_handle_sendData 0001  
                            _BAUDCON 000FB8                              ?_isr_hi 0001  
                 __size_of_zb_handle 00D8                   __size_of_uart_read 0060  
                            _OSCTUNE 000F9B                              i2u95_40 0410  
                            i2u95_48 0412                              i2u97_40 0434  
                            i2u97_48 0436                              i2u99_40 0458  
                            i2u99_48 045A                              _SSPCON1 000FC6  
                            _SSPCON2 000FC5                              _SSPSTAT 000FC7  
                   _hyt221_operation 07DC                 ??_zb_handle_sendData 001D  
                  _timer0_wait_262ms 0CE6         __size_of_zb_handle_getStatus 0004  
                         _main_state 0046                   ?_timer0_wait_262ms 0001  
              ?_zb_handle_setTempRaw 0025                              __Hparam 0000  
                            __Lparam 0000                  ??_timer0_wait_262ms 0011  
              ?_zb_handle_setbatVolt 0011                    _timer0_wait_ready 0DA4  
                            ___lldiv 0904                        ??_calibration 0012  
                    __size_of_filter 01FA                    __end_of_main_loop 0644  
               __size_of_zb_decodage 01B8                              __pcinit 0A92  
                 ?_timer0_wait_ready 0001                              __ramtop 0300  
                    __size_of_isr_hi 0504                              __ptext0 0A40  
                            __ptext1 0D2A                              __ptext2 050C  
                            __ptext3 0BA0                              __ptext4 0644  
                            __ptext5 0216                              __ptext6 0986  
                            __ptext7 0CE6                              __ptext8 0C58  
                            __ptext9 0C7C                            _T0CONbits 000FD5  
           __end_of_timer0_wait_65ms 0D2A                  ??_timer0_wait_ready 0011  
            __end_of_batt_launch_acq 0B24            __end_of_timer0_wait_262ms 0D08  
                            filter@i 00DC                       __pintcode_body 03CE  
               end_of_initialization 0AD6                       zb_doChecksum@i 0015  
                      __Lmediumconst 0000                              int_func 03CE  
                  __end_of_zb_handle 071C                    __end_of_uart_read 09E6  
                    ___lldiv@divisor 0015                      ___lldiv@counter 001D  
          __end_of_timer0_wait_ready 0DB6           ??_zb_handle_setHumidityRaw 0027  
                          _RCSTAbits 000FAB                              postdec1 000FE5  
                            postdec2 000FDD                    zb_handle@bSuccess 0023  
                     filter@filtered 00D6                              postinc0 000FEE  
                            postinc2 000FDE                      _leds_red_glitch 0D8E  
                         _zb_frameID 004E                           _zb_counter 0049  
                         _uart_setup 0D2A                           _uart_write 0B66  
                          _PORTBbits 000F81                            _PORTCbits 000F82  
                __end_of_calibration 07DC                            _TRISBbits 000F93  
                          _TRISCbits 000F94                          uart_write@b 0013  
                        uart_write@i 0016               ??_zb_handle_setTempRaw 0027  
                          _TXSTAbits 000FAC               ??_zb_handle_setbatVolt 0013  
                   ??_i2c_wait_ready 0011                       _UART_readIndex 0041  
                      __pidataCOMRAM 0CC4                       __end_of_filter 0216  
                     __end_of_isr_hi 050C                     _zb_frameReceived 0080  
                start_initialization 0A92                            _i2c_setup 0BD8  
         __size_of_timer0_wait_262ms 0022                   _leds_yellow_glitch 0D62  
                   ?_batt_launch_acq 0001                     ??_i2c_trig_start 0012  
                       calibration@w 0014                     __CFG_OSC$INTIO67 000000  
                ?_leds_yellow_glitch 0001              __end_of_leds_red_glitch 0DA4  
         __size_of_timer0_wait_ready 0012          ?_leds_red_and_yellow_glitch 0001  
           __end_of_hyt221_operation 0878                __end_of_i2c_wait_idle 0DD8  
                           ??_filter 0020                          _calibration 071C  
                   __CFG_LPT1OSC$OFF 000000                             ??_isr_hi 0001  
                        ?_uart_setup 0001                    zb_doChecksum@size 0013  
                        ?_uart_write 0011                  _zb_handle_getStatus 0E08  
               ??_leds_yellow_glitch 0011                          __pbssCOMRAM 002C  
              __end_of_i2c_trig_stop 0E08               __size_of_zb_doChecksum 002A  
                      __pcstackBANK0 00D6              __size_of_hyt221_getTemp 0042  
                         ?_i2c_setup 0001                       _zb_frameToSend 004F  
               ?_zb_handle_getStatus 0001          __size_of_hyt221_getHumidity 0024  
   __end_of_zb_handle_setHumidityRaw 0CA0                _zigbee_appendChecksum 09E6  
                  __CFG_CCP2MX$PORTC 000000                    _zb_handle_waitAck 0BA0  
                          __pintcode 0008                             ?___lldiv 0011  
                 ?_zb_handle_waitAck 0001                _zb_handle_resetStatus 0DD8  
    zb_handle_setbatVolt@battVoltage 0011                    _hyt221_launch_acq 0C32  
            uart_read@expectedNbRead 0016                  ??_zb_handle_waitAck 002C  
                          _main_loop 050C                    _zb_currentFrameID 004B  
                 ?_hyt221_launch_acq 0001                    ?_timer0_wait_65ms 0001  
                 ??_timer0_wait_65ms 0011          __size_of_zb_handle_sendData 008C  
                ??_hyt221_launch_acq 0012                ??_zb_handle_getStatus 0011  
                __size_of_uart_setup 001E                             _LATAbits 000F89  
                           _LATBbits 000F8A                             _LATCbits 000F8B  
                __size_of_uart_write 003A                             _PIE1bits 000F9D  
          __end_of_zb_handle_waitAck 0BD8                        _zb_doChecksum 0C08  
                   ?_leds_red_glitch 0001                             i2u101_40 0478  
                           i2u101_48 047A                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                        ??_zb_decodage 001B  
                   __CFG_WDTPS$16384 000000                            _zb_handle 0644  
                          _uart_read 0986                      uart_read@buffer 0011  
                         uart_read@b 0014                           uart_read@i 0017  
          __end_of_hyt221_launch_acq 0C58                            _zb_status 004D  
                        _filter_data 00B2                           ?_main_loop 0001  
                          filter@sum 00D8                          ??_i2c_setup 0011  
                          copy_data0 0ACA                calibration@tryCounter 0013  
                      _UART_rxBuffer 0100                    _leds_green_glitch 0D78  
                     ?_zb_doChecksum 0011               ?_zigbee_appendChecksum 0016  
                 ?_leds_green_glitch 0001                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
     zigbee_appendChecksum@sizeFrame 0018                           ?_zb_handle 0001  
              zb_handle@decodedFrame 0024                           ?_uart_read 0011  
              zb_doChecksum@checksum 0014               ?_zb_handle_resetStatus 0001  
                ??_leds_green_glitch 0011                     __size_of___lldiv 0082  
zb_handle_setHumidityRaw@humidityRaw 0025                  __end_of_zb_decodage 03CE  
                     _hyt221_getTemp 0B24    __size_of_zb_handle_setHumidityRaw 0024  
          ?_zb_handle_setHumidityRaw 0025         zb_handle_waitAck@waitCounter 00D6  
                           __ptext10 001C                             __ptext11 0904  
                           __ptext20 0D62                             __ptext12 0878  
                           __ptext21 0D78                             __ptext13 09E6  
                           __ptext30 0CA0                             __ptext22 07DC  
                           __ptext14 0C08                             __ptext31 0AE0  
                           __ptext23 0C32                             __ptext15 0B66  
                           __ptext32 0DE6                             __ptext24 0D48  
                           __ptext16 0DD8                             __ptext33 0BD8  
                           __ptext25 0E00                             __ptext17 0E08  
                           __ptext34 071C                             __ptext26 0DF4  
                           __ptext18 0D08                             __ptext35 0D8E  
                           __ptext27 0DB6                             __ptext19 0DA4  
                           __ptext28 0DC8                             __ptext29 0B24  
          __end_of_leds_green_glitch 0D8E                        __size_of_main 0052  
                      _zb_currentAck 004A           __size_of_zb_handle_waitAck 0038  
       zb_decodage@bCorrectlyDecoded 0020               main_loop@hyt221_status 00DF  
      __size_of_zb_handle_setTempRaw 0024          zb_handle_sendData@frameSize 0020  
                 main_loop@zb_status 00DE                             _zb_state 004C  
      __size_of_zb_handle_setbatVolt 000E                         ?_calibration 0001  
         __size_of_hyt221_launch_acq 0026                    ?_hyt221_operation 0001  
                       ??_uart_setup 0011                             filter@id 00DD  
                       ??_uart_write 0013                   ??_hyt221_operation 0012  
             __end_of_hyt221_getTemp 0B66                          ??_main_loop 002C  
                         _INTCONbits 000FF2                             intlevel2 0000  
               _timer0_interupt_done 0047                      ??_zb_doChecksum 0014  
                   ___lldiv@dividend 0011                   __end_of_uart_setup 0D48  
                 __end_of_uart_write 0BA0             __size_of_batt_launch_acq 0044  
      zb_handle_waitAck@bAckReceived 00D7                           _OSCCONbits 000FD3  
                        ??_zb_handle 0021                          ??_uart_read 0014  
                        _zb_decodage 0216          zb_handle_setTempRaw@tempRaw 0025  
            zb_handle@sizeOfNextData 0021                      ?_hyt221_getTemp 0011  
                        _sensor_data 002C          __size_of_leds_yellow_glitch 0016  
                  uart_read@nbToRead 0013                     ___lldiv@quotient 0019  
            __size_of_i2c_wait_ready 0012                          _SSPCON2bits 000FC5  
                  _i2c_interupt_done 0045                           _WDTCONbits 000FD1  
         __end_of_hyt221_getHumidity 0CC4           __size_of_leds_green_glitch 0016  
             __size_of_i2c_wait_idle 0010            __size_of_timer0_wait_65ms 0022  
            zb_decodage@decodedFrame 0019               hyt221_getTemp@temp_raw 0015  
             __size_of_i2c_trig_stop 0008  
