

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Nov 11 15:34:02 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           	psect	idataCOMRAM
    48  0009BC                     __pidataCOMRAM:
    49                           	opt stack 0
    50                           
    51                           ;initializer for _zb_frameToSend
    52  0009BC  7E                 	db	126
    53  0009BD  00                 	db	0
    54  0009BE  04                 	db	4
    55  0009BF  10                 	db	16
    56  0009C0  02                 	db	2
    57  0009C1  00                 	db	0
    58  0009C2  00                 	db	0
    59  0009C3  00                 	db	0
    60  0009C4  00                 	db	0
    61  0009C5  00                 	db	0
    62  0009C6  00                 	db	0
    63  0009C7  00                 	db	0
    64  0009C8  00                 	db	0
    65  0009C9  FF                 	db	255
    66  0009CA  FE                 	db	254
    67  0009CB  00                 	db	0
    68  0009CC  00                 	db	0
    69  0009CD  00                 	db	0
    70  0009CE  00                 	db	0
    71  0009CF  03                 	db	3
    72  0009D0  01                 	db	1
    73  0009D1  00                 	db	0
    74  0009D2  00                 	db	0
    75  0009D3  00                 	db	0
    76  0009D4  02                 	db	2
    77  0009D5  00                 	db	0
    78  0009D6  00                 	db	0
    79  0009D7  00                 	db	0
    80  0009D8  03                 	db	3
    81  0009D9  00                 	db	0
    82  0009DA  00                 	db	0
    83  0009DB  00                 	db	0
    84  0009DC  00                 	db	0
    85  0000                     _TMR0	set	4054
    86  0000                     _ADCON0	set	4034
    87  0000                     _ADCON1	set	4033
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADRESH	set	4036
    90  0000                     _ADRESL	set	4035
    91  0000                     _BAUDCON	set	4024
    92  0000                     _INTCONbits	set	4082
    93  0000                     _LATA	set	3977
    94  0000                     _LATAbits	set	3977
    95  0000                     _LATBbits	set	3978
    96  0000                     _LATCbits	set	3979
    97  0000                     _OSCCON	set	4051
    98  0000                     _OSCCONbits	set	4051
    99  0000                     _OSCTUNE	set	3995
   100  0000                     _PIE1bits	set	3997
   101  0000                     _PIR1bits	set	3998
   102  0000                     _PIR2bits	set	4001
   103  0000                     _PORTA	set	3968
   104  0000                     _PORTBbits	set	3969
   105  0000                     _PORTCbits	set	3970
   106  0000                     _RCREG	set	4014
   107  0000                     _RCSTA	set	4011
   108  0000                     _RCSTAbits	set	4011
   109  0000                     _SPBRG	set	4015
   110  0000                     _SPBRGH	set	4016
   111  0000                     _SSPADD	set	4040
   112  0000                     _SSPBUF	set	4041
   113  0000                     _SSPCON1	set	4038
   114  0000                     _SSPCON2	set	4037
   115  0000                     _SSPCON2bits	set	4037
   116  0000                     _SSPSTAT	set	4039
   117  0000                     _SSPSTATbits	set	4039
   118  0000                     _T0CON	set	4053
   119  0000                     _T0CONbits	set	4053
   120  0000                     _T1CON	set	4045
   121  0000                     _TMR1H	set	4047
   122  0000                     _TMR1L	set	4046
   123  0000                     _TRISA	set	3986
   124  0000                     _TRISBbits	set	3987
   125  0000                     _TRISC	set	3988
   126  0000                     _TRISCbits	set	3988
   127  0000                     _TXREG	set	4013
   128  0000                     _TXSTA	set	4012
   129  0000                     _TXSTAbits	set	4012
   130  0000                     _WDTCONbits	set	4049
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  000848                     __pcinit:
   136                           	opt stack 0
   137  000848                     start_initialization:
   138                           	opt stack 0
   139  000848                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK0 (100 bytes)
   143  000848  EE00  F080         	lfsr	0,__pbssBANK0
   144  00084C  0E64               	movlw	100
   145  00084E                     clear_0:
   146  00084E  6AEE               	clrf	postinc0,c
   147  000850  06E8               	decf	wreg,f,c
   148  000852  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to COMRAM (32 bytes)
   151  000854  EE00  F04F         	lfsr	0,__pbssCOMRAM
   152  000858  0E20               	movlw	32
   153  00085A                     clear_1:
   154  00085A  6AEE               	clrf	postinc0,c
   155  00085C  06E8               	decf	wreg,f,c
   156  00085E  E1FD               	bnz	clear_1
   157                           
   158                           ; Initialize objects allocated to COMRAM (33 bytes)
   159                           ; load TBLPTR registers with __pidataCOMRAM
   160  000860  0EBC               	movlw	low __pidataCOMRAM
   161  000862  6EF6               	movwf	tblptrl,c
   162  000864  0E09               	movlw	high __pidataCOMRAM
   163  000866  6EF7               	movwf	tblptrh,c
   164  000868  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   165  00086A  6EF8               	movwf	tblptru,c
   166  00086C  EE00  F02E         	lfsr	0,__pdataCOMRAM
   167  000870  EE10 F021          	lfsr	1,33
   168  000874                     copy_data0:
   169  000874  0009               	tblrd		*+
   170  000876  CFF5 FFEE          	movff	tablat,postinc0
   171  00087A  50E5               	movf	postdec1,w,c
   172  00087C  50E1               	movf	fsr1l,w,c
   173  00087E  E1FA               	bnz	copy_data0
   174  000880                     end_of_initialization:
   175                           	opt stack 0
   176  000880                     __end_of__initialization:
   177                           	opt stack 0
   178  000880  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179  000882  6EF8               	movwf	tblptru,c
   180  000884  0100               	movlb	0
   181  000886  EFD6  F003         	goto	_main	;jump to C main() function
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           tblptrl	equ	0xFF6
   185                           tablat	equ	0xFF5
   186                           postinc0	equ	0xFEE
   187                           wreg	equ	0xFE8
   188                           postdec1	equ	0xFE5
   189                           fsr1l	equ	0xFE1
   190                           
   191                           	psect	bssCOMRAM
   192  00004F                     __pbssCOMRAM:
   193                           	opt stack 0
   194  00004F                     _sensor_data:
   195                           	opt stack 0
   196  00004F                     	ds	9
   197  000058                     _gData:
   198                           	opt stack 0
   199  000058                     	ds	4
   200  00005C                     _UART_errorStatus:
   201                           	opt stack 0
   202  00005C                     	ds	3
   203  00005F                     _batt_counter:
   204                           	opt stack 0
   205  00005F                     	ds	3
   206  000062                     _batt_value:
   207                           	opt stack 0
   208  000062                     	ds	2
   209  000064                     _UART_readIndex:
   210                           	opt stack 0
   211  000064                     	ds	1
   212  000065                     _UART_rxBufferNb:
   213                           	opt stack 0
   214  000065                     	ds	1
   215  000066                     _UART_writeIndex:
   216                           	opt stack 0
   217  000066                     	ds	1
   218  000067                     _calibr:
   219                           	opt stack 0
   220  000067                     	ds	1
   221  000068                     _i2c_interupt_done:
   222                           	opt stack 0
   223  000068                     	ds	1
   224  000069                     _main_state:
   225                           	opt stack 0
   226  000069                     	ds	1
   227  00006A                     _timer0_interupt_done:
   228                           	opt stack 0
   229  00006A                     	ds	1
   230  00006B                     _wait_join_counter:
   231                           	opt stack 0
   232  00006B                     	ds	1
   233  00006C                     _zb_counter:
   234                           	opt stack 0
   235  00006C                     	ds	1
   236  00006D                     _zb_state:
   237                           	opt stack 0
   238  00006D                     	ds	1
   239  00006E                     _zb_status:
   240                           	opt stack 0
   241  00006E                     	ds	1
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           postdec1	equ	0xFE5
   249                           fsr1l	equ	0xFE1
   250                           
   251                           	psect	dataCOMRAM
   252  00002E                     __pdataCOMRAM:
   253                           	opt stack 0
   254  00002E                     _zb_frameToSend:
   255                           	opt stack 0
   256  00002E                     	ds	33
   257                           tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           tblptrl	equ	0xFF6
   260                           tablat	equ	0xFF5
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           postdec1	equ	0xFE5
   264                           fsr1l	equ	0xFE1
   265                           
   266                           	psect	bssBANK0
   267  000080                     __pbssBANK0:
   268                           	opt stack 0
   269  000080                     _UART_rxBuffer:
   270                           	opt stack 0
   271  000080                     	ds	50
   272  0000B2                     _zb_frameReceived:
   273                           	opt stack 0
   274  0000B2                     	ds	50
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           postdec1	equ	0xFE5
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	cstackCOMRAM
   285  000001                     __pcstackCOMRAM:
   286                           	opt stack 0
   287  000001                     ??_isr_hi:
   288  000001                     
   289                           ; 2 bytes @ 0x0
   290  000001                     	ds	15
   291  000010                     isr_hi@dummy:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0xF
   295  000010                     	ds	1
   296  000011                     ??_leds_glitch:
   297  000011                     ??_i2c_wait_idle:
   298  000011                     ?_hyt221_getTemp:
   299                           	opt stack 0
   300  000011                     ?_hyt221_getHumidity:
   301                           	opt stack 0
   302  000011                     uart_write@buffer:
   303                           	opt stack 0
   304  000011                     uart_read@buffer:
   305                           	opt stack 0
   306  000011                     zb_doChecksum@frame:
   307                           	opt stack 0
   308  000011                     zb_handle_setbatVolt@battVoltage:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x10
   312  000011                     	ds	1
   313  000012                     leds_glitch@leds:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x11
   317  000012                     	ds	1
   318  000013                     ??_calibration:
   319  000013                     ??_batt_launch_acq:
   320  000013                     ??_hyt221_getTemp:
   321  000013                     uart_read@nbToRead:
   322                           	opt stack 0
   323  000013                     zb_doChecksum@size:
   324                           	opt stack 0
   325  000013                     hyt221_operation@bDeviceDataAreStale:
   326                           	opt stack 0
   327  000013                     uart_write@b:
   328                           	opt stack 0
   329  000013                     hyt221_getHumidity@humidity_raw:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x12
   333  000013                     	ds	1
   334  000014                     zb_doChecksum@checksum:
   335                           	opt stack 0
   336  000014                     hyt221_operation@index:
   337                           	opt stack 0
   338  000014                     calibration@tryCounter:
   339                           	opt stack 0
   340  000014                     uart_read@b:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x13
   344  000014                     	ds	1
   345  000015                     uart_write@size:
   346                           	opt stack 0
   347  000015                     zb_doChecksum@i:
   348                           	opt stack 0
   349  000015                     calibration@w:
   350                           	opt stack 0
   351  000015                     zb_handle_setHumidityRaw@humidityRaw:
   352                           	opt stack 0
   353  000015                     hyt221_getTemp@temp_raw:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x14
   357  000015                     	ds	1
   358  000016                     uart_write@i:
   359                           	opt stack 0
   360  000016                     uart_read@expectedNbRead:
   361                           	opt stack 0
   362  000016                     zb_decodage@frame:
   363                           	opt stack 0
   364  000016                     zigbee_appendChecksum@buffer:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x15
   368  000016                     	ds	1
   369  000017                     uart_read@i:
   370                           	opt stack 0
   371  000017                     zb_handle_setTempRaw@tempRaw:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x16
   375  000017                     	ds	1
   376  000018                     zb_decodage@frameSize:
   377                           	opt stack 0
   378  000018                     zigbee_appendChecksum@sizeFrame:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x17
   382  000018                     	ds	1
   383  000019                     zb_decodage@decodedFrame:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x18
   387  000019                     	ds	1
   388  00001A                     ??_zigbee_appendChecksum:
   389                           
   390                           ; 0 bytes @ 0x19
   391  00001A                     	ds	1
   392  00001B                     ??_zb_decodage:
   393                           
   394                           ; 0 bytes @ 0x1A
   395  00001B                     	ds	2
   396  00001D                     ??_zb_handle_sendData:
   397                           
   398                           ; 0 bytes @ 0x1C
   399  00001D                     	ds	2
   400  00001F                     zb_decodage@checksum:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x1E
   404  00001F                     	ds	1
   405  000020                     zb_decodage@bCorrectlyDecoded:
   406                           	opt stack 0
   407  000020                     zb_handle_sendData@frameSize:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x1F
   411  000020                     	ds	1
   412  000021                     zb_handle@sizeOfNextData:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x20
   416  000021                     	ds	2
   417  000023                     zb_handle@bSuccess:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x22
   421  000023                     	ds	1
   422  000024                     zb_handle@decodedFrame:
   423                           	opt stack 0
   424                           
   425                           ; 8 bytes @ 0x23
   426  000024                     	ds	8
   427  00002C                     main_loop@zb_status:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x2B
   431  00002C                     	ds	1
   432  00002D                     main_loop@hyt221_status:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x2C
   436  00002D                     	ds	1
   437  00002E                     tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446                           ; 0 bytes @ 0x2D
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 40 in file "main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  2   96[COMRAM] int 
   459 ;; Registers used:
   460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   466 ;;      Params:         0       0       0       0
   467 ;;      Locals:         0       0       0       0
   468 ;;      Temps:          0       0       0       0
   469 ;;      Totals:         0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels required when called:    5
   472 ;; This function calls:
   473 ;;		_calibration
   474 ;;		_i2c_setup
   475 ;;		_main_loop
   476 ;;		_uart_setup
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text0
   483  0007AC                     __ptext0:
   484                           	opt stack 0
   485  0007AC                     _main:
   486                           	opt stack 26
   487                           
   488                           ;main.c: 42: OSCTUNE = 0x00;
   489                           
   490                           ;incstack = 0
   491  0007AC  0E00               	movlw	0
   492  0007AE  6E9B               	movwf	3995,c	;volatile
   493                           
   494                           ;main.c: 44: OSCCON = 0x40;
   495  0007B0  0E40               	movlw	64
   496  0007B2  6ED3               	movwf	4051,c	;volatile
   497                           
   498                           ;main.c: 47: PORTA = 0x0;
   499  0007B4  0E00               	movlw	0
   500  0007B6  6E80               	movwf	3968,c	;volatile
   501                           
   502                           ;main.c: 48: TRISA = 0x0;
   503  0007B8  0E00               	movlw	0
   504  0007BA  6E92               	movwf	3986,c	;volatile
   505                           
   506                           ;main.c: 51: TRISBbits.RB0 = 0;
   507  0007BC  9093               	bcf	3987,0,c	;volatile
   508                           
   509                           ;main.c: 52: PORTBbits.RB0 = 0;
   510  0007BE  9081               	bcf	3969,0,c	;volatile
   511                           
   512                           ;main.c: 53: TRISBbits.RB3 = 0;
   513  0007C0  9693               	bcf	3987,3,c	;volatile
   514                           
   515                           ;main.c: 54: PORTBbits.RB3 = 0;
   516  0007C2  9681               	bcf	3969,3,c	;volatile
   517                           
   518                           ;main.c: 55: TRISBbits.RB4 = 0;
   519  0007C4  9893               	bcf	3987,4,c	;volatile
   520                           
   521                           ;main.c: 56: PORTBbits.RB4 = 0;
   522  0007C6  9881               	bcf	3969,4,c	;volatile
   523                           
   524                           ;main.c: 57: TRISCbits.RC2 = 0;
   525  0007C8  9494               	bcf	3988,2,c	;volatile
   526                           
   527                           ;main.c: 58: PORTCbits.RC2 = 0;
   528  0007CA  9482               	bcf	3970,2,c	;volatile
   529                           
   530                           ;main.c: 59: TRISCbits.RC5 = 0;
   531  0007CC  9A94               	bcf	3988,5,c	;volatile
   532                           
   533                           ;main.c: 60: PORTCbits.RC5 = 0;
   534  0007CE  9A82               	bcf	3970,5,c	;volatile
   535                           
   536                           ;main.c: 63: PORTBbits.RB1 = 0;
   537  0007D0  9281               	bcf	3969,1,c	;volatile
   538                           
   539                           ;main.c: 64: TRISBbits.RB1 = 0;
   540  0007D2  9293               	bcf	3987,1,c	;volatile
   541                           
   542                           ;main.c: 65: TRISBbits.RB2 = 1;
   543  0007D4  8493               	bsf	3987,2,c	;volatile
   544                           
   545                           ;main.c: 66: PIR1bits.ADIF = 0;
   546  0007D6  9C9E               	bcf	3998,6,c	;volatile
   547                           
   548                           ;main.c: 67: PIE1bits.ADIE = 1;
   549  0007D8  8C9D               	bsf	3997,6,c	;volatile
   550                           
   551                           ;main.c: 69: _delay((unsigned long)((5)*((1000000)/4000.0)));
   552  0007DA  0EFA               	movlw	250
   553  0007DC                     u987:
   554  0007DC  D000               	nop2	
   555  0007DE  2EE8               	decfsz	wreg,f,c
   556  0007E0  D7FD               	goto	u987
   557                           
   558                           ;main.c: 71: calibration();
   559  0007E2  EC8E  F002         	call	_calibration	;wreg free
   560                           
   561                           ;main.c: 76: i2c_setup();
   562  0007E6  EC64  F004         	call	_i2c_setup	;wreg free
   563                           
   564                           ;main.c: 77: uart_setup();
   565  0007EA  ECEF  F004         	call	_uart_setup	;wreg free
   566                           
   567                           ;main.c: 79: INTCONbits.PEIE = 1;
   568  0007EE  8CF2               	bsf	intcon,6,c	;volatile
   569                           
   570                           ;main.c: 80: INTCONbits.GIE = 1;
   571  0007F0  8EF2               	bsf	intcon,7,c	;volatile
   572                           
   573                           ;main.c: 82: (LATAbits.LATA0 = 0);
   574  0007F2  9089               	bcf	3977,0,c	;volatile
   575                           
   576                           ;main.c: 83: (LATAbits.LATA1 = 0);
   577  0007F4  9289               	bcf	3977,1,c	;volatile
   578                           
   579                           ;main.c: 84: (LATAbits.LATA1 = 1);
   580  0007F6  8289               	bsf	3977,1,c	;volatile
   581                           
   582                           ;main.c: 86: main_loop();
   583  0007F8  EC89  F001         	call	_main_loop	;wreg free
   584  0007FC  EF0C  F000         	goto	start
   585  000800                     __end_of_main:
   586                           	opt stack 0
   587                           tblptru	equ	0xFF8
   588                           tblptrh	equ	0xFF7
   589                           tblptrl	equ	0xFF6
   590                           tablat	equ	0xFF5
   591                           intcon	equ	0xFF2
   592                           postinc0	equ	0xFEE
   593                           wreg	equ	0xFE8
   594                           postdec1	equ	0xFE5
   595                           fsr1l	equ	0xFE1
   596                           
   597 ;; *************** function _uart_setup *****************
   598 ;; Defined at:
   599 ;;		line 11 in file "uart.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;		None               void
   606 ;; Registers used:
   607 ;;		wreg, status,2
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   613 ;;      Params:         0       0       0       0
   614 ;;      Locals:         0       0       0       0
   615 ;;      Temps:          0       0       0       0
   616 ;;      Totals:         0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text1
   628  0009DE                     __ptext1:
   629                           	opt stack 0
   630  0009DE                     _uart_setup:
   631                           	opt stack 29
   632                           
   633                           ;uart.c: 14: TRISCbits.RC7 = 1;
   634                           
   635                           ;incstack = 0
   636  0009DE  8E94               	bsf	3988,7,c	;volatile
   637                           
   638                           ;uart.c: 15: TRISCbits.RC6 = 1;
   639  0009E0  8C94               	bsf	3988,6,c	;volatile
   640                           
   641                           ;uart.c: 17: TXSTA = 0x24;
   642  0009E2  0E24               	movlw	36
   643  0009E4  6EAC               	movwf	4012,c	;volatile
   644                           
   645                           ;uart.c: 18: RCSTA = 0x90;
   646  0009E6  0E90               	movlw	144
   647  0009E8  6EAB               	movwf	4011,c	;volatile
   648                           
   649                           ;uart.c: 19: BAUDCON = 0x48;
   650  0009EA  0E48               	movlw	72
   651  0009EC  6EB8               	movwf	4024,c	;volatile
   652                           
   653                           ;uart.c: 20: SPBRGH = 0;
   654  0009EE  0E00               	movlw	0
   655  0009F0  6EB0               	movwf	4016,c	;volatile
   656                           
   657                           ;uart.c: 21: SPBRG = 12;
   658  0009F2  0E0C               	movlw	12
   659  0009F4  6EAF               	movwf	4015,c	;volatile
   660                           
   661                           ;uart.c: 23: PIR1bits.RCIF = 0;
   662  0009F6  9A9E               	bcf	3998,5,c	;volatile
   663                           
   664                           ;uart.c: 24: PIE1bits.RCIE = 1;
   665  0009F8  8A9D               	bsf	3997,5,c	;volatile
   666  0009FA  0012               	return	
   667  0009FC                     __end_of_uart_setup:
   668                           	opt stack 0
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           intcon	equ	0xFF2
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           postdec1	equ	0xFE5
   677                           fsr1l	equ	0xFE1
   678                           
   679 ;; *************** function _main_loop *****************
   680 ;; Defined at:
   681 ;;		line 90 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  hyt221_statu    1   44[COMRAM] enum E3781
   686 ;;  zb_status       1   43[COMRAM] enum E3763
   687 ;; Return value:  Size  Location     Type
   688 ;;		None               void
   689 ;; Registers used:
   690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   696 ;;      Params:         0       0       0       0
   697 ;;      Locals:         2       0       0       0
   698 ;;      Temps:          0       0       0       0
   699 ;;      Totals:         2       0       0       0
   700 ;;Total ram usage:        2 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    4
   703 ;; This function calls:
   704 ;;		_batt_launch_acq
   705 ;;		_hyt221_getHumidity
   706 ;;		_hyt221_getTemp
   707 ;;		_hyt221_launch_acq
   708 ;;		_hyt221_operation
   709 ;;		_leds_glitch
   710 ;;		_timer0_wait_262ms
   711 ;;		_timer0_wait_65ms
   712 ;;		_zb_handle
   713 ;;		_zb_handle_getStatus
   714 ;;		_zb_handle_resetStatus
   715 ;;		_zb_handle_sendData
   716 ;;		_zb_handle_setHumidityRaw
   717 ;;		_zb_handle_setTempRaw
   718 ;;		_zb_handle_waitAck
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text2
   725  000312                     __ptext2:
   726                           	opt stack 0
   727  000312                     _main_loop:
   728                           	opt stack 26
   729                           
   730                           ;main.c: 92: zb_statusT zb_status;
   731                           ;main.c: 93: STATUS_T hyt221_status;
   732                           ;main.c: 95: batt_counter = (4*(60));
   733                           
   734                           ;incstack = 0
   735  000312  0EF0               	movlw	240
   736  000314  6E5F               	movwf	_batt_counter,c
   737  000316  0E00               	movlw	0
   738  000318  6E60               	movwf	_batt_counter+1,c
   739  00031A  0E00               	movlw	0
   740  00031C  6E61               	movwf	_batt_counter+2,c
   741                           
   742                           ;main.c: 96: wait_join_counter = 0;
   743  00031E  0E00               	movlw	0
   744  000320  6E6B               	movwf	_wait_join_counter,c
   745                           
   746                           ;main.c: 98: zb_state = NOT_JOINED;
   747  000322  0E00               	movlw	0
   748  000324  6E6D               	movwf	_zb_state,c
   749                           
   750                           ;main.c: 99: main_state = LAUNCH_ACQ;
   751  000326  0E00               	movlw	0
   752  000328  6E69               	movwf	_main_state,c
   753                           
   754                           ;main.c: 101: leds_glitch((0x10));
   755  00032A  0E10               	movlw	16
   756  00032C  ECFE  F004         	call	_leds_glitch
   757  000330                     l2026:
   758                           
   759                           ;main.c: 104: {
   760                           ;main.c: 105: zb_handle();
   761  000330  EC27  F002         	call	_zb_handle	;wreg free
   762                           
   763                           ;main.c: 106: zb_status = zb_handle_getStatus();
   764  000334  EC5C  F005         	call	_zb_handle_getStatus	;wreg free
   765  000338  6E2C               	movwf	main_loop@zb_status,c
   766                           
   767                           ;main.c: 107: switch (zb_status)
   768  00033A  D00D               	goto	l2042
   769  00033C                     l2030:
   770                           
   771                           ;main.c: 110: zb_state = NOT_JOINED;
   772  00033C  0E00               	movlw	0
   773  00033E  6E6D               	movwf	_zb_state,c
   774                           
   775                           ;main.c: 111: main_state = LAUNCH_ACQ;
   776  000340  0E00               	movlw	0
   777  000342  6E69               	movwf	_main_state,c
   778                           
   779                           ;main.c: 112: (LATAbits.LATA0 = 0);
   780  000344  9089               	bcf	3977,0,c	;volatile
   781                           
   782                           ;main.c: 114: timer0_wait_262ms();
   783  000346  ECBC  F004         	call	_timer0_wait_262ms	;wreg free
   784                           
   785                           ;main.c: 115: timer0_wait_262ms();
   786  00034A  ECBC  F004         	call	_timer0_wait_262ms	;wreg free
   787                           
   788                           ;main.c: 116: break;
   789  00034E  D077               	goto	l2108
   790  000350                     l2038:
   791                           
   792                           ;main.c: 119: zb_state = JOINED;
   793  000350  0E01               	movlw	1
   794  000352  6E6D               	movwf	_zb_state,c
   795                           
   796                           ;main.c: 120: break;
   797  000354  D074               	goto	l2108
   798  000356                     l2042:
   799  000356  502C               	movf	main_loop@zb_status,w,c
   800                           
   801                           ; Switch size 1, requested type "space"
   802                           ; Number of cases is 2, Range of values is 0 to 1
   803                           ; switch strategies available:
   804                           ; Name         Instructions Cycles
   805                           ; simple_byte            7     4 (average)
   806                           ;	Chosen strategy is simple_byte
   807  000358  0A00               	xorlw	0	; case 0
   808  00035A  B4D8               	btfsc	status,2,c
   809  00035C  D7EF               	goto	l2030
   810  00035E  0A01               	xorlw	1	; case 1
   811  000360  B4D8               	btfsc	status,2,c
   812  000362  D7F6               	goto	l2038
   813  000364  D06C               	goto	l2108
   814  000366                     l2044:
   815                           
   816                           ;main.c: 132: zb_handle_resetStatus();
   817  000366  EC3F  F005         	call	_zb_handle_resetStatus	;wreg free
   818                           
   819                           ;main.c: 134: batt_counter++;
   820  00036A  0E01               	movlw	1
   821  00036C  265F               	addwf	_batt_counter,f,c
   822  00036E  0E00               	movlw	0
   823  000370  2260               	addwfc	_batt_counter+1,f,c
   824  000372  0E00               	movlw	0
   825  000374  2261               	addwfc	_batt_counter+2,f,c
   826                           
   827                           ;main.c: 135: if (!(batt_counter < (4*(60))))
   828  000376  0EF0               	movlw	240
   829  000378  5C5F               	subwf	_batt_counter,w,c
   830  00037A  0E00               	movlw	0
   831  00037C  5860               	subwfb	_batt_counter+1,w,c
   832  00037E  0E00               	movlw	0
   833  000380  5861               	subwfb	_batt_counter+2,w,c
   834  000382  A0D8               	btfss	status,0,c
   835  000384  D008               	goto	l2054
   836                           
   837                           ;main.c: 136: {
   838                           ;main.c: 137: batt_counter = 0;
   839  000386  0E00               	movlw	0
   840  000388  6E5F               	movwf	_batt_counter,c
   841  00038A  0E00               	movlw	0
   842  00038C  6E60               	movwf	_batt_counter+1,c
   843  00038E  0E00               	movlw	0
   844  000390  6E61               	movwf	_batt_counter+2,c
   845                           
   846                           ;main.c: 138: batt_launch_acq();
   847  000392  EC00  F004         	call	_batt_launch_acq	;wreg free
   848  000396                     l2054:
   849                           
   850                           ;main.c: 139: }
   851                           ;main.c: 141: hyt221_status = hyt221_launch_acq();
   852  000396  ECA8  F004         	call	_hyt221_launch_acq	;wreg free
   853  00039A  6E2D               	movwf	main_loop@hyt221_status,c
   854                           
   855                           ;main.c: 142: if (hyt221_status == STATUS_OK)
   856  00039C  662D               	tstfsz	main_loop@hyt221_status,c
   857  00039E  D002               	goto	l2060
   858                           
   859                           ;main.c: 143: {
   860                           ;main.c: 144: main_state = WAIT_HYT221_ACQ;
   861  0003A0  0E02               	movlw	2
   862  0003A2  D032               	goto	L4
   863  0003A4                     l2060:
   864                           
   865                           ;main.c: 146: else
   866                           ;main.c: 147: {
   867                           ;main.c: 148: leds_glitch((0x10) | (0x04));
   868  0003A4  0E14               	movlw	20
   869  0003A6  ECFE  F004         	call	_leds_glitch
   870  0003AA  D7C2               	goto	l2026
   871  0003AC                     l2062:
   872                           
   873                           ;main.c: 153: timer0_wait_65ms();
   874  0003AC  ECCD  F004         	call	_timer0_wait_65ms	;wreg free
   875                           
   876                           ;main.c: 154: hyt221_status = hyt221_operation();
   877  0003B0  ECF1  F002         	call	_hyt221_operation	;wreg free
   878  0003B4  6E2D               	movwf	main_loop@hyt221_status,c
   879                           
   880                           ;main.c: 155: if (hyt221_status == STATUS_OK)
   881  0003B6  662D               	tstfsz	main_loop@hyt221_status,c
   882  0003B8  D005               	goto	l2074
   883                           
   884                           ;main.c: 156: {
   885                           ;main.c: 157: (LATAbits.LATA0 = 0);
   886  0003BA  9089               	bcf	3977,0,c	;volatile
   887                           
   888                           ;main.c: 158: timer0_wait_262ms();
   889  0003BC  ECBC  F004         	call	_timer0_wait_262ms	;wreg free
   890                           
   891                           ;main.c: 159: main_state = SEND_DATA;
   892  0003C0  0E03               	movlw	3
   893  0003C2  D022               	goto	L4
   894  0003C4                     l2074:
   895                           
   896                           ;main.c: 161: else if (hyt221_status == STATUS_ERROR)
   897  0003C4  042D               	decf	main_loop@hyt221_status,w,c
   898  0003C6  A4D8               	btfss	status,2,c
   899  0003C8  D7B3               	goto	l2026
   900                           
   901                           ;main.c: 162: {
   902                           ;main.c: 163: leds_glitch((0x08));
   903  0003CA  0E08               	movlw	8
   904  0003CC  ECFE  F004         	call	_leds_glitch
   905  0003D0  D01A               	goto	L5
   906  0003D2                     l2080:
   907                           
   908                           ;main.c: 172: zb_handle_setTempRaw(hyt221_getTemp());
   909  0003D2  EC7C  F004         	call	_hyt221_getTemp	;wreg free
   910  0003D6  C011  F017         	movff	?_hyt221_getTemp,zb_handle_setTempRaw@tempRaw
   911  0003DA  C012  F018         	movff	?_hyt221_getTemp+1,zb_handle_setTempRaw@tempRaw+1
   912  0003DE  EC31  F005         	call	_zb_handle_setTempRaw	;wreg free
   913                           
   914                           ;main.c: 173: zb_handle_setHumidityRaw(hyt221_getHumidity());
   915  0003E2  EC0D  F005         	call	_hyt221_getHumidity	;wreg free
   916  0003E6  C011  F015         	movff	?_hyt221_getHumidity,zb_handle_setHumidityRaw@humidityRaw
   917  0003EA  C012  F016         	movff	?_hyt221_getHumidity+1,zb_handle_setHumidityRaw@humidityRaw+1
   918  0003EE  EC38  F005         	call	_zb_handle_setHumidityRaw	;wreg free
   919                           
   920                           ;main.c: 174: zb_handle_sendData();
   921  0003F2  EC3B  F003         	call	_zb_handle_sendData	;wreg free
   922                           
   923                           ;main.c: 177: zb_handle_waitAck();
   924  0003F6  EC53  F005         	call	_zb_handle_waitAck	;wreg free
   925                           
   926                           ;main.c: 184: main_state = SLEEP;
   927  0003FA  0E01               	movlw	1
   928  0003FC  D005               	goto	L4
   929  0003FE                     l119:
   930                           
   931                           ;main.c: 188: (LATAbits.LATA0 = 1);
   932  0003FE  8089               	bsf	3977,0,c	;volatile
   933                           
   934                           ;main.c: 190: do { (WDTCONbits.SWDTEN = 1);asm(" sleep");(WDTCONbits.SWDTEN = 0); } whil
      +                          e (0);;
   935  000400  80D1               	bsf	4049,0,c	;volatile
   936  000402  0003               	sleep		;# 
   937  000404  90D1               	bcf	4049,0,c	;volatile
   938  000406                     L5:
   939                           
   940                           ;main.c: 191: main_state = LAUNCH_ACQ;
   941  000406  0E00               	movlw	0
   942  000408                     L4:
   943  000408  6E69               	movwf	_main_state,c
   944                           
   945                           ;main.c: 192: break;
   946  00040A  D792               	goto	l2026
   947  00040C                     l2092:
   948  00040C  5069               	movf	_main_state,w,c
   949                           
   950                           ; Switch size 1, requested type "space"
   951                           ; Number of cases is 4, Range of values is 0 to 3
   952                           ; switch strategies available:
   953                           ; Name         Instructions Cycles
   954                           ; simple_byte           13     7 (average)
   955                           ;	Chosen strategy is simple_byte
   956  00040E  0A00               	xorlw	0	; case 0
   957  000410  B4D8               	btfsc	status,2,c
   958  000412  D7A9               	goto	l2044
   959  000414  0A01               	xorlw	1	; case 1
   960  000416  B4D8               	btfsc	status,2,c
   961  000418  D7F2               	goto	l119
   962  00041A  0A03               	xorlw	3	; case 2
   963  00041C  B4D8               	btfsc	status,2,c
   964  00041E  D7C6               	goto	l2062
   965  000420  0A01               	xorlw	1	; case 3
   966  000422  B4D8               	btfsc	status,2,c
   967  000424  D7D6               	goto	l2080
   968  000426  D784               	goto	l2026
   969  000428                     l2094:
   970                           
   971                           ;main.c: 202: wait_join_counter++;
   972  000428  2A6B               	incf	_wait_join_counter,f,c
   973                           
   974                           ;main.c: 203: if (wait_join_counter >= (100))
   975  00042A  0E63               	movlw	99
   976  00042C  646B               	cpfsgt	_wait_join_counter,c
   977  00042E  D780               	goto	l2026
   978                           
   979                           ;main.c: 204: {
   980                           ;main.c: 205: wait_join_counter = 0;
   981  000430  0E00               	movlw	0
   982  000432  6E6B               	movwf	_wait_join_counter,c
   983                           
   984                           ;main.c: 206: (LATAbits.LATA0 = 1);
   985  000434  8089               	bsf	3977,0,c	;volatile
   986                           
   987                           ;main.c: 208: do { (WDTCONbits.SWDTEN = 1);asm(" sleep");(WDTCONbits.SWDTEN = 0); } whil
      +                          e (0);;
   988  000436  80D1               	bsf	4049,0,c	;volatile
   989  000438  0003               	sleep		;# 
   990  00043A  90D1               	bcf	4049,0,c	;volatile
   991  00043C  D779               	goto	l2026
   992  00043E                     l2108:
   993  00043E  506D               	movf	_zb_state,w,c
   994                           
   995                           ; Switch size 1, requested type "space"
   996                           ; Number of cases is 2, Range of values is 0 to 1
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte            7     4 (average)
  1000                           ;	Chosen strategy is simple_byte
  1001  000440  0A00               	xorlw	0	; case 0
  1002  000442  B4D8               	btfsc	status,2,c
  1003  000444  D7F1               	goto	l2094
  1004  000446  0A01               	xorlw	1	; case 1
  1005  000448  B4D8               	btfsc	status,2,c
  1006  00044A  D7E0               	goto	l2092
  1007  00044C  D7ED               	goto	l2094
  1008  00044E                     __end_of_main_loop:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           intcon	equ	0xFF2
  1015                           postinc0	equ	0xFEE
  1016                           wreg	equ	0xFE8
  1017                           postdec1	equ	0xFE5
  1018                           fsr1l	equ	0xFE1
  1019                           status	equ	0xFD8
  1020                           
  1021 ;; *************** function _zb_handle_waitAck *****************
  1022 ;; Defined at:
  1023 ;;		line 308 in file "zb_handle.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      enum E3083
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1037 ;;      Params:         0       0       0       0
  1038 ;;      Locals:         0       0       0       0
  1039 ;;      Temps:          0       0       0       0
  1040 ;;      Totals:         0       0       0       0
  1041 ;;Total ram usage:        0 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    3
  1044 ;; This function calls:
  1045 ;;		_timer0_wait_262ms
  1046 ;; This function is called by:
  1047 ;;		_main_loop
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text3
  1052  000AA6                     __ptext3:
  1053                           	opt stack 0
  1054  000AA6                     _zb_handle_waitAck:
  1055                           	opt stack 26
  1056                           
  1057                           ;zb_handle.c: 334: timer0_wait_262ms();
  1058                           
  1059                           ;incstack = 0
  1060  000AA6  ECBC  F004         	call	_timer0_wait_262ms	;wreg free
  1061                           
  1062                           ;zb_handle.c: 335: timer0_wait_262ms();
  1063  000AAA  ECBC  F004         	call	_timer0_wait_262ms	;wreg free
  1064                           
  1065                           ;zb_handle.c: 336: return TRUE;
  1066                           ;	Return value of _zb_handle_waitAck is never used
  1067  000AAE  0012               	return	
  1068  000AB0                     __end_of_zb_handle_waitAck:
  1069                           	opt stack 0
  1070                           tblptru	equ	0xFF8
  1071                           tblptrh	equ	0xFF7
  1072                           tblptrl	equ	0xFF6
  1073                           tablat	equ	0xFF5
  1074                           intcon	equ	0xFF2
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function _timer0_wait_262ms *****************
  1082 ;; Defined at:
  1083 ;;		line 26 in file "timer.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;		None               void
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1097 ;;      Params:         0       0       0       0
  1098 ;;      Locals:         0       0       0       0
  1099 ;;      Temps:          0       0       0       0
  1100 ;;      Totals:         0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    2
  1104 ;; This function calls:
  1105 ;;		_timer0_wait_ready
  1106 ;; This function is called by:
  1107 ;;		_main_loop
  1108 ;;		_zb_handle_waitAck
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text4
  1113  000978                     __ptext4:
  1114                           	opt stack 0
  1115  000978                     _timer0_wait_262ms:
  1116                           	opt stack 26
  1117                           
  1118                           ;timer.c: 29: TMR0 = 0;
  1119                           
  1120                           ;incstack = 0
  1121  000978  0E00               	movlw	0
  1122  00097A  6ED7               	movwf	4055,c	;volatile
  1123  00097C  0E00               	movlw	0
  1124  00097E  6ED6               	movwf	4054,c	;volatile
  1125                           
  1126                           ;timer.c: 30: T0CON = 0x47;
  1127  000980  0E47               	movlw	71
  1128  000982  6ED5               	movwf	4053,c	;volatile
  1129                           
  1130                           ;timer.c: 31: INTCONbits.TMR0IF = 0;
  1131  000984  94F2               	bcf	intcon,2,c	;volatile
  1132                           
  1133                           ;timer.c: 32: INTCONbits.TMR0IE = 1;
  1134  000986  8AF2               	bsf	intcon,5,c	;volatile
  1135                           
  1136                           ;timer.c: 33: T0CONbits.TMR0ON = 1;
  1137  000988  8ED5               	bsf	4053,7,c	;volatile
  1138                           
  1139                           ;timer.c: 34: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  1140  00098A  8ED3               	bsf	4051,7,c	;volatile
  1141  00098C  0003               	sleep		;# 
  1142  00098E  9ED3               	bcf	4051,7,c	;volatile
  1143                           
  1144                           ;timer.c: 35: timer0_wait_ready();
  1145  000990  EC17  F005         	call	_timer0_wait_ready	;wreg free
  1146                           
  1147                           ;timer.c: 36: T0CONbits.TMR0ON = 0;
  1148  000994  9ED5               	bcf	4053,7,c	;volatile
  1149                           
  1150                           ;timer.c: 37: INTCONbits.TMR0IE = 0;
  1151  000996  9AF2               	bcf	intcon,5,c	;volatile
  1152  000998  0012               	return	
  1153  00099A                     __end_of_timer0_wait_262ms:
  1154                           	opt stack 0
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           intcon	equ	0xFF2
  1160                           postinc0	equ	0xFEE
  1161                           wreg	equ	0xFE8
  1162                           postdec1	equ	0xFE5
  1163                           fsr1l	equ	0xFE1
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _zb_handle_setTempRaw *****************
  1167 ;; Defined at:
  1168 ;;		line 141 in file "zb_handle.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  tempRaw         2   22[COMRAM] unsigned int 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;		None               void
  1175 ;; Registers used:
  1176 ;;		wreg, status,2
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1182 ;;      Params:         2       0       0       0
  1183 ;;      Locals:         0       0       0       0
  1184 ;;      Temps:          0       0       0       0
  1185 ;;      Totals:         2       0       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_main_loop
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text5
  1197  000A62                     __ptext5:
  1198                           	opt stack 0
  1199  000A62                     _zb_handle_setTempRaw:
  1200                           	opt stack 28
  1201                           
  1202                           ;zb_handle.c: 143: sensor_data.tempRaw = tempRaw;
  1203                           
  1204                           ;incstack = 0
  1205  000A62  C017  F04F         	movff	zb_handle_setTempRaw@tempRaw,_sensor_data
  1206  000A66  C018  F050         	movff	zb_handle_setTempRaw@tempRaw+1,_sensor_data+1
  1207                           
  1208                           ;zb_handle.c: 144: sensor_data.tempStatus = (0x03);
  1209  000A6A  0E03               	movlw	3
  1210  000A6C  6E51               	movwf	_sensor_data+2,c
  1211  000A6E  0012               	return	
  1212  000A70                     __end_of_zb_handle_setTempRaw:
  1213                           	opt stack 0
  1214                           tblptru	equ	0xFF8
  1215                           tblptrh	equ	0xFF7
  1216                           tblptrl	equ	0xFF6
  1217                           tablat	equ	0xFF5
  1218                           intcon	equ	0xFF2
  1219                           postinc0	equ	0xFEE
  1220                           wreg	equ	0xFE8
  1221                           postdec1	equ	0xFE5
  1222                           fsr1l	equ	0xFE1
  1223                           status	equ	0xFD8
  1224                           
  1225 ;; *************** function _zb_handle_setHumidityRaw *****************
  1226 ;; Defined at:
  1227 ;;		line 147 in file "zb_handle.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  humidityRaw     2   20[COMRAM] unsigned int 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;		None               void
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1241 ;;      Params:         2       0       0       0
  1242 ;;      Locals:         0       0       0       0
  1243 ;;      Temps:          0       0       0       0
  1244 ;;      Totals:         2       0       0       0
  1245 ;;Total ram usage:        2 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_main_loop
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text6
  1256  000A70                     __ptext6:
  1257                           	opt stack 0
  1258  000A70                     _zb_handle_setHumidityRaw:
  1259                           	opt stack 28
  1260                           
  1261                           ;zb_handle.c: 149: sensor_data.humidityRaw = humidityRaw;
  1262                           
  1263                           ;incstack = 0
  1264  000A70  C015  F052         	movff	zb_handle_setHumidityRaw@humidityRaw,_sensor_data+3
  1265  000A74  C016  F053         	movff	zb_handle_setHumidityRaw@humidityRaw+1,_sensor_data+4
  1266                           
  1267                           ;zb_handle.c: 150: sensor_data.humidityStatus = (0x03);
  1268  000A78  0E03               	movlw	3
  1269  000A7A  6E54               	movwf	_sensor_data+5,c
  1270  000A7C  0012               	return	
  1271  000A7E                     __end_of_zb_handle_setHumidityRaw:
  1272                           	opt stack 0
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           intcon	equ	0xFF2
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1l	equ	0xFE1
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _zb_handle_sendData *****************
  1285 ;; Defined at:
  1286 ;;		line 167 in file "zb_handle.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  frameSize       1   31[COMRAM] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;		None               void
  1293 ;; Registers used:
  1294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1300 ;;      Params:         0       0       0       0
  1301 ;;      Locals:         1       0       0       0
  1302 ;;      Temps:          3       0       0       0
  1303 ;;      Totals:         4       0       0       0
  1304 ;;Total ram usage:        4 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    3
  1307 ;; This function calls:
  1308 ;;		_uart_write
  1309 ;;		_zigbee_appendChecksum
  1310 ;; This function is called by:
  1311 ;;		_main_loop
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text7
  1316  000676                     __ptext7:
  1317                           	opt stack 0
  1318  000676                     _zb_handle_sendData:
  1319                           	opt stack 26
  1320                           
  1321                           ;zb_handle.c: 179: zb_frameToSend[(4)] = 0;
  1322                           
  1323                           ;incstack = 0
  1324  000676  0E00               	movlw	0
  1325  000678  6E32               	movwf	_zb_frameToSend+4,c
  1326                           
  1327                           ;zb_handle.c: 182: zb_frameToSend[(18)] = zb_counter++;
  1328  00067A  C06C  F040         	movff	_zb_counter,_zb_frameToSend+18
  1329  00067E  2A6C               	incf	_zb_counter,f,c
  1330                           
  1331                           ;zb_handle.c: 183: zb_frameToSend[(21)] = sensor_data.tempStatus;
  1332  000680  C051  F043         	movff	_sensor_data+2,_zb_frameToSend+21
  1333                           
  1334                           ;zb_handle.c: 184: zb_frameToSend[(22)] = sensor_data.tempRaw >> 8;
  1335  000684  C050  F01D         	movff	_sensor_data+1,??_zb_handle_sendData
  1336  000688  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  1337  00068C  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  1338  00068E  501E               	movf	??_zb_handle_sendData+1,w,c
  1339  000690  6E44               	movwf	_zb_frameToSend+22,c
  1340                           
  1341                           ;zb_handle.c: 185: zb_frameToSend[(22) + 1] = sensor_data.tempRaw;
  1342  000692  C04F  F045         	movff	_sensor_data,_zb_frameToSend+23
  1343                           
  1344                           ;zb_handle.c: 186: zb_frameToSend[(25)] = sensor_data.humidityStatus;
  1345  000696  C054  F047         	movff	_sensor_data+5,_zb_frameToSend+25
  1346                           
  1347                           ;zb_handle.c: 187: zb_frameToSend[(26)] = sensor_data.humidityRaw >> 8;
  1348  00069A  C053  F01D         	movff	_sensor_data+4,??_zb_handle_sendData
  1349  00069E  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  1350  0006A2  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  1351  0006A4  501E               	movf	??_zb_handle_sendData+1,w,c
  1352  0006A6  6E48               	movwf	_zb_frameToSend+26,c
  1353                           
  1354                           ;zb_handle.c: 188: zb_frameToSend[(26) + 1] = sensor_data.humidityRaw;
  1355  0006A8  C052  F049         	movff	_sensor_data+3,_zb_frameToSend+27
  1356                           
  1357                           ;zb_handle.c: 189: zb_frameToSend[(29)] = sensor_data.battStatus;
  1358  0006AC  C057  F04B         	movff	_sensor_data+8,_zb_frameToSend+29
  1359                           
  1360                           ;zb_handle.c: 190: zb_frameToSend[(30)] = sensor_data.battRaw >> 8;
  1361  0006B0  C056  F01D         	movff	_sensor_data+7,??_zb_handle_sendData
  1362  0006B4  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  1363  0006B8  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  1364  0006BA  501E               	movf	??_zb_handle_sendData+1,w,c
  1365  0006BC  6E4C               	movwf	_zb_frameToSend+30,c
  1366                           
  1367                           ;zb_handle.c: 191: zb_frameToSend[(30) + 1] = sensor_data.battRaw;
  1368  0006BE  C055  F04D         	movff	_sensor_data+6,_zb_frameToSend+31
  1369                           
  1370                           ;zb_handle.c: 192: zb_frameToSend[(1)] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0xFF00) >
      +                          > 8;
  1371  0006C2  0E00               	movlw	0
  1372  0006C4  6E2F               	movwf	_zb_frameToSend+1,c
  1373                           
  1374                           ;zb_handle.c: 193: zb_frameToSend[(1) + 1] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0x00F
      +                          F);
  1375  0006C6  0E1D               	movlw	29
  1376  0006C8  6E30               	movwf	_zb_frameToSend+2,c
  1377                           
  1378                           ;zb_handle.c: 195: uint8_t frameSize = sizeof(zb_frameToSend) - 1;
  1379  0006CA  0E20               	movlw	32
  1380  0006CC  6E20               	movwf	zb_handle_sendData@frameSize,c
  1381                           
  1382                           ;zb_handle.c: 196: zigbee_appendChecksum(zb_frameToSend, &frameSize);
  1383  0006CE  0E00               	movlw	high _zb_frameToSend
  1384  0006D0  6E17               	movwf	zigbee_appendChecksum@buffer+1,c
  1385  0006D2  0E2E               	movlw	low _zb_frameToSend
  1386  0006D4  6E16               	movwf	zigbee_appendChecksum@buffer,c
  1387  0006D6  0E00               	movlw	high zb_handle_sendData@frameSize
  1388  0006D8  6E19               	movwf	zigbee_appendChecksum@sizeFrame+1,c
  1389  0006DA  0E20               	movlw	low zb_handle_sendData@frameSize
  1390  0006DC  6E18               	movwf	zigbee_appendChecksum@sizeFrame,c
  1391  0006DE  ECA9  F003         	call	_zigbee_appendChecksum	;wreg free
  1392                           
  1393                           ;zb_handle.c: 198: uart_write(frameSize, zb_frameToSend);
  1394  0006E2  0E00               	movlw	high _zb_frameToSend
  1395  0006E4  6E12               	movwf	uart_write@buffer+1,c
  1396  0006E6  0E2E               	movlw	low _zb_frameToSend
  1397  0006E8  6E11               	movwf	uart_write@buffer,c
  1398  0006EA  5020               	movf	zb_handle_sendData@frameSize,w,c
  1399  0006EC  EC45  F004         	call	_uart_write
  1400  0006F0  0012               	return	
  1401  0006F2                     __end_of_zb_handle_sendData:
  1402                           	opt stack 0
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           intcon	equ	0xFF2
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec1	equ	0xFE5
  1411                           fsr1l	equ	0xFE1
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _zigbee_appendChecksum *****************
  1415 ;; Defined at:
  1416 ;;		line 221 in file "zb_handle.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  buffer          2   21[COMRAM] PTR unsigned char 
  1419 ;;		 -> zb_frameToSend(33), 
  1420 ;;  sizeFrame       2   23[COMRAM] PTR unsigned char 
  1421 ;;		 -> zb_handle_sendData@frameSize(1), 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;		None               void
  1426 ;; Registers used:
  1427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1433 ;;      Params:         4       0       0       0
  1434 ;;      Locals:         0       0       0       0
  1435 ;;      Temps:          3       0       0       0
  1436 ;;      Totals:         7       0       0       0
  1437 ;;Total ram usage:        7 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    2
  1440 ;; This function calls:
  1441 ;;		_zb_doChecksum
  1442 ;; This function is called by:
  1443 ;;		_zb_handle_sendData
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text8
  1448  000752                     __ptext8:
  1449                           	opt stack 0
  1450  000752                     _zigbee_appendChecksum:
  1451                           	opt stack 26
  1452                           
  1453                           ;zb_handle.c: 223: buffer[*sizeFrame] = zb_doChecksum(&buffer[(3)], &buffer[*sizeFrame] 
      +                          - &buffer[(3)]);
  1454                           
  1455                           ;incstack = 0
  1456  000752  0E03               	movlw	3
  1457  000754  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  1458  000756  6E11               	movwf	zb_doChecksum@frame,c
  1459  000758  0E00               	movlw	0
  1460  00075A  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  1461  00075C  6E12               	movwf	zb_doChecksum@frame+1,c
  1462  00075E  5016               	movf	zigbee_appendChecksum@buffer,w,c
  1463  000760  0F03               	addlw	3
  1464  000762  0800               	sublw	0
  1465  000764  6E1A               	movwf	??_zigbee_appendChecksum& (0+255),c
  1466  000766  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  1467  00076A  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  1468  00076E  50DF               	movf	indf2,w,c
  1469  000770  0D01               	mullw	1
  1470  000772  50F3               	movf	prodl,w,c
  1471  000774  241A               	addwf	??_zigbee_appendChecksum,w,c
  1472  000776  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  1473  000778  6E13               	movwf	zb_doChecksum@size,c
  1474  00077A  EC93  F004         	call	_zb_doChecksum	;wreg free
  1475  00077E  6E1B               	movwf	(??_zigbee_appendChecksum+1)& (0+255),c
  1476  000780  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  1477  000784  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  1478  000788  50DF               	movf	indf2,w,c
  1479  00078A  6E1C               	movwf	(??_zigbee_appendChecksum+2)& (0+255),c
  1480  00078C  501C               	movf	??_zigbee_appendChecksum+2,w,c
  1481  00078E  0D01               	mullw	1
  1482  000790  50F3               	movf	prodl,w,c
  1483  000792  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  1484  000794  6ED9               	movwf	fsr2l,c
  1485  000796  50F4               	movf	prodh,w,c
  1486  000798  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  1487  00079A  6EDA               	movwf	fsr2h,c
  1488  00079C  C01B  FFDF         	movff	??_zigbee_appendChecksum+1,indf2
  1489                           
  1490                           ;zb_handle.c: 224: (*sizeFrame)++;
  1491  0007A0  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  1492  0007A4  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  1493  0007A8  2ADF               	incf	indf2,f,c
  1494  0007AA  0012               	return	
  1495  0007AC                     __end_of_zigbee_appendChecksum:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           tblptrh	equ	0xFF7
  1499                           tblptrl	equ	0xFF6
  1500                           tablat	equ	0xFF5
  1501                           prodh	equ	0xFF4
  1502                           prodl	equ	0xFF3
  1503                           intcon	equ	0xFF2
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           postdec1	equ	0xFE5
  1507                           fsr1l	equ	0xFE1
  1508                           indf2	equ	0xFDF
  1509                           fsr2h	equ	0xFDA
  1510                           fsr2l	equ	0xFD9
  1511                           status	equ	0xFD8
  1512                           
  1513 ;; *************** function _uart_write *****************
  1514 ;; Defined at:
  1515 ;;		line 28 in file "uart.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  size            1    wreg     unsigned char 
  1518 ;;  buffer          2   16[COMRAM] PTR const unsigned char 
  1519 ;;		 -> zb_frameToSend(33), 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  size            1   20[COMRAM] unsigned char 
  1522 ;;  b               2   18[COMRAM] PTR const unsigned char 
  1523 ;;		 -> zb_frameToSend(33), 
  1524 ;;  i               1   21[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;		None               void
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1534 ;;      Params:         2       0       0       0
  1535 ;;      Locals:         4       0       0       0
  1536 ;;      Temps:          0       0       0       0
  1537 ;;      Totals:         6       0       0       0
  1538 ;;Total ram usage:        6 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_zb_handle_sendData
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text9
  1549  00088A                     __ptext9:
  1550                           	opt stack 0
  1551  00088A                     _uart_write:
  1552                           	opt stack 27
  1553                           
  1554                           ;incstack = 0
  1555                           ;uart_write@size stored from wreg
  1556  00088A  6E15               	movwf	uart_write@size,c
  1557                           
  1558                           ;uart.c: 30: uint8_t i;
  1559                           ;uart.c: 31: const uint8_t* b;
  1560                           ;uart.c: 33: b = buffer;
  1561  00088C  C012  F014         	movff	uart_write@buffer+1,uart_write@b+1
  1562  000890  C011  F013         	movff	uart_write@buffer,uart_write@b
  1563                           
  1564                           ;uart.c: 34: for (i = 0; i < size; i++)
  1565  000894  0E00               	movlw	0
  1566  000896  6E16               	movwf	uart_write@i,c
  1567  000898  D011               	goto	l1144
  1568  00089A                     l1140:
  1569                           
  1570                           ;uart.c: 35: {
  1571                           ;uart.c: 36: TXREG = buffer[i];
  1572  00089A  5016               	movf	uart_write@i,w,c
  1573  00089C  0D01               	mullw	1
  1574  00089E  50F3               	movf	prodl,w,c
  1575  0008A0  2411               	addwf	uart_write@buffer,w,c
  1576  0008A2  6ED9               	movwf	fsr2l,c
  1577  0008A4  50F4               	movf	prodh,w,c
  1578  0008A6  2012               	addwfc	uart_write@buffer+1,w,c
  1579  0008A8  6EDA               	movwf	fsr2h,c
  1580  0008AA  50DF               	movf	indf2,w,c
  1581  0008AC  6EAD               	movwf	4013,c	;volatile
  1582                           
  1583                           ;uart.c: 37: while (TXSTAbits.TRMT == 0)
  1584  0008AE  D001               	goto	l237
  1585  0008B0                     l238:
  1586                           
  1587                           ;uart.c: 38: {
  1588                           ;uart.c: 39: __nop();
  1589  0008B0  F000               	nop	
  1590  0008B2                     l237:
  1591  0008B2  A2AC               	btfss	4012,1,c	;volatile
  1592  0008B4  D7FD               	goto	l238
  1593                           
  1594                           ;uart.c: 40: }
  1595                           ;uart.c: 41: b++;
  1596  0008B6  4A13               	infsnz	uart_write@b,f,c
  1597  0008B8  2A14               	incf	uart_write@b+1,f,c
  1598  0008BA  2A16               	incf	uart_write@i,f,c
  1599  0008BC                     l1144:
  1600  0008BC  5015               	movf	uart_write@size,w,c
  1601  0008BE  5C16               	subwf	uart_write@i,w,c
  1602  0008C0  A0D8               	btfss	status,0,c
  1603  0008C2  D7EB               	goto	l1140
  1604                           
  1605                           ;uart.c: 42: }
  1606                           ;uart.c: 44: __nop();
  1607  0008C4  F000               	nop	
  1608  0008C6  0012               	return	
  1609  0008C8                     __end_of_uart_write:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           prodh	equ	0xFF4
  1616                           prodl	equ	0xFF3
  1617                           intcon	equ	0xFF2
  1618                           postinc0	equ	0xFEE
  1619                           wreg	equ	0xFE8
  1620                           postdec1	equ	0xFE5
  1621                           fsr1l	equ	0xFE1
  1622                           indf2	equ	0xFDF
  1623                           fsr2h	equ	0xFDA
  1624                           fsr2l	equ	0xFD9
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _zb_handle_resetStatus *****************
  1628 ;; Defined at:
  1629 ;;		line 159 in file "zb_handle.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;		None               void
  1636 ;; Registers used:
  1637 ;;		wreg, status,2
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1643 ;;      Params:         0       0       0       0
  1644 ;;      Locals:         0       0       0       0
  1645 ;;      Temps:          0       0       0       0
  1646 ;;      Totals:         0       0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_main_loop
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text10
  1658  000A7E                     __ptext10:
  1659                           	opt stack 0
  1660  000A7E                     _zb_handle_resetStatus:
  1661                           	opt stack 28
  1662                           
  1663                           ;zb_handle.c: 161: sensor_data.battStatus = (0x00);
  1664                           
  1665                           ;incstack = 0
  1666  000A7E  0E00               	movlw	0
  1667  000A80  6E57               	movwf	_sensor_data+8,c
  1668                           
  1669                           ;zb_handle.c: 162: sensor_data.humidityStatus = (0x00);
  1670  000A82  0E00               	movlw	0
  1671  000A84  6E54               	movwf	_sensor_data+5,c
  1672                           
  1673                           ;zb_handle.c: 163: sensor_data.tempStatus = (0x00);
  1674  000A86  0E00               	movlw	0
  1675  000A88  6E51               	movwf	_sensor_data+2,c
  1676  000A8A  0012               	return	
  1677  000A8C                     __end_of_zb_handle_resetStatus:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           prodh	equ	0xFF4
  1684                           prodl	equ	0xFF3
  1685                           intcon	equ	0xFF2
  1686                           postinc0	equ	0xFEE
  1687                           wreg	equ	0xFE8
  1688                           postdec1	equ	0xFE5
  1689                           fsr1l	equ	0xFE1
  1690                           indf2	equ	0xFDF
  1691                           fsr2h	equ	0xFDA
  1692                           fsr2l	equ	0xFD9
  1693                           status	equ	0xFD8
  1694                           
  1695 ;; *************** function _zb_handle_getStatus *****************
  1696 ;; Defined at:
  1697 ;;		line 136 in file "zb_handle.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      enum E3763
  1704 ;; Registers used:
  1705 ;;		wreg, status,2
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1711 ;;      Params:         0       0       0       0
  1712 ;;      Locals:         0       0       0       0
  1713 ;;      Temps:          0       0       0       0
  1714 ;;      Totals:         0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_main_loop
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text11
  1726  000AB8                     __ptext11:
  1727                           	opt stack 0
  1728  000AB8                     _zb_handle_getStatus:
  1729                           	opt stack 28
  1730                           
  1731                           ;zb_handle.c: 138: return zb_status;
  1732                           
  1733                           ;incstack = 0
  1734  000AB8  506E               	movf	_zb_status,w,c
  1735  000ABA  0012               	return	
  1736  000ABC                     __end_of_zb_handle_getStatus:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           intcon	equ	0xFF2
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1l	equ	0xFE1
  1749                           indf2	equ	0xFDF
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _zb_handle *****************
  1755 ;; Defined at:
  1756 ;;		line 228 in file "zb_handle.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  decodedFrame    8   35[COMRAM] struct .
  1761 ;;  sizeOfNextDa    2   32[COMRAM] unsigned int 
  1762 ;;  bSuccess        1   34[COMRAM] enum E3195
  1763 ;; Return value:  Size  Location     Type
  1764 ;;		None               void
  1765 ;; Registers used:
  1766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1772 ;;      Params:         0       0       0       0
  1773 ;;      Locals:        11       0       0       0
  1774 ;;      Temps:          0       0       0       0
  1775 ;;      Totals:        11       0       0       0
  1776 ;;Total ram usage:       11 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    3
  1779 ;; This function calls:
  1780 ;;		_leds_glitch
  1781 ;;		_uart_read
  1782 ;;		_zb_decodage
  1783 ;; This function is called by:
  1784 ;;		_main_loop
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text12
  1789  00044E                     __ptext12:
  1790                           	opt stack 0
  1791  00044E                     _zb_handle:
  1792                           	opt stack 26
  1793                           
  1794                           ;zb_handle.c: 230: BOOL bSuccess;
  1795                           ;zb_handle.c: 231: uint16_t sizeOfNextData;
  1796                           ;zb_handle.c: 232: zigbee_decodedFrame decodedFrame;
  1797                           ;zb_handle.c: 234: bSuccess = uart_read(zb_frameReceived, (3));
  1798                           
  1799                           ;incstack = 0
  1800  00044E  0100               	movlb	0	; () banked
  1801  000450  0E00               	movlw	high _zb_frameReceived
  1802  000452  6E12               	movwf	uart_read@buffer+1,c
  1803  000454  0100               	movlb	0	; () banked
  1804  000456  0EB2               	movlw	low _zb_frameReceived
  1805  000458  6E11               	movwf	uart_read@buffer,c
  1806  00045A  0E03               	movlw	3
  1807  00045C  6E13               	movwf	uart_read@nbToRead,c
  1808  00045E  EC79  F003         	call	_uart_read	;wreg free
  1809  000462  6E23               	movwf	zb_handle@bSuccess,c
  1810                           
  1811                           ;zb_handle.c: 235: if (bSuccess)
  1812  000464  5023               	movf	zb_handle@bSuccess,w,c
  1813  000466  B4D8               	btfsc	status,2,c
  1814  000468  D01E               	goto	l322
  1815                           
  1816                           ;zb_handle.c: 236: {
  1817                           ;zb_handle.c: 237: if (zb_frameReceived[0] == (0x7E))
  1818  00046A  0100               	movlb	0	; () banked
  1819  00046C  51B2               	movf	_zb_frameReceived& (0+255),w,b
  1820  00046E  0A7E               	xorlw	126
  1821  000470  A4D8               	btfss	status,2,c
  1822  000472  D017               	goto	l1826
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;zb_handle.c: 238: {
  1826                           ;zb_handle.c: 239: sizeOfNextData = (((uint16_t) zb_frameReceived[1]) << 8) | (zb_frameR
      +                          eceived[2]);
  1827  000474  0100               	movlb	0	; () banked
  1828  000476  51B3               	movf	(_zb_frameReceived+1)& (0+255),w,b
  1829  000478  6E22               	movwf	zb_handle@sizeOfNextData+1,c
  1830  00047A  0100               	movlb	0	; () banked
  1831  00047C  51B4               	movf	(_zb_frameReceived+2)& (0+255),w,b
  1832  00047E  6E21               	movwf	zb_handle@sizeOfNextData,c
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;zb_handle.c: 240: if (sizeOfNextData <= ((50) - (3)))
  1836  000480  0E30               	movlw	48
  1837  000482  5C21               	subwf	zb_handle@sizeOfNextData,w,c
  1838  000484  0E00               	movlw	0
  1839  000486  5822               	subwfb	zb_handle@sizeOfNextData+1,w,c
  1840  000488  B0D8               	btfsc	status,0,c
  1841  00048A  D00B               	goto	l1826
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;zb_handle.c: 241: {
  1845                           ;zb_handle.c: 242: bSuccess = uart_read(zb_frameReceived + (3), sizeOfNextData + 1);
  1846  00048C  0100               	movlb	0	; () banked
  1847  00048E  0E00               	movlw	high (_zb_frameReceived+3)
  1848  000490  6E12               	movwf	uart_read@buffer+1,c
  1849  000492  0100               	movlb	0	; () banked
  1850  000494  0EB5               	movlw	low (_zb_frameReceived+3)
  1851  000496  6E11               	movwf	uart_read@buffer,c
  1852  000498  2821               	incf	zb_handle@sizeOfNextData,w,c
  1853  00049A  6E13               	movwf	uart_read@nbToRead,c
  1854  00049C  EC79  F003         	call	_uart_read	;wreg free
  1855  0004A0  D001               	goto	L7
  1856  0004A2                     l1826:
  1857                           
  1858                           ;zb_handle.c: 249: else
  1859                           ;zb_handle.c: 250: {
  1860                           ;zb_handle.c: 251: bSuccess = FALSE;
  1861  0004A2  0E00               	movlw	0
  1862  0004A4                     L7:
  1863  0004A4  6E23               	movwf	zb_handle@bSuccess,c
  1864  0004A6                     l322:
  1865                           
  1866                           ;zb_handle.c: 252: }
  1867                           ;zb_handle.c: 253: }
  1868                           ;zb_handle.c: 255: if (bSuccess)
  1869  0004A6  5023               	movf	zb_handle@bSuccess,w,c
  1870  0004A8  B4D8               	btfsc	status,2,c
  1871  0004AA  D00F               	goto	l1830
  1872                           
  1873                           ;zb_handle.c: 256: {
  1874                           ;zb_handle.c: 257: bSuccess = zb_decodage(zb_frameReceived + (3), sizeOfNextData + 1, &d
      +                          ecodedFrame);
  1875  0004AC  0100               	movlb	0	; () banked
  1876  0004AE  0E00               	movlw	high (_zb_frameReceived+3)
  1877  0004B0  6E17               	movwf	zb_decodage@frame+1,c
  1878  0004B2  0100               	movlb	0	; () banked
  1879  0004B4  0EB5               	movlw	low (_zb_frameReceived+3)
  1880  0004B6  6E16               	movwf	zb_decodage@frame,c
  1881  0004B8  2821               	incf	zb_handle@sizeOfNextData,w,c
  1882  0004BA  6E18               	movwf	zb_decodage@frameSize,c
  1883  0004BC  0E00               	movlw	high zb_handle@decodedFrame
  1884  0004BE  6E1A               	movwf	zb_decodage@decodedFrame+1,c
  1885  0004C0  0E24               	movlw	low zb_handle@decodedFrame
  1886  0004C2  6E19               	movwf	zb_decodage@decodedFrame,c
  1887  0004C4  EC0E  F000         	call	_zb_decodage	;wreg free
  1888  0004C8  6E23               	movwf	zb_handle@bSuccess,c
  1889  0004CA                     l1830:
  1890                           
  1891                           ;zb_handle.c: 258: }
  1892                           ;zb_handle.c: 260: if (bSuccess)
  1893  0004CA  5023               	movf	zb_handle@bSuccess,w,c
  1894  0004CC  A4D8               	btfss	status,2,c
  1895  0004CE  D015               	goto	l1848
  1896  0004D0  D024               	goto	l341
  1897  0004D2                     l1834:
  1898                           
  1899                           ;zb_handle.c: 274: if (decodedFrame.status == 0x02)
  1900  0004D2  5025               	movf	zb_handle@decodedFrame+1,w,c
  1901  0004D4  0A02               	xorlw	2
  1902  0004D6  A4D8               	btfss	status,2,c
  1903  0004D8  D006               	goto	l1840
  1904                           
  1905                           ;zb_handle.c: 275: {
  1906                           ;zb_handle.c: 276: zb_status = ZB_STATUS_JOINED;
  1907  0004DA  0E01               	movlw	1
  1908  0004DC  6E6E               	movwf	_zb_status,c
  1909                           
  1910                           ;zb_handle.c: 277: leds_glitch((0x10));
  1911  0004DE  0E10               	movlw	16
  1912  0004E0  ECFE  F004         	call	_leds_glitch
  1913                           
  1914                           ;zb_handle.c: 278: }
  1915  0004E4  D01A               	goto	l341
  1916  0004E6                     l1840:
  1917                           
  1918                           ;zb_handle.c: 279: else if (decodedFrame.status == 0x03)
  1919  0004E6  5025               	movf	zb_handle@decodedFrame+1,w,c
  1920  0004E8  0A03               	xorlw	3
  1921  0004EA  A4D8               	btfss	status,2,c
  1922  0004EC  D016               	goto	l341
  1923                           
  1924                           ;zb_handle.c: 280: {
  1925                           ;zb_handle.c: 281: zb_status = ZB_STATUS_NOT_JOINED;
  1926  0004EE  0E00               	movlw	0
  1927  0004F0  6E6E               	movwf	_zb_status,c
  1928                           
  1929                           ;zb_handle.c: 282: leds_glitch((0x08));
  1930  0004F2  0E08               	movlw	8
  1931  0004F4  ECFE  F004         	call	_leds_glitch
  1932  0004F8  D010               	goto	l341
  1933  0004FA                     l1848:
  1934  0004FA  5024               	movf	zb_handle@decodedFrame,w,c
  1935                           
  1936                           ; Switch size 1, requested type "space"
  1937                           ; Number of cases is 6, Range of values is 8 to 144
  1938                           ; switch strategies available:
  1939                           ; Name         Instructions Cycles
  1940                           ; simple_byte           19    10 (average)
  1941                           ;	Chosen strategy is simple_byte
  1942  0004FC  0A08               	xorlw	8	; case 8
  1943  0004FE  B4D8               	btfsc	status,2,c
  1944  000500  D00C               	goto	l341
  1945  000502  0A18               	xorlw	24	; case 16
  1946  000504  B4D8               	btfsc	status,2,c
  1947  000506  D009               	goto	l341
  1948  000508  0A98               	xorlw	152	; case 136
  1949  00050A  B4D8               	btfsc	status,2,c
  1950  00050C  D006               	goto	l341
  1951  00050E  0A02               	xorlw	2	; case 138
  1952  000510  B4D8               	btfsc	status,2,c
  1953  000512  D7DF               	goto	l1834
  1954  000514  0A01               	xorlw	1	; case 139
  1955  000516  A4D8               	btfss	status,2,c
  1956  000518  0A1B               	xorlw	27	; case 144
  1957  00051A                     l341:
  1958  00051A  0012               	return	
  1959  00051C                     __end_of_zb_handle:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           prodh	equ	0xFF4
  1966                           prodl	equ	0xFF3
  1967                           intcon	equ	0xFF2
  1968                           postinc0	equ	0xFEE
  1969                           wreg	equ	0xFE8
  1970                           postdec1	equ	0xFE5
  1971                           fsr1l	equ	0xFE1
  1972                           indf2	equ	0xFDF
  1973                           fsr2h	equ	0xFDA
  1974                           fsr2l	equ	0xFD9
  1975                           status	equ	0xFD8
  1976                           
  1977 ;; *************** function _zb_decodage *****************
  1978 ;; Defined at:
  1979 ;;		line 22 in file "zb.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  frame           2   21[COMRAM] PTR unsigned char 
  1982 ;;		 -> zb_frameReceived(50), 
  1983 ;;  frameSize       1   23[COMRAM] unsigned char 
  1984 ;;  decodedFrame    2   24[COMRAM] PTR struct .
  1985 ;;		 -> zb_handle@decodedFrame(8), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  bCorrectlyDe    1   31[COMRAM] enum E3083
  1988 ;;  checksum        1   30[COMRAM] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      enum E3083
  1991 ;; Registers used:
  1992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1998 ;;      Params:         5       0       0       0
  1999 ;;      Locals:         2       0       0       0
  2000 ;;      Temps:          4       0       0       0
  2001 ;;      Totals:        11       0       0       0
  2002 ;;Total ram usage:       11 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    2
  2005 ;; This function calls:
  2006 ;;		_zb_doChecksum
  2007 ;; This function is called by:
  2008 ;;		_zb_handle
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text13
  2013  00001C                     __ptext13:
  2014                           	opt stack 0
  2015  00001C                     _zb_decodage:
  2016                           	opt stack 26
  2017                           
  2018                           ;zb.c: 24: BOOL bCorrectlyDecoded;
  2019                           ;zb.c: 25: uint8_t checksum;
  2020                           ;zb.c: 26: bCorrectlyDecoded = FALSE;
  2021                           
  2022                           ;incstack = 0
  2023  00001C  0E00               	movlw	0
  2024  00001E  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  2025                           
  2026                           ;zb.c: 28: if (frameSize >= 1)
  2027  000020  5018               	movf	zb_decodage@frameSize,w,c
  2028  000022  B4D8               	btfsc	status,2,c
  2029  000024  D022               	goto	l262
  2030                           
  2031                           ;zb.c: 29: {
  2032                           ;zb.c: 30: checksum = zb_doChecksum(frame, frameSize - 1);
  2033  000026  C017  F012         	movff	zb_decodage@frame+1,zb_doChecksum@frame+1
  2034  00002A  C016  F011         	movff	zb_decodage@frame,zb_doChecksum@frame
  2035  00002E  0418               	decf	zb_decodage@frameSize,w,c
  2036  000030  6E13               	movwf	zb_doChecksum@size,c
  2037  000032  EC93  F004         	call	_zb_doChecksum	;wreg free
  2038  000036  6E1F               	movwf	zb_decodage@checksum,c
  2039                           
  2040                           ;zb.c: 31: if (checksum != frame[frameSize - 1])
  2041  000038  0EFF               	movlw	255
  2042  00003A  6E1B               	movwf	??_zb_decodage& (0+255),c
  2043  00003C  0EFF               	movlw	255
  2044  00003E  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  2045  000040  5018               	movf	zb_decodage@frameSize,w,c
  2046  000042  6E1D               	movwf	(??_zb_decodage+2)& (0+255),c
  2047  000044  6A1E               	clrf	(??_zb_decodage+3)& (0+255),c
  2048  000046  501B               	movf	??_zb_decodage,w,c
  2049  000048  261D               	addwf	??_zb_decodage+2,f,c
  2050  00004A  501C               	movf	??_zb_decodage+1,w,c
  2051  00004C  221E               	addwfc	??_zb_decodage+3,f,c
  2052  00004E  501D               	movf	??_zb_decodage+2,w,c
  2053  000050  2416               	addwf	zb_decodage@frame,w,c
  2054  000052  6ED9               	movwf	fsr2l,c
  2055  000054  501E               	movf	??_zb_decodage+3,w,c
  2056  000056  2017               	addwfc	zb_decodage@frame+1,w,c
  2057  000058  6EDA               	movwf	fsr2h,c
  2058  00005A  50DF               	movf	indf2,w,c
  2059  00005C  181F               	xorwf	zb_decodage@checksum,w,c
  2060  00005E  B4D8               	btfsc	status,2,c
  2061  000060  D002               	goto	l1778
  2062                           
  2063                           ;zb.c: 32: {
  2064                           ;zb.c: 34: bCorrectlyDecoded = FALSE;
  2065  000062  0E00               	movlw	0
  2066  000064  D001               	goto	L8
  2067  000066                     l1778:
  2068                           
  2069                           ;zb.c: 36: else
  2070                           ;zb.c: 37: {
  2071                           ;zb.c: 38: bCorrectlyDecoded = TRUE;
  2072  000066  0E01               	movlw	1
  2073  000068                     L8:
  2074  000068  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  2075  00006A                     l262:
  2076                           
  2077                           ;zb.c: 39: }
  2078                           ;zb.c: 40: }
  2079                           ;zb.c: 42: if (bCorrectlyDecoded)
  2080  00006A  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  2081  00006C  B4D8               	btfsc	status,2,c
  2082  00006E  D0B0               	goto	l1804
  2083                           
  2084                           ;zb.c: 43: {
  2085                           ;zb.c: 44: decodedFrame->type = frame[0];
  2086  000070  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  2087  000074  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  2088  000078  C019  FFE1         	movff	zb_decodage@decodedFrame,fsr1l
  2089  00007C  C01A  FFE2         	movff	zb_decodage@decodedFrame+1,fsr1h
  2090  000080  CFDF FFE7          	movff	indf2,indf1
  2091                           
  2092                           ;zb.c: 45: switch (frame[0])
  2093  000084  D096               	goto	l1802
  2094  000086                     l1782:
  2095                           
  2096                           ;zb.c: 48: decodedFrame->frameID = frame[1];
  2097  000086  EE20 F001          	lfsr	2,1
  2098  00008A  5016               	movf	zb_decodage@frame,w,c
  2099  00008C  26D9               	addwf	fsr2l,f,c
  2100  00008E  5017               	movf	zb_decodage@frame+1,w,c
  2101  000090  22DA               	addwfc	fsr2h,f,c
  2102  000092  EE10 F007          	lfsr	1,7
  2103  000096  5019               	movf	zb_decodage@decodedFrame,w,c
  2104  000098  26E1               	addwf	fsr1l,f,c
  2105  00009A  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2106  00009C  22E2               	addwfc	fsr1h,f,c
  2107  00009E  CFDF FFE7          	movff	indf2,indf1
  2108                           
  2109                           ;zb.c: 49: decodedFrame->AT[0] = frame[2];
  2110  0000A2  EE20 F002          	lfsr	2,2
  2111  0000A6  5016               	movf	zb_decodage@frame,w,c
  2112  0000A8  26D9               	addwf	fsr2l,f,c
  2113  0000AA  5017               	movf	zb_decodage@frame+1,w,c
  2114  0000AC  22DA               	addwfc	fsr2h,f,c
  2115  0000AE  EE10 F002          	lfsr	1,2
  2116  0000B2  5019               	movf	zb_decodage@decodedFrame,w,c
  2117  0000B4  26E1               	addwf	fsr1l,f,c
  2118  0000B6  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2119  0000B8  22E2               	addwfc	fsr1h,f,c
  2120  0000BA  CFDF FFE7          	movff	indf2,indf1
  2121                           
  2122                           ;zb.c: 50: decodedFrame->AT[1] = frame[3];
  2123  0000BE  EE20 F003          	lfsr	2,3
  2124  0000C2  5016               	movf	zb_decodage@frame,w,c
  2125  0000C4  26D9               	addwf	fsr2l,f,c
  2126  0000C6  5017               	movf	zb_decodage@frame+1,w,c
  2127  0000C8  22DA               	addwfc	fsr2h,f,c
  2128  0000CA  EE10 F003          	lfsr	1,3
  2129  0000CE  5019               	movf	zb_decodage@decodedFrame,w,c
  2130  0000D0  26E1               	addwf	fsr1l,f,c
  2131  0000D2  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2132  0000D4  22E2               	addwfc	fsr1h,f,c
  2133  0000D6  CFDF FFE7          	movff	indf2,indf1
  2134                           
  2135                           ;zb.c: 51: decodedFrame->status = frame[4];
  2136  0000DA  EE20 F004          	lfsr	2,4
  2137  0000DE  5016               	movf	zb_decodage@frame,w,c
  2138  0000E0  26D9               	addwf	fsr2l,f,c
  2139  0000E2  5017               	movf	zb_decodage@frame+1,w,c
  2140  0000E4  22DA               	addwfc	fsr2h,f,c
  2141  0000E6  EE10 F001          	lfsr	1,1
  2142  0000EA  5019               	movf	zb_decodage@decodedFrame,w,c
  2143  0000EC  26E1               	addwf	fsr1l,f,c
  2144  0000EE  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2145  0000F0  22E2               	addwfc	fsr1h,f,c
  2146  0000F2  CFDF FFE7          	movff	indf2,indf1
  2147                           
  2148                           ;zb.c: 52: decodedFrame->size = frameSize - 6;
  2149  0000F6  EE20 F006          	lfsr	2,6
  2150  0000FA  5019               	movf	zb_decodage@decodedFrame,w,c
  2151  0000FC  26D9               	addwf	fsr2l,f,c
  2152  0000FE  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2153  000100  22DA               	addwfc	fsr2h,f,c
  2154  000102  5018               	movf	zb_decodage@frameSize,w,c
  2155  000104  0FFA               	addlw	250
  2156  000106  6EDF               	movwf	indf2,c
  2157                           
  2158                           ;zb.c: 53: if (decodedFrame->size == 0)
  2159  000108  EE20 F006          	lfsr	2,6
  2160  00010C  5019               	movf	zb_decodage@decodedFrame,w,c
  2161  00010E  26D9               	addwf	fsr2l,f,c
  2162  000110  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2163  000112  22DA               	addwfc	fsr2h,f,c
  2164  000114  50DF               	movf	indf2,w,c
  2165  000116  A4D8               	btfss	status,2,c
  2166  000118  D00B               	goto	l1790
  2167                           
  2168                           ;zb.c: 54: {
  2169                           ;zb.c: 55: decodedFrame->data = (0);
  2170  00011A  EE20 F004          	lfsr	2,4
  2171  00011E  5019               	movf	zb_decodage@decodedFrame,w,c
  2172  000120  26D9               	addwf	fsr2l,f,c
  2173  000122  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2174  000124  22DA               	addwfc	fsr2h,f,c
  2175  000126  0E00               	movlw	0
  2176  000128  6EDE               	movwf	postinc2,c
  2177  00012A  0E00               	movlw	0
  2178  00012C  6EDD               	movwf	postdec2,c
  2179                           
  2180                           ;zb.c: 56: }
  2181  00012E  D050               	goto	l1804
  2182  000130                     l1790:
  2183                           
  2184                           ;zb.c: 57: else
  2185                           ;zb.c: 58: {
  2186                           ;zb.c: 59: decodedFrame->data = &frame[5];
  2187  000130  0E05               	movlw	5
  2188  000132  2416               	addwf	zb_decodage@frame,w,c
  2189  000134  6E1B               	movwf	??_zb_decodage& (0+255),c
  2190  000136  0E00               	movlw	0
  2191  000138  2017               	addwfc	zb_decodage@frame+1,w,c
  2192  00013A  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  2193  00013C  EE20 F004          	lfsr	2,4
  2194  000140  5019               	movf	zb_decodage@decodedFrame,w,c
  2195  000142  26D9               	addwf	fsr2l,f,c
  2196  000144  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2197  000146  22DA               	addwfc	fsr2h,f,c
  2198  000148  C01B  FFDE         	movff	??_zb_decodage,postinc2
  2199  00014C  C01C  FFDD         	movff	??_zb_decodage+1,postdec2
  2200  000150  D03F               	goto	l1804
  2201  000152                     l1792:
  2202                           
  2203                           ;zb.c: 64: decodedFrame->status = frame[1];
  2204  000152  EE20 F001          	lfsr	2,1
  2205  000156  5016               	movf	zb_decodage@frame,w,c
  2206  000158  26D9               	addwf	fsr2l,f,c
  2207  00015A  5017               	movf	zb_decodage@frame+1,w,c
  2208  00015C  22DA               	addwfc	fsr2h,f,c
  2209  00015E  EE10 F001          	lfsr	1,1
  2210  000162  5019               	movf	zb_decodage@decodedFrame,w,c
  2211  000164  26E1               	addwf	fsr1l,f,c
  2212  000166  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2213  000168  22E2               	addwfc	fsr1h,f,c
  2214  00016A  CFDF FFE7          	movff	indf2,indf1
  2215                           
  2216                           ;zb.c: 65: bCorrectlyDecoded = TRUE;
  2217  00016E  0E01               	movlw	1
  2218  000170  D01E               	goto	L9
  2219  000172                     l1796:
  2220                           
  2221                           ;zb.c: 69: decodedFrame->frameID = frame[1];
  2222  000172  EE20 F001          	lfsr	2,1
  2223  000176  5016               	movf	zb_decodage@frame,w,c
  2224  000178  26D9               	addwf	fsr2l,f,c
  2225  00017A  5017               	movf	zb_decodage@frame+1,w,c
  2226  00017C  22DA               	addwfc	fsr2h,f,c
  2227  00017E  EE10 F007          	lfsr	1,7
  2228  000182  5019               	movf	zb_decodage@decodedFrame,w,c
  2229  000184  26E1               	addwf	fsr1l,f,c
  2230  000186  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2231  000188  22E2               	addwfc	fsr1h,f,c
  2232  00018A  CFDF FFE7          	movff	indf2,indf1
  2233                           
  2234                           ;zb.c: 70: decodedFrame->status = frame[5];
  2235  00018E  EE20 F005          	lfsr	2,5
  2236  000192  5016               	movf	zb_decodage@frame,w,c
  2237  000194  26D9               	addwf	fsr2l,f,c
  2238  000196  5017               	movf	zb_decodage@frame+1,w,c
  2239  000198  22DA               	addwfc	fsr2h,f,c
  2240  00019A  EE10 F001          	lfsr	1,1
  2241  00019E  5019               	movf	zb_decodage@decodedFrame,w,c
  2242  0001A0  26E1               	addwf	fsr1l,f,c
  2243  0001A2  501A               	movf	zb_decodage@decodedFrame+1,w,c
  2244  0001A4  22E2               	addwfc	fsr1h,f,c
  2245  0001A6  CFDF FFE7          	movff	indf2,indf1
  2246                           
  2247                           ;zb.c: 71: break;
  2248  0001AA  D012               	goto	l1804
  2249  0001AC                     l1798:
  2250                           
  2251                           ;zb.c: 74: bCorrectlyDecoded = FALSE;
  2252  0001AC  0E00               	movlw	0
  2253  0001AE                     L9:
  2254  0001AE  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  2255                           
  2256                           ;zb.c: 75: break;
  2257  0001B0  D00F               	goto	l1804
  2258  0001B2                     l1802:
  2259  0001B2  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  2260  0001B6  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  2261  0001BA  50DF               	movf	indf2,w,c
  2262                           
  2263                           ; Switch size 1, requested type "space"
  2264                           ; Number of cases is 3, Range of values is 136 to 139
  2265                           ; switch strategies available:
  2266                           ; Name         Instructions Cycles
  2267                           ; simple_byte           10     6 (average)
  2268                           ;	Chosen strategy is simple_byte
  2269  0001BC  0A88               	xorlw	136	; case 136
  2270  0001BE  B4D8               	btfsc	status,2,c
  2271  0001C0  D762               	goto	l1782
  2272  0001C2  0A02               	xorlw	2	; case 138
  2273  0001C4  B4D8               	btfsc	status,2,c
  2274  0001C6  D7C5               	goto	l1792
  2275  0001C8  0A01               	xorlw	1	; case 139
  2276  0001CA  B4D8               	btfsc	status,2,c
  2277  0001CC  D7D2               	goto	l1796
  2278  0001CE  D7EE               	goto	l1798
  2279  0001D0                     l1804:
  2280                           
  2281                           ;zb.c: 77: }
  2282                           ;zb.c: 79: return bCorrectlyDecoded;
  2283  0001D0  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  2284  0001D2  0012               	return	
  2285  0001D4                     __end_of_zb_decodage:
  2286                           	opt stack 0
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           prodh	equ	0xFF4
  2292                           prodl	equ	0xFF3
  2293                           intcon	equ	0xFF2
  2294                           postinc0	equ	0xFEE
  2295                           wreg	equ	0xFE8
  2296                           indf1	equ	0xFE7
  2297                           postdec1	equ	0xFE5
  2298                           fsr1h	equ	0xFE2
  2299                           fsr1l	equ	0xFE1
  2300                           indf2	equ	0xFDF
  2301                           postinc2	equ	0xFDE
  2302                           postdec2	equ	0xFDD
  2303                           fsr2h	equ	0xFDA
  2304                           fsr2l	equ	0xFD9
  2305                           status	equ	0xFD8
  2306                           
  2307 ;; *************** function _zb_doChecksum *****************
  2308 ;; Defined at:
  2309 ;;		line 9 in file "zb.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  frame           2   16[COMRAM] PTR unsigned char 
  2312 ;;		 -> zb_frameReceived(50), zb_frameToSend(33), 
  2313 ;;  size            1   18[COMRAM] unsigned char 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  i               1   20[COMRAM] unsigned char 
  2316 ;;  checksum        1   19[COMRAM] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      unsigned char 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2326 ;;      Params:         3       0       0       0
  2327 ;;      Locals:         2       0       0       0
  2328 ;;      Temps:          0       0       0       0
  2329 ;;      Totals:         5       0       0       0
  2330 ;;Total ram usage:        5 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    1
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_zb_decodage
  2337 ;;		_zigbee_appendChecksum
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text14
  2342  000926                     __ptext14:
  2343                           	opt stack 0
  2344  000926                     _zb_doChecksum:
  2345                           	opt stack 26
  2346                           
  2347                           ;zb.c: 11: uint8_t checksum;
  2348                           ;zb.c: 13: checksum = 0xFF;
  2349                           
  2350                           ;incstack = 0
  2351  000926  6814               	setf	zb_doChecksum@checksum,c
  2352                           
  2353                           ;zb.c: 14: for (uint8_t i = 0; i < size; i++)
  2354  000928  0E00               	movlw	0
  2355  00092A  6E15               	movwf	zb_doChecksum@i,c
  2356  00092C  D00B               	goto	l1732
  2357  00092E                     l1728:
  2358                           
  2359                           ;zb.c: 15: {
  2360                           ;zb.c: 16: checksum -= frame[i];
  2361  00092E  5015               	movf	zb_doChecksum@i,w,c
  2362  000930  0D01               	mullw	1
  2363  000932  50F3               	movf	prodl,w,c
  2364  000934  2411               	addwf	zb_doChecksum@frame,w,c
  2365  000936  6ED9               	movwf	fsr2l,c
  2366  000938  50F4               	movf	prodh,w,c
  2367  00093A  2012               	addwfc	zb_doChecksum@frame+1,w,c
  2368  00093C  6EDA               	movwf	fsr2h,c
  2369  00093E  50DF               	movf	indf2,w,c
  2370  000940  5E14               	subwf	zb_doChecksum@checksum,f,c
  2371  000942  2A15               	incf	zb_doChecksum@i,f,c
  2372  000944                     l1732:
  2373  000944  5013               	movf	zb_doChecksum@size,w,c
  2374  000946  5C15               	subwf	zb_doChecksum@i,w,c
  2375  000948  A0D8               	btfss	status,0,c
  2376  00094A  D7F1               	goto	l1728
  2377                           
  2378                           ;zb.c: 17: }
  2379                           ;zb.c: 19: return checksum;
  2380  00094C  5014               	movf	zb_doChecksum@checksum,w,c
  2381  00094E  0012               	return	
  2382  000950                     __end_of_zb_doChecksum:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           prodh	equ	0xFF4
  2389                           prodl	equ	0xFF3
  2390                           intcon	equ	0xFF2
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           indf1	equ	0xFE7
  2394                           postdec1	equ	0xFE5
  2395                           fsr1h	equ	0xFE2
  2396                           fsr1l	equ	0xFE1
  2397                           indf2	equ	0xFDF
  2398                           postinc2	equ	0xFDE
  2399                           postdec2	equ	0xFDD
  2400                           fsr2h	equ	0xFDA
  2401                           fsr2l	equ	0xFD9
  2402                           status	equ	0xFD8
  2403                           
  2404 ;; *************** function _uart_read *****************
  2405 ;; Defined at:
  2406 ;;		line 48 in file "uart.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  2409 ;;		 -> zb_frameReceived(50), 
  2410 ;;  nbToRead        1   18[COMRAM] unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  b               2   19[COMRAM] PTR unsigned char 
  2413 ;;		 -> zb_frameReceived(50), 
  2414 ;;  i               1   22[COMRAM] unsigned char 
  2415 ;;  expectedNbRe    1   21[COMRAM] enum E3083
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      enum E3083
  2418 ;; Registers used:
  2419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2425 ;;      Params:         3       0       0       0
  2426 ;;      Locals:         4       0       0       0
  2427 ;;      Temps:          0       0       0       0
  2428 ;;      Totals:         7       0       0       0
  2429 ;;Total ram usage:        7 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_zb_handle
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text15
  2440  0006F2                     __ptext15:
  2441                           	opt stack 0
  2442  0006F2                     _uart_read:
  2443                           	opt stack 27
  2444                           
  2445                           ;uart.c: 50: BOOL expectedNbRead;
  2446                           ;uart.c: 51: uint8_t i;
  2447                           ;uart.c: 52: uint8_t* b;
  2448                           ;uart.c: 53: b = buffer;
  2449                           
  2450                           ;incstack = 0
  2451  0006F2  C012  F015         	movff	uart_read@buffer+1,uart_read@b+1
  2452  0006F6  C011  F014         	movff	uart_read@buffer,uart_read@b
  2453                           
  2454                           ;uart.c: 55: if (nbToRead <= UART_rxBufferNb)
  2455  0006FA  5013               	movf	uart_read@nbToRead,w,c
  2456  0006FC  5C65               	subwf	_UART_rxBufferNb,w,c
  2457  0006FE  A0D8               	btfss	status,0,c
  2458  000700  D024               	goto	l1766
  2459                           
  2460                           ;uart.c: 56: {
  2461                           ;uart.c: 58: for (i = 0; i < nbToRead; i++)
  2462  000702  0E00               	movlw	0
  2463  000704  6E17               	movwf	uart_read@i,c
  2464  000706  D019               	goto	l1760
  2465  000708                     l1748:
  2466                           
  2467                           ;uart.c: 59: {
  2468                           ;uart.c: 60: *b = UART_rxBuffer[UART_readIndex];
  2469  000708  5064               	movf	_UART_readIndex,w,c
  2470  00070A  0D01               	mullw	1
  2471  00070C  0100               	movlb	0	; () banked
  2472  00070E  0E80               	movlw	low _UART_rxBuffer
  2473  000710  24F3               	addwf	prodl,w,c
  2474  000712  6ED9               	movwf	fsr2l,c
  2475  000714  0100               	movlb	0	; () banked
  2476  000716  0E00               	movlw	high _UART_rxBuffer
  2477  000718  20F4               	addwfc	prodh,w,c
  2478  00071A  6EDA               	movwf	fsr2h,c
  2479  00071C  C014  FFE1         	movff	uart_read@b,fsr1l
  2480  000720  C015  FFE2         	movff	uart_read@b+1,fsr1h
  2481  000724  CFDF FFE7          	movff	indf2,indf1
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;uart.c: 61: UART_readIndex++;
  2485  000728  2A64               	incf	_UART_readIndex,f,c
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;uart.c: 62: if (UART_readIndex >= (50))
  2489  00072A  0E31               	movlw	49
  2490  00072C  6464               	cpfsgt	_UART_readIndex,c
  2491  00072E  D002               	goto	l1756
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;uart.c: 63: {
  2495                           ;uart.c: 64: UART_readIndex = 0;
  2496  000730  0E00               	movlw	0
  2497  000732  6E64               	movwf	_UART_readIndex,c
  2498  000734                     l1756:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;uart.c: 65: }
  2502                           ;uart.c: 66: b++;
  2503  000734  4A14               	infsnz	uart_read@b,f,c
  2504  000736  2A15               	incf	uart_read@b+1,f,c
  2505                           
  2506                           ; BSR set to: 0
  2507  000738  2A17               	incf	uart_read@i,f,c
  2508  00073A                     l1760:
  2509  00073A  5013               	movf	uart_read@nbToRead,w,c
  2510  00073C  5C17               	subwf	uart_read@i,w,c
  2511  00073E  A0D8               	btfss	status,0,c
  2512  000740  D7E3               	goto	l1748
  2513                           
  2514                           ;uart.c: 67: }
  2515                           ;uart.c: 68: UART_rxBufferNb -= nbToRead;
  2516  000742  5013               	movf	uart_read@nbToRead,w,c
  2517  000744  5E65               	subwf	_UART_rxBufferNb,f,c
  2518                           
  2519                           ;uart.c: 69: expectedNbRead = TRUE;
  2520  000746  0E01               	movlw	1
  2521  000748  D001               	goto	L10
  2522  00074A                     l1766:
  2523                           
  2524                           ;uart.c: 71: else
  2525                           ;uart.c: 72: {
  2526                           ;uart.c: 73: expectedNbRead = FALSE;
  2527  00074A  0E00               	movlw	0
  2528  00074C                     L10:
  2529  00074C  6E16               	movwf	uart_read@expectedNbRead,c
  2530                           
  2531                           ;uart.c: 74: }
  2532                           ;uart.c: 76: return expectedNbRead;
  2533  00074E  5016               	movf	uart_read@expectedNbRead,w,c
  2534  000750  0012               	return	
  2535  000752                     __end_of_uart_read:
  2536                           	opt stack 0
  2537                           tblptru	equ	0xFF8
  2538                           tblptrh	equ	0xFF7
  2539                           tblptrl	equ	0xFF6
  2540                           tablat	equ	0xFF5
  2541                           prodh	equ	0xFF4
  2542                           prodl	equ	0xFF3
  2543                           intcon	equ	0xFF2
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           indf1	equ	0xFE7
  2547                           postdec1	equ	0xFE5
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           postdec2	equ	0xFDD
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           status	equ	0xFD8
  2556                           
  2557 ;; *************** function _timer0_wait_65ms *****************
  2558 ;; Defined at:
  2559 ;;		line 11 in file "timer.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2573 ;;      Params:         0       0       0       0
  2574 ;;      Locals:         0       0       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:         0       0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    2
  2580 ;; This function calls:
  2581 ;;		_timer0_wait_ready
  2582 ;; This function is called by:
  2583 ;;		_main_loop
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text16
  2588  00099A                     __ptext16:
  2589                           	opt stack 0
  2590  00099A                     _timer0_wait_65ms:
  2591                           	opt stack 27
  2592                           
  2593                           ;timer.c: 13: TMR0 = 0;
  2594                           
  2595                           ;incstack = 0
  2596  00099A  0E00               	movlw	0
  2597  00099C  6ED7               	movwf	4055,c	;volatile
  2598  00099E  0E00               	movlw	0
  2599  0009A0  6ED6               	movwf	4054,c	;volatile
  2600                           
  2601                           ;timer.c: 14: T0CON = 0x45;
  2602  0009A2  0E45               	movlw	69
  2603  0009A4  6ED5               	movwf	4053,c	;volatile
  2604                           
  2605                           ;timer.c: 15: INTCONbits.TMR0IF = 0;
  2606  0009A6  94F2               	bcf	intcon,2,c	;volatile
  2607                           
  2608                           ;timer.c: 16: INTCONbits.TMR0IE = 1;
  2609  0009A8  8AF2               	bsf	intcon,5,c	;volatile
  2610                           
  2611                           ;timer.c: 17: T0CONbits.TMR0ON = 1;
  2612  0009AA  8ED5               	bsf	4053,7,c	;volatile
  2613                           
  2614                           ;timer.c: 19: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2615  0009AC  8ED3               	bsf	4051,7,c	;volatile
  2616  0009AE  0003               	sleep		;# 
  2617  0009B0  9ED3               	bcf	4051,7,c	;volatile
  2618                           
  2619                           ;timer.c: 20: timer0_wait_ready();
  2620  0009B2  EC17  F005         	call	_timer0_wait_ready	;wreg free
  2621                           
  2622                           ;timer.c: 22: T0CONbits.TMR0ON = 0;
  2623  0009B6  9ED5               	bcf	4053,7,c	;volatile
  2624                           
  2625                           ;timer.c: 23: INTCONbits.TMR0IE = 0;
  2626  0009B8  9AF2               	bcf	intcon,5,c	;volatile
  2627  0009BA  0012               	return	
  2628  0009BC                     __end_of_timer0_wait_65ms:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           prodh	equ	0xFF4
  2635                           prodl	equ	0xFF3
  2636                           intcon	equ	0xFF2
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           indf1	equ	0xFE7
  2640                           postdec1	equ	0xFE5
  2641                           fsr1h	equ	0xFE2
  2642                           fsr1l	equ	0xFE1
  2643                           indf2	equ	0xFDF
  2644                           postinc2	equ	0xFDE
  2645                           postdec2	equ	0xFDD
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _timer0_wait_ready *****************
  2651 ;; Defined at:
  2652 ;;		line 42 in file "timer.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, status,2
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2666 ;;      Params:         0       0       0       0
  2667 ;;      Locals:         0       0       0       0
  2668 ;;      Temps:          0       0       0       0
  2669 ;;      Totals:         0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    1
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_timer0_wait_65ms
  2677 ;;		_timer0_wait_262ms
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text17
  2682  000A2E                     __ptext17:
  2683                           	opt stack 0
  2684  000A2E                     _timer0_wait_ready:
  2685                           	opt stack 26
  2686                           
  2687                           ;incstack = 0
  2688                           ;timer.c: 44: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2689  000A2E  8ED3               	bsf	4051,7,c	;volatile
  2690  000A30  0003               	sleep		;# 
  2691  000A32  9ED3               	bcf	4051,7,c	;volatile
  2692  000A34                     l1094:
  2693  000A34  506A               	movf	_timer0_interupt_done,w,c
  2694  000A36  B4D8               	btfsc	status,2,c
  2695  000A38  D7FD               	goto	l1094
  2696                           
  2697                           ;timer.c: 48: timer0_interupt_done = FALSE;
  2698  000A3A  0E00               	movlw	0
  2699  000A3C  6E6A               	movwf	_timer0_interupt_done,c
  2700  000A3E  0012               	return	
  2701  000A40                     __end_of_timer0_wait_ready:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           indf1	equ	0xFE7
  2713                           postdec1	equ	0xFE5
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           indf2	equ	0xFDF
  2717                           postinc2	equ	0xFDE
  2718                           postdec2	equ	0xFDD
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _hyt221_operation *****************
  2724 ;; Defined at:
  2725 ;;		line 44 in file "hyt221.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  index           1   19[COMRAM] char 
  2730 ;;  bDeviceDataA    1   18[COMRAM] enum E3083
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      enum E3781
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2740 ;;      Params:         0       0       0       0
  2741 ;;      Locals:         2       0       0       0
  2742 ;;      Temps:          0       0       0       0
  2743 ;;      Totals:         2       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    3
  2747 ;; This function calls:
  2748 ;;		_i2c_trig_start
  2749 ;;		_i2c_trig_stop
  2750 ;;		_i2c_wait_idle
  2751 ;;		_i2c_wait_ready
  2752 ;;		_leds_glitch
  2753 ;; This function is called by:
  2754 ;;		_main_loop
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text18
  2759  0005E2                     __ptext18:
  2760                           	opt stack 0
  2761  0005E2                     _hyt221_operation:
  2762                           	opt stack 26
  2763                           
  2764                           ;hyt221.c: 46: int8_t index;
  2765                           ;hyt221.c: 47: BOOL bDeviceDataAreStale;
  2766                           ;hyt221.c: 48: bDeviceDataAreStale = FALSE;
  2767                           
  2768                           ;incstack = 0
  2769  0005E2  0E00               	movlw	0
  2770  0005E4  6E13               	movwf	hyt221_operation@bDeviceDataAreStale,c
  2771                           
  2772                           ;hyt221.c: 51: i2c_trig_start();
  2773  0005E6  EC4D  F005         	call	_i2c_trig_start	;wreg free
  2774                           
  2775                           ;hyt221.c: 54: SSPBUF = (0x51);
  2776  0005EA  0E51               	movlw	81
  2777  0005EC  6EC9               	movwf	4041,c	;volatile
  2778                           
  2779                           ;hyt221.c: 55: i2c_wait_ready();
  2780  0005EE  EC20  F005         	call	_i2c_wait_ready	;wreg free
  2781                           
  2782                           ;hyt221.c: 58: if (SSPCON2bits.ACKSTAT == 1)
  2783  0005F2  ACC5               	btfss	4037,6,c	;volatile
  2784  0005F4  D007               	goto	l1892
  2785                           
  2786                           ;hyt221.c: 59: {
  2787                           ;hyt221.c: 60: leds_glitch((0x08) | (0x04));
  2788  0005F6  0E0C               	movlw	12
  2789  0005F8  ECFE  F004         	call	_leds_glitch
  2790                           
  2791                           ;hyt221.c: 61: i2c_trig_stop();
  2792  0005FC  EC58  F005         	call	_i2c_trig_stop	;wreg free
  2793                           
  2794                           ;hyt221.c: 62: return STATUS_ERROR;
  2795  000600  0E01               	movlw	1
  2796  000602  D038               	goto	l370
  2797  000604                     l1892:
  2798                           
  2799                           ;hyt221.c: 63: }
  2800                           ;hyt221.c: 65: index = 0;
  2801  000604  0E00               	movlw	0
  2802  000606  6E14               	movwf	hyt221_operation@index,c
  2803                           
  2804                           ;hyt221.c: 66: while (index < 4)
  2805  000608  D026               	goto	l1922
  2806  00060A                     l1894:
  2807                           
  2808                           ;hyt221.c: 67: {
  2809                           ;hyt221.c: 68: i2c_wait_idle();
  2810  00060A  EC29  F005         	call	_i2c_wait_idle	;wreg free
  2811                           
  2812                           ;hyt221.c: 69: SSPCON2bits.RCEN = 1;
  2813  00060E  86C5               	bsf	4037,3,c	;volatile
  2814                           
  2815                           ;hyt221.c: 71: i2c_wait_ready();
  2816  000610  EC20  F005         	call	_i2c_wait_ready	;wreg free
  2817                           
  2818                           ;hyt221.c: 73: gData[index] = SSPBUF;
  2819  000614  5014               	movf	hyt221_operation@index,w,c
  2820  000616  0D01               	mullw	1
  2821  000618  0E58               	movlw	low _gData
  2822  00061A  24F3               	addwf	prodl,w,c
  2823  00061C  6ED9               	movwf	fsr2l,c
  2824  00061E  0E00               	movlw	high _gData
  2825  000620  20F4               	addwfc	prodh,w,c
  2826  000622  6EDA               	movwf	fsr2h,c
  2827  000624  CFC9 FFDF          	movff	4041,indf2	;volatile
  2828                           
  2829                           ;hyt221.c: 74: if (index == 0)
  2830  000628  6614               	tstfsz	hyt221_operation@index,c
  2831  00062A  D008               	goto	l1910
  2832                           
  2833                           ;hyt221.c: 75: {
  2834                           ;hyt221.c: 77: if ((gData[0] & 0x40) == 0x40)
  2835  00062C  AC58               	btfss	_gData,6,c
  2836  00062E  D00C               	goto	l377
  2837                           
  2838                           ;hyt221.c: 78: {
  2839                           ;hyt221.c: 80: SSPCON2bits.ACKDT = 1;
  2840  000630  8AC5               	bsf	4037,5,c	;volatile
  2841                           
  2842                           ;hyt221.c: 81: index = 3;
  2843  000632  0E03               	movlw	3
  2844  000634  6E14               	movwf	hyt221_operation@index,c
  2845                           
  2846                           ;hyt221.c: 82: bDeviceDataAreStale = TRUE;
  2847  000636  0E01               	movlw	1
  2848  000638  6E13               	movwf	hyt221_operation@bDeviceDataAreStale,c
  2849                           
  2850                           ;hyt221.c: 83: }
  2851  00063A  D007               	goto	l1914
  2852  00063C                     l1910:
  2853                           
  2854                           ;hyt221.c: 89: else if (index == 3)
  2855  00063C  5014               	movf	hyt221_operation@index,w,c
  2856  00063E  0A03               	xorlw	3
  2857  000640  A4D8               	btfss	status,2,c
  2858  000642  D002               	goto	l377
  2859                           
  2860                           ;hyt221.c: 90: {
  2861                           ;hyt221.c: 91: SSPCON2bits.ACKDT = 1;
  2862  000644  8AC5               	bsf	4037,5,c	;volatile
  2863                           
  2864                           ;hyt221.c: 92: }
  2865  000646  D001               	goto	l1914
  2866  000648                     l377:
  2867                           
  2868                           ;hyt221.c: 93: else
  2869                           ;hyt221.c: 94: {
  2870                           ;hyt221.c: 95: SSPCON2bits.ACKDT = 0;
  2871  000648  9AC5               	bcf	4037,5,c	;volatile
  2872  00064A                     l1914:
  2873                           
  2874                           ;hyt221.c: 96: }
  2875                           ;hyt221.c: 98: i2c_wait_idle();
  2876  00064A  EC29  F005         	call	_i2c_wait_idle	;wreg free
  2877                           
  2878                           ;hyt221.c: 101: SSPCON2bits.ACKEN = 1;
  2879  00064E  88C5               	bsf	4037,4,c	;volatile
  2880                           
  2881                           ;hyt221.c: 102: i2c_wait_ready();
  2882  000650  EC20  F005         	call	_i2c_wait_ready	;wreg free
  2883                           
  2884                           ;hyt221.c: 103: index++;
  2885  000654  2A14               	incf	hyt221_operation@index,f,c
  2886  000656                     l1922:
  2887  000656  5014               	movf	hyt221_operation@index,w,c
  2888  000658  0A80               	xorlw	128
  2889  00065A  0F7C               	addlw	-132
  2890  00065C  A0D8               	btfss	status,0,c
  2891  00065E  D7D5               	goto	l1894
  2892                           
  2893                           ;hyt221.c: 104: }
  2894                           ;hyt221.c: 106: i2c_wait_idle();
  2895  000660  EC29  F005         	call	_i2c_wait_idle	;wreg free
  2896                           
  2897                           ;hyt221.c: 107: i2c_trig_stop();
  2898  000664  EC58  F005         	call	_i2c_trig_stop	;wreg free
  2899                           
  2900                           ;hyt221.c: 109: if (bDeviceDataAreStale == TRUE)
  2901  000668  0413               	decf	hyt221_operation@bDeviceDataAreStale,w,c
  2902  00066A  A4D8               	btfss	status,2,c
  2903  00066C  D002               	goto	l1934
  2904                           
  2905                           ;hyt221.c: 110: {
  2906                           ;hyt221.c: 111: return STATUS_EBUSY;
  2907  00066E  0E02               	movlw	2
  2908  000670  D001               	goto	l370
  2909  000672                     l1934:
  2910                           
  2911                           ;hyt221.c: 112: }
  2912                           ;hyt221.c: 114: return STATUS_OK;
  2913  000672  0E00               	movlw	0
  2914  000674                     l370:
  2915  000674  0012               	return	
  2916  000676                     __end_of_hyt221_operation:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           indf1	equ	0xFE7
  2928                           postdec1	equ	0xFE5
  2929                           fsr1h	equ	0xFE2
  2930                           fsr1l	equ	0xFE1
  2931                           indf2	equ	0xFDF
  2932                           postinc2	equ	0xFDE
  2933                           postdec2	equ	0xFDD
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _hyt221_launch_acq *****************
  2939 ;; Defined at:
  2940 ;;		line 20 in file "hyt221.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      enum E3781
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2954 ;;      Params:         0       0       0       0
  2955 ;;      Locals:         0       0       0       0
  2956 ;;      Temps:          0       0       0       0
  2957 ;;      Totals:         0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    3
  2961 ;; This function calls:
  2962 ;;		_i2c_trig_start
  2963 ;;		_i2c_trig_stop
  2964 ;;		_i2c_wait_idle
  2965 ;;		_i2c_wait_ready
  2966 ;;		_leds_glitch
  2967 ;; This function is called by:
  2968 ;;		_main_loop
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text19
  2973  000950                     __ptext19:
  2974                           	opt stack 0
  2975  000950                     _hyt221_launch_acq:
  2976                           	opt stack 26
  2977                           
  2978                           ;hyt221.c: 22: i2c_trig_start();
  2979                           
  2980                           ;incstack = 0
  2981  000950  EC4D  F005         	call	_i2c_trig_start	;wreg free
  2982                           
  2983                           ;hyt221.c: 25: SSPBUF = (0x50);
  2984  000954  0E50               	movlw	80
  2985  000956  6EC9               	movwf	4041,c	;volatile
  2986                           
  2987                           ;hyt221.c: 27: i2c_wait_ready();
  2988  000958  EC20  F005         	call	_i2c_wait_ready	;wreg free
  2989                           
  2990                           ;hyt221.c: 31: if (SSPCON2bits.ACKSTAT == 1)
  2991  00095C  ACC5               	btfss	4037,6,c	;volatile
  2992  00095E  D005               	goto	l1864
  2993                           
  2994                           ;hyt221.c: 32: {
  2995                           ;hyt221.c: 33: leds_glitch((0x08) | (0x04));
  2996  000960  0E0C               	movlw	12
  2997  000962  ECFE  F004         	call	_leds_glitch
  2998                           
  2999                           ;hyt221.c: 34: return STATUS_ERROR;
  3000  000966  0E01               	movlw	1
  3001  000968  D006               	goto	l366
  3002  00096A                     l1864:
  3003                           
  3004                           ;hyt221.c: 35: }
  3005                           ;hyt221.c: 37: i2c_wait_idle();
  3006  00096A  EC29  F005         	call	_i2c_wait_idle	;wreg free
  3007                           
  3008                           ;hyt221.c: 38: i2c_trig_stop();
  3009  00096E  EC58  F005         	call	_i2c_trig_stop	;wreg free
  3010                           
  3011                           ;hyt221.c: 39: __nop();
  3012  000972  F000               	nop	
  3013                           
  3014                           ;hyt221.c: 40: return STATUS_OK;
  3015  000974  0E00               	movlw	0
  3016  000976                     l366:
  3017  000976  0012               	return	
  3018  000978                     __end_of_hyt221_launch_acq:
  3019                           	opt stack 0
  3020                           tblptru	equ	0xFF8
  3021                           tblptrh	equ	0xFF7
  3022                           tblptrl	equ	0xFF6
  3023                           tablat	equ	0xFF5
  3024                           prodh	equ	0xFF4
  3025                           prodl	equ	0xFF3
  3026                           intcon	equ	0xFF2
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           indf1	equ	0xFE7
  3030                           postdec1	equ	0xFE5
  3031                           fsr1h	equ	0xFE2
  3032                           fsr1l	equ	0xFE1
  3033                           indf2	equ	0xFDF
  3034                           postinc2	equ	0xFDE
  3035                           postdec2	equ	0xFDD
  3036                           fsr2h	equ	0xFDA
  3037                           fsr2l	equ	0xFD9
  3038                           status	equ	0xFD8
  3039                           
  3040 ;; *************** function _i2c_trig_stop *****************
  3041 ;; Defined at:
  3042 ;;		line 61 in file "i2c.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;		None               void
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3056 ;;      Params:         0       0       0       0
  3057 ;;      Locals:         0       0       0       0
  3058 ;;      Temps:          0       0       0       0
  3059 ;;      Totals:         0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    2
  3063 ;; This function calls:
  3064 ;;		_i2c_wait_ready
  3065 ;; This function is called by:
  3066 ;;		_hyt221_launch_acq
  3067 ;;		_hyt221_operation
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text20
  3072  000AB0                     __ptext20:
  3073                           	opt stack 0
  3074  000AB0                     _i2c_trig_stop:
  3075                           	opt stack 26
  3076                           
  3077                           ;i2c.c: 64: SSPCON2bits.PEN = 1;
  3078                           
  3079                           ;incstack = 0
  3080  000AB0  84C5               	bsf	4037,2,c	;volatile
  3081                           
  3082                           ;i2c.c: 65: i2c_wait_ready();
  3083  000AB2  EC20  F005         	call	_i2c_wait_ready	;wreg free
  3084  000AB6  0012               	return	
  3085  000AB8                     __end_of_i2c_trig_stop:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           indf1	equ	0xFE7
  3097                           postdec1	equ	0xFE5
  3098                           fsr1h	equ	0xFE2
  3099                           fsr1l	equ	0xFE1
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           postdec2	equ	0xFDD
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _i2c_trig_start *****************
  3108 ;; Defined at:
  3109 ;;		line 53 in file "i2c.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3123 ;;      Params:         0       0       0       0
  3124 ;;      Locals:         0       0       0       0
  3125 ;;      Temps:          0       0       0       0
  3126 ;;      Totals:         0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    2
  3130 ;; This function calls:
  3131 ;;		_i2c_wait_idle
  3132 ;;		_i2c_wait_ready
  3133 ;; This function is called by:
  3134 ;;		_hyt221_launch_acq
  3135 ;;		_hyt221_operation
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text21
  3140  000A9A                     __ptext21:
  3141                           	opt stack 0
  3142  000A9A                     _i2c_trig_start:
  3143                           	opt stack 26
  3144                           
  3145                           ;i2c.c: 55: i2c_wait_idle();
  3146                           
  3147                           ;incstack = 0
  3148  000A9A  EC29  F005         	call	_i2c_wait_idle	;wreg free
  3149                           
  3150                           ;i2c.c: 57: SSPCON2bits.SEN = 1;
  3151  000A9E  80C5               	bsf	4037,0,c	;volatile
  3152                           
  3153                           ;i2c.c: 58: i2c_wait_ready();
  3154  000AA0  EC20  F005         	call	_i2c_wait_ready	;wreg free
  3155  000AA4  0012               	return	
  3156  000AA6                     __end_of_i2c_trig_start:
  3157                           	opt stack 0
  3158                           tblptru	equ	0xFF8
  3159                           tblptrh	equ	0xFF7
  3160                           tblptrl	equ	0xFF6
  3161                           tablat	equ	0xFF5
  3162                           prodh	equ	0xFF4
  3163                           prodl	equ	0xFF3
  3164                           intcon	equ	0xFF2
  3165                           postinc0	equ	0xFEE
  3166                           wreg	equ	0xFE8
  3167                           indf1	equ	0xFE7
  3168                           postdec1	equ	0xFE5
  3169                           fsr1h	equ	0xFE2
  3170                           fsr1l	equ	0xFE1
  3171                           indf2	equ	0xFDF
  3172                           postinc2	equ	0xFDE
  3173                           postdec2	equ	0xFDD
  3174                           fsr2h	equ	0xFDA
  3175                           fsr2l	equ	0xFD9
  3176                           status	equ	0xFD8
  3177                           
  3178 ;; *************** function _i2c_wait_ready *****************
  3179 ;; Defined at:
  3180 ;;		line 35 in file "i2c.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;		None               void
  3187 ;; Registers used:
  3188 ;;		wreg, status,2
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3194 ;;      Params:         0       0       0       0
  3195 ;;      Locals:         0       0       0       0
  3196 ;;      Temps:          0       0       0       0
  3197 ;;      Totals:         0       0       0       0
  3198 ;;Total ram usage:        0 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    1
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_i2c_trig_start
  3205 ;;		_i2c_trig_stop
  3206 ;;		_hyt221_launch_acq
  3207 ;;		_hyt221_operation
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text22
  3212  000A40                     __ptext22:
  3213                           	opt stack 0
  3214  000A40                     _i2c_wait_ready:
  3215                           	opt stack 27
  3216                           
  3217                           ;incstack = 0
  3218                           ;i2c.c: 37: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while (0
      +                          );;
  3219  000A40  8ED3               	bsf	4051,7,c	;volatile
  3220  000A42  0003               	sleep		;# 
  3221  000A44  9ED3               	bcf	4051,7,c	;volatile
  3222  000A46                     l1070:
  3223  000A46  5068               	movf	_i2c_interupt_done,w,c
  3224  000A48  B4D8               	btfsc	status,2,c
  3225  000A4A  D7FD               	goto	l1070
  3226                           
  3227                           ;i2c.c: 43: i2c_interupt_done = FALSE;
  3228  000A4C  0E00               	movlw	0
  3229  000A4E  6E68               	movwf	_i2c_interupt_done,c
  3230  000A50  0012               	return	
  3231  000A52                     __end_of_i2c_wait_ready:
  3232                           	opt stack 0
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodh	equ	0xFF4
  3238                           prodl	equ	0xFF3
  3239                           intcon	equ	0xFF2
  3240                           postinc0	equ	0xFEE
  3241                           wreg	equ	0xFE8
  3242                           indf1	equ	0xFE7
  3243                           postdec1	equ	0xFE5
  3244                           fsr1h	equ	0xFE2
  3245                           fsr1l	equ	0xFE1
  3246                           indf2	equ	0xFDF
  3247                           postinc2	equ	0xFDE
  3248                           postdec2	equ	0xFDD
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253 ;; *************** function _i2c_wait_idle *****************
  3254 ;; Defined at:
  3255 ;;		line 46 in file "i2c.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;		None               void
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3269 ;;      Params:         0       0       0       0
  3270 ;;      Locals:         0       0       0       0
  3271 ;;      Temps:          1       0       0       0
  3272 ;;      Totals:         1       0       0       0
  3273 ;;Total ram usage:        1 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    1
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_i2c_trig_start
  3280 ;;		_hyt221_launch_acq
  3281 ;;		_hyt221_operation
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text23
  3286  000A52                     __ptext23:
  3287                           	opt stack 0
  3288  000A52                     _i2c_wait_idle:
  3289                           	opt stack 27
  3290  000A52                     l1076:
  3291  000A52  CFC5 F011          	movff	4037,??_i2c_wait_idle	;volatile
  3292  000A56  0E1F               	movlw	31
  3293  000A58  1611               	andwf	??_i2c_wait_idle,f,c
  3294  000A5A  B4D8               	btfsc	status,2,c
  3295  000A5C  B4C7               	btfsc	4039,2,c	;volatile
  3296  000A5E  D7F9               	goto	l1076
  3297  000A60  0012               	return	
  3298  000A62                     __end_of_i2c_wait_idle:
  3299                           	opt stack 0
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           prodh	equ	0xFF4
  3305                           prodl	equ	0xFF3
  3306                           intcon	equ	0xFF2
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           indf1	equ	0xFE7
  3310                           postdec1	equ	0xFE5
  3311                           fsr1h	equ	0xFE2
  3312                           fsr1l	equ	0xFE1
  3313                           indf2	equ	0xFDF
  3314                           postinc2	equ	0xFDE
  3315                           postdec2	equ	0xFDD
  3316                           fsr2h	equ	0xFDA
  3317                           fsr2l	equ	0xFD9
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function _hyt221_getTemp *****************
  3321 ;; Defined at:
  3322 ;;		line 118 in file "hyt221.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  temp_raw        2   20[COMRAM] unsigned int 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  2   16[COMRAM] unsigned int 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3336 ;;      Params:         2       0       0       0
  3337 ;;      Locals:         2       0       0       0
  3338 ;;      Temps:          2       0       0       0
  3339 ;;      Totals:         6       0       0       0
  3340 ;;Total ram usage:        6 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_main_loop
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text24
  3351  0008F8                     __ptext24:
  3352                           	opt stack 0
  3353  0008F8                     _hyt221_getTemp:
  3354                           	opt stack 28
  3355                           
  3356                           ;hyt221.c: 120: uint16_t temp_raw;
  3357                           ;hyt221.c: 121: temp_raw = ((uint16_t) gData[2]) << 8 | (uint16_t) gData[3];
  3358                           
  3359                           ;incstack = 0
  3360  0008F8  505A               	movf	_gData+2,w,c
  3361  0008FA  6E16               	movwf	hyt221_getTemp@temp_raw+1,c
  3362  0008FC  505B               	movf	_gData+3,w,c
  3363  0008FE  6E15               	movwf	hyt221_getTemp@temp_raw,c
  3364                           
  3365                           ;hyt221.c: 122: temp_raw = temp_raw >> 2;
  3366  000900  C015  F013         	movff	hyt221_getTemp@temp_raw,??_hyt221_getTemp
  3367  000904  C016  F014         	movff	hyt221_getTemp@temp_raw+1,??_hyt221_getTemp+1
  3368  000908  90D8               	bcf	status,0,c
  3369  00090A  3214               	rrcf	??_hyt221_getTemp+1,f,c
  3370  00090C  3213               	rrcf	??_hyt221_getTemp,f,c
  3371  00090E  90D8               	bcf	status,0,c
  3372  000910  3214               	rrcf	??_hyt221_getTemp+1,f,c
  3373  000912  3213               	rrcf	??_hyt221_getTemp,f,c
  3374  000914  C013  F015         	movff	??_hyt221_getTemp,hyt221_getTemp@temp_raw
  3375  000918  C014  F016         	movff	??_hyt221_getTemp+1,hyt221_getTemp@temp_raw+1
  3376                           
  3377                           ;hyt221.c: 123: return temp_raw;
  3378  00091C  C015  F011         	movff	hyt221_getTemp@temp_raw,?_hyt221_getTemp
  3379  000920  C016  F012         	movff	hyt221_getTemp@temp_raw+1,?_hyt221_getTemp+1
  3380  000924  0012               	return	
  3381  000926                     __end_of_hyt221_getTemp:
  3382                           	opt stack 0
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           prodh	equ	0xFF4
  3388                           prodl	equ	0xFF3
  3389                           intcon	equ	0xFF2
  3390                           postinc0	equ	0xFEE
  3391                           wreg	equ	0xFE8
  3392                           indf1	equ	0xFE7
  3393                           postdec1	equ	0xFE5
  3394                           fsr1h	equ	0xFE2
  3395                           fsr1l	equ	0xFE1
  3396                           indf2	equ	0xFDF
  3397                           postinc2	equ	0xFDE
  3398                           postdec2	equ	0xFDD
  3399                           fsr2h	equ	0xFDA
  3400                           fsr2l	equ	0xFD9
  3401                           status	equ	0xFD8
  3402                           
  3403 ;; *************** function _hyt221_getHumidity *****************
  3404 ;; Defined at:
  3405 ;;		line 126 in file "hyt221.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  humidity_raw    2   18[COMRAM] unsigned int 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  2   16[COMRAM] unsigned int 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3419 ;;      Params:         2       0       0       0
  3420 ;;      Locals:         2       0       0       0
  3421 ;;      Temps:          0       0       0       0
  3422 ;;      Totals:         4       0       0       0
  3423 ;;Total ram usage:        4 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_main_loop
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text25
  3434  000A1A                     __ptext25:
  3435                           	opt stack 0
  3436  000A1A                     _hyt221_getHumidity:
  3437                           	opt stack 28
  3438                           
  3439                           ;hyt221.c: 128: uint16_t humidity_raw;
  3440                           ;hyt221.c: 129: humidity_raw = ((uint16_t) (gData[0] & 0x3F)) << 8 | gData[1];
  3441                           
  3442                           ;incstack = 0
  3443  000A1A  5058               	movf	_gData,w,c
  3444  000A1C  0B3F               	andlw	63
  3445  000A1E  6E14               	movwf	hyt221_getHumidity@humidity_raw+1,c
  3446  000A20  5059               	movf	_gData+1,w,c
  3447  000A22  6E13               	movwf	hyt221_getHumidity@humidity_raw,c
  3448                           
  3449                           ;hyt221.c: 130: return humidity_raw;
  3450  000A24  C013  F011         	movff	hyt221_getHumidity@humidity_raw,?_hyt221_getHumidity
  3451  000A28  C014  F012         	movff	hyt221_getHumidity@humidity_raw+1,?_hyt221_getHumidity+1
  3452  000A2C  0012               	return	
  3453  000A2E                     __end_of_hyt221_getHumidity:
  3454                           	opt stack 0
  3455                           tblptru	equ	0xFF8
  3456                           tblptrh	equ	0xFF7
  3457                           tblptrl	equ	0xFF6
  3458                           tablat	equ	0xFF5
  3459                           prodh	equ	0xFF4
  3460                           prodl	equ	0xFF3
  3461                           intcon	equ	0xFF2
  3462                           postinc0	equ	0xFEE
  3463                           wreg	equ	0xFE8
  3464                           indf1	equ	0xFE7
  3465                           postdec1	equ	0xFE5
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           indf2	equ	0xFDF
  3469                           postinc2	equ	0xFDE
  3470                           postdec2	equ	0xFDD
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _batt_launch_acq *****************
  3476 ;; Defined at:
  3477 ;;		line 216 in file "main.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3491 ;;      Params:         0       0       0       0
  3492 ;;      Locals:         0       0       0       0
  3493 ;;      Temps:          2       0       0       0
  3494 ;;      Totals:         2       0       0       0
  3495 ;;Total ram usage:        2 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    2
  3498 ;; This function calls:
  3499 ;;		_zb_handle_setbatVolt
  3500 ;; This function is called by:
  3501 ;;		_main_loop
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text26
  3506  000800                     __ptext26:
  3507                           	opt stack 0
  3508  000800                     _batt_launch_acq:
  3509                           	opt stack 27
  3510                           
  3511                           ;main.c: 218: LATBbits.LATB1 = 1;
  3512                           
  3513                           ;incstack = 0
  3514  000800  828A               	bsf	3978,1,c	;volatile
  3515                           
  3516                           ;main.c: 219: ADCON1 = 0x00;
  3517  000802  0E00               	movlw	0
  3518  000804  6EC1               	movwf	4033,c	;volatile
  3519                           
  3520                           ;main.c: 220: ADCON0 = 0x20;
  3521  000806  0E20               	movlw	32
  3522  000808  6EC2               	movwf	4034,c	;volatile
  3523                           
  3524                           ;main.c: 221: ADCON2 = 0x8B;
  3525  00080A  0E8B               	movlw	139
  3526  00080C  6EC0               	movwf	4032,c	;volatile
  3527                           
  3528                           ;main.c: 222: ADCON0 |= 0x01;
  3529  00080E  80C2               	bsf	4034,0,c	;volatile
  3530                           
  3531                           ;main.c: 223: ADCON0 |= 0x02 ;
  3532  000810  82C2               	bsf	4034,1,c	;volatile
  3533                           
  3534                           ;main.c: 225: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  3535  000812  8ED3               	bsf	4051,7,c	;volatile
  3536  000814  0003               	sleep		;# 
  3537  000816  9ED3               	bcf	4051,7,c	;volatile
  3538  000818  D001               	goto	l136
  3539  00081A                     l137:
  3540                           
  3541                           ;main.c: 228: {
  3542                           ;main.c: 229: __nop();
  3543  00081A  F000               	nop	
  3544  00081C                     l136:
  3545  00081C  B2C2               	btfsc	4034,1,c	;volatile
  3546  00081E  D7FD               	goto	l137
  3547                           
  3548                           ;main.c: 230: }
  3549                           ;main.c: 232: batt_value = (ADRESH << 8) | ADRESL;
  3550  000820  50C3               	movf	4035,w,c	;volatile
  3551  000822  CFC4 F013          	movff	4036,??_batt_launch_acq	;volatile
  3552  000826  6A14               	clrf	(??_batt_launch_acq+1)& (0+255),c
  3553  000828  C013  F014         	movff	??_batt_launch_acq,??_batt_launch_acq+1
  3554  00082C  6A13               	clrf	??_batt_launch_acq,c
  3555  00082E  1013               	iorwf	??_batt_launch_acq,w,c
  3556  000830  6E62               	movwf	_batt_value,c
  3557  000832  5014               	movf	??_batt_launch_acq+1,w,c
  3558  000834  6E63               	movwf	_batt_value+1,c
  3559                           
  3560                           ;main.c: 233: LATBbits.LATB1 = 0;
  3561  000836  928A               	bcf	3978,1,c	;volatile
  3562                           
  3563                           ;main.c: 234: ADCON0 &= ~0x01;
  3564  000838  90C2               	bcf	4034,0,c	;volatile
  3565                           
  3566                           ;main.c: 235: zb_handle_setbatVolt(batt_value);
  3567  00083A  C062  F011         	movff	_batt_value,zb_handle_setbatVolt@battVoltage
  3568  00083E  C063  F012         	movff	_batt_value+1,zb_handle_setbatVolt@battVoltage+1
  3569  000842  EC46  F005         	call	_zb_handle_setbatVolt	;wreg free
  3570  000846  0012               	return	
  3571  000848                     __end_of_batt_launch_acq:
  3572                           	opt stack 0
  3573                           tblptru	equ	0xFF8
  3574                           tblptrh	equ	0xFF7
  3575                           tblptrl	equ	0xFF6
  3576                           tablat	equ	0xFF5
  3577                           prodh	equ	0xFF4
  3578                           prodl	equ	0xFF3
  3579                           intcon	equ	0xFF2
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           indf1	equ	0xFE7
  3583                           postdec1	equ	0xFE5
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           postinc2	equ	0xFDE
  3588                           postdec2	equ	0xFDD
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _zb_handle_setbatVolt *****************
  3594 ;; Defined at:
  3595 ;;		line 153 in file "zb_handle.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  battVoltage     2   16[COMRAM] unsigned int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3609 ;;      Params:         2       0       0       0
  3610 ;;      Locals:         0       0       0       0
  3611 ;;      Temps:          0       0       0       0
  3612 ;;      Totals:         2       0       0       0
  3613 ;;Total ram usage:        2 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_batt_launch_acq
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text27
  3624  000A8C                     __ptext27:
  3625                           	opt stack 0
  3626  000A8C                     _zb_handle_setbatVolt:
  3627                           	opt stack 27
  3628                           
  3629                           ;zb_handle.c: 155: sensor_data.battRaw = battVoltage;
  3630                           
  3631                           ;incstack = 0
  3632  000A8C  C011  F055         	movff	zb_handle_setbatVolt@battVoltage,_sensor_data+6
  3633  000A90  C012  F056         	movff	zb_handle_setbatVolt@battVoltage+1,_sensor_data+7
  3634                           
  3635                           ;zb_handle.c: 156: sensor_data.battStatus = (0x03);
  3636  000A94  0E03               	movlw	3
  3637  000A96  6E57               	movwf	_sensor_data+8,c
  3638  000A98  0012               	return	
  3639  000A9A                     __end_of_zb_handle_setbatVolt:
  3640                           	opt stack 0
  3641                           tblptru	equ	0xFF8
  3642                           tblptrh	equ	0xFF7
  3643                           tblptrl	equ	0xFF6
  3644                           tablat	equ	0xFF5
  3645                           prodh	equ	0xFF4
  3646                           prodl	equ	0xFF3
  3647                           intcon	equ	0xFF2
  3648                           postinc0	equ	0xFEE
  3649                           wreg	equ	0xFE8
  3650                           indf1	equ	0xFE7
  3651                           postdec1	equ	0xFE5
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           indf2	equ	0xFDF
  3655                           postinc2	equ	0xFDE
  3656                           postdec2	equ	0xFDD
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           
  3661 ;; *************** function _i2c_setup *****************
  3662 ;; Defined at:
  3663 ;;		line 9 in file "i2c.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;		None               void
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3677 ;;      Params:         0       0       0       0
  3678 ;;      Locals:         0       0       0       0
  3679 ;;      Temps:          0       0       0       0
  3680 ;;      Totals:         0       0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text28
  3692  0008C8                     __ptext28:
  3693                           	opt stack 0
  3694  0008C8                     _i2c_setup:
  3695                           	opt stack 29
  3696                           
  3697                           ;i2c.c: 15: TRISC &= ~0x18;
  3698                           
  3699                           ;incstack = 0
  3700  0008C8  0EE7               	movlw	231
  3701  0008CA  1694               	andwf	3988,f,c	;volatile
  3702                           
  3703                           ;i2c.c: 16: LATCbits.LATC3 = 0;
  3704  0008CC  968B               	bcf	3979,3,c	;volatile
  3705                           
  3706                           ;i2c.c: 17: LATCbits.LATC4 = 0;
  3707  0008CE  988B               	bcf	3979,4,c	;volatile
  3708                           
  3709                           ;i2c.c: 18: _delay((unsigned long)((100)*((1000000)/4000000.0)));
  3710  0008D0  0E08               	movlw	8
  3711  0008D2                     u997:
  3712  0008D2  2EE8               	decfsz	wreg,f,c
  3713  0008D4  D7FE               	goto	u997
  3714  0008D6  F000               	nop	
  3715                           
  3716                           ;i2c.c: 20: TRISC |= 0x18;
  3717  0008D8  0E18               	movlw	24
  3718  0008DA  1294               	iorwf	3988,f,c	;volatile
  3719                           
  3720                           ;i2c.c: 23: SSPSTAT = 0x80;
  3721  0008DC  0E80               	movlw	128
  3722  0008DE  6EC7               	movwf	4039,c	;volatile
  3723                           
  3724                           ;i2c.c: 24: SSPADD = 0x01;
  3725  0008E0  0E01               	movlw	1
  3726  0008E2  6EC8               	movwf	4040,c	;volatile
  3727                           
  3728                           ;i2c.c: 25: SSPCON1 = 0x28;
  3729  0008E4  0E28               	movlw	40
  3730  0008E6  6EC6               	movwf	4038,c	;volatile
  3731                           
  3732                           ;i2c.c: 26: SSPCON2 = 0x00;
  3733  0008E8  0E00               	movlw	0
  3734  0008EA  6EC5               	movwf	4037,c	;volatile
  3735                           
  3736                           ;i2c.c: 29: i2c_interupt_done = FALSE;
  3737  0008EC  0E00               	movlw	0
  3738  0008EE  6E68               	movwf	_i2c_interupt_done,c
  3739                           
  3740                           ;i2c.c: 30: PIR1bits.SSPIF = 0;
  3741  0008F0  969E               	bcf	3998,3,c	;volatile
  3742                           
  3743                           ;i2c.c: 31: PIR2bits.BCLIF = 0;
  3744  0008F2  96A1               	bcf	4001,3,c	;volatile
  3745                           
  3746                           ;i2c.c: 32: PIE1bits.SSPIE = 1;
  3747  0008F4  869D               	bsf	3997,3,c	;volatile
  3748  0008F6  0012               	return	
  3749  0008F8                     __end_of_i2c_setup:
  3750                           	opt stack 0
  3751                           tblptru	equ	0xFF8
  3752                           tblptrh	equ	0xFF7
  3753                           tblptrl	equ	0xFF6
  3754                           tablat	equ	0xFF5
  3755                           prodh	equ	0xFF4
  3756                           prodl	equ	0xFF3
  3757                           intcon	equ	0xFF2
  3758                           postinc0	equ	0xFEE
  3759                           wreg	equ	0xFE8
  3760                           indf1	equ	0xFE7
  3761                           postdec1	equ	0xFE5
  3762                           fsr1h	equ	0xFE2
  3763                           fsr1l	equ	0xFE1
  3764                           indf2	equ	0xFDF
  3765                           postinc2	equ	0xFDE
  3766                           postdec2	equ	0xFDD
  3767                           fsr2h	equ	0xFDA
  3768                           fsr2l	equ	0xFD9
  3769                           status	equ	0xFD8
  3770                           
  3771 ;; *************** function _calibration *****************
  3772 ;; Defined at:
  3773 ;;		line 12 in file "osc.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  w               1   20[COMRAM] char 
  3778 ;;  tryCounter      1   19[COMRAM] char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;		None               void
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3788 ;;      Params:         0       0       0       0
  3789 ;;      Locals:         2       0       0       0
  3790 ;;      Temps:          1       0       0       0
  3791 ;;      Totals:         3       0       0       0
  3792 ;;Total ram usage:        3 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    2
  3795 ;; This function calls:
  3796 ;;		_leds_glitch
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text29
  3803  00051C                     __ptext29:
  3804                           	opt stack 0
  3805  00051C                     _calibration:
  3806                           	opt stack 28
  3807                           
  3808                           ;osc.c: 14: int8_t w;
  3809                           ;osc.c: 15: int8_t tryCounter;
  3810                           ;osc.c: 17: T1CON = 0x0F;
  3811                           
  3812                           ;incstack = 0
  3813  00051C  0E0F               	movlw	15
  3814  00051E  6ECD               	movwf	4045,c	;volatile
  3815                           
  3816                           ;osc.c: 18: tryCounter = 0;
  3817  000520  0E00               	movlw	0
  3818  000522  6E14               	movwf	calibration@tryCounter,c
  3819                           
  3820                           ;osc.c: 19: while (tryCounter < 32)
  3821  000524  D035               	goto	l441
  3822  000526                     l1974:
  3823                           
  3824                           ;osc.c: 20: {
  3825                           ;osc.c: 21: calibr = 0;
  3826  000526  0E00               	movlw	0
  3827  000528  6E67               	movwf	_calibr,c	;volatile
  3828                           
  3829                           ;osc.c: 22: _delay((unsigned long)((250)*((1000000)/4000.0)));
  3830  00052A  0E52               	movlw	82
  3831  00052C  6E13               	movwf	??_calibration& (0+255),c
  3832  00052E  0E2A               	movlw	42
  3833  000530                     u1007:
  3834  000530  2EE8               	decfsz	wreg,f,c
  3835  000532  D7FE               	goto	u1007
  3836  000534  2E13               	decfsz	??_calibration& (0+255),f,c
  3837  000536  D7FC               	goto	u1007
  3838                           
  3839                           ;osc.c: 23: T1CON = 0x0F;
  3840  000538  0E0F               	movlw	15
  3841  00053A  6ECD               	movwf	4045,c	;volatile
  3842                           
  3843                           ;osc.c: 26: TMR1H = 0xFF;
  3844  00053C  68CF               	setf	4047,c	;volatile
  3845                           
  3846                           ;osc.c: 27: TMR1L = 0xE7;
  3847  00053E  0EE7               	movlw	231
  3848  000540  6ECE               	movwf	4046,c	;volatile
  3849                           
  3850                           ;osc.c: 28: PIR1bits.TMR1IF = 0;
  3851  000542  909E               	bcf	3998,0,c	;volatile
  3852                           
  3853                           ;osc.c: 31: while (PIR1bits.TMR1IF == 0)
  3854  000544  D001               	goto	l1988
  3855  000546                     l1986:
  3856                           
  3857                           ;osc.c: 32: {
  3858                           ;osc.c: 33: calibr++;
  3859  000546  2A67               	incf	_calibr,f,c	;volatile
  3860  000548                     l1988:
  3861  000548  A09E               	btfss	3998,0,c	;volatile
  3862  00054A  D7FD               	goto	l1986
  3863                           
  3864                           ;osc.c: 34: }
  3865                           ;osc.c: 36: w = ((int8_t)(0x30)) - calibr;
  3866  00054C  5067               	movf	_calibr,w,c
  3867  00054E  0800               	sublw	0
  3868  000550  0F30               	addlw	48
  3869  000552  6E15               	movwf	calibration@w,c
  3870                           
  3871                           ;osc.c: 37: if (w > 0)
  3872  000554  5015               	movf	calibration@w,w,c
  3873  000556  0A80               	xorlw	128
  3874  000558  0F7F               	addlw	-129
  3875  00055A  A0D8               	btfss	status,0,c
  3876  00055C  D009               	goto	l1996
  3877                           
  3878                           ;osc.c: 38: {
  3879                           ;osc.c: 40: w -= ((int8_t) (2));
  3880  00055E  0EFE               	movlw	254
  3881  000560  2615               	addwf	calibration@w,f,c
  3882                           
  3883                           ;osc.c: 41: if (w > 0)
  3884  000562  5015               	movf	calibration@w,w,c
  3885  000564  0A80               	xorlw	128
  3886  000566  0F7F               	addlw	-129
  3887  000568  A0D8               	btfss	status,0,c
  3888  00056A  D017               	goto	l2004
  3889                           
  3890                           ;osc.c: 42: {
  3891                           ;osc.c: 44: OSCTUNE = (OSCTUNE + 1) & 0x1F;
  3892  00056C  289B               	incf	3995,w,c	;volatile
  3893  00056E  D00A               	goto	L11
  3894  000570                     l1996:
  3895                           
  3896                           ;osc.c: 51: else
  3897                           ;osc.c: 52: {
  3898                           ;osc.c: 54: w = ((int8_t) (2)) - w;
  3899  000570  5015               	movf	calibration@w,w,c
  3900  000572  0800               	sublw	0
  3901  000574  0F02               	addlw	2
  3902  000576  6E15               	movwf	calibration@w,c
  3903                           
  3904                           ;osc.c: 55: if (w > 0)
  3905  000578  5015               	movf	calibration@w,w,c
  3906  00057A  0A80               	xorlw	128
  3907  00057C  0F7F               	addlw	-129
  3908  00057E  A0D8               	btfss	status,0,c
  3909  000580  D00C               	goto	l2004
  3910                           
  3911                           ;osc.c: 56: {
  3912                           ;osc.c: 57: OSCTUNE = (OSCTUNE - 1) & 0x1F;
  3913  000582  049B               	decf	3995,w,c	;volatile
  3914  000584                     L11:
  3915  000584  0B1F               	andlw	31
  3916  000586  6E9B               	movwf	3995,c	;volatile
  3917                           
  3918                           ;osc.c: 62: }
  3919                           ;osc.c: 63: }
  3920                           ;osc.c: 64: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  3921                           
  3922                           ;osc.c: 59: else
  3923                           ;osc.c: 60: {
  3924                           ;osc.c: 61: break;
  3925                           
  3926                           ;osc.c: 58: }
  3927  000588  0E19               	movlw	25
  3928  00058A                     u1017:
  3929  00058A  2EE8               	decfsz	wreg,f,c
  3930  00058C  D7FE               	goto	u1017
  3931                           
  3932                           ;osc.c: 65: tryCounter++;
  3933  00058E  2A14               	incf	calibration@tryCounter,f,c
  3934  000590                     l441:
  3935  000590  5014               	movf	calibration@tryCounter,w,c
  3936  000592  0A80               	xorlw	128
  3937  000594  0F60               	addlw	-160
  3938  000596  A0D8               	btfss	status,0,c
  3939  000598  D7C6               	goto	l1974
  3940  00059A                     l2004:
  3941                           
  3942                           ;osc.c: 66: }
  3943                           ;osc.c: 68: if (tryCounter >= 32)
  3944  00059A  5014               	movf	calibration@tryCounter,w,c
  3945  00059C  0A80               	xorlw	128
  3946  00059E  0F60               	addlw	-160
  3947  0005A0  A0D8               	btfss	status,0,c
  3948  0005A2  D01C               	goto	l2020
  3949                           
  3950                           ;osc.c: 69: {
  3951                           ;osc.c: 70: OSCTUNE = 0;
  3952  0005A4  0E00               	movlw	0
  3953  0005A6  6E9B               	movwf	3995,c	;volatile
  3954                           
  3955                           ;osc.c: 71: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  3956  0005A8  0E19               	movlw	25
  3957  0005AA                     u1027:
  3958  0005AA  2EE8               	decfsz	wreg,f,c
  3959  0005AC  D7FE               	goto	u1027
  3960                           
  3961                           ;osc.c: 72: leds_glitch((0x08));
  3962  0005AE  0E08               	movlw	8
  3963  0005B0  ECFE  F004         	call	_leds_glitch
  3964                           
  3965                           ;osc.c: 73: _delay((unsigned long)((250)*((1000000)/4000.0)));
  3966  0005B4  0E52               	movlw	82
  3967  0005B6  6E13               	movwf	??_calibration& (0+255),c
  3968  0005B8  0E2A               	movlw	42
  3969  0005BA                     u1037:
  3970  0005BA  2EE8               	decfsz	wreg,f,c
  3971  0005BC  D7FE               	goto	u1037
  3972  0005BE  2E13               	decfsz	??_calibration& (0+255),f,c
  3973  0005C0  D7FC               	goto	u1037
  3974                           
  3975                           ;osc.c: 74: leds_glitch((0x08));
  3976  0005C2  0E08               	movlw	8
  3977  0005C4  ECFE  F004         	call	_leds_glitch
  3978                           
  3979                           ;osc.c: 75: _delay((unsigned long)((250)*((1000000)/4000.0)));
  3980  0005C8  0E52               	movlw	82
  3981  0005CA  6E13               	movwf	??_calibration& (0+255),c
  3982  0005CC  0E2A               	movlw	42
  3983  0005CE                     u1047:
  3984  0005CE  2EE8               	decfsz	wreg,f,c
  3985  0005D0  D7FE               	goto	u1047
  3986  0005D2  2E13               	decfsz	??_calibration& (0+255),f,c
  3987  0005D4  D7FC               	goto	u1047
  3988                           
  3989                           ;osc.c: 76: leds_glitch((0x08));
  3990  0005D6  0E08               	movlw	8
  3991  0005D8  ECFE  F004         	call	_leds_glitch
  3992  0005DC                     l2020:
  3993                           
  3994                           ;osc.c: 77: }
  3995                           ;osc.c: 80: T1CON = 0;
  3996  0005DC  0E00               	movlw	0
  3997  0005DE  6ECD               	movwf	4045,c	;volatile
  3998  0005E0  0012               	return	
  3999  0005E2                     __end_of_calibration:
  4000                           	opt stack 0
  4001                           tblptru	equ	0xFF8
  4002                           tblptrh	equ	0xFF7
  4003                           tblptrl	equ	0xFF6
  4004                           tablat	equ	0xFF5
  4005                           prodh	equ	0xFF4
  4006                           prodl	equ	0xFF3
  4007                           intcon	equ	0xFF2
  4008                           postinc0	equ	0xFEE
  4009                           wreg	equ	0xFE8
  4010                           indf1	equ	0xFE7
  4011                           postdec1	equ	0xFE5
  4012                           fsr1h	equ	0xFE2
  4013                           fsr1l	equ	0xFE1
  4014                           indf2	equ	0xFDF
  4015                           postinc2	equ	0xFDE
  4016                           postdec2	equ	0xFDD
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _leds_glitch *****************
  4022 ;; Defined at:
  4023 ;;		line 17 in file "leds.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  leds            1    wreg     unsigned char 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  leds            1   17[COMRAM] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;		None               void
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4037 ;;      Params:         0       0       0       0
  4038 ;;      Locals:         1       0       0       0
  4039 ;;      Temps:          1       0       0       0
  4040 ;;      Totals:         2       0       0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    1
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_main_loop
  4048 ;;		_zb_handle
  4049 ;;		_hyt221_launch_acq
  4050 ;;		_hyt221_operation
  4051 ;;		_calibration
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text30
  4056  0009FC                     __ptext30:
  4057                           	opt stack 0
  4058  0009FC                     _leds_glitch:
  4059                           	opt stack 27
  4060                           
  4061                           ;incstack = 0
  4062                           ;leds_glitch@leds stored from wreg
  4063  0009FC  6E12               	movwf	leds_glitch@leds,c
  4064                           
  4065                           ;leds.c: 19: LATA |= leds;
  4066  0009FE  5012               	movf	leds_glitch@leds,w,c
  4067  000A00  1289               	iorwf	3977,f,c	;volatile
  4068                           
  4069                           ;leds.c: 20: _delay((unsigned long)((100)*((1000000)/4000.0)));
  4070  000A02  0E21               	movlw	33
  4071  000A04  6E11               	movwf	??_leds_glitch& (0+255),c
  4072  000A06  0E76               	movlw	118
  4073  000A08                     u1057:
  4074  000A08  2EE8               	decfsz	wreg,f,c
  4075  000A0A  D7FE               	goto	u1057
  4076  000A0C  2E11               	decfsz	??_leds_glitch& (0+255),f,c
  4077  000A0E  D7FC               	goto	u1057
  4078  000A10  D000               	nop2	
  4079                           
  4080                           ;leds.c: 21: LATA &= ~leds;
  4081  000A12  5012               	movf	leds_glitch@leds,w,c
  4082  000A14  0AFF               	xorlw	255
  4083  000A16  1689               	andwf	3977,f,c	;volatile
  4084  000A18  0012               	return	
  4085  000A1A                     __end_of_leds_glitch:
  4086                           	opt stack 0
  4087                           tblptru	equ	0xFF8
  4088                           tblptrh	equ	0xFF7
  4089                           tblptrl	equ	0xFF6
  4090                           tablat	equ	0xFF5
  4091                           prodh	equ	0xFF4
  4092                           prodl	equ	0xFF3
  4093                           intcon	equ	0xFF2
  4094                           postinc0	equ	0xFEE
  4095                           wreg	equ	0xFE8
  4096                           indf1	equ	0xFE7
  4097                           postdec1	equ	0xFE5
  4098                           fsr1h	equ	0xFE2
  4099                           fsr1l	equ	0xFE1
  4100                           indf2	equ	0xFDF
  4101                           postinc2	equ	0xFDE
  4102                           postdec2	equ	0xFDD
  4103                           fsr2h	equ	0xFDA
  4104                           fsr2l	equ	0xFD9
  4105                           status	equ	0xFD8
  4106                           
  4107 ;; *************** function _isr_hi *****************
  4108 ;; Defined at:
  4109 ;;		line 17 in file "interrupt.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  dummy           1   15[COMRAM] unsigned char 
  4114 ;; Return value:  Size  Location     Type
  4115 ;;		None               void
  4116 ;; Registers used:
  4117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4123 ;;      Params:         0       0       0       0
  4124 ;;      Locals:         1       0       0       0
  4125 ;;      Temps:         15       0       0       0
  4126 ;;      Totals:        16       0       0       0
  4127 ;;Total ram usage:       16 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		Interrupt level 2
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	intcode
  4137  000008                     __pintcode:
  4138                           	opt stack 0
  4139  000008                     _isr_hi:
  4140                           	opt stack 26
  4141                           
  4142                           ;incstack = 0
  4143  000008  CFFA F002          	movff	pclath,??_isr_hi+1
  4144  00000C  CFFB F003          	movff	pclatu,??_isr_hi+2
  4145  000010  CFE9 F004          	movff	fsr0l,??_isr_hi+3
  4146  000014  EDEA  F000         	call	int_func,f	;refresh shadow registers
  4147                           pclatu	equ	0xFFB
  4148                           pclath	equ	0xFFA
  4149                           tblptru	equ	0xFF8
  4150                           tblptrh	equ	0xFF7
  4151                           tblptrl	equ	0xFF6
  4152                           tablat	equ	0xFF5
  4153                           prodh	equ	0xFF4
  4154                           prodl	equ	0xFF3
  4155                           intcon	equ	0xFF2
  4156                           postinc0	equ	0xFEE
  4157                           fsr0l	equ	0xFE9
  4158                           wreg	equ	0xFE8
  4159                           indf1	equ	0xFE7
  4160                           postdec1	equ	0xFE5
  4161                           fsr1h	equ	0xFE2
  4162                           fsr1l	equ	0xFE1
  4163                           indf2	equ	0xFDF
  4164                           postinc2	equ	0xFDE
  4165                           postdec2	equ	0xFDD
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170                           	psect	intcode_body
  4171  0001D4                     __pintcode_body:
  4172                           	opt stack 26
  4173  0001D4                     int_func:
  4174                           	opt stack 26
  4175  0001D4  0006               	pop		; remove dummy address from shadow register refresh
  4176  0001D6  CFEA F005          	movff	fsr0h,??_isr_hi+4
  4177  0001DA  CFE1 F006          	movff	fsr1l,??_isr_hi+5
  4178  0001DE  CFE2 F007          	movff	fsr1h,??_isr_hi+6
  4179  0001E2  CFD9 F008          	movff	fsr2l,??_isr_hi+7
  4180  0001E6  CFDA F009          	movff	fsr2h,??_isr_hi+8
  4181  0001EA  CFF3 F00A          	movff	prodl,??_isr_hi+9
  4182  0001EE  CFF4 F00B          	movff	prodh,??_isr_hi+10
  4183  0001F2  CFF6 F00C          	movff	tblptrl,??_isr_hi+11
  4184  0001F6  CFF7 F00D          	movff	tblptrh,??_isr_hi+12
  4185  0001FA  CFF8 F00E          	movff	tblptru,??_isr_hi+13
  4186  0001FE  CFF5 F00F          	movff	tablat,??_isr_hi+14
  4187                           
  4188                           ;interrupt.c: 20: if (PIE1bits.SSPIE & PIR1bits.SSPIF)
  4189  000202  0E01               	movlw	1
  4190  000204  A69D               	btfss	3997,3,c	;volatile
  4191  000206  0E00               	movlw	0
  4192  000208  A69E               	btfss	3998,3,c	;volatile
  4193  00020A  0E00               	movlw	0
  4194  00020C  A0E8               	btfss	wreg,0,c
  4195  00020E  D003               	goto	i2u86_40
  4196  000210  6A01               	clrf	??_isr_hi& (0+255),c
  4197  000212  2A01               	incf	??_isr_hi& (0+255),f,c
  4198  000214  D001               	goto	i2u86_48
  4199  000216                     i2u86_40:
  4200  000216  6A01               	clrf	??_isr_hi& (0+255),c
  4201  000218                     i2u86_48:
  4202  000218  5001               	movf	??_isr_hi,w,c
  4203  00021A  B4D8               	btfsc	status,2,c
  4204  00021C  D004               	goto	i2l2172
  4205                           
  4206                           ;interrupt.c: 21: {
  4207                           ;interrupt.c: 22: PIR1bits.SSPIF = 0;
  4208  00021E  969E               	bcf	3998,3,c	;volatile
  4209                           
  4210                           ;interrupt.c: 23: i2c_interupt_done = TRUE;
  4211  000220  0E01               	movlw	1
  4212  000222  6E68               	movwf	_i2c_interupt_done,c
  4213  000224  D059               	goto	i2l412
  4214  000226                     i2l2172:
  4215                           
  4216                           ;interrupt.c: 25: }
  4217                           ;interrupt.c: 28: if (INTCONbits.TMR0IE & INTCONbits.TMR0IF)
  4218  000226  0E01               	movlw	1
  4219  000228  AAF2               	btfss	intcon,5,c	;volatile
  4220  00022A  0E00               	movlw	0
  4221  00022C  A4F2               	btfss	intcon,2,c	;volatile
  4222  00022E  0E00               	movlw	0
  4223  000230  A0E8               	btfss	wreg,0,c
  4224  000232  D003               	goto	i2u88_40
  4225  000234  6A01               	clrf	??_isr_hi& (0+255),c
  4226  000236  2A01               	incf	??_isr_hi& (0+255),f,c
  4227  000238  D001               	goto	i2u88_48
  4228  00023A                     i2u88_40:
  4229  00023A  6A01               	clrf	??_isr_hi& (0+255),c
  4230  00023C                     i2u88_48:
  4231  00023C  5001               	movf	??_isr_hi,w,c
  4232  00023E  B4D8               	btfsc	status,2,c
  4233  000240  D004               	goto	i2l2180
  4234                           
  4235                           ;interrupt.c: 29: {
  4236                           ;interrupt.c: 30: timer0_interupt_done = TRUE;
  4237  000242  0E01               	movlw	1
  4238  000244  6E6A               	movwf	_timer0_interupt_done,c
  4239                           
  4240                           ;interrupt.c: 49: INTCONbits.TMR0IF = 0;
  4241  000246  94F2               	bcf	intcon,2,c	;volatile
  4242  000248  D047               	goto	i2l412
  4243  00024A                     i2l2180:
  4244                           
  4245                           ;interrupt.c: 51: }
  4246                           ;interrupt.c: 54: if (PIE1bits.ADIE & PIR1bits.ADIF)
  4247  00024A  0E01               	movlw	1
  4248  00024C  AC9D               	btfss	3997,6,c	;volatile
  4249  00024E  0E00               	movlw	0
  4250  000250  AC9E               	btfss	3998,6,c	;volatile
  4251  000252  0E00               	movlw	0
  4252  000254  A0E8               	btfss	wreg,0,c
  4253  000256  D003               	goto	i2u90_40
  4254  000258  6A01               	clrf	??_isr_hi& (0+255),c
  4255  00025A  2A01               	incf	??_isr_hi& (0+255),f,c
  4256  00025C  D001               	goto	i2u90_48
  4257  00025E                     i2u90_40:
  4258  00025E  6A01               	clrf	??_isr_hi& (0+255),c
  4259  000260                     i2u90_48:
  4260  000260  5001               	movf	??_isr_hi,w,c
  4261  000262  B4D8               	btfsc	status,2,c
  4262  000264  D002               	goto	i2l2184
  4263                           
  4264                           ;interrupt.c: 55: {
  4265                           ;interrupt.c: 56: PIR1bits.ADIF = 0;
  4266  000266  9C9E               	bcf	3998,6,c	;volatile
  4267                           
  4268                           ;interrupt.c: 57: return;
  4269  000268  D037               	goto	i2l412
  4270  00026A                     i2l2184:
  4271                           
  4272                           ;interrupt.c: 58: }
  4273                           ;interrupt.c: 61: if (PIE1bits.RC1IE & PIR1bits.RCIF)
  4274  00026A  0E01               	movlw	1
  4275  00026C  AA9D               	btfss	3997,5,c	;volatile
  4276  00026E  0E00               	movlw	0
  4277  000270  AA9E               	btfss	3998,5,c	;volatile
  4278  000272  0E00               	movlw	0
  4279  000274  A0E8               	btfss	wreg,0,c
  4280  000276  D003               	goto	i2u92_40
  4281  000278  6A01               	clrf	??_isr_hi& (0+255),c
  4282  00027A  2A01               	incf	??_isr_hi& (0+255),f,c
  4283  00027C  D001               	goto	i2u92_48
  4284  00027E                     i2u92_40:
  4285  00027E  6A01               	clrf	??_isr_hi& (0+255),c
  4286  000280                     i2u92_48:
  4287  000280  5001               	movf	??_isr_hi,w,c
  4288  000282  B4D8               	btfsc	status,2,c
  4289  000284  D029               	goto	i2l412
  4290                           
  4291                           ;interrupt.c: 62: {
  4292                           ;interrupt.c: 63: uint8_t dummy;
  4293                           ;interrupt.c: 67: if (RCSTAbits.FERR)
  4294  000286  A4AB               	btfss	4011,2,c	;volatile
  4295  000288  D005               	goto	i2l416
  4296                           
  4297                           ;interrupt.c: 68: {
  4298                           ;interrupt.c: 70: UART_errorStatus.framingError++;
  4299  00028A  2A5C               	incf	_UART_errorStatus,f,c
  4300                           
  4301                           ;interrupt.c: 72: dummy = RCREG;
  4302  00028C  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4303  000290  00FF               	reset		;# 
  4304                           
  4305                           ;interrupt.c: 74: }
  4306  000292  D022               	goto	i2l412
  4307  000294                     i2l416:
  4308                           
  4309                           ;interrupt.c: 75: else if (RCSTAbits.OERR)
  4310  000294  A2AB               	btfss	4011,1,c	;volatile
  4311  000296  D005               	goto	i2l2198
  4312                           
  4313                           ;interrupt.c: 76: {
  4314                           ;interrupt.c: 78: UART_errorStatus.overrunError++;
  4315  000298  2A5D               	incf	_UART_errorStatus+1,f,c
  4316                           
  4317                           ;interrupt.c: 79: dummy = RCREG;
  4318  00029A  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4319                           
  4320                           ;interrupt.c: 81: RCSTAbits.CREN = 0;
  4321  00029E  98AB               	bcf	4011,4,c	;volatile
  4322                           
  4323                           ;interrupt.c: 82: }
  4324  0002A0  D01B               	goto	i2l412
  4325  0002A2                     i2l2198:
  4326                           
  4327                           ;interrupt.c: 83: else if (UART_rxBufferNb < (50))
  4328  0002A2  0E32               	movlw	50
  4329  0002A4  5C65               	subwf	_UART_rxBufferNb,w,c
  4330  0002A6  B0D8               	btfsc	status,0,c
  4331  0002A8  D014               	goto	i2l2210
  4332                           
  4333                           ;interrupt.c: 84: {
  4334                           ;interrupt.c: 85: UART_rxBuffer[UART_writeIndex] = RCREG;
  4335  0002AA  5066               	movf	_UART_writeIndex,w,c
  4336  0002AC  0D01               	mullw	1
  4337  0002AE  0100               	movlb	0	; () banked
  4338  0002B0  0E80               	movlw	low _UART_rxBuffer
  4339  0002B2  24F3               	addwf	prodl,w,c
  4340  0002B4  6ED9               	movwf	fsr2l,c
  4341  0002B6  0100               	movlb	0	; () banked
  4342  0002B8  0E00               	movlw	high _UART_rxBuffer
  4343  0002BA  20F4               	addwfc	prodh,w,c
  4344  0002BC  6EDA               	movwf	fsr2h,c
  4345  0002BE  CFAE FFDF          	movff	4014,indf2	;volatile
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;interrupt.c: 86: UART_writeIndex++;
  4349  0002C2  2A66               	incf	_UART_writeIndex,f,c
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;interrupt.c: 87: if (UART_writeIndex >= (50))
  4353  0002C4  0E31               	movlw	49
  4354  0002C6  6466               	cpfsgt	_UART_writeIndex,c
  4355  0002C8  D002               	goto	i2l2208
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;interrupt.c: 88: {
  4359                           ;interrupt.c: 89: UART_writeIndex = 0;
  4360  0002CA  0E00               	movlw	0
  4361  0002CC  6E66               	movwf	_UART_writeIndex,c
  4362  0002CE                     i2l2208:
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;interrupt.c: 90: }
  4366                           ;interrupt.c: 91: UART_rxBufferNb++;
  4367  0002CE  2A65               	incf	_UART_rxBufferNb,f,c
  4368                           
  4369                           ;interrupt.c: 92: }
  4370  0002D0  D003               	goto	i2l412
  4371  0002D2                     i2l2210:
  4372                           
  4373                           ;interrupt.c: 93: else
  4374                           ;interrupt.c: 94: {
  4375                           ;interrupt.c: 96: UART_errorStatus.bufferOverrunError++;
  4376  0002D2  2A5E               	incf	_UART_errorStatus+2,f,c
  4377                           
  4378                           ;interrupt.c: 97: dummy = RCREG;
  4379  0002D4  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4380  0002D8                     i2l412:
  4381  0002D8  C00F  FFF5         	movff	??_isr_hi+14,tablat
  4382  0002DC  C00E  FFF8         	movff	??_isr_hi+13,tblptru
  4383  0002E0  C00D  FFF7         	movff	??_isr_hi+12,tblptrh
  4384  0002E4  C00C  FFF6         	movff	??_isr_hi+11,tblptrl
  4385  0002E8  C00B  FFF4         	movff	??_isr_hi+10,prodh
  4386  0002EC  C00A  FFF3         	movff	??_isr_hi+9,prodl
  4387  0002F0  C009  FFDA         	movff	??_isr_hi+8,fsr2h
  4388  0002F4  C008  FFD9         	movff	??_isr_hi+7,fsr2l
  4389  0002F8  C007  FFE2         	movff	??_isr_hi+6,fsr1h
  4390  0002FC  C006  FFE1         	movff	??_isr_hi+5,fsr1l
  4391  000300  C005  FFEA         	movff	??_isr_hi+4,fsr0h
  4392  000304  C004  FFE9         	movff	??_isr_hi+3,fsr0l
  4393  000308  C003  FFFB         	movff	??_isr_hi+2,pclatu
  4394  00030C  C002  FFFA         	movff	??_isr_hi+1,pclath
  4395  000310  0011               	retfie		f
  4396  000312                     __end_of_isr_hi:
  4397                           	opt stack 0
  4398  0000                     pclatu	equ	0xFFB
  4399                           pclath	equ	0xFFA
  4400                           tblptru	equ	0xFF8
  4401                           tblptrh	equ	0xFF7
  4402                           tblptrl	equ	0xFF6
  4403                           tablat	equ	0xFF5
  4404                           prodh	equ	0xFF4
  4405                           prodl	equ	0xFF3
  4406                           intcon	equ	0xFF2
  4407                           postinc0	equ	0xFEE
  4408                           fsr0h	equ	0xFEA
  4409                           fsr0l	equ	0xFE9
  4410                           wreg	equ	0xFE8
  4411                           indf1	equ	0xFE7
  4412                           postdec1	equ	0xFE5
  4413                           fsr1h	equ	0xFE2
  4414                           fsr1l	equ	0xFE1
  4415                           indf2	equ	0xFDF
  4416                           postinc2	equ	0xFDE
  4417                           postdec2	equ	0xFDD
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           pclatu	equ	0xFFB
  4422                           pclath	equ	0xFFA
  4423                           tblptru	equ	0xFF8
  4424                           tblptrh	equ	0xFF7
  4425                           tblptrl	equ	0xFF6
  4426                           tablat	equ	0xFF5
  4427                           prodh	equ	0xFF4
  4428                           prodl	equ	0xFF3
  4429                           intcon	equ	0xFF2
  4430                           postinc0	equ	0xFEE
  4431                           fsr0h	equ	0xFEA
  4432                           fsr0l	equ	0xFE9
  4433                           wreg	equ	0xFE8
  4434                           indf1	equ	0xFE7
  4435                           postdec1	equ	0xFE5
  4436                           fsr1h	equ	0xFE2
  4437                           fsr1l	equ	0xFE1
  4438                           indf2	equ	0xFDF
  4439                           postinc2	equ	0xFDE
  4440                           postdec2	equ	0xFDD
  4441                           fsr2h	equ	0xFDA
  4442                           fsr2l	equ	0xFD9
  4443                           status	equ	0xFD8
  4444                           
  4445                           	psect	rparam
  4446  0000                     pclatu	equ	0xFFB
  4447                           pclath	equ	0xFFA
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           intcon	equ	0xFF2
  4455                           postinc0	equ	0xFEE
  4456                           fsr0h	equ	0xFEA
  4457                           fsr0l	equ	0xFE9
  4458                           wreg	equ	0xFE8
  4459                           indf1	equ	0xFE7
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           postinc2	equ	0xFDE
  4465                           postdec2	equ	0xFDD
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45     110
    BANK0           128      0     100
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zigbee_appendChecksum@sizeFrame	PTR unsigned char  size(2) Largest target is 1
		 -> zb_handle_sendData@frameSize(COMRAM[1]), 

    zigbee_appendChecksum@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    S1400$data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame	PTR struct . size(2) Largest target is 9
		 -> zb_handle@decodedFrame(COMRAM[8]), 

    zb_decodage@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    zb_doChecksum@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), zb_frameToSend(COMRAM[33]), 

    uart_read@buffer	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_read@b	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_write@buffer	PTR const unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    uart_write@b	PTR const unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 


Critical Paths under _main in COMRAM

    _main->_main_loop
    _main_loop->_zb_handle
    _zb_handle_setTempRaw->_hyt221_getTemp
    _zb_handle_setHumidityRaw->_hyt221_getHumidity
    _zb_handle_sendData->_zigbee_appendChecksum
    _zigbee_appendChecksum->_zb_doChecksum
    _zb_handle->_zb_decodage
    _zb_decodage->_zb_doChecksum
    _hyt221_operation->_leds_glitch
    _hyt221_launch_acq->_leds_glitch
    _i2c_trig_start->_i2c_wait_idle
    _batt_launch_acq->_zb_handle_setbatVolt
    _calibration->_leds_glitch

Critical Paths under _isr_hi in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr_hi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_hi in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_hi in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3331
                        _calibration
                          _i2c_setup
                          _main_loop
                         _uart_setup
 ---------------------------------------------------------------------------------
 (1) _uart_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                            2     2      0    3150
                                             43 COMRAM     2     2      0
                    _batt_launch_acq
                 _hyt221_getHumidity
                     _hyt221_getTemp
                  _hyt221_launch_acq
                   _hyt221_operation
                        _leds_glitch
                  _timer0_wait_262ms
                   _timer0_wait_65ms
                          _zb_handle
                _zb_handle_getStatus
              _zb_handle_resetStatus
                 _zb_handle_sendData
           _zb_handle_setHumidityRaw
               _zb_handle_setTempRaw
                  _zb_handle_waitAck
 ---------------------------------------------------------------------------------
 (2) _zb_handle_waitAck                                    0     0      0       0
                  _timer0_wait_262ms
 ---------------------------------------------------------------------------------
 (3) _timer0_wait_262ms                                    0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setTempRaw                                 2     0      2      58
                                             22 COMRAM     2     0      2
                     _hyt221_getTemp (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setHumidityRaw                             2     0      2      58
                                             20 COMRAM     2     0      2
                 _hyt221_getHumidity (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_sendData                                   4     4      0     753
                                             28 COMRAM     4     4      0
                         _uart_write
              _zigbee_appendChecksum
 ---------------------------------------------------------------------------------
 (3) _zigbee_appendChecksum                                7     3      4     586
                                             21 COMRAM     7     3      4
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (3) _uart_write                                           6     4      2     118
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _zb_handle_resetStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _zb_handle_getStatus                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _zb_handle                                           11    11      0    1840
                                             32 COMRAM    11    11      0
                        _leds_glitch
                          _uart_read
                        _zb_decodage
 ---------------------------------------------------------------------------------
 (3) _zb_decodage                                         11     6      5    1173
                                             21 COMRAM    11     6      5
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (4) _zb_doChecksum                                        5     2      3     326
                                             16 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _uart_read                                            7     4      3     372
                                             16 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _timer0_wait_65ms                                     0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (4) _timer0_wait_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _hyt221_operation                                     2     2      0     159
                                             18 COMRAM     2     2      0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (2) _hyt221_launch_acq                                    0     0      0      44
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_stop                                        0     0      0       0
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_start                                       0     0      0       0
                      _i2c_wait_idle
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_idle                                        1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_getTemp                                       6     4      2      30
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _hyt221_getHumidity                                   4     2      2      15
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _batt_launch_acq                                      2     2      0      58
                                             18 COMRAM     2     2      0
               _zb_handle_setbatVolt
 ---------------------------------------------------------------------------------
 (3) _zb_handle_setbatVolt                                 2     0      2      58
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration                                          3     3      0     181
                                             18 COMRAM     3     3      0
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (3) _leds_glitch                                          2     2      0      44
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr_hi                                              16    16      0       3
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration
     _leds_glitch
   _i2c_setup
   _main_loop
     _batt_launch_acq
       _zb_handle_setbatVolt
     _hyt221_getHumidity
     _hyt221_getTemp
     _hyt221_launch_acq
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_glitch
     _hyt221_operation
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_glitch
     _leds_glitch
     _timer0_wait_262ms
       _timer0_wait_ready
     _timer0_wait_65ms
       _timer0_wait_ready
     _zb_handle
       _leds_glitch
       _uart_read
       _zb_decodage
         _zb_doChecksum
     _zb_handle_getStatus
     _zb_handle_resetStatus
     _zb_handle_sendData
       _uart_write
       _zigbee_appendChecksum
         _zb_doChecksum
     _zb_handle_setHumidityRaw
       _hyt221_getHumidity (ARG)
     _zb_handle_setTempRaw
       _hyt221_getTemp (ARG)
     _zb_handle_waitAck
       _timer0_wait_262ms
         _timer0_wait_ready
   _uart_setup

 _isr_hi (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      64       5       78.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2D      6E       1       86.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2       3        0.0%
DATA                 0      0      D2      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Nov 11 15:34:02 2016

            __size_of_i2c_trig_start 000C                          _SSPSTATbits 000FC7  
                     uart_write@size 0015                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                                l119 03FE                                  l136 081C  
                                l137 081A                                  l322 04A6  
                                l341 051A                                  l237 08B2  
                                l262 006A                                  l238 08B0  
                                l441 0590                                  l370 0674  
                                l366 0976                                  l377 0648  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u987 07DC                                  u997 08D2  
                                prod 000FF3                                  wreg 000FE8  
        __end_of_zb_handle_getStatus 0ABC           __end_of_zb_handle_sendData 06F2  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               l2020 05DC                                 l2004 059A  
                               l1140 089A                                 l1070 0A46  
                               l2030 033C                                 l1144 08BC  
                               l2042 0356                                 l2026 0330  
                               l1076 0A52                                 l2060 03A4  
                               l2044 0366                                 l2108 043E  
                               l1094 0A34                                 l2062 03AC  
                               l2054 0396                                 l2038 0350  
                               l2080 03D2                                 l2074 03C4  
                               l2092 040C                                 l2094 0428  
                               l1802 01B2                                 l1732 0944  
                               l1804 01D0                                 l1910 063C  
                               l1830 04CA                                 l1760 073A  
                               l1728 092E                                 l1840 04E6  
                               l1914 064A                                 l1922 0656  
                               l1834 04D2                                 l1826 04A2  
                               l1756 0734                                 l1748 0708  
                               l1934 0672                                 l1766 074A  
                               l1790 0130                                 l1782 0086  
                               l1864 096A                                 l1792 0152  
                               l1848 04FA                                 l1778 0066  
                               l1892 0604                                 l1796 0172  
                               l1974 0526                                 l1894 060A  
                               l1798 01AC                                 l1986 0546  
                               l1996 0570                                 l1988 0548  
                       ?_leds_glitch 0001                     uart_write@buffer 0011  
                               u1007 0530                                 u1017 058A  
                               u1027 05AA                                 u1037 05BA  
                               u1047 05CE                                 u1057 0A08  
                               _LATA 000F89                        __CFG_DEBUG$ON 000000  
                               _TMR0 000FD6              ??_zigbee_appendChecksum 001A  
                               _main 07AC                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0018                        __CFG_IESO$OFF 000000  
            ??_zb_handle_resetStatus 0011                        __CFG_MCLRE$ON 000000  
                  ??_batt_launch_acq 0013                        _i2c_wait_idle 0A52  
                              ?_main 0001                 __size_of_calibration 00C6  
                              _T0CON 000FD5                                _T1CON 000FCD  
                              i2l412 02D8                                i2l416 0294  
                              _RCREG 000FAE                                _RCSTA 000FAB  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                              _SPBRG 000FAF                                _PORTA 000F80  
                              _TRISA 000F92                                _TRISC 000F94  
                              _TXREG 000FAD                                _TXSTA 000FAC  
                      __CFG_PWRT$OFF 000000                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                              _gData 0058                        _i2c_trig_stop 0AB0  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                              tablat 000FF5                                status 000FD8  
hyt221_operation@bDeviceDataAreStale 0013                  zb_decodage@checksum 001F  
                     __CFG_PBADEN$ON 000000                    _wait_join_counter 006B  
                    _UART_rxBufferNb 0065                      __initialization 0848  
                       __end_of_main 0800                       ?_i2c_wait_idle 0001  
                             ??_main 002E                        __activetblptr 000002  
       __end_of_zb_handle_setTempRaw 0A70                       ?_i2c_trig_stop 0001  
                     _i2c_wait_ready 0A40                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
       __end_of_zb_handle_setbatVolt 0A9A                               _ADRESH 000FC4  
                             _ADRESL 000FC3            __size_of_hyt221_operation 0094  
                             i2l2210 02D2                               i2l2208 02CE  
                             i2l2180 024A                               i2l2172 0226  
                             i2l2184 026A                               i2l2198 02A2  
                             _OSCCON 000FD3                               _SPBRGH 000FB0  
                             _SSPADD 000FC8                   __size_of_i2c_setup 0030  
                             _SSPBUF 000FC9                hyt221_operation@index 0014  
                   _UART_errorStatus 005C                     _timer0_wait_65ms 099A  
                     __CFG_XINST$OFF 000000                       _i2c_trig_start 0A9A  
                       ?_zb_decodage 0016                               _calibr 0067  
                     __CFG_STVREN$ON 000000                     ??_hyt221_getTemp 0013  
                             clear_0 084E                               clear_1 085A  
                             _isr_hi 0008             _zb_handle_setHumidityRaw 0A70  
             __end_of_i2c_wait_ready 0A52                      _UART_writeIndex 0066  
                       __pdataCOMRAM 002E                   zb_doChecksum@frame 0011  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           __accesstop 0080  
            __end_of__initialization 0880                 __size_of_leds_glitch 001E  
              __end_of_zb_doChecksum 0950               __end_of_i2c_trig_start 0AA6  
                 _hyt221_getHumidity 0A1A                     zb_decodage@frame 0016  
                     __pcstackCOMRAM 0001                      ??_i2c_wait_idle 0011  
               zb_decodage@frameSize 0018                  ?_hyt221_getHumidity 0011  
                  __end_of_i2c_setup 08F8                      ??_i2c_trig_stop 0011  
                       _batt_counter 005F                          isr_hi@dummy 0010  
                    ?_i2c_wait_ready 0001       hyt221_getHumidity@humidity_raw 0013  
                         __pbssBANK0 0080                   __size_of_main_loop 013C  
               ??_hyt221_getHumidity 0013                      _batt_launch_acq 0800  
     __size_of_zigbee_appendChecksum 005A        __end_of_zigbee_appendChecksum 07AC  
                         _batt_value 0062                      ?_i2c_trig_start 0001  
                 _zb_handle_sendData 0676                 _zb_handle_setTempRaw 0A62  
     __size_of_zb_handle_resetStatus 000E        __end_of_zb_handle_resetStatus 0A8C  
        zigbee_appendChecksum@buffer 0016                 _zb_handle_setbatVolt 0A8C  
                ?_zb_handle_sendData 0001                              _BAUDCON 000FB8  
                            ?_isr_hi 0001                   __size_of_zb_handle 00CE  
                 __size_of_uart_read 0060                              _OSCTUNE 000F9B  
                            i2u90_40 025E                              i2u90_48 0260  
                            i2u92_40 027E                              i2u92_48 0280  
                            i2u86_40 0216                              i2u86_48 0218  
                            i2u88_40 023A                              i2u88_48 023C  
                            _SSPCON1 000FC6                              _SSPCON2 000FC5  
                            _SSPSTAT 000FC7                     _hyt221_operation 05E2  
               ??_zb_handle_sendData 001D                    _timer0_wait_262ms 0978  
       __size_of_zb_handle_getStatus 0004                           _main_state 0069  
                 ?_timer0_wait_262ms 0001                ?_zb_handle_setTempRaw 0017  
                            __Hparam 0000                              __Lparam 0000  
                ??_timer0_wait_262ms 0011                ?_zb_handle_setbatVolt 0011  
                  _timer0_wait_ready 0A2E                        ??_calibration 0013  
                  __end_of_main_loop 044E                 __size_of_zb_decodage 01B8  
                            __pcinit 0848                   ?_timer0_wait_ready 0001  
                            __ramtop 0300                      __size_of_isr_hi 030A  
                            __ptext0 07AC                              __ptext1 09DE  
                            __ptext2 0312                              __ptext3 0AA6  
                            __ptext4 0978                              __ptext5 0A62  
                            __ptext6 0A70                              __ptext7 0676  
                            __ptext8 0752                              __ptext9 088A  
                          _T0CONbits 000FD5             __end_of_timer0_wait_65ms 09BC  
                ??_timer0_wait_ready 0011              __end_of_batt_launch_acq 0848  
          __end_of_timer0_wait_262ms 099A                       __pintcode_body 01D4  
               end_of_initialization 0880                       zb_doChecksum@i 0015  
                      __Lmediumconst 0000                              int_func 01D4  
                  __end_of_zb_handle 051C                    __end_of_uart_read 0752  
          __end_of_timer0_wait_ready 0A40           ??_zb_handle_setHumidityRaw 0017  
                          _RCSTAbits 000FAB                              postdec1 000FE5  
                            postdec2 000FDD                    zb_handle@bSuccess 0023  
                            postinc0 000FEE                              postinc2 000FDE  
                         _zb_counter 006C                           _uart_setup 09DE  
                         _uart_write 088A                            _PORTBbits 000F81  
                          _PORTCbits 000F82                  __end_of_calibration 05E2  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                        uart_write@b 0013                          uart_write@i 0016  
             ??_zb_handle_setTempRaw 0019                            _TXSTAbits 000FAC  
             ??_zb_handle_setbatVolt 0013                     ??_i2c_wait_ready 0011  
                     _UART_readIndex 0064                        __pidataCOMRAM 09BC  
                     __end_of_isr_hi 0312                     _zb_frameReceived 00B2  
                start_initialization 0848                            _i2c_setup 08C8  
         __size_of_timer0_wait_262ms 0022                     ?_batt_launch_acq 0001  
                      ??_leds_glitch 0011                     ??_i2c_trig_start 0012  
                       calibration@w 0015                     __CFG_OSC$INTIO67 000000  
         __size_of_timer0_wait_ready 0012             __end_of_hyt221_operation 0676  
              __end_of_i2c_wait_idle 0A62                          _calibration 051C  
                   __CFG_LPT1OSC$OFF 000000                             ??_isr_hi 0001  
                        ?_uart_setup 0001                    zb_doChecksum@size 0013  
                        ?_uart_write 0011                  _zb_handle_getStatus 0AB8  
                        __pbssCOMRAM 004F                __end_of_i2c_trig_stop 0AB8  
             __size_of_zb_doChecksum 002A              __size_of_hyt221_getTemp 002E  
                         ?_i2c_setup 0001                       _zb_frameToSend 002E  
               ?_zb_handle_getStatus 0001          __size_of_hyt221_getHumidity 0014  
                __end_of_leds_glitch 0A1A     __end_of_zb_handle_setHumidityRaw 0A7E  
              _zigbee_appendChecksum 0752                    __CFG_CCP2MX$PORTC 000000  
                  _zb_handle_waitAck 0AA6                            __pintcode 0008  
                 ?_zb_handle_waitAck 0001                _zb_handle_resetStatus 0A7E  
    zb_handle_setbatVolt@battVoltage 0011                    _hyt221_launch_acq 0950  
            uart_read@expectedNbRead 0016                  ??_zb_handle_waitAck 0011  
                          _main_loop 0312                   ?_hyt221_launch_acq 0001  
                  ?_timer0_wait_65ms 0001                   ??_timer0_wait_65ms 0011  
        __size_of_zb_handle_sendData 007C                  ??_hyt221_launch_acq 0013  
              ??_zb_handle_getStatus 0011                  __size_of_uart_setup 001E  
                           _LATAbits 000F89                             _LATBbits 000F8A  
                           _LATCbits 000F8B                  __size_of_uart_write 003E  
                           _PIE1bits 000F9D            __end_of_zb_handle_waitAck 0AB0  
                      _zb_doChecksum 0926                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                        ??_zb_decodage 001B  
                   __CFG_WDTPS$16384 000000                            _zb_handle 044E  
                          _uart_read 06F2                      uart_read@buffer 0011  
                         uart_read@b 0014                           uart_read@i 0017  
          __end_of_hyt221_launch_acq 0978                            _zb_status 006E  
                         ?_main_loop 0001                          ??_i2c_setup 0011  
                          copy_data0 0874                          _leds_glitch 09FC  
              calibration@tryCounter 0014                        _UART_rxBuffer 0080  
                     ?_zb_doChecksum 0011               ?_zigbee_appendChecksum 0016  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000       zigbee_appendChecksum@sizeFrame 0018  
                         ?_zb_handle 0001                zb_handle@decodedFrame 0024  
                         ?_uart_read 0011                zb_doChecksum@checksum 0014  
             ?_zb_handle_resetStatus 0001  zb_handle_setHumidityRaw@humidityRaw 0015  
                __end_of_zb_decodage 01D4                       _hyt221_getTemp 08F8  
  __size_of_zb_handle_setHumidityRaw 000E            ?_zb_handle_setHumidityRaw 0015  
                           __ptext10 0A7E                             __ptext11 0AB8  
                           __ptext20 0AB0                             __ptext12 044E  
                           __ptext21 0A9A                             __ptext13 001C  
                           __ptext30 09FC                             __ptext22 0A40  
                           __ptext14 0926                             __ptext23 0A52  
                           __ptext15 06F2                             __ptext24 08F8  
                           __ptext16 099A                             __ptext25 0A1A  
                           __ptext17 0A2E                             __ptext26 0800  
                           __ptext18 05E2                             __ptext27 0A8C  
                           __ptext19 0950                             __ptext28 08C8  
                           __ptext29 051C                        __size_of_main 0054  
         __size_of_zb_handle_waitAck 000A         zb_decodage@bCorrectlyDecoded 0020  
             main_loop@hyt221_status 002D        __size_of_zb_handle_setTempRaw 000E  
        zb_handle_sendData@frameSize 0020                   main_loop@zb_status 002C  
                           _zb_state 006D        __size_of_zb_handle_setbatVolt 000E  
                       ?_calibration 0001           __size_of_hyt221_launch_acq 0028  
                  ?_hyt221_operation 0001                         ??_uart_setup 0011  
                       ??_uart_write 0013                   ??_hyt221_operation 0013  
             __end_of_hyt221_getTemp 0926                          ??_main_loop 002C  
                         _INTCONbits 000FF2                             intlevel2 0000  
               _timer0_interupt_done 006A                      ??_zb_doChecksum 0014  
                 __end_of_uart_setup 09FC                   __end_of_uart_write 08C8  
           __size_of_batt_launch_acq 0048                           _OSCCONbits 000FD3  
                        ??_zb_handle 0021                          ??_uart_read 0014  
                        _zb_decodage 001C          zb_handle_setTempRaw@tempRaw 0017  
            zb_handle@sizeOfNextData 0021                      leds_glitch@leds 0012  
                    ?_hyt221_getTemp 0011                          _sensor_data 004F  
                  uart_read@nbToRead 0013              __size_of_i2c_wait_ready 0012  
                        _SSPCON2bits 000FC5                    _i2c_interupt_done 0068  
                         _WDTCONbits 000FD1           __end_of_hyt221_getHumidity 0A2E  
             __size_of_i2c_wait_idle 0010            __size_of_timer0_wait_65ms 0022  
            zb_decodage@decodedFrame 0019               hyt221_getTemp@temp_raw 0015  
             __size_of_i2c_trig_stop 0008  
