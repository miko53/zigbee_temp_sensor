

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Sep 10 20:35:06 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           	psect	idataCOMRAM
    49  000A02                     __pidataCOMRAM:
    50                           	opt stack 0
    51                           
    52                           ;initializer for _zb_frameID
    53  000A02  01                 	db	1
    54                           
    55                           ;initializer for _zb_frameToSend
    56  000A03  7E                 	db	126
    57  000A04  00                 	db	0
    58  000A05  04                 	db	4
    59  000A06  10                 	db	16
    60  000A07  02                 	db	2
    61  000A08  00                 	db	0
    62  000A09  00                 	db	0
    63  000A0A  00                 	db	0
    64  000A0B  00                 	db	0
    65  000A0C  00                 	db	0
    66  000A0D  00                 	db	0
    67  000A0E  00                 	db	0
    68  000A0F  00                 	db	0
    69  000A10  FF                 	db	255
    70  000A11  FE                 	db	254
    71  000A12  00                 	db	0
    72  000A13  00                 	db	0
    73  000A14  00                 	db	0
    74  000A15  00                 	db	0
    75  000A16  03                 	db	3
    76  000A17  01                 	db	1
    77  000A18  00                 	db	0
    78  000A19  00                 	db	0
    79  000A1A  00                 	db	0
    80  000A1B  02                 	db	2
    81  000A1C  00                 	db	0
    82  000A1D  00                 	db	0
    83  000A1E  00                 	db	0
    84  000A1F  03                 	db	3
    85  000A20  00                 	db	0
    86  000A21  00                 	db	0
    87  000A22  00                 	db	0
    88  000A23  00                 	db	0
    89  0000                     _TMR0	set	4054
    90  0000                     _ADCON0	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _BAUDCON	set	4024
    96  0000                     _INTCONbits	set	4082
    97  0000                     _LATA	set	3977
    98  0000                     _LATAbits	set	3977
    99  0000                     _LATBbits	set	3978
   100  0000                     _LATCbits	set	3979
   101  0000                     _OSCCON	set	4051
   102  0000                     _OSCCONbits	set	4051
   103  0000                     _OSCTUNE	set	3995
   104  0000                     _PIE1bits	set	3997
   105  0000                     _PIR1bits	set	3998
   106  0000                     _PIR2bits	set	4001
   107  0000                     _PORTA	set	3968
   108  0000                     _PORTBbits	set	3969
   109  0000                     _PORTCbits	set	3970
   110  0000                     _RCREG	set	4014
   111  0000                     _RCSTA	set	4011
   112  0000                     _RCSTAbits	set	4011
   113  0000                     _SPBRG	set	4015
   114  0000                     _SPBRGH	set	4016
   115  0000                     _SSPADD	set	4040
   116  0000                     _SSPBUF	set	4041
   117  0000                     _SSPCON1	set	4038
   118  0000                     _SSPCON2	set	4037
   119  0000                     _SSPCON2bits	set	4037
   120  0000                     _SSPSTAT	set	4039
   121  0000                     _SSPSTATbits	set	4039
   122  0000                     _T0CON	set	4053
   123  0000                     _T0CONbits	set	4053
   124  0000                     _T1CON	set	4045
   125  0000                     _TMR1H	set	4047
   126  0000                     _TMR1L	set	4046
   127  0000                     _TRISA	set	3986
   128  0000                     _TRISBbits	set	3987
   129  0000                     _TRISC	set	3988
   130  0000                     _TRISCbits	set	3988
   131  0000                     _TXREG	set	4013
   132  0000                     _TXSTA	set	4012
   133  0000                     _TXSTAbits	set	4012
   134  0000                     _WDTCONbits	set	4049
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  000896                     __pcinit:
   140                           	opt stack 0
   141  000896                     start_initialization:
   142                           	opt stack 0
   143  000896                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to BANK0 (100 bytes)
   147  000896  EE00  F080         	lfsr	0,__pbssBANK0
   148  00089A  0E64               	movlw	100
   149  00089C                     clear_0:
   150  00089C  6AEE               	clrf	postinc0,c
   151  00089E  06E8               	decf	wreg,f,c
   152  0008A0  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to COMRAM (34 bytes)
   155  0008A2  EE00  F02C         	lfsr	0,__pbssCOMRAM
   156  0008A6  0E22               	movlw	34
   157  0008A8                     clear_1:
   158  0008A8  6AEE               	clrf	postinc0,c
   159  0008AA  06E8               	decf	wreg,f,c
   160  0008AC  E1FD               	bnz	clear_1
   161                           
   162                           ; Initialize objects allocated to COMRAM (34 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164  0008AE  0E02               	movlw	low __pidataCOMRAM
   165  0008B0  6EF6               	movwf	tblptrl,c
   166  0008B2  0E0A               	movlw	high __pidataCOMRAM
   167  0008B4  6EF7               	movwf	tblptrh,c
   168  0008B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169  0008B8  6EF8               	movwf	tblptru,c
   170  0008BA  EE00  F04E         	lfsr	0,__pdataCOMRAM
   171  0008BE  EE10 F022          	lfsr	1,34
   172  0008C2                     copy_data0:
   173  0008C2  0009               	tblrd		*+
   174  0008C4  CFF5 FFEE          	movff	tablat,postinc0
   175  0008C8  50E5               	movf	postdec1,w,c
   176  0008CA  50E1               	movf	fsr1l,w,c
   177  0008CC  E1FA               	bnz	copy_data0
   178  0008CE                     end_of_initialization:
   179                           	opt stack 0
   180  0008CE                     __end_of__initialization:
   181                           	opt stack 0
   182  0008CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  0008D0  6EF8               	movwf	tblptru,c
   184  0008D2  0100               	movlb	0
   185  0008D4  EFFD  F003         	goto	_main	;jump to C main() function
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           postdec1	equ	0xFE5
   193                           fsr1l	equ	0xFE1
   194                           
   195                           	psect	bssCOMRAM
   196  00002C                     __pbssCOMRAM:
   197                           	opt stack 0
   198  00002C                     _sensor_data:
   199                           	opt stack 0
   200  00002C                     	ds	9
   201  000035                     _gData:
   202                           	opt stack 0
   203  000035                     	ds	4
   204  000039                     _UART_errorStatus:
   205                           	opt stack 0
   206  000039                     	ds	3
   207  00003C                     _batt_counter:
   208                           	opt stack 0
   209  00003C                     	ds	3
   210  00003F                     _batt_value:
   211                           	opt stack 0
   212  00003F                     	ds	2
   213  000041                     _UART_readIndex:
   214                           	opt stack 0
   215  000041                     	ds	1
   216  000042                     _UART_rxBufferNb:
   217                           	opt stack 0
   218  000042                     	ds	1
   219  000043                     _UART_writeIndex:
   220                           	opt stack 0
   221  000043                     	ds	1
   222  000044                     _calibr:
   223                           	opt stack 0
   224  000044                     	ds	1
   225  000045                     _i2c_interupt_done:
   226                           	opt stack 0
   227  000045                     	ds	1
   228  000046                     _main_state:
   229                           	opt stack 0
   230  000046                     	ds	1
   231  000047                     _timer0_interupt_done:
   232                           	opt stack 0
   233  000047                     	ds	1
   234  000048                     _wait_join_counter:
   235                           	opt stack 0
   236  000048                     	ds	1
   237  000049                     _zb_counter:
   238                           	opt stack 0
   239  000049                     	ds	1
   240  00004A                     _zb_currentAck:
   241                           	opt stack 0
   242  00004A                     	ds	1
   243  00004B                     _zb_currentFrameID:
   244                           	opt stack 0
   245  00004B                     	ds	1
   246  00004C                     _zb_state:
   247                           	opt stack 0
   248  00004C                     	ds	1
   249  00004D                     _zb_status:
   250                           	opt stack 0
   251  00004D                     	ds	1
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec1	equ	0xFE5
   259                           fsr1l	equ	0xFE1
   260                           
   261                           	psect	dataCOMRAM
   262  00004E                     __pdataCOMRAM:
   263                           	opt stack 0
   264  00004E                     _zb_frameID:
   265                           	opt stack 0
   266  00004E                     	ds	1
   267  00004F                     _zb_frameToSend:
   268                           	opt stack 0
   269  00004F                     	ds	33
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	bssBANK0
   280  000080                     __pbssBANK0:
   281                           	opt stack 0
   282  000080                     _UART_rxBuffer:
   283                           	opt stack 0
   284  000080                     	ds	50
   285  0000B2                     _zb_frameReceived:
   286                           	opt stack 0
   287  0000B2                     	ds	50
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	cstackBANK0
   298  0000E4                     __pcstackBANK0:
   299                           	opt stack 0
   300  0000E4                     zb_handle_waitAck@retryCounter:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x0
   304  0000E4                     	ds	1
   305  0000E5                     zb_handle_waitAck@bAckReceived:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x1
   309  0000E5                     	ds	1
   310  0000E6                     main_loop@zb_status:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x2
   314  0000E6                     	ds	1
   315  0000E7                     main_loop@bAckReceived:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x3
   319  0000E7                     	ds	1
   320  0000E8                     main_loop@hyt221_status:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x4
   324  0000E8                     	ds	1
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	cstackCOMRAM
   335  000001                     __pcstackCOMRAM:
   336                           	opt stack 0
   337  000001                     ??_isr_hi:
   338  000001                     
   339                           ; 2 bytes @ 0x0
   340  000001                     	ds	15
   341  000010                     isr_hi@dummy:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0xF
   345  000010                     	ds	1
   346  000011                     ??_leds_glitch:
   347  000011                     ??_i2c_wait_idle:
   348  000011                     ?_hyt221_getTemp:
   349                           	opt stack 0
   350  000011                     ?_hyt221_getHumidity:
   351                           	opt stack 0
   352  000011                     uart_write@buffer:
   353                           	opt stack 0
   354  000011                     uart_read@buffer:
   355                           	opt stack 0
   356  000011                     zb_doChecksum@frame:
   357                           	opt stack 0
   358  000011                     zb_handle_setbatVolt@battVoltage:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x10
   362  000011                     	ds	1
   363  000012                     leds_glitch@leds:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x11
   367  000012                     	ds	1
   368  000013                     ??_calibration:
   369  000013                     ??_batt_launch_acq:
   370  000013                     ??_hyt221_getTemp:
   371  000013                     uart_read@nbToRead:
   372                           	opt stack 0
   373  000013                     zb_doChecksum@size:
   374                           	opt stack 0
   375  000013                     hyt221_operation@bDeviceDataAreStale:
   376                           	opt stack 0
   377  000013                     uart_write@b:
   378                           	opt stack 0
   379  000013                     hyt221_getHumidity@humidity_raw:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x12
   383  000013                     	ds	1
   384  000014                     zb_doChecksum@checksum:
   385                           	opt stack 0
   386  000014                     hyt221_operation@index:
   387                           	opt stack 0
   388  000014                     calibration@tryCounter:
   389                           	opt stack 0
   390  000014                     uart_read@b:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x13
   394  000014                     	ds	1
   395  000015                     uart_write@size:
   396                           	opt stack 0
   397  000015                     zb_doChecksum@i:
   398                           	opt stack 0
   399  000015                     calibration@w:
   400                           	opt stack 0
   401  000015                     zb_handle_setHumidityRaw@humidityRaw:
   402                           	opt stack 0
   403  000015                     hyt221_getTemp@temp_raw:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x14
   407  000015                     	ds	1
   408  000016                     uart_write@i:
   409                           	opt stack 0
   410  000016                     uart_read@expectedNbRead:
   411                           	opt stack 0
   412  000016                     zb_decodage@frame:
   413                           	opt stack 0
   414  000016                     zigbee_appendChecksum@buffer:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x15
   418  000016                     	ds	1
   419  000017                     uart_read@i:
   420                           	opt stack 0
   421  000017                     zb_handle_setTempRaw@tempRaw:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x16
   425  000017                     	ds	1
   426  000018                     zb_decodage@frameSize:
   427                           	opt stack 0
   428  000018                     zigbee_appendChecksum@sizeFrame:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x17
   432  000018                     	ds	1
   433  000019                     zb_decodage@decodedFrame:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x18
   437  000019                     	ds	1
   438  00001A                     ??_zigbee_appendChecksum:
   439                           
   440                           ; 0 bytes @ 0x19
   441  00001A                     	ds	1
   442  00001B                     ??_zb_decodage:
   443                           
   444                           ; 0 bytes @ 0x1A
   445  00001B                     	ds	2
   446  00001D                     ??_zb_handle_sendData:
   447                           
   448                           ; 0 bytes @ 0x1C
   449  00001D                     	ds	2
   450  00001F                     zb_decodage@checksum:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x1E
   454  00001F                     	ds	1
   455  000020                     zb_decodage@bCorrectlyDecoded:
   456                           	opt stack 0
   457  000020                     zb_handle_sendData@frameSize:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x1F
   461  000020                     	ds	1
   462  000021                     zb_handle@sizeOfNextData:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x20
   466  000021                     	ds	2
   467  000023                     zb_handle@bSuccess:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x22
   471  000023                     	ds	1
   472  000024                     zb_handle@decodedFrame:
   473                           	opt stack 0
   474                           
   475                           ; 8 bytes @ 0x23
   476  000024                     	ds	8
   477  00002C                     tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           ; 0 bytes @ 0x2B
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 40 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  2   96[COMRAM] int 
   499 ;; Registers used:
   500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   506 ;;      Params:         0       0       0       0
   507 ;;      Locals:         0       0       0       0
   508 ;;      Temps:          0       0       0       0
   509 ;;      Totals:         0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels required when called:    6
   512 ;; This function calls:
   513 ;;		_calibration
   514 ;;		_i2c_setup
   515 ;;		_main_loop
   516 ;;		_uart_setup
   517 ;; This function is called by:
   518 ;;		Startup code after reset
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text0
   523  0007FA                     __ptext0:
   524                           	opt stack 0
   525  0007FA                     _main:
   526                           	opt stack 25
   527                           
   528                           ;main.c: 42: OSCTUNE = 0x00;
   529                           
   530                           ;incstack = 0
   531  0007FA  0E00               	movlw	0
   532  0007FC  6E9B               	movwf	3995,c	;volatile
   533                           
   534                           ;main.c: 44: OSCCON = 0x40;
   535  0007FE  0E40               	movlw	64
   536  000800  6ED3               	movwf	4051,c	;volatile
   537                           
   538                           ;main.c: 47: PORTA = 0x0;
   539  000802  0E00               	movlw	0
   540  000804  6E80               	movwf	3968,c	;volatile
   541                           
   542                           ;main.c: 48: TRISA = 0x0;
   543  000806  0E00               	movlw	0
   544  000808  6E92               	movwf	3986,c	;volatile
   545                           
   546                           ;main.c: 51: TRISBbits.RB0 = 0;
   547  00080A  9093               	bcf	3987,0,c	;volatile
   548                           
   549                           ;main.c: 52: PORTBbits.RB0 = 0;
   550  00080C  9081               	bcf	3969,0,c	;volatile
   551                           
   552                           ;main.c: 53: TRISBbits.RB3 = 0;
   553  00080E  9693               	bcf	3987,3,c	;volatile
   554                           
   555                           ;main.c: 54: PORTBbits.RB3 = 0;
   556  000810  9681               	bcf	3969,3,c	;volatile
   557                           
   558                           ;main.c: 55: TRISBbits.RB4 = 0;
   559  000812  9893               	bcf	3987,4,c	;volatile
   560                           
   561                           ;main.c: 56: PORTBbits.RB4 = 0;
   562  000814  9881               	bcf	3969,4,c	;volatile
   563                           
   564                           ;main.c: 57: TRISCbits.RC2 = 0;
   565  000816  9494               	bcf	3988,2,c	;volatile
   566                           
   567                           ;main.c: 58: PORTCbits.RC2 = 0;
   568  000818  9482               	bcf	3970,2,c	;volatile
   569                           
   570                           ;main.c: 59: TRISCbits.RC5 = 0;
   571  00081A  9A94               	bcf	3988,5,c	;volatile
   572                           
   573                           ;main.c: 60: PORTCbits.RC5 = 0;
   574  00081C  9A82               	bcf	3970,5,c	;volatile
   575                           
   576                           ;main.c: 63: PORTBbits.RB1 = 0;
   577  00081E  9281               	bcf	3969,1,c	;volatile
   578                           
   579                           ;main.c: 64: TRISBbits.RB1 = 0;
   580  000820  9293               	bcf	3987,1,c	;volatile
   581                           
   582                           ;main.c: 65: TRISBbits.RB2 = 1;
   583  000822  8493               	bsf	3987,2,c	;volatile
   584                           
   585                           ;main.c: 66: PIR1bits.ADIF = 0;
   586  000824  9C9E               	bcf	3998,6,c	;volatile
   587                           
   588                           ;main.c: 67: PIE1bits.ADIE = 1;
   589  000826  8C9D               	bsf	3997,6,c	;volatile
   590                           
   591                           ;main.c: 69: _delay((unsigned long)((5)*((1000000)/4000.0)));
   592  000828  0EFA               	movlw	250
   593  00082A                     u1567:
   594  00082A  D000               	nop2	
   595  00082C  2EE8               	decfsz	wreg,f,c
   596  00082E  D7FD               	goto	u1567
   597                           
   598                           ;main.c: 71: calibration();
   599  000830  ECAD  F002         	call	_calibration	;wreg free
   600                           
   601                           ;main.c: 76: i2c_setup();
   602  000834  ECA9  F004         	call	_i2c_setup	;wreg free
   603                           
   604                           ;main.c: 77: uart_setup();
   605  000838  EC34  F005         	call	_uart_setup	;wreg free
   606                           
   607                           ;main.c: 79: INTCONbits.PEIE = 1;
   608  00083C  8CF2               	bsf	intcon,6,c	;volatile
   609                           
   610                           ;main.c: 80: INTCONbits.GIE = 1;
   611  00083E  8EF2               	bsf	intcon,7,c	;volatile
   612                           
   613                           ;main.c: 82: (LATAbits.LATA0 = 0);
   614  000840  9089               	bcf	3977,0,c	;volatile
   615                           
   616                           ;main.c: 83: (LATAbits.LA1 = 0);
   617  000842  9289               	bcf	3977,1,c	;volatile
   618                           
   619                           ;main.c: 84: (LATAbits.LA1 = 1);
   620  000844  8289               	bsf	3977,1,c	;volatile
   621                           
   622                           ;main.c: 86: main_loop();
   623  000846  ECEA  F000         	call	_main_loop	;wreg free
   624  00084A  EF0C  F000         	goto	start
   625  00084E                     __end_of_main:
   626                           	opt stack 0
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           intcon	equ	0xFF2
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           
   637 ;; *************** function _uart_setup *****************
   638 ;; Defined at:
   639 ;;		line 11 in file "uart.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;		None               void
   646 ;; Registers used:
   647 ;;		wreg, status,2
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   653 ;;      Params:         0       0       0       0
   654 ;;      Locals:         0       0       0       0
   655 ;;      Temps:          0       0       0       0
   656 ;;      Totals:         0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text1
   668  000A68                     __ptext1:
   669                           	opt stack 0
   670  000A68                     _uart_setup:
   671                           	opt stack 29
   672                           
   673                           ;uart.c: 14: TRISCbits.RC7 = 1;
   674                           
   675                           ;incstack = 0
   676  000A68  8E94               	bsf	3988,7,c	;volatile
   677                           
   678                           ;uart.c: 15: TRISCbits.RC6 = 1;
   679  000A6A  8C94               	bsf	3988,6,c	;volatile
   680                           
   681                           ;uart.c: 17: TXSTA = 0x24;
   682  000A6C  0E24               	movlw	36
   683  000A6E  6EAC               	movwf	4012,c	;volatile
   684                           
   685                           ;uart.c: 18: RCSTA = 0x90;
   686  000A70  0E90               	movlw	144
   687  000A72  6EAB               	movwf	4011,c	;volatile
   688                           
   689                           ;uart.c: 19: BAUDCON = 0x48;
   690  000A74  0E48               	movlw	72
   691  000A76  6EB8               	movwf	4024,c	;volatile
   692                           
   693                           ;uart.c: 20: SPBRGH = 0;
   694  000A78  0E00               	movlw	0
   695  000A7A  6EB0               	movwf	4016,c	;volatile
   696                           
   697                           ;uart.c: 21: SPBRG = 12;
   698  000A7C  0E0C               	movlw	12
   699  000A7E  6EAF               	movwf	4015,c	;volatile
   700                           
   701                           ;uart.c: 23: PIR1bits.RCIF = 0;
   702  000A80  9A9E               	bcf	3998,5,c	;volatile
   703                           
   704                           ;uart.c: 24: PIE1bits.RCIE = 1;
   705  000A82  8A9D               	bsf	3997,5,c	;volatile
   706  000A84  0012               	return	
   707  000A86                     __end_of_uart_setup:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           intcon	equ	0xFF2
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1l	equ	0xFE1
   718                           
   719 ;; *************** function _main_loop *****************
   720 ;; Defined at:
   721 ;;		line 89 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  bAckReceived    1    3[BANK0 ] enum E3083
   726 ;;  hyt221_statu    1    4[BANK0 ] enum E3778
   727 ;;  zb_status       1    2[BANK0 ] enum E3761
   728 ;; Return value:  Size  Location     Type
   729 ;;		None               void
   730 ;; Registers used:
   731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   737 ;;      Params:         0       0       0       0
   738 ;;      Locals:         0       3       0       0
   739 ;;      Temps:          0       0       0       0
   740 ;;      Totals:         0       3       0       0
   741 ;;Total ram usage:        3 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    5
   744 ;; This function calls:
   745 ;;		_batt_launch_acq
   746 ;;		_hyt221_getHumidity
   747 ;;		_hyt221_getTemp
   748 ;;		_hyt221_launch_acq
   749 ;;		_hyt221_operation
   750 ;;		_leds_glitch
   751 ;;		_timer0_wait_262ms
   752 ;;		_timer0_wait_65ms
   753 ;;		_zb_handle
   754 ;;		_zb_handle_getStatus
   755 ;;		_zb_handle_resetStatus
   756 ;;		_zb_handle_sendData
   757 ;;		_zb_handle_setHumidityRaw
   758 ;;		_zb_handle_setTempRaw
   759 ;;		_zb_handle_waitAck
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text2
   766  0001D4                     __ptext2:
   767                           	opt stack 0
   768  0001D4                     _main_loop:
   769                           	opt stack 25
   770                           
   771                           ;main.c: 91: zb_statusT zb_status;
   772                           ;main.c: 92: STATUS_T hyt221_status;
   773                           ;main.c: 94: batt_counter = (60);
   774                           
   775                           ;incstack = 0
   776  0001D4  0E3C               	movlw	60
   777  0001D6  6E3C               	movwf	_batt_counter,c
   778  0001D8  0E00               	movlw	0
   779  0001DA  6E3D               	movwf	_batt_counter+1,c
   780  0001DC  0E00               	movlw	0
   781  0001DE  6E3E               	movwf	_batt_counter+2,c
   782                           
   783                           ;main.c: 95: wait_join_counter = 0;
   784  0001E0  0E00               	movlw	0
   785  0001E2  6E48               	movwf	_wait_join_counter,c
   786                           
   787                           ;main.c: 97: zb_state = NOT_JOINED;
   788  0001E4  0E00               	movlw	0
   789  0001E6  6E4C               	movwf	_zb_state,c
   790                           
   791                           ;main.c: 98: main_state = LAUNCH_ACQ;
   792  0001E8  0E00               	movlw	0
   793  0001EA  6E46               	movwf	_main_state,c
   794                           
   795                           ;main.c: 100: leds_glitch((0x08));
   796  0001EC  0E08               	movlw	8
   797  0001EE  EC43  F005         	call	_leds_glitch
   798  0001F2                     l2769:
   799                           
   800                           ;main.c: 103: {
   801                           ;main.c: 104: zb_handle();
   802  0001F2  EC3D  F002         	call	_zb_handle	;wreg free
   803                           
   804                           ;main.c: 105: zb_status = zb_handle_getStatus();
   805  0001F6  EC9C  F005         	call	_zb_handle_getStatus	;wreg free
   806  0001FA  0100               	movlb	0	; () banked
   807  0001FC  6FE6               	movwf	main_loop@zb_status& (0+255),b
   808                           
   809                           ;main.c: 106: switch (zb_status)
   810  0001FE  D010               	goto	l2787
   811  000200                     l2773:
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 109: zb_state = NOT_JOINED;
   815  000200  0E00               	movlw	0
   816  000202  6E4C               	movwf	_zb_state,c
   817                           
   818                           ;main.c: 110: main_state = LAUNCH_ACQ;
   819  000204  0E00               	movlw	0
   820  000206  6E46               	movwf	_main_state,c
   821                           
   822                           ; BSR set to: 0
   823                           ;main.c: 111: (LATAbits.LATA0 = 0);
   824  000208  9089               	bcf	3977,0,c	;volatile
   825                           
   826                           ; BSR set to: 0
   827                           ;main.c: 112: leds_glitch((0x04));
   828  00020A  0E04               	movlw	4
   829  00020C  EC43  F005         	call	_leds_glitch
   830                           
   831                           ;main.c: 113: timer0_wait_262ms();
   832  000210  EC12  F005         	call	_timer0_wait_262ms	;wreg free
   833                           
   834                           ;main.c: 114: timer0_wait_262ms();
   835  000214  EC12  F005         	call	_timer0_wait_262ms	;wreg free
   836                           
   837                           ;main.c: 115: break;
   838  000218  D089               	goto	l2865
   839  00021A                     l2783:
   840                           
   841                           ;main.c: 118: zb_state = JOINED;
   842  00021A  0E01               	movlw	1
   843  00021C  6E4C               	movwf	_zb_state,c
   844                           
   845                           ;main.c: 119: break;
   846  00021E  D086               	goto	l2865
   847  000220                     l2787:
   848  000220  0100               	movlb	0	; () banked
   849  000222  51E6               	movf	main_loop@zb_status& (0+255),w,b
   850                           
   851                           ; Switch size 1, requested type "space"
   852                           ; Number of cases is 2, Range of values is 0 to 1
   853                           ; switch strategies available:
   854                           ; Name         Instructions Cycles
   855                           ; simple_byte            7     4 (average)
   856                           ;	Chosen strategy is simple_byte
   857  000224  0A00               	xorlw	0	; case 0
   858  000226  B4D8               	btfsc	status,2,c
   859  000228  D7EB               	goto	l2773
   860  00022A  0A01               	xorlw	1	; case 1
   861  00022C  B4D8               	btfsc	status,2,c
   862  00022E  D7F5               	goto	l2783
   863  000230  D07D               	goto	l2865
   864  000232                     l2789:
   865                           
   866                           ;main.c: 144: zb_handle_resetStatus();
   867  000232  EC84  F005         	call	_zb_handle_resetStatus	;wreg free
   868                           
   869                           ;main.c: 146: batt_counter++;
   870  000236  0E01               	movlw	1
   871  000238  263C               	addwf	_batt_counter,f,c
   872  00023A  0E00               	movlw	0
   873  00023C  223D               	addwfc	_batt_counter+1,f,c
   874  00023E  0E00               	movlw	0
   875  000240  223E               	addwfc	_batt_counter+2,f,c
   876                           
   877                           ;main.c: 147: if (!(batt_counter < (60)))
   878  000242  0E3C               	movlw	60
   879  000244  5C3C               	subwf	_batt_counter,w,c
   880  000246  0E00               	movlw	0
   881  000248  583D               	subwfb	_batt_counter+1,w,c
   882  00024A  0E00               	movlw	0
   883  00024C  583E               	subwfb	_batt_counter+2,w,c
   884  00024E  A0D8               	btfss	status,0,c
   885  000250  D008               	goto	l2799
   886                           
   887                           ;main.c: 148: {
   888                           ;main.c: 149: batt_counter = 0;
   889  000252  0E00               	movlw	0
   890  000254  6E3C               	movwf	_batt_counter,c
   891  000256  0E00               	movlw	0
   892  000258  6E3D               	movwf	_batt_counter+1,c
   893  00025A  0E00               	movlw	0
   894  00025C  6E3E               	movwf	_batt_counter+2,c
   895                           
   896                           ;main.c: 150: batt_launch_acq();
   897  00025E  EC27  F004         	call	_batt_launch_acq	;wreg free
   898  000262                     l2799:
   899                           
   900                           ;main.c: 151: }
   901                           ;main.c: 153: hyt221_status = hyt221_launch_acq();
   902  000262  ECED  F004         	call	_hyt221_launch_acq	;wreg free
   903  000266  0100               	movlb	0	; () banked
   904  000268  6FE8               	movwf	main_loop@hyt221_status& (0+255),b
   905                           
   906                           ; BSR set to: 0
   907                           ;main.c: 154: if (hyt221_status == STATUS_OK)
   908  00026A  0100               	movlb	0	; () banked
   909  00026C  67E8               	tstfsz	main_loop@hyt221_status& (0+255),b
   910  00026E  D002               	goto	l2805
   911                           
   912                           ; BSR set to: 0
   913                           ;main.c: 155: {
   914                           ;main.c: 156: main_state = WAIT_HYT221_ACQ;
   915  000270  0E02               	movlw	2
   916  000272  D03F               	goto	L4
   917  000274                     l2805:
   918                           
   919                           ; BSR set to: 0
   920                           ;main.c: 158: else
   921                           ;main.c: 159: {
   922                           ;main.c: 160: leds_glitch((0x10) | (0x04));
   923  000274  0E14               	movlw	20
   924  000276  EC43  F005         	call	_leds_glitch
   925  00027A  D7BB               	goto	l2769
   926  00027C                     l2807:
   927                           
   928                           ;main.c: 165: timer0_wait_65ms();
   929  00027C  EC23  F005         	call	_timer0_wait_65ms	;wreg free
   930                           
   931                           ;main.c: 166: hyt221_status = hyt221_operation();
   932  000280  EC10  F003         	call	_hyt221_operation	;wreg free
   933  000284  0100               	movlb	0	; () banked
   934  000286  6FE8               	movwf	main_loop@hyt221_status& (0+255),b
   935                           
   936                           ; BSR set to: 0
   937                           ;main.c: 167: if (hyt221_status == STATUS_OK)
   938  000288  0100               	movlb	0	; () banked
   939  00028A  67E8               	tstfsz	main_loop@hyt221_status& (0+255),b
   940  00028C  D005               	goto	l2819
   941                           
   942                           ; BSR set to: 0
   943                           ;main.c: 168: {
   944                           ;main.c: 169: (LATAbits.LATA0 = 0);
   945  00028E  9089               	bcf	3977,0,c	;volatile
   946                           
   947                           ; BSR set to: 0
   948                           ;main.c: 170: timer0_wait_262ms();
   949  000290  EC12  F005         	call	_timer0_wait_262ms	;wreg free
   950                           
   951                           ;main.c: 171: main_state = SEND_DATA;
   952  000294  0E03               	movlw	3
   953  000296  D02D               	goto	L4
   954  000298                     l2819:
   955                           
   956                           ;main.c: 173: else if (hyt221_status == STATUS_ERROR)
   957  000298  0100               	movlb	0	; () banked
   958  00029A  05E8               	decf	main_loop@hyt221_status& (0+255),w,b
   959  00029C  A4D8               	btfss	status,2,c
   960  00029E  D7A9               	goto	l2769
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 174: {
   964                           ;main.c: 175: leds_glitch((0x08));
   965  0002A0  0E08               	movlw	8
   966  0002A2  EC43  F005         	call	_leds_glitch
   967  0002A6  D024               	goto	L6
   968  0002A8                     l2825:
   969                           
   970                           ;main.c: 184: zb_handle_setTempRaw(hyt221_getTemp());
   971  0002A8  ECC1  F004         	call	_hyt221_getTemp	;wreg free
   972  0002AC  C011  F017         	movff	?_hyt221_getTemp,zb_handle_setTempRaw@tempRaw
   973  0002B0  C012  F018         	movff	?_hyt221_getTemp+1,zb_handle_setTempRaw@tempRaw+1
   974  0002B4  EC76  F005         	call	_zb_handle_setTempRaw	;wreg free
   975                           
   976                           ;main.c: 185: zb_handle_setHumidityRaw(hyt221_getHumidity());
   977  0002B8  EC52  F005         	call	_hyt221_getHumidity	;wreg free
   978  0002BC  C011  F015         	movff	?_hyt221_getHumidity,zb_handle_setHumidityRaw@humidityRaw
   979  0002C0  C012  F016         	movff	?_hyt221_getHumidity+1,zb_handle_setHumidityRaw@humidityRaw+1
   980  0002C4  EC7D  F005         	call	_zb_handle_setHumidityRaw	;wreg free
   981                           
   982                           ;main.c: 186: zb_handle_sendData();
   983  0002C8  EC5A  F003         	call	_zb_handle_sendData	;wreg free
   984                           
   985                           ;main.c: 188: BOOL bAckReceived;
   986                           ;main.c: 189: bAckReceived = zb_handle_waitAck();
   987  0002CC  EC8B  F004         	call	_zb_handle_waitAck	;wreg free
   988  0002D0  0100               	movlb	0	; () banked
   989  0002D2  6FE7               	movwf	main_loop@bAckReceived& (0+255),b
   990                           
   991                           ; BSR set to: 0
   992                           ;main.c: 190: if (bAckReceived == TRUE)
   993  0002D4  0100               	movlb	0	; () banked
   994  0002D6  05E7               	decf	main_loop@bAckReceived& (0+255),w,b
   995  0002D8  A4D8               	btfss	status,2,c
   996  0002DA  D002               	goto	l2835
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 191: {
  1000                           ;main.c: 192: main_state = SLEEP;
  1001  0002DC  0E01               	movlw	1
  1002  0002DE  D009               	goto	L4
  1003  0002E0                     l2835:
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;main.c: 194: else
  1007                           ;main.c: 195: {
  1008                           ;main.c: 196: leds_glitch((0x04) | (0x10));
  1009  0002E0  0E14               	movlw	20
  1010  0002E2  EC43  F005         	call	_leds_glitch
  1011  0002E6  D01E               	goto	L5
  1012  0002E8                     l121:
  1013                           
  1014                           ;main.c: 206: (LATAbits.LATA0 = 1);
  1015  0002E8  8089               	bsf	3977,0,c	;volatile
  1016                           
  1017                           ;main.c: 208: do { (WDTCONbits.SWDTEN = 1);asm(" sleep");(WDTCONbits.SWDTEN = 0); } whil
      +                          e (0);;
  1018  0002EA  80D1               	bsf	4049,0,c	;volatile
  1019  0002EC  0003               	sleep		;# 
  1020  0002EE  90D1               	bcf	4049,0,c	;volatile
  1021  0002F0                     L6:
  1022                           
  1023                           ;main.c: 209: main_state = LAUNCH_ACQ;
  1024  0002F0  0E00               	movlw	0
  1025  0002F2                     L4:
  1026  0002F2  6E46               	movwf	_main_state,c
  1027                           
  1028                           ;main.c: 210: break;
  1029  0002F4  D77E               	goto	l2769
  1030  0002F6                     l2847:
  1031  0002F6  5046               	movf	_main_state,w,c
  1032                           
  1033                           ; Switch size 1, requested type "space"
  1034                           ; Number of cases is 4, Range of values is 0 to 3
  1035                           ; switch strategies available:
  1036                           ; Name         Instructions Cycles
  1037                           ; simple_byte           13     7 (average)
  1038                           ;	Chosen strategy is simple_byte
  1039  0002F8  0A00               	xorlw	0	; case 0
  1040  0002FA  B4D8               	btfsc	status,2,c
  1041  0002FC  D79A               	goto	l2789
  1042  0002FE  0A01               	xorlw	1	; case 1
  1043  000300  B4D8               	btfsc	status,2,c
  1044  000302  D7F2               	goto	l121
  1045  000304  0A03               	xorlw	3	; case 2
  1046  000306  B4D8               	btfsc	status,2,c
  1047  000308  D7B9               	goto	l2807
  1048  00030A  0A01               	xorlw	1	; case 3
  1049  00030C  B4D8               	btfsc	status,2,c
  1050  00030E  D7CC               	goto	l2825
  1051  000310  D770               	goto	l2769
  1052  000312                     l2849:
  1053                           
  1054                           ;main.c: 220: wait_join_counter++;
  1055  000312  2A48               	incf	_wait_join_counter,f,c
  1056                           
  1057                           ;main.c: 221: if (wait_join_counter >= (50))
  1058  000314  0E31               	movlw	49
  1059  000316  6448               	cpfsgt	_wait_join_counter,c
  1060  000318  D76C               	goto	l2769
  1061                           
  1062                           ;main.c: 222: {
  1063                           ;main.c: 223: wait_join_counter = 0;
  1064  00031A  0E00               	movlw	0
  1065  00031C  6E48               	movwf	_wait_join_counter,c
  1066                           
  1067                           ;main.c: 224: leds_glitch((0x10));
  1068  00031E  0E10               	movlw	16
  1069  000320  EC43  F005         	call	_leds_glitch
  1070  000324                     L5:
  1071                           
  1072                           ;main.c: 225: (LATAbits.LA1 = 0);
  1073  000324  9289               	bcf	3977,1,c	;volatile
  1074                           
  1075                           ;main.c: 226: __nop();
  1076  000326  F000               	nop	
  1077                           
  1078                           ;main.c: 227: (LATAbits.LA1 = 1);
  1079  000328  8289               	bsf	3977,1,c	;volatile
  1080  00032A  D763               	goto	l2769
  1081  00032C                     l2865:
  1082  00032C  504C               	movf	_zb_state,w,c
  1083                           
  1084                           ; Switch size 1, requested type "space"
  1085                           ; Number of cases is 2, Range of values is 0 to 1
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte            7     4 (average)
  1089                           ;	Chosen strategy is simple_byte
  1090  00032E  0A00               	xorlw	0	; case 0
  1091  000330  B4D8               	btfsc	status,2,c
  1092  000332  D7EF               	goto	l2849
  1093  000334  0A01               	xorlw	1	; case 1
  1094  000336  B4D8               	btfsc	status,2,c
  1095  000338  D7DE               	goto	l2847
  1096  00033A  D7EB               	goto	l2849
  1097  00033C                     __end_of_main_loop:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           intcon	equ	0xFF2
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           postdec1	equ	0xFE5
  1107                           fsr1l	equ	0xFE1
  1108                           status	equ	0xFD8
  1109                           
  1110 ;; *************** function _zb_handle_waitAck *****************
  1111 ;; Defined at:
  1112 ;;		line 233 in file "zb_handle.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  bAckReceived    1    1[BANK0 ] enum E3195
  1117 ;;  retryCounter    1    0[BANK0 ] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      enum E3083
  1120 ;; Registers used:
  1121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1127 ;;      Params:         0       0       0       0
  1128 ;;      Locals:         0       2       0       0
  1129 ;;      Temps:          0       0       0       0
  1130 ;;      Totals:         0       2       0       0
  1131 ;;Total ram usage:        2 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    4
  1134 ;; This function calls:
  1135 ;;		_timer0_wait_262ms
  1136 ;;		_zb_handle
  1137 ;; This function is called by:
  1138 ;;		_main_loop
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text3
  1143  000916                     __ptext3:
  1144                           	opt stack 0
  1145  000916                     _zb_handle_waitAck:
  1146                           	opt stack 25
  1147                           
  1148                           ;zb_handle.c: 235: uint8_t retryCounter;
  1149                           ;zb_handle.c: 236: BOOL bAckReceived;
  1150                           ;zb_handle.c: 238: bAckReceived = FALSE;
  1151                           
  1152                           ;incstack = 0
  1153  000916  0E00               	movlw	0
  1154  000918  0100               	movlb	0	; () banked
  1155  00091A  6FE5               	movwf	zb_handle_waitAck@bAckReceived& (0+255),b
  1156                           
  1157                           ;zb_handle.c: 239: retryCounter = 0;
  1158  00091C  0E00               	movlw	0
  1159  00091E  0100               	movlb	0	; () banked
  1160  000920  6FE4               	movwf	zb_handle_waitAck@retryCounter& (0+255),b
  1161                           
  1162                           ;zb_handle.c: 243: while ((retryCounter < 19) && (bAckReceived == FALSE))
  1163  000922  D00B               	goto	l2707
  1164  000924                     l2697:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;zb_handle.c: 244: {
  1168                           ;zb_handle.c: 245: zb_handle();
  1169  000924  EC3D  F002         	call	_zb_handle	;wreg free
  1170                           
  1171                           ;zb_handle.c: 246: if (zb_currentAck == 0)
  1172  000928  664A               	tstfsz	_zb_currentAck,c
  1173  00092A  D003               	goto	l2703
  1174                           
  1175                           ;zb_handle.c: 247: {
  1176                           ;zb_handle.c: 248: bAckReceived = TRUE;
  1177  00092C  0E01               	movlw	1
  1178  00092E  0100               	movlb	0	; () banked
  1179  000930  6FE5               	movwf	zb_handle_waitAck@bAckReceived& (0+255),b
  1180  000932                     l2703:
  1181                           
  1182                           ;zb_handle.c: 250: }
  1183                           ;zb_handle.c: 252: timer0_wait_262ms();
  1184  000932  EC12  F005         	call	_timer0_wait_262ms	;wreg free
  1185                           
  1186                           ;zb_handle.c: 253: retryCounter++;
  1187  000936  0100               	movlb	0	; () banked
  1188  000938  2BE4               	incf	zb_handle_waitAck@retryCounter& (0+255),f,b
  1189  00093A                     l2707:
  1190                           
  1191                           ; BSR set to: 0
  1192  00093A  0E13               	movlw	19
  1193  00093C  0100               	movlb	0	; () banked
  1194  00093E  5DE4               	subwf	zb_handle_waitAck@retryCounter& (0+255),w,b
  1195  000940  B0D8               	btfsc	status,0,c
  1196  000942  D004               	goto	l2711
  1197                           
  1198                           ; BSR set to: 0
  1199  000944  0100               	movlb	0	; () banked
  1200  000946  51E5               	movf	zb_handle_waitAck@bAckReceived& (0+255),w,b
  1201  000948  B4D8               	btfsc	status,2,c
  1202  00094A  D7EC               	goto	l2697
  1203  00094C                     l2711:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;zb_handle.c: 254: }
  1207                           ;zb_handle.c: 256: return bAckReceived;
  1208  00094C  0100               	movlb	0	; () banked
  1209  00094E  51E5               	movf	zb_handle_waitAck@bAckReceived& (0+255),w,b
  1210                           
  1211                           ; BSR set to: 0
  1212                           
  1213                           ; BSR set to: 0
  1214  000950  0012               	return	
  1215  000952                     __end_of_zb_handle_waitAck:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           intcon	equ	0xFF2
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1l	equ	0xFE1
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _zb_handle *****************
  1229 ;; Defined at:
  1230 ;;		line 159 in file "zb_handle.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  decodedFrame    8   35[COMRAM] struct .
  1235 ;;  sizeOfNextDa    2   32[COMRAM] unsigned int 
  1236 ;;  bSuccess        1   34[COMRAM] enum E3195
  1237 ;; Return value:  Size  Location     Type
  1238 ;;		None               void
  1239 ;; Registers used:
  1240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1246 ;;      Params:         0       0       0       0
  1247 ;;      Locals:        11       0       0       0
  1248 ;;      Temps:          0       0       0       0
  1249 ;;      Totals:        11       0       0       0
  1250 ;;Total ram usage:       11 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    3
  1253 ;; This function calls:
  1254 ;;		_leds_glitch
  1255 ;;		_uart_read
  1256 ;;		_zb_decodage
  1257 ;; This function is called by:
  1258 ;;		_main_loop
  1259 ;;		_zb_handle_waitAck
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text4
  1264  00047A                     __ptext4:
  1265                           	opt stack 0
  1266  00047A                     _zb_handle:
  1267                           	opt stack 25
  1268                           
  1269                           ;zb_handle.c: 161: BOOL bSuccess;
  1270                           ;zb_handle.c: 162: uint16_t sizeOfNextData;
  1271                           ;zb_handle.c: 163: zigbee_decodedFrame decodedFrame;
  1272                           ;zb_handle.c: 165: bSuccess = uart_read(zb_frameReceived, (3));
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;incstack = 0
  1276  00047A  0100               	movlb	0	; () banked
  1277  00047C  0E00               	movlw	high _zb_frameReceived
  1278  00047E  6E12               	movwf	uart_read@buffer+1,c
  1279  000480  0100               	movlb	0	; () banked
  1280  000482  0EB2               	movlw	low _zb_frameReceived
  1281  000484  6E11               	movwf	uart_read@buffer,c
  1282  000486  0E03               	movlw	3
  1283  000488  6E13               	movwf	uart_read@nbToRead,c
  1284  00048A  ECA0  F003         	call	_uart_read	;wreg free
  1285  00048E  6E23               	movwf	zb_handle@bSuccess,c
  1286                           
  1287                           ;zb_handle.c: 166: if (bSuccess)
  1288  000490  5023               	movf	zb_handle@bSuccess,w,c
  1289  000492  B4D8               	btfsc	status,2,c
  1290  000494  D01E               	goto	l324
  1291                           
  1292                           ;zb_handle.c: 167: {
  1293                           ;zb_handle.c: 168: if (zb_frameReceived[0] == (0x7E))
  1294  000496  0100               	movlb	0	; () banked
  1295  000498  51B2               	movf	_zb_frameReceived& (0+255),w,b
  1296  00049A  0A7E               	xorlw	126
  1297  00049C  A4D8               	btfss	status,2,c
  1298  00049E  D017               	goto	l2423
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;zb_handle.c: 169: {
  1302                           ;zb_handle.c: 170: sizeOfNextData = (((uint16_t) zb_frameReceived[1]) << 8) | (zb_frameR
      +                          eceived[2]);
  1303  0004A0  0100               	movlb	0	; () banked
  1304  0004A2  51B3               	movf	(_zb_frameReceived+1)& (0+255),w,b
  1305  0004A4  6E22               	movwf	zb_handle@sizeOfNextData+1,c
  1306  0004A6  0100               	movlb	0	; () banked
  1307  0004A8  51B4               	movf	(_zb_frameReceived+2)& (0+255),w,b
  1308  0004AA  6E21               	movwf	zb_handle@sizeOfNextData,c
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;zb_handle.c: 171: if (sizeOfNextData <= ((50) - (3)))
  1312  0004AC  0E30               	movlw	48
  1313  0004AE  5C21               	subwf	zb_handle@sizeOfNextData,w,c
  1314  0004B0  0E00               	movlw	0
  1315  0004B2  5822               	subwfb	zb_handle@sizeOfNextData+1,w,c
  1316  0004B4  B0D8               	btfsc	status,0,c
  1317  0004B6  D00B               	goto	l2423
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;zb_handle.c: 172: {
  1321                           ;zb_handle.c: 173: bSuccess = uart_read(zb_frameReceived + (3), sizeOfNextData + 1);
  1322  0004B8  0100               	movlb	0	; () banked
  1323  0004BA  0E00               	movlw	high (_zb_frameReceived+3)
  1324  0004BC  6E12               	movwf	uart_read@buffer+1,c
  1325  0004BE  0100               	movlb	0	; () banked
  1326  0004C0  0EB5               	movlw	low (_zb_frameReceived+3)
  1327  0004C2  6E11               	movwf	uart_read@buffer,c
  1328  0004C4  2821               	incf	zb_handle@sizeOfNextData,w,c
  1329  0004C6  6E13               	movwf	uart_read@nbToRead,c
  1330  0004C8  ECA0  F003         	call	_uart_read	;wreg free
  1331  0004CC  D001               	goto	L8
  1332  0004CE                     l2423:
  1333                           
  1334                           ;zb_handle.c: 180: else
  1335                           ;zb_handle.c: 181: {
  1336                           ;zb_handle.c: 182: bSuccess = FALSE;
  1337  0004CE  0E00               	movlw	0
  1338  0004D0                     L8:
  1339  0004D0  6E23               	movwf	zb_handle@bSuccess,c
  1340  0004D2                     l324:
  1341                           
  1342                           ;zb_handle.c: 183: }
  1343                           ;zb_handle.c: 184: }
  1344                           ;zb_handle.c: 186: if (bSuccess)
  1345  0004D2  5023               	movf	zb_handle@bSuccess,w,c
  1346  0004D4  B4D8               	btfsc	status,2,c
  1347  0004D6  D00F               	goto	l2427
  1348                           
  1349                           ;zb_handle.c: 187: {
  1350                           ;zb_handle.c: 188: bSuccess = zb_decodage(zb_frameReceived + (3), sizeOfNextData + 1, &d
      +                          ecodedFrame);
  1351  0004D8  0100               	movlb	0	; () banked
  1352  0004DA  0E00               	movlw	high (_zb_frameReceived+3)
  1353  0004DC  6E17               	movwf	zb_decodage@frame+1,c
  1354  0004DE  0100               	movlb	0	; () banked
  1355  0004E0  0EB5               	movlw	low (_zb_frameReceived+3)
  1356  0004E2  6E16               	movwf	zb_decodage@frame,c
  1357  0004E4  2821               	incf	zb_handle@sizeOfNextData,w,c
  1358  0004E6  6E18               	movwf	zb_decodage@frameSize,c
  1359  0004E8  0E00               	movlw	high zb_handle@decodedFrame
  1360  0004EA  6E1A               	movwf	zb_decodage@decodedFrame+1,c
  1361  0004EC  0E24               	movlw	low zb_handle@decodedFrame
  1362  0004EE  6E19               	movwf	zb_decodage@decodedFrame,c
  1363  0004F0  EC0E  F000         	call	_zb_decodage	;wreg free
  1364  0004F4  6E23               	movwf	zb_handle@bSuccess,c
  1365  0004F6                     l2427:
  1366                           
  1367                           ;zb_handle.c: 189: }
  1368                           ;zb_handle.c: 191: if (bSuccess)
  1369  0004F6  5023               	movf	zb_handle@bSuccess,w,c
  1370  0004F8  A4D8               	btfss	status,2,c
  1371  0004FA  D01D               	goto	l2449
  1372  0004FC  D02D               	goto	l344
  1373  0004FE                     l2431:
  1374                           
  1375                           ;zb_handle.c: 205: if (decodedFrame.status == 0x02)
  1376  0004FE  5025               	movf	zb_handle@decodedFrame+1,w,c
  1377  000500  0A02               	xorlw	2
  1378  000502  A4D8               	btfss	status,2,c
  1379  000504  D006               	goto	l2437
  1380                           
  1381                           ;zb_handle.c: 206: {
  1382                           ;zb_handle.c: 207: zb_status = ZB_STATUS_JOINED;
  1383  000506  0E01               	movlw	1
  1384  000508  6E4D               	movwf	_zb_status,c
  1385                           
  1386                           ;zb_handle.c: 208: leds_glitch((0x10));
  1387  00050A  0E10               	movlw	16
  1388  00050C  EC43  F005         	call	_leds_glitch
  1389                           
  1390                           ;zb_handle.c: 209: }
  1391  000510  D023               	goto	l344
  1392  000512                     l2437:
  1393                           
  1394                           ;zb_handle.c: 210: else if (decodedFrame.status == 0x03)
  1395  000512  5025               	movf	zb_handle@decodedFrame+1,w,c
  1396  000514  0A03               	xorlw	3
  1397  000516  A4D8               	btfss	status,2,c
  1398  000518  D01F               	goto	l344
  1399                           
  1400                           ;zb_handle.c: 211: {
  1401                           ;zb_handle.c: 212: zb_status = ZB_STATUS_NOT_JOINED;
  1402  00051A  0E00               	movlw	0
  1403  00051C  6E4D               	movwf	_zb_status,c
  1404                           
  1405                           ;zb_handle.c: 213: leds_glitch((0x08) | (0x04) | (0x10));
  1406  00051E  0E1C               	movlw	28
  1407  000520  EC43  F005         	call	_leds_glitch
  1408  000524  D019               	goto	l344
  1409  000526                     l2443:
  1410                           
  1411                           ;zb_handle.c: 218: if (zb_currentFrameID == decodedFrame.frameID)
  1412  000526  504B               	movf	_zb_currentFrameID,w,c
  1413  000528  EE20  F02B         	lfsr	2,zb_handle@decodedFrame+7
  1414  00052C  62DF               	cpfseq	indf2,c
  1415  00052E  D014               	goto	l344
  1416                           
  1417                           ;zb_handle.c: 219: {
  1418                           ;zb_handle.c: 220: zb_currentAck = decodedFrame.status;
  1419  000530  C025  F04A         	movff	zb_handle@decodedFrame+1,_zb_currentAck
  1420  000534  D011               	goto	l344
  1421  000536                     l2449:
  1422  000536  5024               	movf	zb_handle@decodedFrame,w,c
  1423                           
  1424                           ; Switch size 1, requested type "space"
  1425                           ; Number of cases is 6, Range of values is 8 to 144
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte           19    10 (average)
  1429                           ;	Chosen strategy is simple_byte
  1430  000538  0A08               	xorlw	8	; case 8
  1431  00053A  B4D8               	btfsc	status,2,c
  1432  00053C  D00D               	goto	l344
  1433  00053E  0A18               	xorlw	24	; case 16
  1434  000540  B4D8               	btfsc	status,2,c
  1435  000542  D00A               	goto	l344
  1436  000544  0A98               	xorlw	152	; case 136
  1437  000546  B4D8               	btfsc	status,2,c
  1438  000548  D007               	goto	l344
  1439  00054A  0A02               	xorlw	2	; case 138
  1440  00054C  B4D8               	btfsc	status,2,c
  1441  00054E  D7D7               	goto	l2431
  1442  000550  0A01               	xorlw	1	; case 139
  1443  000552  B4D8               	btfsc	status,2,c
  1444  000554  D7E8               	goto	l2443
  1445  000556  0A1B               	xorlw	27	; case 144
  1446  000558                     l344:
  1447  000558  0012               	return	
  1448  00055A                     __end_of_zb_handle:
  1449                           	opt stack 0
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           intcon	equ	0xFF2
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           postdec1	equ	0xFE5
  1458                           fsr1l	equ	0xFE1
  1459                           indf2	equ	0xFDF
  1460                           status	equ	0xFD8
  1461                           
  1462 ;; *************** function _zb_decodage *****************
  1463 ;; Defined at:
  1464 ;;		line 22 in file "zb.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  frame           2   21[COMRAM] PTR unsigned char 
  1467 ;;		 -> zb_frameReceived(50), 
  1468 ;;  frameSize       1   23[COMRAM] unsigned char 
  1469 ;;  decodedFrame    2   24[COMRAM] PTR struct .
  1470 ;;		 -> zb_handle@decodedFrame(8), 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  bCorrectlyDe    1   31[COMRAM] enum E3083
  1473 ;;  checksum        1   30[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      enum E3083
  1476 ;; Registers used:
  1477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1483 ;;      Params:         5       0       0       0
  1484 ;;      Locals:         2       0       0       0
  1485 ;;      Temps:          4       0       0       0
  1486 ;;      Totals:        11       0       0       0
  1487 ;;Total ram usage:       11 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    2
  1490 ;; This function calls:
  1491 ;;		_zb_doChecksum
  1492 ;; This function is called by:
  1493 ;;		_zb_handle
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text5
  1498  00001C                     __ptext5:
  1499                           	opt stack 0
  1500  00001C                     _zb_decodage:
  1501                           	opt stack 25
  1502                           
  1503                           ;zb.c: 24: BOOL bCorrectlyDecoded;
  1504                           ;zb.c: 25: uint8_t checksum;
  1505                           ;zb.c: 26: bCorrectlyDecoded = FALSE;
  1506                           
  1507                           ;incstack = 0
  1508  00001C  0E00               	movlw	0
  1509  00001E  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1510                           
  1511                           ;zb.c: 28: if (frameSize >= 1)
  1512  000020  5018               	movf	zb_decodage@frameSize,w,c
  1513  000022  B4D8               	btfsc	status,2,c
  1514  000024  D022               	goto	l257
  1515                           
  1516                           ;zb.c: 29: {
  1517                           ;zb.c: 30: checksum = zb_doChecksum(frame, frameSize - 1);
  1518  000026  C017  F012         	movff	zb_decodage@frame+1,zb_doChecksum@frame+1
  1519  00002A  C016  F011         	movff	zb_decodage@frame,zb_doChecksum@frame
  1520  00002E  0418               	decf	zb_decodage@frameSize,w,c
  1521  000030  6E13               	movwf	zb_doChecksum@size,c
  1522  000032  ECD8  F004         	call	_zb_doChecksum	;wreg free
  1523  000036  6E1F               	movwf	zb_decodage@checksum,c
  1524                           
  1525                           ;zb.c: 31: if (checksum != frame[frameSize - 1])
  1526  000038  0EFF               	movlw	255
  1527  00003A  6E1B               	movwf	??_zb_decodage& (0+255),c
  1528  00003C  0EFF               	movlw	255
  1529  00003E  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  1530  000040  5018               	movf	zb_decodage@frameSize,w,c
  1531  000042  6E1D               	movwf	(??_zb_decodage+2)& (0+255),c
  1532  000044  6A1E               	clrf	(??_zb_decodage+3)& (0+255),c
  1533  000046  501B               	movf	??_zb_decodage,w,c
  1534  000048  261D               	addwf	??_zb_decodage+2,f,c
  1535  00004A  501C               	movf	??_zb_decodage+1,w,c
  1536  00004C  221E               	addwfc	??_zb_decodage+3,f,c
  1537  00004E  501D               	movf	??_zb_decodage+2,w,c
  1538  000050  2416               	addwf	zb_decodage@frame,w,c
  1539  000052  6ED9               	movwf	fsr2l,c
  1540  000054  501E               	movf	??_zb_decodage+3,w,c
  1541  000056  2017               	addwfc	zb_decodage@frame+1,w,c
  1542  000058  6EDA               	movwf	fsr2h,c
  1543  00005A  50DF               	movf	indf2,w,c
  1544  00005C  181F               	xorwf	zb_decodage@checksum,w,c
  1545  00005E  B4D8               	btfsc	status,2,c
  1546  000060  D002               	goto	l2375
  1547                           
  1548                           ;zb.c: 32: {
  1549                           ;zb.c: 34: bCorrectlyDecoded = FALSE;
  1550  000062  0E00               	movlw	0
  1551  000064  D001               	goto	L9
  1552  000066                     l2375:
  1553                           
  1554                           ;zb.c: 36: else
  1555                           ;zb.c: 37: {
  1556                           ;zb.c: 38: bCorrectlyDecoded = TRUE;
  1557  000066  0E01               	movlw	1
  1558  000068                     L9:
  1559  000068  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1560  00006A                     l257:
  1561                           
  1562                           ;zb.c: 39: }
  1563                           ;zb.c: 40: }
  1564                           ;zb.c: 42: if (bCorrectlyDecoded)
  1565  00006A  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  1566  00006C  B4D8               	btfsc	status,2,c
  1567  00006E  D0B0               	goto	l2401
  1568                           
  1569                           ;zb.c: 43: {
  1570                           ;zb.c: 44: decodedFrame->type = frame[0];
  1571  000070  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  1572  000074  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  1573  000078  C019  FFE1         	movff	zb_decodage@decodedFrame,fsr1l
  1574  00007C  C01A  FFE2         	movff	zb_decodage@decodedFrame+1,fsr1h
  1575  000080  CFDF FFE7          	movff	indf2,indf1
  1576                           
  1577                           ;zb.c: 45: switch (frame[0])
  1578  000084  D096               	goto	l2399
  1579  000086                     l2379:
  1580                           
  1581                           ;zb.c: 48: decodedFrame->frameID = frame[1];
  1582  000086  EE20 F001          	lfsr	2,1
  1583  00008A  5016               	movf	zb_decodage@frame,w,c
  1584  00008C  26D9               	addwf	fsr2l,f,c
  1585  00008E  5017               	movf	zb_decodage@frame+1,w,c
  1586  000090  22DA               	addwfc	fsr2h,f,c
  1587  000092  EE10 F007          	lfsr	1,7
  1588  000096  5019               	movf	zb_decodage@decodedFrame,w,c
  1589  000098  26E1               	addwf	fsr1l,f,c
  1590  00009A  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1591  00009C  22E2               	addwfc	fsr1h,f,c
  1592  00009E  CFDF FFE7          	movff	indf2,indf1
  1593                           
  1594                           ;zb.c: 49: decodedFrame->AT[0] = frame[2];
  1595  0000A2  EE20 F002          	lfsr	2,2
  1596  0000A6  5016               	movf	zb_decodage@frame,w,c
  1597  0000A8  26D9               	addwf	fsr2l,f,c
  1598  0000AA  5017               	movf	zb_decodage@frame+1,w,c
  1599  0000AC  22DA               	addwfc	fsr2h,f,c
  1600  0000AE  EE10 F002          	lfsr	1,2
  1601  0000B2  5019               	movf	zb_decodage@decodedFrame,w,c
  1602  0000B4  26E1               	addwf	fsr1l,f,c
  1603  0000B6  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1604  0000B8  22E2               	addwfc	fsr1h,f,c
  1605  0000BA  CFDF FFE7          	movff	indf2,indf1
  1606                           
  1607                           ;zb.c: 50: decodedFrame->AT[1] = frame[3];
  1608  0000BE  EE20 F003          	lfsr	2,3
  1609  0000C2  5016               	movf	zb_decodage@frame,w,c
  1610  0000C4  26D9               	addwf	fsr2l,f,c
  1611  0000C6  5017               	movf	zb_decodage@frame+1,w,c
  1612  0000C8  22DA               	addwfc	fsr2h,f,c
  1613  0000CA  EE10 F003          	lfsr	1,3
  1614  0000CE  5019               	movf	zb_decodage@decodedFrame,w,c
  1615  0000D0  26E1               	addwf	fsr1l,f,c
  1616  0000D2  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1617  0000D4  22E2               	addwfc	fsr1h,f,c
  1618  0000D6  CFDF FFE7          	movff	indf2,indf1
  1619                           
  1620                           ;zb.c: 51: decodedFrame->status = frame[4];
  1621  0000DA  EE20 F004          	lfsr	2,4
  1622  0000DE  5016               	movf	zb_decodage@frame,w,c
  1623  0000E0  26D9               	addwf	fsr2l,f,c
  1624  0000E2  5017               	movf	zb_decodage@frame+1,w,c
  1625  0000E4  22DA               	addwfc	fsr2h,f,c
  1626  0000E6  EE10 F001          	lfsr	1,1
  1627  0000EA  5019               	movf	zb_decodage@decodedFrame,w,c
  1628  0000EC  26E1               	addwf	fsr1l,f,c
  1629  0000EE  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1630  0000F0  22E2               	addwfc	fsr1h,f,c
  1631  0000F2  CFDF FFE7          	movff	indf2,indf1
  1632                           
  1633                           ;zb.c: 52: decodedFrame->size = frameSize - 6;
  1634  0000F6  EE20 F006          	lfsr	2,6
  1635  0000FA  5019               	movf	zb_decodage@decodedFrame,w,c
  1636  0000FC  26D9               	addwf	fsr2l,f,c
  1637  0000FE  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1638  000100  22DA               	addwfc	fsr2h,f,c
  1639  000102  5018               	movf	zb_decodage@frameSize,w,c
  1640  000104  0FFA               	addlw	250
  1641  000106  6EDF               	movwf	indf2,c
  1642                           
  1643                           ;zb.c: 53: if (decodedFrame->size == 0)
  1644  000108  EE20 F006          	lfsr	2,6
  1645  00010C  5019               	movf	zb_decodage@decodedFrame,w,c
  1646  00010E  26D9               	addwf	fsr2l,f,c
  1647  000110  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1648  000112  22DA               	addwfc	fsr2h,f,c
  1649  000114  50DF               	movf	indf2,w,c
  1650  000116  A4D8               	btfss	status,2,c
  1651  000118  D00B               	goto	l2387
  1652                           
  1653                           ;zb.c: 54: {
  1654                           ;zb.c: 55: decodedFrame->data = (0);
  1655  00011A  EE20 F004          	lfsr	2,4
  1656  00011E  5019               	movf	zb_decodage@decodedFrame,w,c
  1657  000120  26D9               	addwf	fsr2l,f,c
  1658  000122  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1659  000124  22DA               	addwfc	fsr2h,f,c
  1660  000126  0E00               	movlw	0
  1661  000128  6EDE               	movwf	postinc2,c
  1662  00012A  0E00               	movlw	0
  1663  00012C  6EDD               	movwf	postdec2,c
  1664                           
  1665                           ;zb.c: 56: }
  1666  00012E  D050               	goto	l2401
  1667  000130                     l2387:
  1668                           
  1669                           ;zb.c: 57: else
  1670                           ;zb.c: 58: {
  1671                           ;zb.c: 59: decodedFrame->data = &frame[5];
  1672  000130  0E05               	movlw	5
  1673  000132  2416               	addwf	zb_decodage@frame,w,c
  1674  000134  6E1B               	movwf	??_zb_decodage& (0+255),c
  1675  000136  0E00               	movlw	0
  1676  000138  2017               	addwfc	zb_decodage@frame+1,w,c
  1677  00013A  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  1678  00013C  EE20 F004          	lfsr	2,4
  1679  000140  5019               	movf	zb_decodage@decodedFrame,w,c
  1680  000142  26D9               	addwf	fsr2l,f,c
  1681  000144  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1682  000146  22DA               	addwfc	fsr2h,f,c
  1683  000148  C01B  FFDE         	movff	??_zb_decodage,postinc2
  1684  00014C  C01C  FFDD         	movff	??_zb_decodage+1,postdec2
  1685  000150  D03F               	goto	l2401
  1686  000152                     l2389:
  1687                           
  1688                           ;zb.c: 64: decodedFrame->status = frame[1];
  1689  000152  EE20 F001          	lfsr	2,1
  1690  000156  5016               	movf	zb_decodage@frame,w,c
  1691  000158  26D9               	addwf	fsr2l,f,c
  1692  00015A  5017               	movf	zb_decodage@frame+1,w,c
  1693  00015C  22DA               	addwfc	fsr2h,f,c
  1694  00015E  EE10 F001          	lfsr	1,1
  1695  000162  5019               	movf	zb_decodage@decodedFrame,w,c
  1696  000164  26E1               	addwf	fsr1l,f,c
  1697  000166  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1698  000168  22E2               	addwfc	fsr1h,f,c
  1699  00016A  CFDF FFE7          	movff	indf2,indf1
  1700                           
  1701                           ;zb.c: 65: bCorrectlyDecoded = TRUE;
  1702  00016E  0E01               	movlw	1
  1703  000170  D01E               	goto	L10
  1704  000172                     l2393:
  1705                           
  1706                           ;zb.c: 69: decodedFrame->frameID = frame[1];
  1707  000172  EE20 F001          	lfsr	2,1
  1708  000176  5016               	movf	zb_decodage@frame,w,c
  1709  000178  26D9               	addwf	fsr2l,f,c
  1710  00017A  5017               	movf	zb_decodage@frame+1,w,c
  1711  00017C  22DA               	addwfc	fsr2h,f,c
  1712  00017E  EE10 F007          	lfsr	1,7
  1713  000182  5019               	movf	zb_decodage@decodedFrame,w,c
  1714  000184  26E1               	addwf	fsr1l,f,c
  1715  000186  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1716  000188  22E2               	addwfc	fsr1h,f,c
  1717  00018A  CFDF FFE7          	movff	indf2,indf1
  1718                           
  1719                           ;zb.c: 70: decodedFrame->status = frame[5];
  1720  00018E  EE20 F005          	lfsr	2,5
  1721  000192  5016               	movf	zb_decodage@frame,w,c
  1722  000194  26D9               	addwf	fsr2l,f,c
  1723  000196  5017               	movf	zb_decodage@frame+1,w,c
  1724  000198  22DA               	addwfc	fsr2h,f,c
  1725  00019A  EE10 F001          	lfsr	1,1
  1726  00019E  5019               	movf	zb_decodage@decodedFrame,w,c
  1727  0001A0  26E1               	addwf	fsr1l,f,c
  1728  0001A2  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1729  0001A4  22E2               	addwfc	fsr1h,f,c
  1730  0001A6  CFDF FFE7          	movff	indf2,indf1
  1731                           
  1732                           ;zb.c: 71: break;
  1733  0001AA  D012               	goto	l2401
  1734  0001AC                     l2395:
  1735                           
  1736                           ;zb.c: 74: bCorrectlyDecoded = FALSE;
  1737  0001AC  0E00               	movlw	0
  1738  0001AE                     L10:
  1739  0001AE  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1740                           
  1741                           ;zb.c: 75: break;
  1742  0001B0  D00F               	goto	l2401
  1743  0001B2                     l2399:
  1744  0001B2  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  1745  0001B6  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  1746  0001BA  50DF               	movf	indf2,w,c
  1747                           
  1748                           ; Switch size 1, requested type "space"
  1749                           ; Number of cases is 3, Range of values is 136 to 139
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte           10     6 (average)
  1753                           ;	Chosen strategy is simple_byte
  1754  0001BC  0A88               	xorlw	136	; case 136
  1755  0001BE  B4D8               	btfsc	status,2,c
  1756  0001C0  D762               	goto	l2379
  1757  0001C2  0A02               	xorlw	2	; case 138
  1758  0001C4  B4D8               	btfsc	status,2,c
  1759  0001C6  D7C5               	goto	l2389
  1760  0001C8  0A01               	xorlw	1	; case 139
  1761  0001CA  B4D8               	btfsc	status,2,c
  1762  0001CC  D7D2               	goto	l2393
  1763  0001CE  D7EE               	goto	l2395
  1764  0001D0                     l2401:
  1765                           
  1766                           ;zb.c: 77: }
  1767                           ;zb.c: 79: return bCorrectlyDecoded;
  1768  0001D0  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  1769  0001D2  0012               	return	
  1770  0001D4                     __end_of_zb_decodage:
  1771                           	opt stack 0
  1772                           tblptru	equ	0xFF8
  1773                           tblptrh	equ	0xFF7
  1774                           tblptrl	equ	0xFF6
  1775                           tablat	equ	0xFF5
  1776                           intcon	equ	0xFF2
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           indf1	equ	0xFE7
  1780                           postdec1	equ	0xFE5
  1781                           fsr1h	equ	0xFE2
  1782                           fsr1l	equ	0xFE1
  1783                           indf2	equ	0xFDF
  1784                           postinc2	equ	0xFDE
  1785                           postdec2	equ	0xFDD
  1786                           fsr2h	equ	0xFDA
  1787                           fsr2l	equ	0xFD9
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _uart_read *****************
  1791 ;; Defined at:
  1792 ;;		line 48 in file "uart.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  1795 ;;		 -> zb_frameReceived(50), 
  1796 ;;  nbToRead        1   18[COMRAM] unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  b               2   19[COMRAM] PTR unsigned char 
  1799 ;;		 -> zb_frameReceived(50), 
  1800 ;;  i               1   22[COMRAM] unsigned char 
  1801 ;;  expectedNbRe    1   21[COMRAM] enum E3083
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      enum E3083
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1811 ;;      Params:         3       0       0       0
  1812 ;;      Locals:         4       0       0       0
  1813 ;;      Temps:          0       0       0       0
  1814 ;;      Totals:         7       0       0       0
  1815 ;;Total ram usage:        7 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_zb_handle
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text6
  1826  000740                     __ptext6:
  1827                           	opt stack 0
  1828  000740                     _uart_read:
  1829                           	opt stack 26
  1830                           
  1831                           ;uart.c: 50: BOOL expectedNbRead;
  1832                           ;uart.c: 51: uint8_t i;
  1833                           ;uart.c: 52: uint8_t* b;
  1834                           ;uart.c: 53: b = buffer;
  1835                           
  1836                           ;incstack = 0
  1837  000740  C012  F015         	movff	uart_read@buffer+1,uart_read@b+1
  1838  000744  C011  F014         	movff	uart_read@buffer,uart_read@b
  1839                           
  1840                           ;uart.c: 55: if (nbToRead <= UART_rxBufferNb)
  1841  000748  5013               	movf	uart_read@nbToRead,w,c
  1842  00074A  5C42               	subwf	_UART_rxBufferNb,w,c
  1843  00074C  A0D8               	btfss	status,0,c
  1844  00074E  D024               	goto	l2363
  1845                           
  1846                           ;uart.c: 56: {
  1847                           ;uart.c: 58: for (i = 0; i < nbToRead; i++)
  1848  000750  0E00               	movlw	0
  1849  000752  6E17               	movwf	uart_read@i,c
  1850  000754  D019               	goto	l2357
  1851  000756                     l2345:
  1852                           
  1853                           ;uart.c: 59: {
  1854                           ;uart.c: 60: *b = UART_rxBuffer[UART_readIndex];
  1855  000756  5041               	movf	_UART_readIndex,w,c
  1856  000758  0D01               	mullw	1
  1857  00075A  0100               	movlb	0	; () banked
  1858  00075C  0E80               	movlw	low _UART_rxBuffer
  1859  00075E  24F3               	addwf	prodl,w,c
  1860  000760  6ED9               	movwf	fsr2l,c
  1861  000762  0100               	movlb	0	; () banked
  1862  000764  0E00               	movlw	high _UART_rxBuffer
  1863  000766  20F4               	addwfc	prodh,w,c
  1864  000768  6EDA               	movwf	fsr2h,c
  1865  00076A  C014  FFE1         	movff	uart_read@b,fsr1l
  1866  00076E  C015  FFE2         	movff	uart_read@b+1,fsr1h
  1867  000772  CFDF FFE7          	movff	indf2,indf1
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;uart.c: 61: UART_readIndex++;
  1871  000776  2A41               	incf	_UART_readIndex,f,c
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;uart.c: 62: if (UART_readIndex >= (50))
  1875  000778  0E31               	movlw	49
  1876  00077A  6441               	cpfsgt	_UART_readIndex,c
  1877  00077C  D002               	goto	l2353
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;uart.c: 63: {
  1881                           ;uart.c: 64: UART_readIndex = 0;
  1882  00077E  0E00               	movlw	0
  1883  000780  6E41               	movwf	_UART_readIndex,c
  1884  000782                     l2353:
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;uart.c: 65: }
  1888                           ;uart.c: 66: b++;
  1889  000782  4A14               	infsnz	uart_read@b,f,c
  1890  000784  2A15               	incf	uart_read@b+1,f,c
  1891                           
  1892                           ; BSR set to: 0
  1893  000786  2A17               	incf	uart_read@i,f,c
  1894  000788                     l2357:
  1895  000788  5013               	movf	uart_read@nbToRead,w,c
  1896  00078A  5C17               	subwf	uart_read@i,w,c
  1897  00078C  A0D8               	btfss	status,0,c
  1898  00078E  D7E3               	goto	l2345
  1899                           
  1900                           ;uart.c: 67: }
  1901                           ;uart.c: 68: UART_rxBufferNb -= nbToRead;
  1902  000790  5013               	movf	uart_read@nbToRead,w,c
  1903  000792  5E42               	subwf	_UART_rxBufferNb,f,c
  1904                           
  1905                           ;uart.c: 69: expectedNbRead = TRUE;
  1906  000794  0E01               	movlw	1
  1907  000796  D001               	goto	L11
  1908  000798                     l2363:
  1909                           
  1910                           ;uart.c: 71: else
  1911                           ;uart.c: 72: {
  1912                           ;uart.c: 73: expectedNbRead = FALSE;
  1913  000798  0E00               	movlw	0
  1914  00079A                     L11:
  1915  00079A  6E16               	movwf	uart_read@expectedNbRead,c
  1916                           
  1917                           ;uart.c: 74: }
  1918                           ;uart.c: 76: return expectedNbRead;
  1919  00079C  5016               	movf	uart_read@expectedNbRead,w,c
  1920  00079E  0012               	return	
  1921  0007A0                     __end_of_uart_read:
  1922                           	opt stack 0
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           prodh	equ	0xFF4
  1928                           prodl	equ	0xFF3
  1929                           intcon	equ	0xFF2
  1930                           postinc0	equ	0xFEE
  1931                           wreg	equ	0xFE8
  1932                           indf1	equ	0xFE7
  1933                           postdec1	equ	0xFE5
  1934                           fsr1h	equ	0xFE2
  1935                           fsr1l	equ	0xFE1
  1936                           indf2	equ	0xFDF
  1937                           postinc2	equ	0xFDE
  1938                           postdec2	equ	0xFDD
  1939                           fsr2h	equ	0xFDA
  1940                           fsr2l	equ	0xFD9
  1941                           status	equ	0xFD8
  1942                           
  1943 ;; *************** function _timer0_wait_262ms *****************
  1944 ;; Defined at:
  1945 ;;		line 26 in file "timer.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;		None               void
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1959 ;;      Params:         0       0       0       0
  1960 ;;      Locals:         0       0       0       0
  1961 ;;      Temps:          0       0       0       0
  1962 ;;      Totals:         0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    2
  1966 ;; This function calls:
  1967 ;;		_timer0_wait_ready
  1968 ;; This function is called by:
  1969 ;;		_main_loop
  1970 ;;		_zb_handle_waitAck
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text7
  1975  000A24                     __ptext7:
  1976                           	opt stack 0
  1977  000A24                     _timer0_wait_262ms:
  1978                           	opt stack 26
  1979                           
  1980                           ;timer.c: 29: TMR0 = 0;
  1981                           
  1982                           ;incstack = 0
  1983  000A24  0E00               	movlw	0
  1984  000A26  6ED7               	movwf	4055,c	;volatile
  1985  000A28  0E00               	movlw	0
  1986  000A2A  6ED6               	movwf	4054,c	;volatile
  1987                           
  1988                           ;timer.c: 30: T0CON = 0x47;
  1989  000A2C  0E47               	movlw	71
  1990  000A2E  6ED5               	movwf	4053,c	;volatile
  1991                           
  1992                           ;timer.c: 31: INTCONbits.TMR0IF = 0;
  1993  000A30  94F2               	bcf	intcon,2,c	;volatile
  1994                           
  1995                           ;timer.c: 32: INTCONbits.TMR0IE = 1;
  1996  000A32  8AF2               	bsf	intcon,5,c	;volatile
  1997                           
  1998                           ;timer.c: 33: T0CONbits.TMR0ON = 1;
  1999  000A34  8ED5               	bsf	4053,7,c	;volatile
  2000                           
  2001                           ;timer.c: 34: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2002  000A36  8ED3               	bsf	4051,7,c	;volatile
  2003  000A38  0003               	sleep		;# 
  2004  000A3A  9ED3               	bcf	4051,7,c	;volatile
  2005                           
  2006                           ;timer.c: 35: timer0_wait_ready();
  2007  000A3C  EC5C  F005         	call	_timer0_wait_ready	;wreg free
  2008                           
  2009                           ;timer.c: 36: T0CONbits.TMR0ON = 0;
  2010  000A40  9ED5               	bcf	4053,7,c	;volatile
  2011                           
  2012                           ;timer.c: 37: INTCONbits.TMR0IE = 0;
  2013  000A42  9AF2               	bcf	intcon,5,c	;volatile
  2014  000A44  0012               	return	
  2015  000A46                     __end_of_timer0_wait_262ms:
  2016                           	opt stack 0
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           prodh	equ	0xFF4
  2022                           prodl	equ	0xFF3
  2023                           intcon	equ	0xFF2
  2024                           postinc0	equ	0xFEE
  2025                           wreg	equ	0xFE8
  2026                           indf1	equ	0xFE7
  2027                           postdec1	equ	0xFE5
  2028                           fsr1h	equ	0xFE2
  2029                           fsr1l	equ	0xFE1
  2030                           indf2	equ	0xFDF
  2031                           postinc2	equ	0xFDE
  2032                           postdec2	equ	0xFDD
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8
  2036                           
  2037 ;; *************** function _zb_handle_setTempRaw *****************
  2038 ;; Defined at:
  2039 ;;		line 96 in file "zb_handle.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  tempRaw         2   22[COMRAM] unsigned int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;		None               void
  2046 ;; Registers used:
  2047 ;;		wreg, status,2
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2053 ;;      Params:         2       0       0       0
  2054 ;;      Locals:         0       0       0       0
  2055 ;;      Temps:          0       0       0       0
  2056 ;;      Totals:         2       0       0       0
  2057 ;;Total ram usage:        2 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_main_loop
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text8
  2068  000AEC                     __ptext8:
  2069                           	opt stack 0
  2070  000AEC                     _zb_handle_setTempRaw:
  2071                           	opt stack 28
  2072                           
  2073                           ;zb_handle.c: 98: sensor_data.tempRaw = tempRaw;
  2074                           
  2075                           ;incstack = 0
  2076  000AEC  C017  F02C         	movff	zb_handle_setTempRaw@tempRaw,_sensor_data
  2077  000AF0  C018  F02D         	movff	zb_handle_setTempRaw@tempRaw+1,_sensor_data+1
  2078                           
  2079                           ;zb_handle.c: 99: sensor_data.tempStatus = (0x03);
  2080  000AF4  0E03               	movlw	3
  2081  000AF6  6E2E               	movwf	_sensor_data+2,c
  2082  000AF8  0012               	return	
  2083  000AFA                     __end_of_zb_handle_setTempRaw:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           prodh	equ	0xFF4
  2090                           prodl	equ	0xFF3
  2091                           intcon	equ	0xFF2
  2092                           postinc0	equ	0xFEE
  2093                           wreg	equ	0xFE8
  2094                           indf1	equ	0xFE7
  2095                           postdec1	equ	0xFE5
  2096                           fsr1h	equ	0xFE2
  2097                           fsr1l	equ	0xFE1
  2098                           indf2	equ	0xFDF
  2099                           postinc2	equ	0xFDE
  2100                           postdec2	equ	0xFDD
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8
  2104                           
  2105 ;; *************** function _zb_handle_setHumidityRaw *****************
  2106 ;; Defined at:
  2107 ;;		line 102 in file "zb_handle.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  humidityRaw     2   20[COMRAM] unsigned int 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		wreg, status,2
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2121 ;;      Params:         2       0       0       0
  2122 ;;      Locals:         0       0       0       0
  2123 ;;      Temps:          0       0       0       0
  2124 ;;      Totals:         2       0       0       0
  2125 ;;Total ram usage:        2 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_main_loop
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text9
  2136  000AFA                     __ptext9:
  2137                           	opt stack 0
  2138  000AFA                     _zb_handle_setHumidityRaw:
  2139                           	opt stack 28
  2140                           
  2141                           ;zb_handle.c: 104: sensor_data.humidityRaw = humidityRaw;
  2142                           
  2143                           ;incstack = 0
  2144  000AFA  C015  F02F         	movff	zb_handle_setHumidityRaw@humidityRaw,_sensor_data+3
  2145  000AFE  C016  F030         	movff	zb_handle_setHumidityRaw@humidityRaw+1,_sensor_data+4
  2146                           
  2147                           ;zb_handle.c: 105: sensor_data.humidityStatus = (0x03);
  2148  000B02  0E03               	movlw	3
  2149  000B04  6E31               	movwf	_sensor_data+5,c
  2150  000B06  0012               	return	
  2151  000B08                     __end_of_zb_handle_setHumidityRaw:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           intcon	equ	0xFF2
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           indf1	equ	0xFE7
  2163                           postdec1	equ	0xFE5
  2164                           fsr1h	equ	0xFE2
  2165                           fsr1l	equ	0xFE1
  2166                           indf2	equ	0xFDF
  2167                           postinc2	equ	0xFDE
  2168                           postdec2	equ	0xFDD
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function _zb_handle_sendData *****************
  2174 ;; Defined at:
  2175 ;;		line 122 in file "zb_handle.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  frameSize       1   31[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2189 ;;      Params:         0       0       0       0
  2190 ;;      Locals:         1       0       0       0
  2191 ;;      Temps:          3       0       0       0
  2192 ;;      Totals:         4       0       0       0
  2193 ;;Total ram usage:        4 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    3
  2196 ;; This function calls:
  2197 ;;		_uart_write
  2198 ;;		_zigbee_appendChecksum
  2199 ;; This function is called by:
  2200 ;;		_main_loop
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text10
  2205  0006B4                     __ptext10:
  2206                           	opt stack 0
  2207  0006B4                     _zb_handle_sendData:
  2208                           	opt stack 26
  2209                           
  2210                           ;zb_handle.c: 124: zb_currentFrameID = zb_frameID;
  2211                           
  2212                           ;incstack = 0
  2213  0006B4  C04E  F04B         	movff	_zb_frameID,_zb_currentFrameID
  2214                           
  2215                           ;zb_handle.c: 125: zb_frameID++;
  2216  0006B8  2A4E               	incf	_zb_frameID,f,c
  2217                           
  2218                           ;zb_handle.c: 126: if (zb_frameID == 0)
  2219  0006BA  664E               	tstfsz	_zb_frameID,c
  2220  0006BC  D002               	goto	l2659
  2221                           
  2222                           ;zb_handle.c: 127: {
  2223                           ;zb_handle.c: 128: zb_frameID = 1;
  2224  0006BE  0E01               	movlw	1
  2225  0006C0  6E4E               	movwf	_zb_frameID,c
  2226  0006C2                     l2659:
  2227                           
  2228                           ;zb_handle.c: 129: }
  2229                           ;zb_handle.c: 130: zb_currentAck = -1;
  2230  0006C2  684A               	setf	_zb_currentAck,c
  2231                           
  2232                           ;zb_handle.c: 132: zb_frameToSend[(4)] = zb_currentFrameID;
  2233  0006C4  C04B  F053         	movff	_zb_currentFrameID,_zb_frameToSend+4
  2234                           
  2235                           ;zb_handle.c: 133: zb_frameToSend[(18)] = zb_counter++;
  2236  0006C8  C049  F061         	movff	_zb_counter,_zb_frameToSend+18
  2237  0006CC  2A49               	incf	_zb_counter,f,c
  2238                           
  2239                           ;zb_handle.c: 134: zb_frameToSend[(21)] = sensor_data.tempStatus;
  2240  0006CE  C02E  F064         	movff	_sensor_data+2,_zb_frameToSend+21
  2241                           
  2242                           ;zb_handle.c: 135: zb_frameToSend[(22)] = sensor_data.tempRaw >> 8;
  2243  0006D2  C02D  F01D         	movff	_sensor_data+1,??_zb_handle_sendData
  2244  0006D6  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2245  0006DA  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2246  0006DC  501E               	movf	??_zb_handle_sendData+1,w,c
  2247  0006DE  6E65               	movwf	_zb_frameToSend+22,c
  2248                           
  2249                           ;zb_handle.c: 136: zb_frameToSend[(22) + 1] = sensor_data.tempRaw;
  2250  0006E0  C02C  F066         	movff	_sensor_data,_zb_frameToSend+23
  2251                           
  2252                           ;zb_handle.c: 137: zb_frameToSend[(25)] = sensor_data.humidityStatus;
  2253  0006E4  C031  F068         	movff	_sensor_data+5,_zb_frameToSend+25
  2254                           
  2255                           ;zb_handle.c: 138: zb_frameToSend[(26)] = sensor_data.humidityRaw >> 8;
  2256  0006E8  C030  F01D         	movff	_sensor_data+4,??_zb_handle_sendData
  2257  0006EC  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2258  0006F0  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2259  0006F2  501E               	movf	??_zb_handle_sendData+1,w,c
  2260  0006F4  6E69               	movwf	_zb_frameToSend+26,c
  2261                           
  2262                           ;zb_handle.c: 139: zb_frameToSend[(26) + 1] = sensor_data.humidityRaw;
  2263  0006F6  C02F  F06A         	movff	_sensor_data+3,_zb_frameToSend+27
  2264                           
  2265                           ;zb_handle.c: 140: zb_frameToSend[(29)] = sensor_data.battStatus;
  2266  0006FA  C034  F06C         	movff	_sensor_data+8,_zb_frameToSend+29
  2267                           
  2268                           ;zb_handle.c: 141: zb_frameToSend[(30)] = sensor_data.battRaw >> 8;
  2269  0006FE  C033  F01D         	movff	_sensor_data+7,??_zb_handle_sendData
  2270  000702  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2271  000706  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2272  000708  501E               	movf	??_zb_handle_sendData+1,w,c
  2273  00070A  6E6D               	movwf	_zb_frameToSend+30,c
  2274                           
  2275                           ;zb_handle.c: 142: zb_frameToSend[(30) + 1] = sensor_data.battRaw;
  2276  00070C  C032  F06E         	movff	_sensor_data+6,_zb_frameToSend+31
  2277                           
  2278                           ;zb_handle.c: 143: zb_frameToSend[(1)] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0xFF00) >
      +                          > 8;
  2279  000710  0E00               	movlw	0
  2280  000712  6E50               	movwf	_zb_frameToSend+1,c
  2281                           
  2282                           ;zb_handle.c: 144: zb_frameToSend[(1) + 1] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0x00F
      +                          F);
  2283  000714  0E1D               	movlw	29
  2284  000716  6E51               	movwf	_zb_frameToSend+2,c
  2285                           
  2286                           ;zb_handle.c: 146: uint8_t frameSize = sizeof(zb_frameToSend) - 1;
  2287  000718  0E20               	movlw	32
  2288  00071A  6E20               	movwf	zb_handle_sendData@frameSize,c
  2289                           
  2290                           ;zb_handle.c: 147: zigbee_appendChecksum(zb_frameToSend, &frameSize);
  2291  00071C  0E00               	movlw	high _zb_frameToSend
  2292  00071E  6E17               	movwf	zigbee_appendChecksum@buffer+1,c
  2293  000720  0E4F               	movlw	low _zb_frameToSend
  2294  000722  6E16               	movwf	zigbee_appendChecksum@buffer,c
  2295  000724  0E00               	movlw	high zb_handle_sendData@frameSize
  2296  000726  6E19               	movwf	zigbee_appendChecksum@sizeFrame+1,c
  2297  000728  0E20               	movlw	low zb_handle_sendData@frameSize
  2298  00072A  6E18               	movwf	zigbee_appendChecksum@sizeFrame,c
  2299  00072C  ECD0  F003         	call	_zigbee_appendChecksum	;wreg free
  2300                           
  2301                           ;zb_handle.c: 149: uart_write(frameSize, zb_frameToSend);
  2302  000730  0E00               	movlw	high _zb_frameToSend
  2303  000732  6E12               	movwf	uart_write@buffer+1,c
  2304  000734  0E4F               	movlw	low _zb_frameToSend
  2305  000736  6E11               	movwf	uart_write@buffer,c
  2306  000738  5020               	movf	zb_handle_sendData@frameSize,w,c
  2307  00073A  EC6C  F004         	call	_uart_write
  2308  00073E  0012               	return	
  2309  000740                     __end_of_zb_handle_sendData:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           intcon	equ	0xFF2
  2318                           postinc0	equ	0xFEE
  2319                           wreg	equ	0xFE8
  2320                           indf1	equ	0xFE7
  2321                           postdec1	equ	0xFE5
  2322                           fsr1h	equ	0xFE2
  2323                           fsr1l	equ	0xFE1
  2324                           indf2	equ	0xFDF
  2325                           postinc2	equ	0xFDE
  2326                           postdec2	equ	0xFDD
  2327                           fsr2h	equ	0xFDA
  2328                           fsr2l	equ	0xFD9
  2329                           status	equ	0xFD8
  2330                           
  2331 ;; *************** function _zigbee_appendChecksum *****************
  2332 ;; Defined at:
  2333 ;;		line 153 in file "zb_handle.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  buffer          2   21[COMRAM] PTR unsigned char 
  2336 ;;		 -> zb_frameToSend(33), 
  2337 ;;  sizeFrame       2   23[COMRAM] PTR unsigned char 
  2338 ;;		 -> zb_handle_sendData@frameSize(1), 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;		None               void
  2343 ;; Registers used:
  2344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2350 ;;      Params:         4       0       0       0
  2351 ;;      Locals:         0       0       0       0
  2352 ;;      Temps:          3       0       0       0
  2353 ;;      Totals:         7       0       0       0
  2354 ;;Total ram usage:        7 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    2
  2357 ;; This function calls:
  2358 ;;		_zb_doChecksum
  2359 ;; This function is called by:
  2360 ;;		_zb_handle_sendData
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text11
  2365  0007A0                     __ptext11:
  2366                           	opt stack 0
  2367  0007A0                     _zigbee_appendChecksum:
  2368                           	opt stack 26
  2369                           
  2370                           ;zb_handle.c: 155: buffer[*sizeFrame] = zb_doChecksum(&buffer[(3)], &buffer[*sizeFrame] 
      +                          - &buffer[(3)]);
  2371                           
  2372                           ;incstack = 0
  2373  0007A0  0E03               	movlw	3
  2374  0007A2  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2375  0007A4  6E11               	movwf	zb_doChecksum@frame,c
  2376  0007A6  0E00               	movlw	0
  2377  0007A8  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  2378  0007AA  6E12               	movwf	zb_doChecksum@frame+1,c
  2379  0007AC  5016               	movf	zigbee_appendChecksum@buffer,w,c
  2380  0007AE  0F03               	addlw	3
  2381  0007B0  0800               	sublw	0
  2382  0007B2  6E1A               	movwf	??_zigbee_appendChecksum& (0+255),c
  2383  0007B4  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2384  0007B8  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2385  0007BC  50DF               	movf	indf2,w,c
  2386  0007BE  0D01               	mullw	1
  2387  0007C0  50F3               	movf	prodl,w,c
  2388  0007C2  241A               	addwf	??_zigbee_appendChecksum,w,c
  2389  0007C4  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2390  0007C6  6E13               	movwf	zb_doChecksum@size,c
  2391  0007C8  ECD8  F004         	call	_zb_doChecksum	;wreg free
  2392  0007CC  6E1B               	movwf	(??_zigbee_appendChecksum+1)& (0+255),c
  2393  0007CE  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2394  0007D2  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2395  0007D6  50DF               	movf	indf2,w,c
  2396  0007D8  6E1C               	movwf	(??_zigbee_appendChecksum+2)& (0+255),c
  2397  0007DA  501C               	movf	??_zigbee_appendChecksum+2,w,c
  2398  0007DC  0D01               	mullw	1
  2399  0007DE  50F3               	movf	prodl,w,c
  2400  0007E0  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2401  0007E2  6ED9               	movwf	fsr2l,c
  2402  0007E4  50F4               	movf	prodh,w,c
  2403  0007E6  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  2404  0007E8  6EDA               	movwf	fsr2h,c
  2405  0007EA  C01B  FFDF         	movff	??_zigbee_appendChecksum+1,indf2
  2406                           
  2407                           ;zb_handle.c: 156: (*sizeFrame)++;
  2408  0007EE  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2409  0007F2  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2410  0007F6  2ADF               	incf	indf2,f,c
  2411  0007F8  0012               	return	
  2412  0007FA                     __end_of_zigbee_appendChecksum:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           intcon	equ	0xFF2
  2421                           postinc0	equ	0xFEE
  2422                           wreg	equ	0xFE8
  2423                           indf1	equ	0xFE7
  2424                           postdec1	equ	0xFE5
  2425                           fsr1h	equ	0xFE2
  2426                           fsr1l	equ	0xFE1
  2427                           indf2	equ	0xFDF
  2428                           postinc2	equ	0xFDE
  2429                           postdec2	equ	0xFDD
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function _zb_doChecksum *****************
  2435 ;; Defined at:
  2436 ;;		line 9 in file "zb.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  frame           2   16[COMRAM] PTR unsigned char 
  2439 ;;		 -> zb_frameReceived(50), zb_frameToSend(33), 
  2440 ;;  size            1   18[COMRAM] unsigned char 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  i               1   20[COMRAM] unsigned char 
  2443 ;;  checksum        1   19[COMRAM] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      unsigned char 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2453 ;;      Params:         3       0       0       0
  2454 ;;      Locals:         2       0       0       0
  2455 ;;      Temps:          0       0       0       0
  2456 ;;      Totals:         5       0       0       0
  2457 ;;Total ram usage:        5 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_zb_decodage
  2464 ;;		_zigbee_appendChecksum
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text12
  2469  0009B0                     __ptext12:
  2470                           	opt stack 0
  2471  0009B0                     _zb_doChecksum:
  2472                           	opt stack 25
  2473                           
  2474                           ;zb.c: 11: uint8_t checksum;
  2475                           ;zb.c: 13: checksum = 0xFF;
  2476                           
  2477                           ;incstack = 0
  2478  0009B0  6814               	setf	zb_doChecksum@checksum,c
  2479                           
  2480                           ;zb.c: 14: for (uint8_t i = 0; i < size; i++)
  2481  0009B2  0E00               	movlw	0
  2482  0009B4  6E15               	movwf	zb_doChecksum@i,c
  2483  0009B6  D00B               	goto	l2319
  2484  0009B8                     l2315:
  2485                           
  2486                           ;zb.c: 15: {
  2487                           ;zb.c: 16: checksum -= frame[i];
  2488  0009B8  5015               	movf	zb_doChecksum@i,w,c
  2489  0009BA  0D01               	mullw	1
  2490  0009BC  50F3               	movf	prodl,w,c
  2491  0009BE  2411               	addwf	zb_doChecksum@frame,w,c
  2492  0009C0  6ED9               	movwf	fsr2l,c
  2493  0009C2  50F4               	movf	prodh,w,c
  2494  0009C4  2012               	addwfc	zb_doChecksum@frame+1,w,c
  2495  0009C6  6EDA               	movwf	fsr2h,c
  2496  0009C8  50DF               	movf	indf2,w,c
  2497  0009CA  5E14               	subwf	zb_doChecksum@checksum,f,c
  2498  0009CC  2A15               	incf	zb_doChecksum@i,f,c
  2499  0009CE                     l2319:
  2500  0009CE  5013               	movf	zb_doChecksum@size,w,c
  2501  0009D0  5C15               	subwf	zb_doChecksum@i,w,c
  2502  0009D2  A0D8               	btfss	status,0,c
  2503  0009D4  D7F1               	goto	l2315
  2504                           
  2505                           ;zb.c: 17: }
  2506                           ;zb.c: 19: return checksum;
  2507  0009D6  5014               	movf	zb_doChecksum@checksum,w,c
  2508  0009D8  0012               	return	
  2509  0009DA                     __end_of_zb_doChecksum:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodh	equ	0xFF4
  2516                           prodl	equ	0xFF3
  2517                           intcon	equ	0xFF2
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           indf1	equ	0xFE7
  2521                           postdec1	equ	0xFE5
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           postdec2	equ	0xFDD
  2527                           fsr2h	equ	0xFDA
  2528                           fsr2l	equ	0xFD9
  2529                           status	equ	0xFD8
  2530                           
  2531 ;; *************** function _uart_write *****************
  2532 ;; Defined at:
  2533 ;;		line 28 in file "uart.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  size            1    wreg     unsigned char 
  2536 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  2537 ;;		 -> zb_frameToSend(33), 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  size            1   20[COMRAM] unsigned char 
  2540 ;;  b               2   18[COMRAM] PTR unsigned char 
  2541 ;;		 -> zb_frameToSend(33), 
  2542 ;;  i               1   21[COMRAM] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;		None               void
  2545 ;; Registers used:
  2546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2552 ;;      Params:         2       0       0       0
  2553 ;;      Locals:         4       0       0       0
  2554 ;;      Temps:          0       0       0       0
  2555 ;;      Totals:         6       0       0       0
  2556 ;;Total ram usage:        6 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_zb_handle_sendData
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text13
  2567  0008D8                     __ptext13:
  2568                           	opt stack 0
  2569  0008D8                     _uart_write:
  2570                           	opt stack 27
  2571                           
  2572                           ;incstack = 0
  2573                           ;uart_write@size stored from wreg
  2574  0008D8  6E15               	movwf	uart_write@size,c
  2575                           
  2576                           ;uart.c: 30: uint8_t i;
  2577                           ;uart.c: 31: uint8_t* b;
  2578                           ;uart.c: 33: b = buffer;
  2579  0008DA  C012  F014         	movff	uart_write@buffer+1,uart_write@b+1
  2580  0008DE  C011  F013         	movff	uart_write@buffer,uart_write@b
  2581                           
  2582                           ;uart.c: 34: for (i = 0; i < size; i++)
  2583  0008E2  0E00               	movlw	0
  2584  0008E4  6E16               	movwf	uart_write@i,c
  2585  0008E6  D011               	goto	l2491
  2586  0008E8                     l2487:
  2587                           
  2588                           ;uart.c: 35: {
  2589                           ;uart.c: 36: TXREG = buffer[i];
  2590  0008E8  5016               	movf	uart_write@i,w,c
  2591  0008EA  0D01               	mullw	1
  2592  0008EC  50F3               	movf	prodl,w,c
  2593  0008EE  2411               	addwf	uart_write@buffer,w,c
  2594  0008F0  6ED9               	movwf	fsr2l,c
  2595  0008F2  50F4               	movf	prodh,w,c
  2596  0008F4  2012               	addwfc	uart_write@buffer+1,w,c
  2597  0008F6  6EDA               	movwf	fsr2h,c
  2598  0008F8  50DF               	movf	indf2,w,c
  2599  0008FA  6EAD               	movwf	4013,c	;volatile
  2600                           
  2601                           ;uart.c: 37: while (TXSTAbits.TRMT == 0)
  2602  0008FC  D001               	goto	l235
  2603  0008FE                     l236:
  2604                           
  2605                           ;uart.c: 38: {
  2606                           ;uart.c: 39: __nop();
  2607  0008FE  F000               	nop	
  2608  000900                     l235:
  2609  000900  A2AC               	btfss	4012,1,c	;volatile
  2610  000902  D7FD               	goto	l236
  2611                           
  2612                           ;uart.c: 40: }
  2613                           ;uart.c: 41: b++;
  2614  000904  4A13               	infsnz	uart_write@b,f,c
  2615  000906  2A14               	incf	uart_write@b+1,f,c
  2616  000908  2A16               	incf	uart_write@i,f,c
  2617  00090A                     l2491:
  2618  00090A  5015               	movf	uart_write@size,w,c
  2619  00090C  5C16               	subwf	uart_write@i,w,c
  2620  00090E  A0D8               	btfss	status,0,c
  2621  000910  D7EB               	goto	l2487
  2622                           
  2623                           ;uart.c: 42: }
  2624                           ;uart.c: 44: __nop();
  2625  000912  F000               	nop	
  2626  000914  0012               	return	
  2627  000916                     __end_of_uart_write:
  2628                           	opt stack 0
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           intcon	equ	0xFF2
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           indf1	equ	0xFE7
  2639                           postdec1	equ	0xFE5
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           indf2	equ	0xFDF
  2643                           postinc2	equ	0xFDE
  2644                           postdec2	equ	0xFDD
  2645                           fsr2h	equ	0xFDA
  2646                           fsr2l	equ	0xFD9
  2647                           status	equ	0xFD8
  2648                           
  2649 ;; *************** function _zb_handle_resetStatus *****************
  2650 ;; Defined at:
  2651 ;;		line 114 in file "zb_handle.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;		None               void
  2658 ;; Registers used:
  2659 ;;		wreg, status,2
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2665 ;;      Params:         0       0       0       0
  2666 ;;      Locals:         0       0       0       0
  2667 ;;      Temps:          0       0       0       0
  2668 ;;      Totals:         0       0       0       0
  2669 ;;Total ram usage:        0 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    1
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_main_loop
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text14
  2680  000B08                     __ptext14:
  2681                           	opt stack 0
  2682  000B08                     _zb_handle_resetStatus:
  2683                           	opt stack 28
  2684                           
  2685                           ;zb_handle.c: 116: sensor_data.battStatus = (0x00);
  2686                           
  2687                           ;incstack = 0
  2688  000B08  0E00               	movlw	0
  2689  000B0A  6E34               	movwf	_sensor_data+8,c
  2690                           
  2691                           ;zb_handle.c: 117: sensor_data.humidityStatus = (0x00);
  2692  000B0C  0E00               	movlw	0
  2693  000B0E  6E31               	movwf	_sensor_data+5,c
  2694                           
  2695                           ;zb_handle.c: 118: sensor_data.tempStatus = (0x00);
  2696  000B10  0E00               	movlw	0
  2697  000B12  6E2E               	movwf	_sensor_data+2,c
  2698  000B14  0012               	return	
  2699  000B16                     __end_of_zb_handle_resetStatus:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           prodh	equ	0xFF4
  2706                           prodl	equ	0xFF3
  2707                           intcon	equ	0xFF2
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           indf1	equ	0xFE7
  2711                           postdec1	equ	0xFE5
  2712                           fsr1h	equ	0xFE2
  2713                           fsr1l	equ	0xFE1
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           postdec2	equ	0xFDD
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721 ;; *************** function _zb_handle_getStatus *****************
  2722 ;; Defined at:
  2723 ;;		line 91 in file "zb_handle.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      enum E3761
  2730 ;; Registers used:
  2731 ;;		wreg, status,2
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2737 ;;      Params:         0       0       0       0
  2738 ;;      Locals:         0       0       0       0
  2739 ;;      Temps:          0       0       0       0
  2740 ;;      Totals:         0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_main_loop
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text15
  2752  000B38                     __ptext15:
  2753                           	opt stack 0
  2754  000B38                     _zb_handle_getStatus:
  2755                           	opt stack 28
  2756                           
  2757                           ;zb_handle.c: 93: return zb_status;
  2758                           
  2759                           ;incstack = 0
  2760  000B38  504D               	movf	_zb_status,w,c
  2761  000B3A  0012               	return	
  2762  000B3C                     __end_of_zb_handle_getStatus:
  2763                           	opt stack 0
  2764                           tblptru	equ	0xFF8
  2765                           tblptrh	equ	0xFF7
  2766                           tblptrl	equ	0xFF6
  2767                           tablat	equ	0xFF5
  2768                           prodh	equ	0xFF4
  2769                           prodl	equ	0xFF3
  2770                           intcon	equ	0xFF2
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           indf1	equ	0xFE7
  2774                           postdec1	equ	0xFE5
  2775                           fsr1h	equ	0xFE2
  2776                           fsr1l	equ	0xFE1
  2777                           indf2	equ	0xFDF
  2778                           postinc2	equ	0xFDE
  2779                           postdec2	equ	0xFDD
  2780                           fsr2h	equ	0xFDA
  2781                           fsr2l	equ	0xFD9
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function _timer0_wait_65ms *****************
  2785 ;; Defined at:
  2786 ;;		line 11 in file "timer.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2800 ;;      Params:         0       0       0       0
  2801 ;;      Locals:         0       0       0       0
  2802 ;;      Temps:          0       0       0       0
  2803 ;;      Totals:         0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    2
  2807 ;; This function calls:
  2808 ;;		_timer0_wait_ready
  2809 ;; This function is called by:
  2810 ;;		_main_loop
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text16
  2815  000A46                     __ptext16:
  2816                           	opt stack 0
  2817  000A46                     _timer0_wait_65ms:
  2818                           	opt stack 27
  2819                           
  2820                           ;timer.c: 13: TMR0 = 0;
  2821                           
  2822                           ;incstack = 0
  2823  000A46  0E00               	movlw	0
  2824  000A48  6ED7               	movwf	4055,c	;volatile
  2825  000A4A  0E00               	movlw	0
  2826  000A4C  6ED6               	movwf	4054,c	;volatile
  2827                           
  2828                           ;timer.c: 14: T0CON = 0x45;
  2829  000A4E  0E45               	movlw	69
  2830  000A50  6ED5               	movwf	4053,c	;volatile
  2831                           
  2832                           ;timer.c: 15: INTCONbits.TMR0IF = 0;
  2833  000A52  94F2               	bcf	intcon,2,c	;volatile
  2834                           
  2835                           ;timer.c: 16: INTCONbits.TMR0IE = 1;
  2836  000A54  8AF2               	bsf	intcon,5,c	;volatile
  2837                           
  2838                           ;timer.c: 17: T0CONbits.TMR0ON = 1;
  2839  000A56  8ED5               	bsf	4053,7,c	;volatile
  2840                           
  2841                           ;timer.c: 19: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2842  000A58  8ED3               	bsf	4051,7,c	;volatile
  2843  000A5A  0003               	sleep		;# 
  2844  000A5C  9ED3               	bcf	4051,7,c	;volatile
  2845                           
  2846                           ;timer.c: 20: timer0_wait_ready();
  2847  000A5E  EC5C  F005         	call	_timer0_wait_ready	;wreg free
  2848                           
  2849                           ;timer.c: 22: T0CONbits.TMR0ON = 0;
  2850  000A62  9ED5               	bcf	4053,7,c	;volatile
  2851                           
  2852                           ;timer.c: 23: INTCONbits.TMR0IE = 0;
  2853  000A64  9AF2               	bcf	intcon,5,c	;volatile
  2854  000A66  0012               	return	
  2855  000A68                     __end_of_timer0_wait_65ms:
  2856                           	opt stack 0
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           prodh	equ	0xFF4
  2862                           prodl	equ	0xFF3
  2863                           intcon	equ	0xFF2
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           indf1	equ	0xFE7
  2867                           postdec1	equ	0xFE5
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _timer0_wait_ready *****************
  2878 ;; Defined at:
  2879 ;;		line 42 in file "timer.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;		None               void
  2886 ;; Registers used:
  2887 ;;		wreg, status,2
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2893 ;;      Params:         0       0       0       0
  2894 ;;      Locals:         0       0       0       0
  2895 ;;      Temps:          0       0       0       0
  2896 ;;      Totals:         0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_timer0_wait_65ms
  2904 ;;		_timer0_wait_262ms
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text17
  2909  000AB8                     __ptext17:
  2910                           	opt stack 0
  2911  000AB8                     _timer0_wait_ready:
  2912                           	opt stack 26
  2913                           
  2914                           ;incstack = 0
  2915                           ;timer.c: 44: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2916  000AB8  8ED3               	bsf	4051,7,c	;volatile
  2917  000ABA  0003               	sleep		;# 
  2918  000ABC  9ED3               	bcf	4051,7,c	;volatile
  2919  000ABE                     l2405:
  2920  000ABE  5047               	movf	_timer0_interupt_done,w,c
  2921  000AC0  B4D8               	btfsc	status,2,c
  2922  000AC2  D7FD               	goto	l2405
  2923                           
  2924                           ;timer.c: 48: timer0_interupt_done = FALSE;
  2925  000AC4  0E00               	movlw	0
  2926  000AC6  6E47               	movwf	_timer0_interupt_done,c
  2927  000AC8  0012               	return	
  2928  000ACA                     __end_of_timer0_wait_ready:
  2929                           	opt stack 0
  2930                           tblptru	equ	0xFF8
  2931                           tblptrh	equ	0xFF7
  2932                           tblptrl	equ	0xFF6
  2933                           tablat	equ	0xFF5
  2934                           prodh	equ	0xFF4
  2935                           prodl	equ	0xFF3
  2936                           intcon	equ	0xFF2
  2937                           postinc0	equ	0xFEE
  2938                           wreg	equ	0xFE8
  2939                           indf1	equ	0xFE7
  2940                           postdec1	equ	0xFE5
  2941                           fsr1h	equ	0xFE2
  2942                           fsr1l	equ	0xFE1
  2943                           indf2	equ	0xFDF
  2944                           postinc2	equ	0xFDE
  2945                           postdec2	equ	0xFDD
  2946                           fsr2h	equ	0xFDA
  2947                           fsr2l	equ	0xFD9
  2948                           status	equ	0xFD8
  2949                           
  2950 ;; *************** function _hyt221_operation *****************
  2951 ;; Defined at:
  2952 ;;		line 44 in file "hyt221.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  index           1   19[COMRAM] char 
  2957 ;;  bDeviceDataA    1   18[COMRAM] enum E3083
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      enum E3778
  2960 ;; Registers used:
  2961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2967 ;;      Params:         0       0       0       0
  2968 ;;      Locals:         2       0       0       0
  2969 ;;      Temps:          0       0       0       0
  2970 ;;      Totals:         2       0       0       0
  2971 ;;Total ram usage:        2 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    3
  2974 ;; This function calls:
  2975 ;;		_i2c_trig_start
  2976 ;;		_i2c_trig_stop
  2977 ;;		_i2c_wait_idle
  2978 ;;		_i2c_wait_ready
  2979 ;;		_leds_glitch
  2980 ;; This function is called by:
  2981 ;;		_main_loop
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text18
  2986  000620                     __ptext18:
  2987                           	opt stack 0
  2988  000620                     _hyt221_operation:
  2989                           	opt stack 26
  2990                           
  2991                           ;hyt221.c: 46: int8_t index;
  2992                           ;hyt221.c: 47: BOOL bDeviceDataAreStale;
  2993                           ;hyt221.c: 48: bDeviceDataAreStale = FALSE;
  2994                           
  2995                           ;incstack = 0
  2996  000620  0E00               	movlw	0
  2997  000622  6E13               	movwf	hyt221_operation@bDeviceDataAreStale,c
  2998                           
  2999                           ;hyt221.c: 51: i2c_trig_start();
  3000  000624  EC92  F005         	call	_i2c_trig_start	;wreg free
  3001                           
  3002                           ;hyt221.c: 54: SSPBUF = (0x51);
  3003  000628  0E51               	movlw	81
  3004  00062A  6EC9               	movwf	4041,c	;volatile
  3005                           
  3006                           ;hyt221.c: 55: i2c_wait_ready();
  3007  00062C  EC65  F005         	call	_i2c_wait_ready	;wreg free
  3008                           
  3009                           ;hyt221.c: 58: if (SSPCON2bits.ACKSTAT == 1)
  3010  000630  ACC5               	btfss	4037,6,c	;volatile
  3011  000632  D007               	goto	l2583
  3012                           
  3013                           ;hyt221.c: 59: {
  3014                           ;hyt221.c: 60: leds_glitch((0x08) | (0x04));
  3015  000634  0E0C               	movlw	12
  3016  000636  EC43  F005         	call	_leds_glitch
  3017                           
  3018                           ;hyt221.c: 61: i2c_trig_stop();
  3019  00063A  EC98  F005         	call	_i2c_trig_stop	;wreg free
  3020                           
  3021                           ;hyt221.c: 62: return STATUS_ERROR;
  3022  00063E  0E01               	movlw	1
  3023  000640  D038               	goto	l379
  3024  000642                     l2583:
  3025                           
  3026                           ;hyt221.c: 63: }
  3027                           ;hyt221.c: 65: index = 0;
  3028  000642  0E00               	movlw	0
  3029  000644  6E14               	movwf	hyt221_operation@index,c
  3030                           
  3031                           ;hyt221.c: 66: while (index < 4)
  3032  000646  D026               	goto	l2613
  3033  000648                     l2585:
  3034                           
  3035                           ;hyt221.c: 67: {
  3036                           ;hyt221.c: 68: i2c_wait_idle();
  3037  000648  EC6E  F005         	call	_i2c_wait_idle	;wreg free
  3038                           
  3039                           ;hyt221.c: 69: SSPCON2bits.RCEN = 1;
  3040  00064C  86C5               	bsf	4037,3,c	;volatile
  3041                           
  3042                           ;hyt221.c: 71: i2c_wait_ready();
  3043  00064E  EC65  F005         	call	_i2c_wait_ready	;wreg free
  3044                           
  3045                           ;hyt221.c: 73: gData[index] = SSPBUF;
  3046  000652  5014               	movf	hyt221_operation@index,w,c
  3047  000654  0D01               	mullw	1
  3048  000656  0E35               	movlw	low _gData
  3049  000658  24F3               	addwf	prodl,w,c
  3050  00065A  6ED9               	movwf	fsr2l,c
  3051  00065C  0E00               	movlw	high _gData
  3052  00065E  20F4               	addwfc	prodh,w,c
  3053  000660  6EDA               	movwf	fsr2h,c
  3054  000662  CFC9 FFDF          	movff	4041,indf2	;volatile
  3055                           
  3056                           ;hyt221.c: 74: if (index == 0)
  3057  000666  6614               	tstfsz	hyt221_operation@index,c
  3058  000668  D008               	goto	l2601
  3059                           
  3060                           ;hyt221.c: 75: {
  3061                           ;hyt221.c: 77: if ((gData[0] & 0x40) == 0x40)
  3062  00066A  AC35               	btfss	_gData,6,c
  3063  00066C  D00C               	goto	l386
  3064                           
  3065                           ;hyt221.c: 78: {
  3066                           ;hyt221.c: 80: SSPCON2bits.ACKDT = 1;
  3067  00066E  8AC5               	bsf	4037,5,c	;volatile
  3068                           
  3069                           ;hyt221.c: 81: index = 3;
  3070  000670  0E03               	movlw	3
  3071  000672  6E14               	movwf	hyt221_operation@index,c
  3072                           
  3073                           ;hyt221.c: 82: bDeviceDataAreStale = TRUE;
  3074  000674  0E01               	movlw	1
  3075  000676  6E13               	movwf	hyt221_operation@bDeviceDataAreStale,c
  3076                           
  3077                           ;hyt221.c: 83: }
  3078  000678  D007               	goto	l2605
  3079  00067A                     l2601:
  3080                           
  3081                           ;hyt221.c: 89: else if (index == 3)
  3082  00067A  5014               	movf	hyt221_operation@index,w,c
  3083  00067C  0A03               	xorlw	3
  3084  00067E  A4D8               	btfss	status,2,c
  3085  000680  D002               	goto	l386
  3086                           
  3087                           ;hyt221.c: 90: {
  3088                           ;hyt221.c: 91: SSPCON2bits.ACKDT = 1;
  3089  000682  8AC5               	bsf	4037,5,c	;volatile
  3090                           
  3091                           ;hyt221.c: 92: }
  3092  000684  D001               	goto	l2605
  3093  000686                     l386:
  3094                           
  3095                           ;hyt221.c: 93: else
  3096                           ;hyt221.c: 94: {
  3097                           ;hyt221.c: 95: SSPCON2bits.ACKDT = 0;
  3098  000686  9AC5               	bcf	4037,5,c	;volatile
  3099  000688                     l2605:
  3100                           
  3101                           ;hyt221.c: 96: }
  3102                           ;hyt221.c: 98: i2c_wait_idle();
  3103  000688  EC6E  F005         	call	_i2c_wait_idle	;wreg free
  3104                           
  3105                           ;hyt221.c: 101: SSPCON2bits.ACKEN = 1;
  3106  00068C  88C5               	bsf	4037,4,c	;volatile
  3107                           
  3108                           ;hyt221.c: 102: i2c_wait_ready();
  3109  00068E  EC65  F005         	call	_i2c_wait_ready	;wreg free
  3110                           
  3111                           ;hyt221.c: 103: index++;
  3112  000692  2A14               	incf	hyt221_operation@index,f,c
  3113  000694                     l2613:
  3114  000694  5014               	movf	hyt221_operation@index,w,c
  3115  000696  0A80               	xorlw	128
  3116  000698  0F7C               	addlw	-132
  3117  00069A  A0D8               	btfss	status,0,c
  3118  00069C  D7D5               	goto	l2585
  3119                           
  3120                           ;hyt221.c: 104: }
  3121                           ;hyt221.c: 106: i2c_wait_idle();
  3122  00069E  EC6E  F005         	call	_i2c_wait_idle	;wreg free
  3123                           
  3124                           ;hyt221.c: 107: i2c_trig_stop();
  3125  0006A2  EC98  F005         	call	_i2c_trig_stop	;wreg free
  3126                           
  3127                           ;hyt221.c: 109: if (bDeviceDataAreStale == TRUE)
  3128  0006A6  0413               	decf	hyt221_operation@bDeviceDataAreStale,w,c
  3129  0006A8  A4D8               	btfss	status,2,c
  3130  0006AA  D002               	goto	l2625
  3131                           
  3132                           ;hyt221.c: 110: {
  3133                           ;hyt221.c: 111: return STATUS_EBUSY;
  3134  0006AC  0E02               	movlw	2
  3135  0006AE  D001               	goto	l379
  3136  0006B0                     l2625:
  3137                           
  3138                           ;hyt221.c: 112: }
  3139                           ;hyt221.c: 114: return STATUS_OK;
  3140  0006B0  0E00               	movlw	0
  3141  0006B2                     l379:
  3142  0006B2  0012               	return	
  3143  0006B4                     __end_of_hyt221_operation:
  3144                           	opt stack 0
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           prodh	equ	0xFF4
  3150                           prodl	equ	0xFF3
  3151                           intcon	equ	0xFF2
  3152                           postinc0	equ	0xFEE
  3153                           wreg	equ	0xFE8
  3154                           indf1	equ	0xFE7
  3155                           postdec1	equ	0xFE5
  3156                           fsr1h	equ	0xFE2
  3157                           fsr1l	equ	0xFE1
  3158                           indf2	equ	0xFDF
  3159                           postinc2	equ	0xFDE
  3160                           postdec2	equ	0xFDD
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           
  3165 ;; *************** function _hyt221_launch_acq *****************
  3166 ;; Defined at:
  3167 ;;		line 20 in file "hyt221.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      enum E3778
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3181 ;;      Params:         0       0       0       0
  3182 ;;      Locals:         0       0       0       0
  3183 ;;      Temps:          0       0       0       0
  3184 ;;      Totals:         0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    3
  3188 ;; This function calls:
  3189 ;;		_i2c_trig_start
  3190 ;;		_i2c_trig_stop
  3191 ;;		_i2c_wait_idle
  3192 ;;		_i2c_wait_ready
  3193 ;;		_leds_glitch
  3194 ;; This function is called by:
  3195 ;;		_main_loop
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text19
  3200  0009DA                     __ptext19:
  3201                           	opt stack 0
  3202  0009DA                     _hyt221_launch_acq:
  3203                           	opt stack 26
  3204                           
  3205                           ;hyt221.c: 22: i2c_trig_start();
  3206                           
  3207                           ;incstack = 0
  3208  0009DA  EC92  F005         	call	_i2c_trig_start	;wreg free
  3209                           
  3210                           ;hyt221.c: 25: SSPBUF = (0x50);
  3211  0009DE  0E50               	movlw	80
  3212  0009E0  6EC9               	movwf	4041,c	;volatile
  3213                           
  3214                           ;hyt221.c: 27: i2c_wait_ready();
  3215  0009E2  EC65  F005         	call	_i2c_wait_ready	;wreg free
  3216                           
  3217                           ;hyt221.c: 31: if (SSPCON2bits.ACKSTAT == 1)
  3218  0009E6  ACC5               	btfss	4037,6,c	;volatile
  3219  0009E8  D005               	goto	l2537
  3220                           
  3221                           ;hyt221.c: 32: {
  3222                           ;hyt221.c: 33: leds_glitch((0x08) | (0x04));
  3223  0009EA  0E0C               	movlw	12
  3224  0009EC  EC43  F005         	call	_leds_glitch
  3225                           
  3226                           ;hyt221.c: 34: return STATUS_ERROR;
  3227  0009F0  0E01               	movlw	1
  3228  0009F2  D006               	goto	l375
  3229  0009F4                     l2537:
  3230                           
  3231                           ;hyt221.c: 35: }
  3232                           ;hyt221.c: 37: i2c_wait_idle();
  3233  0009F4  EC6E  F005         	call	_i2c_wait_idle	;wreg free
  3234                           
  3235                           ;hyt221.c: 38: i2c_trig_stop();
  3236  0009F8  EC98  F005         	call	_i2c_trig_stop	;wreg free
  3237                           
  3238                           ;hyt221.c: 39: __nop();
  3239  0009FC  F000               	nop	
  3240                           
  3241                           ;hyt221.c: 40: return STATUS_OK;
  3242  0009FE  0E00               	movlw	0
  3243  000A00                     l375:
  3244  000A00  0012               	return	
  3245  000A02                     __end_of_hyt221_launch_acq:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           indf1	equ	0xFE7
  3257                           postdec1	equ	0xFE5
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           indf2	equ	0xFDF
  3261                           postinc2	equ	0xFDE
  3262                           postdec2	equ	0xFDD
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _i2c_trig_stop *****************
  3268 ;; Defined at:
  3269 ;;		line 61 in file "i2c.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3283 ;;      Params:         0       0       0       0
  3284 ;;      Locals:         0       0       0       0
  3285 ;;      Temps:          0       0       0       0
  3286 ;;      Totals:         0       0       0       0
  3287 ;;Total ram usage:        0 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		_i2c_wait_ready
  3292 ;; This function is called by:
  3293 ;;		_hyt221_launch_acq
  3294 ;;		_hyt221_operation
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text20
  3299  000B30                     __ptext20:
  3300                           	opt stack 0
  3301  000B30                     _i2c_trig_stop:
  3302                           	opt stack 26
  3303                           
  3304                           ;i2c.c: 64: SSPCON2bits.PEN = 1;
  3305                           
  3306                           ;incstack = 0
  3307  000B30  84C5               	bsf	4037,2,c	;volatile
  3308                           
  3309                           ;i2c.c: 65: i2c_wait_ready();
  3310  000B32  EC65  F005         	call	_i2c_wait_ready	;wreg free
  3311  000B36  0012               	return	
  3312  000B38                     __end_of_i2c_trig_stop:
  3313                           	opt stack 0
  3314                           tblptru	equ	0xFF8
  3315                           tblptrh	equ	0xFF7
  3316                           tblptrl	equ	0xFF6
  3317                           tablat	equ	0xFF5
  3318                           prodh	equ	0xFF4
  3319                           prodl	equ	0xFF3
  3320                           intcon	equ	0xFF2
  3321                           postinc0	equ	0xFEE
  3322                           wreg	equ	0xFE8
  3323                           indf1	equ	0xFE7
  3324                           postdec1	equ	0xFE5
  3325                           fsr1h	equ	0xFE2
  3326                           fsr1l	equ	0xFE1
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           postdec2	equ	0xFDD
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8
  3333                           
  3334 ;; *************** function _i2c_trig_start *****************
  3335 ;; Defined at:
  3336 ;;		line 53 in file "i2c.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;		None               void
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3350 ;;      Params:         0       0       0       0
  3351 ;;      Locals:         0       0       0       0
  3352 ;;      Temps:          0       0       0       0
  3353 ;;      Totals:         0       0       0       0
  3354 ;;Total ram usage:        0 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    2
  3357 ;; This function calls:
  3358 ;;		_i2c_wait_idle
  3359 ;;		_i2c_wait_ready
  3360 ;; This function is called by:
  3361 ;;		_hyt221_launch_acq
  3362 ;;		_hyt221_operation
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text21
  3367  000B24                     __ptext21:
  3368                           	opt stack 0
  3369  000B24                     _i2c_trig_start:
  3370                           	opt stack 26
  3371                           
  3372                           ;i2c.c: 55: i2c_wait_idle();
  3373                           
  3374                           ;incstack = 0
  3375  000B24  EC6E  F005         	call	_i2c_wait_idle	;wreg free
  3376                           
  3377                           ;i2c.c: 57: SSPCON2bits.SEN = 1;
  3378  000B28  80C5               	bsf	4037,0,c	;volatile
  3379                           
  3380                           ;i2c.c: 58: i2c_wait_ready();
  3381  000B2A  EC65  F005         	call	_i2c_wait_ready	;wreg free
  3382  000B2E  0012               	return	
  3383  000B30                     __end_of_i2c_trig_start:
  3384                           	opt stack 0
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           prodh	equ	0xFF4
  3390                           prodl	equ	0xFF3
  3391                           intcon	equ	0xFF2
  3392                           postinc0	equ	0xFEE
  3393                           wreg	equ	0xFE8
  3394                           indf1	equ	0xFE7
  3395                           postdec1	equ	0xFE5
  3396                           fsr1h	equ	0xFE2
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           fsr2h	equ	0xFDA
  3402                           fsr2l	equ	0xFD9
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _i2c_wait_ready *****************
  3406 ;; Defined at:
  3407 ;;		line 35 in file "i2c.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;		None               void
  3414 ;; Registers used:
  3415 ;;		wreg, status,2
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3421 ;;      Params:         0       0       0       0
  3422 ;;      Locals:         0       0       0       0
  3423 ;;      Temps:          0       0       0       0
  3424 ;;      Totals:         0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    1
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_i2c_trig_start
  3432 ;;		_i2c_trig_stop
  3433 ;;		_hyt221_launch_acq
  3434 ;;		_hyt221_operation
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text22
  3439  000ACA                     __ptext22:
  3440                           	opt stack 0
  3441  000ACA                     _i2c_wait_ready:
  3442                           	opt stack 27
  3443                           
  3444                           ;incstack = 0
  3445                           ;i2c.c: 37: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while (0
      +                          );;
  3446  000ACA  8ED3               	bsf	4051,7,c	;volatile
  3447  000ACC  0003               	sleep		;# 
  3448  000ACE  9ED3               	bcf	4051,7,c	;volatile
  3449  000AD0                     l2331:
  3450  000AD0  5045               	movf	_i2c_interupt_done,w,c
  3451  000AD2  B4D8               	btfsc	status,2,c
  3452  000AD4  D7FD               	goto	l2331
  3453                           
  3454                           ;i2c.c: 43: i2c_interupt_done = FALSE;
  3455  000AD6  0E00               	movlw	0
  3456  000AD8  6E45               	movwf	_i2c_interupt_done,c
  3457  000ADA  0012               	return	
  3458  000ADC                     __end_of_i2c_wait_ready:
  3459                           	opt stack 0
  3460                           tblptru	equ	0xFF8
  3461                           tblptrh	equ	0xFF7
  3462                           tblptrl	equ	0xFF6
  3463                           tablat	equ	0xFF5
  3464                           prodh	equ	0xFF4
  3465                           prodl	equ	0xFF3
  3466                           intcon	equ	0xFF2
  3467                           postinc0	equ	0xFEE
  3468                           wreg	equ	0xFE8
  3469                           indf1	equ	0xFE7
  3470                           postdec1	equ	0xFE5
  3471                           fsr1h	equ	0xFE2
  3472                           fsr1l	equ	0xFE1
  3473                           indf2	equ	0xFDF
  3474                           postinc2	equ	0xFDE
  3475                           postdec2	equ	0xFDD
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function _i2c_wait_idle *****************
  3481 ;; Defined at:
  3482 ;;		line 46 in file "i2c.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;		None               void
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3496 ;;      Params:         0       0       0       0
  3497 ;;      Locals:         0       0       0       0
  3498 ;;      Temps:          1       0       0       0
  3499 ;;      Totals:         1       0       0       0
  3500 ;;Total ram usage:        1 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_i2c_trig_start
  3507 ;;		_hyt221_launch_acq
  3508 ;;		_hyt221_operation
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text23
  3513  000ADC                     __ptext23:
  3514                           	opt stack 0
  3515  000ADC                     _i2c_wait_idle:
  3516                           	opt stack 27
  3517  000ADC                     l2337:
  3518  000ADC  CFC5 F011          	movff	4037,??_i2c_wait_idle	;volatile
  3519  000AE0  0E1F               	movlw	31
  3520  000AE2  1611               	andwf	??_i2c_wait_idle,f,c
  3521  000AE4  B4D8               	btfsc	status,2,c
  3522  000AE6  B4C7               	btfsc	4039,2,c	;volatile
  3523  000AE8  D7F9               	goto	l2337
  3524  000AEA  0012               	return	
  3525  000AEC                     __end_of_i2c_wait_idle:
  3526                           	opt stack 0
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           prodh	equ	0xFF4
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           indf1	equ	0xFE7
  3537                           postdec1	equ	0xFE5
  3538                           fsr1h	equ	0xFE2
  3539                           fsr1l	equ	0xFE1
  3540                           indf2	equ	0xFDF
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function _hyt221_getTemp *****************
  3548 ;; Defined at:
  3549 ;;		line 118 in file "hyt221.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  temp_raw        2   20[COMRAM] unsigned int 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  2   16[COMRAM] unsigned int 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3563 ;;      Params:         2       0       0       0
  3564 ;;      Locals:         2       0       0       0
  3565 ;;      Temps:          2       0       0       0
  3566 ;;      Totals:         6       0       0       0
  3567 ;;Total ram usage:        6 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_main_loop
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text24
  3578  000982                     __ptext24:
  3579                           	opt stack 0
  3580  000982                     _hyt221_getTemp:
  3581                           	opt stack 28
  3582                           
  3583                           ;hyt221.c: 120: uint16_t temp_raw;
  3584                           ;hyt221.c: 121: temp_raw = ((uint16_t) gData[2]) << 8 | (uint16_t) gData[3];
  3585                           
  3586                           ;incstack = 0
  3587  000982  5037               	movf	_gData+2,w,c
  3588  000984  6E16               	movwf	hyt221_getTemp@temp_raw+1,c
  3589  000986  5038               	movf	_gData+3,w,c
  3590  000988  6E15               	movwf	hyt221_getTemp@temp_raw,c
  3591                           
  3592                           ;hyt221.c: 122: temp_raw = temp_raw >> 2;
  3593  00098A  C015  F013         	movff	hyt221_getTemp@temp_raw,??_hyt221_getTemp
  3594  00098E  C016  F014         	movff	hyt221_getTemp@temp_raw+1,??_hyt221_getTemp+1
  3595  000992  90D8               	bcf	status,0,c
  3596  000994  3214               	rrcf	??_hyt221_getTemp+1,f,c
  3597  000996  3213               	rrcf	??_hyt221_getTemp,f,c
  3598  000998  90D8               	bcf	status,0,c
  3599  00099A  3214               	rrcf	??_hyt221_getTemp+1,f,c
  3600  00099C  3213               	rrcf	??_hyt221_getTemp,f,c
  3601  00099E  C013  F015         	movff	??_hyt221_getTemp,hyt221_getTemp@temp_raw
  3602  0009A2  C014  F016         	movff	??_hyt221_getTemp+1,hyt221_getTemp@temp_raw+1
  3603                           
  3604                           ;hyt221.c: 123: return temp_raw;
  3605  0009A6  C015  F011         	movff	hyt221_getTemp@temp_raw,?_hyt221_getTemp
  3606  0009AA  C016  F012         	movff	hyt221_getTemp@temp_raw+1,?_hyt221_getTemp+1
  3607  0009AE  0012               	return	
  3608  0009B0                     __end_of_hyt221_getTemp:
  3609                           	opt stack 0
  3610                           tblptru	equ	0xFF8
  3611                           tblptrh	equ	0xFF7
  3612                           tblptrl	equ	0xFF6
  3613                           tablat	equ	0xFF5
  3614                           prodh	equ	0xFF4
  3615                           prodl	equ	0xFF3
  3616                           intcon	equ	0xFF2
  3617                           postinc0	equ	0xFEE
  3618                           wreg	equ	0xFE8
  3619                           indf1	equ	0xFE7
  3620                           postdec1	equ	0xFE5
  3621                           fsr1h	equ	0xFE2
  3622                           fsr1l	equ	0xFE1
  3623                           indf2	equ	0xFDF
  3624                           postinc2	equ	0xFDE
  3625                           postdec2	equ	0xFDD
  3626                           fsr2h	equ	0xFDA
  3627                           fsr2l	equ	0xFD9
  3628                           status	equ	0xFD8
  3629                           
  3630 ;; *************** function _hyt221_getHumidity *****************
  3631 ;; Defined at:
  3632 ;;		line 126 in file "hyt221.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  humidity_raw    2   18[COMRAM] unsigned int 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2   16[COMRAM] unsigned int 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3646 ;;      Params:         2       0       0       0
  3647 ;;      Locals:         2       0       0       0
  3648 ;;      Temps:          0       0       0       0
  3649 ;;      Totals:         4       0       0       0
  3650 ;;Total ram usage:        4 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    1
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_main_loop
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text25
  3661  000AA4                     __ptext25:
  3662                           	opt stack 0
  3663  000AA4                     _hyt221_getHumidity:
  3664                           	opt stack 28
  3665                           
  3666                           ;hyt221.c: 128: uint16_t humidity_raw;
  3667                           ;hyt221.c: 129: humidity_raw = ((uint16_t) (gData[0] & 0x3F)) << 8 | gData[1];
  3668                           
  3669                           ;incstack = 0
  3670  000AA4  5035               	movf	_gData,w,c
  3671  000AA6  0B3F               	andlw	63
  3672  000AA8  6E14               	movwf	hyt221_getHumidity@humidity_raw+1,c
  3673  000AAA  5036               	movf	_gData+1,w,c
  3674  000AAC  6E13               	movwf	hyt221_getHumidity@humidity_raw,c
  3675                           
  3676                           ;hyt221.c: 130: return humidity_raw;
  3677  000AAE  C013  F011         	movff	hyt221_getHumidity@humidity_raw,?_hyt221_getHumidity
  3678  000AB2  C014  F012         	movff	hyt221_getHumidity@humidity_raw+1,?_hyt221_getHumidity+1
  3679  000AB6  0012               	return	
  3680  000AB8                     __end_of_hyt221_getHumidity:
  3681                           	opt stack 0
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           postinc0	equ	0xFEE
  3690                           wreg	equ	0xFE8
  3691                           indf1	equ	0xFE7
  3692                           postdec1	equ	0xFE5
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           indf2	equ	0xFDF
  3696                           postinc2	equ	0xFDE
  3697                           postdec2	equ	0xFDD
  3698                           fsr2h	equ	0xFDA
  3699                           fsr2l	equ	0xFD9
  3700                           status	equ	0xFD8
  3701                           
  3702 ;; *************** function _batt_launch_acq *****************
  3703 ;; Defined at:
  3704 ;;		line 234 in file "main.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;		None               void
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3718 ;;      Params:         0       0       0       0
  3719 ;;      Locals:         0       0       0       0
  3720 ;;      Temps:          2       0       0       0
  3721 ;;      Totals:         2       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    2
  3725 ;; This function calls:
  3726 ;;		_zb_handle_setbatVolt
  3727 ;; This function is called by:
  3728 ;;		_main_loop
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text26
  3733  00084E                     __ptext26:
  3734                           	opt stack 0
  3735  00084E                     _batt_launch_acq:
  3736                           	opt stack 27
  3737                           
  3738                           ;main.c: 236: LATBbits.LATB1 = 1;
  3739                           
  3740                           ;incstack = 0
  3741  00084E  828A               	bsf	3978,1,c	;volatile
  3742                           
  3743                           ;main.c: 237: ADCON1 = 0x00;
  3744  000850  0E00               	movlw	0
  3745  000852  6EC1               	movwf	4033,c	;volatile
  3746                           
  3747                           ;main.c: 238: ADCON0 = 0x20;
  3748  000854  0E20               	movlw	32
  3749  000856  6EC2               	movwf	4034,c	;volatile
  3750                           
  3751                           ;main.c: 239: ADCON2 = 0x8B;
  3752  000858  0E8B               	movlw	139
  3753  00085A  6EC0               	movwf	4032,c	;volatile
  3754                           
  3755                           ;main.c: 240: ADCON0 |= 0x01;
  3756  00085C  80C2               	bsf	4034,0,c	;volatile
  3757                           
  3758                           ;main.c: 241: ADCON0 |= 0x02 ;
  3759  00085E  82C2               	bsf	4034,1,c	;volatile
  3760                           
  3761                           ;main.c: 243: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  3762  000860  8ED3               	bsf	4051,7,c	;volatile
  3763  000862  0003               	sleep		;# 
  3764  000864  9ED3               	bcf	4051,7,c	;volatile
  3765  000866  D001               	goto	l136
  3766  000868                     l137:
  3767                           
  3768                           ;main.c: 246: {
  3769                           ;main.c: 247: __nop();
  3770  000868  F000               	nop	
  3771  00086A                     l136:
  3772  00086A  B2C2               	btfsc	4034,1,c	;volatile
  3773  00086C  D7FD               	goto	l137
  3774                           
  3775                           ;main.c: 248: }
  3776                           ;main.c: 250: batt_value = (ADRESH << 8) | ADRESL;
  3777  00086E  50C3               	movf	4035,w,c	;volatile
  3778  000870  CFC4 F013          	movff	4036,??_batt_launch_acq	;volatile
  3779  000874  6A14               	clrf	(??_batt_launch_acq+1)& (0+255),c
  3780  000876  C013  F014         	movff	??_batt_launch_acq,??_batt_launch_acq+1
  3781  00087A  6A13               	clrf	??_batt_launch_acq,c
  3782  00087C  1013               	iorwf	??_batt_launch_acq,w,c
  3783  00087E  6E3F               	movwf	_batt_value,c
  3784  000880  5014               	movf	??_batt_launch_acq+1,w,c
  3785  000882  6E40               	movwf	_batt_value+1,c
  3786                           
  3787                           ;main.c: 251: LATBbits.LATB1 = 0;
  3788  000884  928A               	bcf	3978,1,c	;volatile
  3789                           
  3790                           ;main.c: 252: ADCON0 &= ~0x01;
  3791  000886  90C2               	bcf	4034,0,c	;volatile
  3792                           
  3793                           ;main.c: 253: zb_handle_setbatVolt(batt_value);
  3794  000888  C03F  F011         	movff	_batt_value,zb_handle_setbatVolt@battVoltage
  3795  00088C  C040  F012         	movff	_batt_value+1,zb_handle_setbatVolt@battVoltage+1
  3796  000890  EC8B  F005         	call	_zb_handle_setbatVolt	;wreg free
  3797  000894  0012               	return	
  3798  000896                     __end_of_batt_launch_acq:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           postinc0	equ	0xFEE
  3808                           wreg	equ	0xFE8
  3809                           indf1	equ	0xFE7
  3810                           postdec1	equ	0xFE5
  3811                           fsr1h	equ	0xFE2
  3812                           fsr1l	equ	0xFE1
  3813                           indf2	equ	0xFDF
  3814                           postinc2	equ	0xFDE
  3815                           postdec2	equ	0xFDD
  3816                           fsr2h	equ	0xFDA
  3817                           fsr2l	equ	0xFD9
  3818                           status	equ	0xFD8
  3819                           
  3820 ;; *************** function _zb_handle_setbatVolt *****************
  3821 ;; Defined at:
  3822 ;;		line 108 in file "zb_handle.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  battVoltage     2   16[COMRAM] unsigned int 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;		None               void
  3829 ;; Registers used:
  3830 ;;		wreg, status,2
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3836 ;;      Params:         2       0       0       0
  3837 ;;      Locals:         0       0       0       0
  3838 ;;      Temps:          0       0       0       0
  3839 ;;      Totals:         2       0       0       0
  3840 ;;Total ram usage:        2 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    1
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_batt_launch_acq
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text27
  3851  000B16                     __ptext27:
  3852                           	opt stack 0
  3853  000B16                     _zb_handle_setbatVolt:
  3854                           	opt stack 27
  3855                           
  3856                           ;zb_handle.c: 110: sensor_data.battRaw = battVoltage;
  3857                           
  3858                           ;incstack = 0
  3859  000B16  C011  F032         	movff	zb_handle_setbatVolt@battVoltage,_sensor_data+6
  3860  000B1A  C012  F033         	movff	zb_handle_setbatVolt@battVoltage+1,_sensor_data+7
  3861                           
  3862                           ;zb_handle.c: 111: sensor_data.battStatus = (0x03);
  3863  000B1E  0E03               	movlw	3
  3864  000B20  6E34               	movwf	_sensor_data+8,c
  3865  000B22  0012               	return	
  3866  000B24                     __end_of_zb_handle_setbatVolt:
  3867                           	opt stack 0
  3868                           tblptru	equ	0xFF8
  3869                           tblptrh	equ	0xFF7
  3870                           tblptrl	equ	0xFF6
  3871                           tablat	equ	0xFF5
  3872                           prodh	equ	0xFF4
  3873                           prodl	equ	0xFF3
  3874                           intcon	equ	0xFF2
  3875                           postinc0	equ	0xFEE
  3876                           wreg	equ	0xFE8
  3877                           indf1	equ	0xFE7
  3878                           postdec1	equ	0xFE5
  3879                           fsr1h	equ	0xFE2
  3880                           fsr1l	equ	0xFE1
  3881                           indf2	equ	0xFDF
  3882                           postinc2	equ	0xFDE
  3883                           postdec2	equ	0xFDD
  3884                           fsr2h	equ	0xFDA
  3885                           fsr2l	equ	0xFD9
  3886                           status	equ	0xFD8
  3887                           
  3888 ;; *************** function _i2c_setup *****************
  3889 ;; Defined at:
  3890 ;;		line 9 in file "i2c.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;		None               void
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3904 ;;      Params:         0       0       0       0
  3905 ;;      Locals:         0       0       0       0
  3906 ;;      Temps:          0       0       0       0
  3907 ;;      Totals:         0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text28
  3919  000952                     __ptext28:
  3920                           	opt stack 0
  3921  000952                     _i2c_setup:
  3922                           	opt stack 29
  3923                           
  3924                           ;i2c.c: 15: TRISC &= ~0x18;
  3925                           
  3926                           ;incstack = 0
  3927  000952  0EE7               	movlw	231
  3928  000954  1694               	andwf	3988,f,c	;volatile
  3929                           
  3930                           ;i2c.c: 16: LATCbits.LATC3 = 0;
  3931  000956  968B               	bcf	3979,3,c	;volatile
  3932                           
  3933                           ;i2c.c: 17: LATCbits.LATC4 = 0;
  3934  000958  988B               	bcf	3979,4,c	;volatile
  3935                           
  3936                           ;i2c.c: 18: _delay((unsigned long)((100)*((1000000)/4000000.0)));
  3937  00095A  0E08               	movlw	8
  3938  00095C                     u1577:
  3939  00095C  2EE8               	decfsz	wreg,f,c
  3940  00095E  D7FE               	goto	u1577
  3941  000960  F000               	nop	
  3942                           
  3943                           ;i2c.c: 20: TRISC |= 0x18;
  3944  000962  0E18               	movlw	24
  3945  000964  1294               	iorwf	3988,f,c	;volatile
  3946                           
  3947                           ;i2c.c: 23: SSPSTAT = 0x80;
  3948  000966  0E80               	movlw	128
  3949  000968  6EC7               	movwf	4039,c	;volatile
  3950                           
  3951                           ;i2c.c: 24: SSPADD = 0x01;
  3952  00096A  0E01               	movlw	1
  3953  00096C  6EC8               	movwf	4040,c	;volatile
  3954                           
  3955                           ;i2c.c: 25: SSPCON1 = 0x28;
  3956  00096E  0E28               	movlw	40
  3957  000970  6EC6               	movwf	4038,c	;volatile
  3958                           
  3959                           ;i2c.c: 26: SSPCON2 = 0x00;
  3960  000972  0E00               	movlw	0
  3961  000974  6EC5               	movwf	4037,c	;volatile
  3962                           
  3963                           ;i2c.c: 29: i2c_interupt_done = FALSE;
  3964  000976  0E00               	movlw	0
  3965  000978  6E45               	movwf	_i2c_interupt_done,c
  3966                           
  3967                           ;i2c.c: 30: PIR1bits.SSPIF = 0;
  3968  00097A  969E               	bcf	3998,3,c	;volatile
  3969                           
  3970                           ;i2c.c: 31: PIR2bits.BCLIF = 0;
  3971  00097C  96A1               	bcf	4001,3,c	;volatile
  3972                           
  3973                           ;i2c.c: 32: PIE1bits.SSPIE = 1;
  3974  00097E  869D               	bsf	3997,3,c	;volatile
  3975  000980  0012               	return	
  3976  000982                     __end_of_i2c_setup:
  3977                           	opt stack 0
  3978                           tblptru	equ	0xFF8
  3979                           tblptrh	equ	0xFF7
  3980                           tblptrl	equ	0xFF6
  3981                           tablat	equ	0xFF5
  3982                           prodh	equ	0xFF4
  3983                           prodl	equ	0xFF3
  3984                           intcon	equ	0xFF2
  3985                           postinc0	equ	0xFEE
  3986                           wreg	equ	0xFE8
  3987                           indf1	equ	0xFE7
  3988                           postdec1	equ	0xFE5
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           indf2	equ	0xFDF
  3992                           postinc2	equ	0xFDE
  3993                           postdec2	equ	0xFDD
  3994                           fsr2h	equ	0xFDA
  3995                           fsr2l	equ	0xFD9
  3996                           status	equ	0xFD8
  3997                           
  3998 ;; *************** function _calibration *****************
  3999 ;; Defined at:
  4000 ;;		line 12 in file "osc.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  w               1   20[COMRAM] char 
  4005 ;;  tryCounter      1   19[COMRAM] char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;		None               void
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4015 ;;      Params:         0       0       0       0
  4016 ;;      Locals:         2       0       0       0
  4017 ;;      Temps:          1       0       0       0
  4018 ;;      Totals:         3       0       0       0
  4019 ;;Total ram usage:        3 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    2
  4022 ;; This function calls:
  4023 ;;		_leds_glitch
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text29
  4030  00055A                     __ptext29:
  4031                           	opt stack 0
  4032  00055A                     _calibration:
  4033                           	opt stack 28
  4034                           
  4035                           ;osc.c: 14: int8_t w;
  4036                           ;osc.c: 15: int8_t tryCounter;
  4037                           ;osc.c: 17: T1CON = 0x0F;
  4038                           
  4039                           ;incstack = 0
  4040  00055A  0E0F               	movlw	15
  4041  00055C  6ECD               	movwf	4045,c	;volatile
  4042                           
  4043                           ;osc.c: 18: tryCounter = 0;
  4044  00055E  0E00               	movlw	0
  4045  000560  6E14               	movwf	calibration@tryCounter,c
  4046                           
  4047                           ;osc.c: 19: while (tryCounter < 32)
  4048  000562  D035               	goto	l450
  4049  000564                     l2717:
  4050                           
  4051                           ;osc.c: 20: {
  4052                           ;osc.c: 21: calibr = 0;
  4053  000564  0E00               	movlw	0
  4054  000566  6E44               	movwf	_calibr,c	;volatile
  4055                           
  4056                           ;osc.c: 22: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4057  000568  0E52               	movlw	82
  4058  00056A  6E13               	movwf	??_calibration& (0+255),c
  4059  00056C  0E2A               	movlw	42
  4060  00056E                     u1587:
  4061  00056E  2EE8               	decfsz	wreg,f,c
  4062  000570  D7FE               	goto	u1587
  4063  000572  2E13               	decfsz	??_calibration& (0+255),f,c
  4064  000574  D7FC               	goto	u1587
  4065                           
  4066                           ;osc.c: 23: T1CON = 0x0F;
  4067  000576  0E0F               	movlw	15
  4068  000578  6ECD               	movwf	4045,c	;volatile
  4069                           
  4070                           ;osc.c: 26: TMR1H = 0xFF;
  4071  00057A  68CF               	setf	4047,c	;volatile
  4072                           
  4073                           ;osc.c: 27: TMR1L = 0xE7;
  4074  00057C  0EE7               	movlw	231
  4075  00057E  6ECE               	movwf	4046,c	;volatile
  4076                           
  4077                           ;osc.c: 28: PIR1bits.TMR1IF = 0;
  4078  000580  909E               	bcf	3998,0,c	;volatile
  4079                           
  4080                           ;osc.c: 31: while (PIR1bits.TMR1IF == 0)
  4081  000582  D001               	goto	l2731
  4082  000584                     l2729:
  4083                           
  4084                           ;osc.c: 32: {
  4085                           ;osc.c: 33: calibr++;
  4086  000584  2A44               	incf	_calibr,f,c	;volatile
  4087  000586                     l2731:
  4088  000586  A09E               	btfss	3998,0,c	;volatile
  4089  000588  D7FD               	goto	l2729
  4090                           
  4091                           ;osc.c: 34: }
  4092                           ;osc.c: 36: w = ((int8_t)(0x30)) - calibr;
  4093  00058A  5044               	movf	_calibr,w,c
  4094  00058C  0800               	sublw	0
  4095  00058E  0F30               	addlw	48
  4096  000590  6E15               	movwf	calibration@w,c
  4097                           
  4098                           ;osc.c: 37: if (w > 0)
  4099  000592  5015               	movf	calibration@w,w,c
  4100  000594  0A80               	xorlw	128
  4101  000596  0F7F               	addlw	-129
  4102  000598  A0D8               	btfss	status,0,c
  4103  00059A  D009               	goto	l2739
  4104                           
  4105                           ;osc.c: 38: {
  4106                           ;osc.c: 40: w -= ((int8_t) (2));
  4107  00059C  0EFE               	movlw	254
  4108  00059E  2615               	addwf	calibration@w,f,c
  4109                           
  4110                           ;osc.c: 41: if (w > 0)
  4111  0005A0  5015               	movf	calibration@w,w,c
  4112  0005A2  0A80               	xorlw	128
  4113  0005A4  0F7F               	addlw	-129
  4114  0005A6  A0D8               	btfss	status,0,c
  4115  0005A8  D017               	goto	l2747
  4116                           
  4117                           ;osc.c: 42: {
  4118                           ;osc.c: 44: OSCTUNE = (OSCTUNE + 1) & 0x1F;
  4119  0005AA  289B               	incf	3995,w,c	;volatile
  4120  0005AC  D00A               	goto	L12
  4121  0005AE                     l2739:
  4122                           
  4123                           ;osc.c: 51: else
  4124                           ;osc.c: 52: {
  4125                           ;osc.c: 54: w = ((int8_t) (2)) - w;
  4126  0005AE  5015               	movf	calibration@w,w,c
  4127  0005B0  0800               	sublw	0
  4128  0005B2  0F02               	addlw	2
  4129  0005B4  6E15               	movwf	calibration@w,c
  4130                           
  4131                           ;osc.c: 55: if (w > 0)
  4132  0005B6  5015               	movf	calibration@w,w,c
  4133  0005B8  0A80               	xorlw	128
  4134  0005BA  0F7F               	addlw	-129
  4135  0005BC  A0D8               	btfss	status,0,c
  4136  0005BE  D00C               	goto	l2747
  4137                           
  4138                           ;osc.c: 56: {
  4139                           ;osc.c: 57: OSCTUNE = (OSCTUNE - 1) & 0x1F;
  4140  0005C0  049B               	decf	3995,w,c	;volatile
  4141  0005C2                     L12:
  4142  0005C2  0B1F               	andlw	31
  4143  0005C4  6E9B               	movwf	3995,c	;volatile
  4144                           
  4145                           ;osc.c: 62: }
  4146                           ;osc.c: 63: }
  4147                           ;osc.c: 64: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4148                           
  4149                           ;osc.c: 59: else
  4150                           ;osc.c: 60: {
  4151                           ;osc.c: 61: break;
  4152                           
  4153                           ;osc.c: 58: }
  4154  0005C6  0E19               	movlw	25
  4155  0005C8                     u1597:
  4156  0005C8  2EE8               	decfsz	wreg,f,c
  4157  0005CA  D7FE               	goto	u1597
  4158                           
  4159                           ;osc.c: 65: tryCounter++;
  4160  0005CC  2A14               	incf	calibration@tryCounter,f,c
  4161  0005CE                     l450:
  4162  0005CE  5014               	movf	calibration@tryCounter,w,c
  4163  0005D0  0A80               	xorlw	128
  4164  0005D2  0F60               	addlw	-160
  4165  0005D4  A0D8               	btfss	status,0,c
  4166  0005D6  D7C6               	goto	l2717
  4167  0005D8                     l2747:
  4168                           
  4169                           ;osc.c: 66: }
  4170                           ;osc.c: 68: if (tryCounter >= 32)
  4171  0005D8  5014               	movf	calibration@tryCounter,w,c
  4172  0005DA  0A80               	xorlw	128
  4173  0005DC  0F60               	addlw	-160
  4174  0005DE  A0D8               	btfss	status,0,c
  4175  0005E0  D01C               	goto	l2763
  4176                           
  4177                           ;osc.c: 69: {
  4178                           ;osc.c: 70: OSCTUNE = 0;
  4179  0005E2  0E00               	movlw	0
  4180  0005E4  6E9B               	movwf	3995,c	;volatile
  4181                           
  4182                           ;osc.c: 71: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4183  0005E6  0E19               	movlw	25
  4184  0005E8                     u1607:
  4185  0005E8  2EE8               	decfsz	wreg,f,c
  4186  0005EA  D7FE               	goto	u1607
  4187                           
  4188                           ;osc.c: 72: leds_glitch((0x08));
  4189  0005EC  0E08               	movlw	8
  4190  0005EE  EC43  F005         	call	_leds_glitch
  4191                           
  4192                           ;osc.c: 73: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4193  0005F2  0E52               	movlw	82
  4194  0005F4  6E13               	movwf	??_calibration& (0+255),c
  4195  0005F6  0E2A               	movlw	42
  4196  0005F8                     u1617:
  4197  0005F8  2EE8               	decfsz	wreg,f,c
  4198  0005FA  D7FE               	goto	u1617
  4199  0005FC  2E13               	decfsz	??_calibration& (0+255),f,c
  4200  0005FE  D7FC               	goto	u1617
  4201                           
  4202                           ;osc.c: 74: leds_glitch((0x08));
  4203  000600  0E08               	movlw	8
  4204  000602  EC43  F005         	call	_leds_glitch
  4205                           
  4206                           ;osc.c: 75: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4207  000606  0E52               	movlw	82
  4208  000608  6E13               	movwf	??_calibration& (0+255),c
  4209  00060A  0E2A               	movlw	42
  4210  00060C                     u1627:
  4211  00060C  2EE8               	decfsz	wreg,f,c
  4212  00060E  D7FE               	goto	u1627
  4213  000610  2E13               	decfsz	??_calibration& (0+255),f,c
  4214  000612  D7FC               	goto	u1627
  4215                           
  4216                           ;osc.c: 76: leds_glitch((0x08));
  4217  000614  0E08               	movlw	8
  4218  000616  EC43  F005         	call	_leds_glitch
  4219  00061A                     l2763:
  4220                           
  4221                           ;osc.c: 77: }
  4222                           ;osc.c: 80: T1CON = 0;
  4223  00061A  0E00               	movlw	0
  4224  00061C  6ECD               	movwf	4045,c	;volatile
  4225  00061E  0012               	return	
  4226  000620                     __end_of_calibration:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           prodh	equ	0xFF4
  4233                           prodl	equ	0xFF3
  4234                           intcon	equ	0xFF2
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           indf1	equ	0xFE7
  4238                           postdec1	equ	0xFE5
  4239                           fsr1h	equ	0xFE2
  4240                           fsr1l	equ	0xFE1
  4241                           indf2	equ	0xFDF
  4242                           postinc2	equ	0xFDE
  4243                           postdec2	equ	0xFDD
  4244                           fsr2h	equ	0xFDA
  4245                           fsr2l	equ	0xFD9
  4246                           status	equ	0xFD8
  4247                           
  4248 ;; *************** function _leds_glitch *****************
  4249 ;; Defined at:
  4250 ;;		line 17 in file "leds.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  leds            1    wreg     unsigned char 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  leds            1   17[COMRAM] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;		None               void
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4264 ;;      Params:         0       0       0       0
  4265 ;;      Locals:         1       0       0       0
  4266 ;;      Temps:          1       0       0       0
  4267 ;;      Totals:         2       0       0       0
  4268 ;;Total ram usage:        2 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_main_loop
  4275 ;;		_zb_handle
  4276 ;;		_hyt221_launch_acq
  4277 ;;		_hyt221_operation
  4278 ;;		_calibration
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text30
  4283  000A86                     __ptext30:
  4284                           	opt stack 0
  4285  000A86                     _leds_glitch:
  4286                           	opt stack 26
  4287                           
  4288                           ;incstack = 0
  4289                           ;leds_glitch@leds stored from wreg
  4290  000A86  6E12               	movwf	leds_glitch@leds,c
  4291                           
  4292                           ;leds.c: 19: LATA |= leds;
  4293  000A88  5012               	movf	leds_glitch@leds,w,c
  4294  000A8A  1289               	iorwf	3977,f,c	;volatile
  4295                           
  4296                           ;leds.c: 20: _delay((unsigned long)((100)*((1000000)/4000.0)));
  4297  000A8C  0E21               	movlw	33
  4298  000A8E  6E11               	movwf	??_leds_glitch& (0+255),c
  4299  000A90  0E76               	movlw	118
  4300  000A92                     u1637:
  4301  000A92  2EE8               	decfsz	wreg,f,c
  4302  000A94  D7FE               	goto	u1637
  4303  000A96  2E11               	decfsz	??_leds_glitch& (0+255),f,c
  4304  000A98  D7FC               	goto	u1637
  4305  000A9A  D000               	nop2	
  4306                           
  4307                           ;leds.c: 21: LATA &= ~leds;
  4308  000A9C  5012               	movf	leds_glitch@leds,w,c
  4309  000A9E  0AFF               	xorlw	255
  4310  000AA0  1689               	andwf	3977,f,c	;volatile
  4311  000AA2  0012               	return	
  4312  000AA4                     __end_of_leds_glitch:
  4313                           	opt stack 0
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodh	equ	0xFF4
  4319                           prodl	equ	0xFF3
  4320                           intcon	equ	0xFF2
  4321                           postinc0	equ	0xFEE
  4322                           wreg	equ	0xFE8
  4323                           indf1	equ	0xFE7
  4324                           postdec1	equ	0xFE5
  4325                           fsr1h	equ	0xFE2
  4326                           fsr1l	equ	0xFE1
  4327                           indf2	equ	0xFDF
  4328                           postinc2	equ	0xFDE
  4329                           postdec2	equ	0xFDD
  4330                           fsr2h	equ	0xFDA
  4331                           fsr2l	equ	0xFD9
  4332                           status	equ	0xFD8
  4333                           
  4334 ;; *************** function _isr_hi *****************
  4335 ;; Defined at:
  4336 ;;		line 17 in file "interrupt.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  dummy           1   15[COMRAM] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;		None               void
  4343 ;; Registers used:
  4344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4350 ;;      Params:         0       0       0       0
  4351 ;;      Locals:         1       0       0       0
  4352 ;;      Temps:         15       0       0       0
  4353 ;;      Totals:        16       0       0       0
  4354 ;;Total ram usage:       16 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		Interrupt level 2
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	intcode
  4364  000008                     __pintcode:
  4365                           	opt stack 0
  4366  000008                     _isr_hi:
  4367                           	opt stack 25
  4368                           
  4369                           ;incstack = 0
  4370  000008  CFFA F002          	movff	pclath,??_isr_hi+1
  4371  00000C  CFFB F003          	movff	pclatu,??_isr_hi+2
  4372  000010  CFE9 F004          	movff	fsr0l,??_isr_hi+3
  4373  000014  ED9E  F001         	call	int_func,f	;refresh shadow registers
  4374                           pclatu	equ	0xFFB
  4375                           pclath	equ	0xFFA
  4376                           tblptru	equ	0xFF8
  4377                           tblptrh	equ	0xFF7
  4378                           tblptrl	equ	0xFF6
  4379                           tablat	equ	0xFF5
  4380                           prodh	equ	0xFF4
  4381                           prodl	equ	0xFF3
  4382                           intcon	equ	0xFF2
  4383                           postinc0	equ	0xFEE
  4384                           fsr0l	equ	0xFE9
  4385                           wreg	equ	0xFE8
  4386                           indf1	equ	0xFE7
  4387                           postdec1	equ	0xFE5
  4388                           fsr1h	equ	0xFE2
  4389                           fsr1l	equ	0xFE1
  4390                           indf2	equ	0xFDF
  4391                           postinc2	equ	0xFDE
  4392                           postdec2	equ	0xFDD
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397                           	psect	intcode_body
  4398  00033C                     __pintcode_body:
  4399                           	opt stack 25
  4400  00033C                     int_func:
  4401                           	opt stack 25
  4402  00033C  0006               	pop		; remove dummy address from shadow register refresh
  4403  00033E  CFEA F005          	movff	fsr0h,??_isr_hi+4
  4404  000342  CFE1 F006          	movff	fsr1l,??_isr_hi+5
  4405  000346  CFE2 F007          	movff	fsr1h,??_isr_hi+6
  4406  00034A  CFD9 F008          	movff	fsr2l,??_isr_hi+7
  4407  00034E  CFDA F009          	movff	fsr2h,??_isr_hi+8
  4408  000352  CFF3 F00A          	movff	prodl,??_isr_hi+9
  4409  000356  CFF4 F00B          	movff	prodh,??_isr_hi+10
  4410  00035A  CFF6 F00C          	movff	tblptrl,??_isr_hi+11
  4411  00035E  CFF7 F00D          	movff	tblptrh,??_isr_hi+12
  4412  000362  CFF8 F00E          	movff	tblptru,??_isr_hi+13
  4413  000366  CFF5 F00F          	movff	tablat,??_isr_hi+14
  4414                           
  4415                           ;interrupt.c: 20: if (PIE1bits.SSPIE & PIR1bits.SSPIF)
  4416  00036A  0E01               	movlw	1
  4417  00036C  A69D               	btfss	3997,3,c	;volatile
  4418  00036E  0E00               	movlw	0
  4419  000370  A69E               	btfss	3998,3,c	;volatile
  4420  000372  0E00               	movlw	0
  4421  000374  A0E8               	btfss	wreg,0,c
  4422  000376  D003               	goto	i2u98_40
  4423  000378  6A01               	clrf	??_isr_hi& (0+255),c
  4424  00037A  2A01               	incf	??_isr_hi& (0+255),f,c
  4425  00037C  D001               	goto	i2u98_48
  4426  00037E                     i2u98_40:
  4427  00037E  6A01               	clrf	??_isr_hi& (0+255),c
  4428  000380                     i2u98_48:
  4429  000380  5001               	movf	??_isr_hi,w,c
  4430  000382  B4D8               	btfsc	status,2,c
  4431  000384  D004               	goto	i2l2267
  4432                           
  4433                           ;interrupt.c: 21: {
  4434                           ;interrupt.c: 22: PIR1bits.SSPIF = 0;
  4435  000386  969E               	bcf	3998,3,c	;volatile
  4436                           
  4437                           ;interrupt.c: 23: i2c_interupt_done = TRUE;
  4438  000388  0E01               	movlw	1
  4439  00038A  6E45               	movwf	_i2c_interupt_done,c
  4440  00038C  D059               	goto	i2l421
  4441  00038E                     i2l2267:
  4442                           
  4443                           ;interrupt.c: 25: }
  4444                           ;interrupt.c: 28: if (INTCONbits.TMR0IE & INTCONbits.TMR0IF)
  4445  00038E  0E01               	movlw	1
  4446  000390  AAF2               	btfss	intcon,5,c	;volatile
  4447  000392  0E00               	movlw	0
  4448  000394  A4F2               	btfss	intcon,2,c	;volatile
  4449  000396  0E00               	movlw	0
  4450  000398  A0E8               	btfss	wreg,0,c
  4451  00039A  D003               	goto	i2u100_40
  4452  00039C  6A01               	clrf	??_isr_hi& (0+255),c
  4453  00039E  2A01               	incf	??_isr_hi& (0+255),f,c
  4454  0003A0  D001               	goto	i2u100_48
  4455  0003A2                     i2u100_40:
  4456  0003A2  6A01               	clrf	??_isr_hi& (0+255),c
  4457  0003A4                     i2u100_48:
  4458  0003A4  5001               	movf	??_isr_hi,w,c
  4459  0003A6  B4D8               	btfsc	status,2,c
  4460  0003A8  D004               	goto	i2l2275
  4461                           
  4462                           ;interrupt.c: 29: {
  4463                           ;interrupt.c: 30: timer0_interupt_done = TRUE;
  4464  0003AA  0E01               	movlw	1
  4465  0003AC  6E47               	movwf	_timer0_interupt_done,c
  4466                           
  4467                           ;interrupt.c: 49: INTCONbits.TMR0IF = 0;
  4468  0003AE  94F2               	bcf	intcon,2,c	;volatile
  4469  0003B0  D047               	goto	i2l421
  4470  0003B2                     i2l2275:
  4471                           
  4472                           ;interrupt.c: 51: }
  4473                           ;interrupt.c: 54: if (PIE1bits.ADIE & PIR1bits.ADIF)
  4474  0003B2  0E01               	movlw	1
  4475  0003B4  AC9D               	btfss	3997,6,c	;volatile
  4476  0003B6  0E00               	movlw	0
  4477  0003B8  AC9E               	btfss	3998,6,c	;volatile
  4478  0003BA  0E00               	movlw	0
  4479  0003BC  A0E8               	btfss	wreg,0,c
  4480  0003BE  D003               	goto	i2u102_40
  4481  0003C0  6A01               	clrf	??_isr_hi& (0+255),c
  4482  0003C2  2A01               	incf	??_isr_hi& (0+255),f,c
  4483  0003C4  D001               	goto	i2u102_48
  4484  0003C6                     i2u102_40:
  4485  0003C6  6A01               	clrf	??_isr_hi& (0+255),c
  4486  0003C8                     i2u102_48:
  4487  0003C8  5001               	movf	??_isr_hi,w,c
  4488  0003CA  B4D8               	btfsc	status,2,c
  4489  0003CC  D002               	goto	i2l2279
  4490                           
  4491                           ;interrupt.c: 55: {
  4492                           ;interrupt.c: 56: PIR1bits.ADIF = 0;
  4493  0003CE  9C9E               	bcf	3998,6,c	;volatile
  4494                           
  4495                           ;interrupt.c: 57: return;
  4496  0003D0  D037               	goto	i2l421
  4497  0003D2                     i2l2279:
  4498                           
  4499                           ;interrupt.c: 58: }
  4500                           ;interrupt.c: 61: if (PIE1bits.RC1IE & PIR1bits.RCIF)
  4501  0003D2  0E01               	movlw	1
  4502  0003D4  AA9D               	btfss	3997,5,c	;volatile
  4503  0003D6  0E00               	movlw	0
  4504  0003D8  AA9E               	btfss	3998,5,c	;volatile
  4505  0003DA  0E00               	movlw	0
  4506  0003DC  A0E8               	btfss	wreg,0,c
  4507  0003DE  D003               	goto	i2u104_40
  4508  0003E0  6A01               	clrf	??_isr_hi& (0+255),c
  4509  0003E2  2A01               	incf	??_isr_hi& (0+255),f,c
  4510  0003E4  D001               	goto	i2u104_48
  4511  0003E6                     i2u104_40:
  4512  0003E6  6A01               	clrf	??_isr_hi& (0+255),c
  4513  0003E8                     i2u104_48:
  4514  0003E8  5001               	movf	??_isr_hi,w,c
  4515  0003EA  B4D8               	btfsc	status,2,c
  4516  0003EC  D029               	goto	i2l421
  4517                           
  4518                           ;interrupt.c: 62: {
  4519                           ;interrupt.c: 63: uint8_t dummy;
  4520                           ;interrupt.c: 67: if (RCSTAbits.FERR)
  4521  0003EE  A4AB               	btfss	4011,2,c	;volatile
  4522  0003F0  D005               	goto	i2l425
  4523                           
  4524                           ;interrupt.c: 68: {
  4525                           ;interrupt.c: 70: UART_errorStatus.framingError++;
  4526  0003F2  2A39               	incf	_UART_errorStatus,f,c
  4527                           
  4528                           ;interrupt.c: 72: dummy = RCREG;
  4529  0003F4  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4530  0003F8  00FF               	reset		;# 
  4531                           
  4532                           ;interrupt.c: 74: }
  4533  0003FA  D022               	goto	i2l421
  4534  0003FC                     i2l425:
  4535                           
  4536                           ;interrupt.c: 75: else if (RCSTAbits.OERR)
  4537  0003FC  A2AB               	btfss	4011,1,c	;volatile
  4538  0003FE  D005               	goto	i2l2293
  4539                           
  4540                           ;interrupt.c: 76: {
  4541                           ;interrupt.c: 78: UART_errorStatus.overrunError++;
  4542  000400  2A3A               	incf	_UART_errorStatus+1,f,c
  4543                           
  4544                           ;interrupt.c: 79: dummy = RCREG;
  4545  000402  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4546                           
  4547                           ;interrupt.c: 81: RCSTAbits.CREN = 0;
  4548  000406  98AB               	bcf	4011,4,c	;volatile
  4549                           
  4550                           ;interrupt.c: 82: }
  4551  000408  D01B               	goto	i2l421
  4552  00040A                     i2l2293:
  4553                           
  4554                           ;interrupt.c: 83: else if (UART_rxBufferNb < (50))
  4555  00040A  0E32               	movlw	50
  4556  00040C  5C42               	subwf	_UART_rxBufferNb,w,c
  4557  00040E  B0D8               	btfsc	status,0,c
  4558  000410  D014               	goto	i2l2305
  4559                           
  4560                           ;interrupt.c: 84: {
  4561                           ;interrupt.c: 85: UART_rxBuffer[UART_writeIndex] = RCREG;
  4562  000412  5043               	movf	_UART_writeIndex,w,c
  4563  000414  0D01               	mullw	1
  4564  000416  0100               	movlb	0	; () banked
  4565  000418  0E80               	movlw	low _UART_rxBuffer
  4566  00041A  24F3               	addwf	prodl,w,c
  4567  00041C  6ED9               	movwf	fsr2l,c
  4568  00041E  0100               	movlb	0	; () banked
  4569  000420  0E00               	movlw	high _UART_rxBuffer
  4570  000422  20F4               	addwfc	prodh,w,c
  4571  000424  6EDA               	movwf	fsr2h,c
  4572  000426  CFAE FFDF          	movff	4014,indf2	;volatile
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;interrupt.c: 86: UART_writeIndex++;
  4576  00042A  2A43               	incf	_UART_writeIndex,f,c
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;interrupt.c: 87: if (UART_writeIndex >= (50))
  4580  00042C  0E31               	movlw	49
  4581  00042E  6443               	cpfsgt	_UART_writeIndex,c
  4582  000430  D002               	goto	i2l2303
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;interrupt.c: 88: {
  4586                           ;interrupt.c: 89: UART_writeIndex = 0;
  4587  000432  0E00               	movlw	0
  4588  000434  6E43               	movwf	_UART_writeIndex,c
  4589  000436                     i2l2303:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;interrupt.c: 90: }
  4593                           ;interrupt.c: 91: UART_rxBufferNb++;
  4594  000436  2A42               	incf	_UART_rxBufferNb,f,c
  4595                           
  4596                           ;interrupt.c: 92: }
  4597  000438  D003               	goto	i2l421
  4598  00043A                     i2l2305:
  4599                           
  4600                           ;interrupt.c: 93: else
  4601                           ;interrupt.c: 94: {
  4602                           ;interrupt.c: 96: UART_errorStatus.bufferOverrunError++;
  4603  00043A  2A3B               	incf	_UART_errorStatus+2,f,c
  4604                           
  4605                           ;interrupt.c: 97: dummy = RCREG;
  4606  00043C  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4607  000440                     i2l421:
  4608  000440  C00F  FFF5         	movff	??_isr_hi+14,tablat
  4609  000444  C00E  FFF8         	movff	??_isr_hi+13,tblptru
  4610  000448  C00D  FFF7         	movff	??_isr_hi+12,tblptrh
  4611  00044C  C00C  FFF6         	movff	??_isr_hi+11,tblptrl
  4612  000450  C00B  FFF4         	movff	??_isr_hi+10,prodh
  4613  000454  C00A  FFF3         	movff	??_isr_hi+9,prodl
  4614  000458  C009  FFDA         	movff	??_isr_hi+8,fsr2h
  4615  00045C  C008  FFD9         	movff	??_isr_hi+7,fsr2l
  4616  000460  C007  FFE2         	movff	??_isr_hi+6,fsr1h
  4617  000464  C006  FFE1         	movff	??_isr_hi+5,fsr1l
  4618  000468  C005  FFEA         	movff	??_isr_hi+4,fsr0h
  4619  00046C  C004  FFE9         	movff	??_isr_hi+3,fsr0l
  4620  000470  C003  FFFB         	movff	??_isr_hi+2,pclatu
  4621  000474  C002  FFFA         	movff	??_isr_hi+1,pclath
  4622  000478  0011               	retfie		f
  4623  00047A                     __end_of_isr_hi:
  4624                           	opt stack 0
  4625  0000                     pclatu	equ	0xFFB
  4626                           pclath	equ	0xFFA
  4627                           tblptru	equ	0xFF8
  4628                           tblptrh	equ	0xFF7
  4629                           tblptrl	equ	0xFF6
  4630                           tablat	equ	0xFF5
  4631                           prodh	equ	0xFF4
  4632                           prodl	equ	0xFF3
  4633                           intcon	equ	0xFF2
  4634                           postinc0	equ	0xFEE
  4635                           fsr0h	equ	0xFEA
  4636                           fsr0l	equ	0xFE9
  4637                           wreg	equ	0xFE8
  4638                           indf1	equ	0xFE7
  4639                           postdec1	equ	0xFE5
  4640                           fsr1h	equ	0xFE2
  4641                           fsr1l	equ	0xFE1
  4642                           indf2	equ	0xFDF
  4643                           postinc2	equ	0xFDE
  4644                           postdec2	equ	0xFDD
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8
  4648                           pclatu	equ	0xFFB
  4649                           pclath	equ	0xFFA
  4650                           tblptru	equ	0xFF8
  4651                           tblptrh	equ	0xFF7
  4652                           tblptrl	equ	0xFF6
  4653                           tablat	equ	0xFF5
  4654                           prodh	equ	0xFF4
  4655                           prodl	equ	0xFF3
  4656                           intcon	equ	0xFF2
  4657                           postinc0	equ	0xFEE
  4658                           fsr0h	equ	0xFEA
  4659                           fsr0l	equ	0xFE9
  4660                           wreg	equ	0xFE8
  4661                           indf1	equ	0xFE7
  4662                           postdec1	equ	0xFE5
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           indf2	equ	0xFDF
  4666                           postinc2	equ	0xFDE
  4667                           postdec2	equ	0xFDD
  4668                           fsr2h	equ	0xFDA
  4669                           fsr2l	equ	0xFD9
  4670                           status	equ	0xFD8
  4671                           
  4672                           	psect	rparam
  4673  0000                     pclatu	equ	0xFFB
  4674                           pclath	equ	0xFFA
  4675                           tblptru	equ	0xFF8
  4676                           tblptrh	equ	0xFF7
  4677                           tblptrl	equ	0xFF6
  4678                           tablat	equ	0xFF5
  4679                           prodh	equ	0xFF4
  4680                           prodl	equ	0xFF3
  4681                           intcon	equ	0xFF2
  4682                           postinc0	equ	0xFEE
  4683                           fsr0h	equ	0xFEA
  4684                           fsr0l	equ	0xFE9
  4685                           wreg	equ	0xFE8
  4686                           indf1	equ	0xFE7
  4687                           postdec1	equ	0xFE5
  4688                           fsr1h	equ	0xFE2
  4689                           fsr1l	equ	0xFE1
  4690                           indf2	equ	0xFDF
  4691                           postinc2	equ	0xFDE
  4692                           postdec2	equ	0xFDD
  4693                           fsr2h	equ	0xFDA
  4694                           fsr2l	equ	0xFD9
  4695                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43     111
    BANK0           128      5     105
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zigbee_appendChecksum@sizeFrame	PTR unsigned char  size(2) Largest target is 1
		 -> zb_handle_sendData@frameSize(COMRAM[1]), 

    zigbee_appendChecksum@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    S1401$data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame	PTR struct . size(2) Largest target is 9
		 -> zb_handle@decodedFrame(COMRAM[8]), 

    zb_decodage@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    zb_doChecksum@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), zb_frameToSend(COMRAM[33]), 

    uart_read@buffer	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_read@b	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_write@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    uart_write@b	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 


Critical Paths under _main in COMRAM

    _main_loop->_zb_handle
    _zb_handle_waitAck->_zb_handle
    _zb_handle->_zb_decodage
    _zb_decodage->_zb_doChecksum
    _zb_handle_setTempRaw->_hyt221_getTemp
    _zb_handle_setHumidityRaw->_hyt221_getHumidity
    _zb_handle_sendData->_zigbee_appendChecksum
    _zigbee_appendChecksum->_zb_doChecksum
    _hyt221_operation->_leds_glitch
    _hyt221_launch_acq->_leds_glitch
    _i2c_trig_start->_i2c_wait_idle
    _batt_launch_acq->_zb_handle_setbatVolt
    _calibration->_leds_glitch

Critical Paths under _isr_hi in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_zb_handle_waitAck

Critical Paths under _isr_hi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_hi in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_hi in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7467
                        _calibration
                          _i2c_setup
                          _main_loop
                         _uart_setup
 ---------------------------------------------------------------------------------
 (1) _uart_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                            3     3      0    7204
                                              2 BANK0      3     3      0
                    _batt_launch_acq
                 _hyt221_getHumidity
                     _hyt221_getTemp
                  _hyt221_launch_acq
                   _hyt221_operation
                        _leds_glitch
                  _timer0_wait_262ms
                   _timer0_wait_65ms
                          _zb_handle
                _zb_handle_getStatus
              _zb_handle_resetStatus
                 _zb_handle_sendData
           _zb_handle_setHumidityRaw
               _zb_handle_setTempRaw
                  _zb_handle_waitAck
 ---------------------------------------------------------------------------------
 (2) _zb_handle_waitAck                                    2     2      0    2734
                                              0 BANK0      2     2      0
                  _timer0_wait_262ms
                          _zb_handle
 ---------------------------------------------------------------------------------
 (3) _zb_handle                                           11    11      0    2629
                                             32 COMRAM    11    11      0
                        _leds_glitch
                          _uart_read
                        _zb_decodage
 ---------------------------------------------------------------------------------
 (4) _zb_decodage                                         11     6      5    1601
                                             21 COMRAM    11     6      5
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (4) _uart_read                                            7     4      3     495
                                             16 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (3) _timer0_wait_262ms                                    0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setTempRaw                                 2     0      2      77
                                             22 COMRAM     2     0      2
                     _hyt221_getTemp (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setHumidityRaw                             2     0      2      77
                                             20 COMRAM     2     0      2
                 _hyt221_getHumidity (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_sendData                                   4     4      0    1020
                                             28 COMRAM     4     4      0
                         _uart_write
              _zigbee_appendChecksum
 ---------------------------------------------------------------------------------
 (3) _zigbee_appendChecksum                                7     3      4     774
                                             21 COMRAM     7     3      4
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (5) _zb_doChecksum                                        5     2      3     427
                                             16 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _uart_write                                           6     4      2     169
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _zb_handle_resetStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _zb_handle_getStatus                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer0_wait_65ms                                     0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (4) _timer0_wait_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _hyt221_operation                                     2     2      0     232
                                             18 COMRAM     2     2      0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (2) _hyt221_launch_acq                                    0     0      0      62
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_stop                                        0     0      0       0
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_start                                       0     0      0       0
                      _i2c_wait_idle
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_idle                                        1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_getTemp                                       6     4      2      46
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _hyt221_getHumidity                                   4     2      2      23
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _batt_launch_acq                                      2     2      0      75
                                             18 COMRAM     2     2      0
               _zb_handle_setbatVolt
 ---------------------------------------------------------------------------------
 (3) _zb_handle_setbatVolt                                 2     0      2      75
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration                                          3     3      0     263
                                             18 COMRAM     3     3      0
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (4) _leds_glitch                                          2     2      0      62
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr_hi                                              16    16      0       3
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration
     _leds_glitch
   _i2c_setup
   _main_loop
     _batt_launch_acq
       _zb_handle_setbatVolt
     _hyt221_getHumidity
     _hyt221_getTemp
     _hyt221_launch_acq
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_glitch
     _hyt221_operation
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_glitch
     _leds_glitch
     _timer0_wait_262ms
       _timer0_wait_ready
     _timer0_wait_65ms
       _timer0_wait_ready
     _zb_handle
       _leds_glitch
       _uart_read
       _zb_decodage
         _zb_doChecksum
     _zb_handle_getStatus
     _zb_handle_resetStatus
     _zb_handle_sendData
       _uart_write
       _zigbee_appendChecksum
         _zb_doChecksum
     _zb_handle_setHumidityRaw
       _hyt221_getHumidity (ARG)
     _zb_handle_setTempRaw
       _hyt221_getTemp (ARG)
     _zb_handle_waitAck
       _timer0_wait_262ms
         _timer0_wait_ready
       _zb_handle
         _leds_glitch
         _uart_read
         _zb_decodage
           _zb_doChecksum
   _uart_setup

 _isr_hi (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      5      69       5       82.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8       3        0.0%
DATA                 0      0      D8      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Sep 10 20:35:06 2016

            __size_of_i2c_trig_start 000C                          _SSPSTATbits 000FC7  
                     uart_write@size 0015                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                                l121 02E8                                  l136 086A  
                                l137 0868                                  l235 0900  
                                l236 08FE                                  l324 04D2  
                                l344 0558                                  l257 006A  
                                l450 05CE                                  l375 0A00  
                                l386 0686                                  l379 06B2  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                prod 000FF3                                  wreg 000FE8  
        __end_of_zb_handle_getStatus 0B3C           __end_of_zb_handle_sendData 0740  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               l2401 01D0                                 l2331 0AD0  
                               l2315 09B8                                 l2405 0ABE  
                               l2319 09CE                                 l2431 04FE  
                               l2423 04CE                                 l2337 0ADC  
                               l2601 067A                                 l2353 0782  
                               l2345 0756                                 l2363 0798  
                               l2443 0526                                 l2427 04F6  
                               l2605 0688                                 l2613 0694  
                               l2357 0788                                 l2437 0512  
                               l2375 0066                                 l2711 094C  
                               l2703 0932                                 l2537 09F4  
                               l2625 06B0                                 l2393 0172  
                               l2449 0536                                 l2731 0586  
                               l2491 090A                                 l2395 01AC  
                               l2387 0130                                 l2379 0086  
                               l2707 093A                                 l2717 0564  
                               l2389 0152                                 l2805 0274  
                               l2583 0642                                 l2487 08E8  
                               l2399 01B2                                 l2807 027C  
                               l2729 0584                                 l2585 0648  
                               l2825 02A8                                 l2763 061A  
                               l2747 05D8                                 l2739 05AE  
                               l2659 06C2                                 l2835 02E0  
                               l2819 0298                                 l2773 0200  
                               l2847 02F6                                 l2783 021A  
                               l2697 0924                                 l2849 0312  
                               l2865 032C                                 l2769 01F2  
                               l2787 0220                                 l2789 0232  
                               l2799 0262                         ?_leds_glitch 0001  
                   uart_write@buffer 0011                                 _LATA 000F89  
                               u1607 05E8                                 u1617 05F8  
                               u1627 060C                        __CFG_DEBUG$ON 000000  
                               u1637 0A92                                 u1567 082A  
                               u1577 095C                                 u1587 056E  
                               u1597 05C8                                 _TMR0 000FD6  
            ??_zigbee_appendChecksum 001A                                 _main 07FA  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 0018  
                      __CFG_IESO$OFF 000000              ??_zb_handle_resetStatus 0011  
                      __CFG_MCLRE$ON 000000                    ??_batt_launch_acq 0013  
                      _i2c_wait_idle 0ADC                                ?_main 0001  
               __size_of_calibration 00C6                                _T0CON 000FD5  
                              _T1CON 000FCD                                i2l421 0440  
                              i2l425 03FC                                _RCREG 000FAE  
                              _RCSTA 000FAB                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _SPBRG 000FAF  
                              _PORTA 000F80                                _TRISA 000F92  
                              _TRISC 000F94                                _TXREG 000FAD  
                              _TXSTA 000FAC                        __CFG_PWRT$OFF 000000  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                                _gData 0035  
                      _i2c_trig_stop 0B30                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                tablat 000FF5  
                              status 000FD8  hyt221_operation@bDeviceDataAreStale 0013  
                zb_decodage@checksum 001F                       __CFG_PBADEN$ON 000000  
                  _wait_join_counter 0048                      _UART_rxBufferNb 0042  
                    __initialization 0896                         __end_of_main 084E  
                     ?_i2c_wait_idle 0001                               ??_main 002C  
                      __activetblptr 000002         __end_of_zb_handle_setTempRaw 0AFA  
                     ?_i2c_trig_stop 0001                       _i2c_wait_ready 0ACA  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0         __end_of_zb_handle_setbatVolt 0B24  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
          __size_of_hyt221_operation 0094                               i2l2303 0436  
                             i2l2305 043A                               i2l2275 03B2  
                             i2l2267 038E                               i2l2293 040A  
                             i2l2279 03D2                               _OSCCON 000FD3  
                             _SPBRGH 000FB0                               _SSPADD 000FC8  
                 __size_of_i2c_setup 0030                               _SSPBUF 000FC9  
              hyt221_operation@index 0014                     _UART_errorStatus 0039  
                   _timer0_wait_65ms 0A46                       __CFG_XINST$OFF 000000  
                     _i2c_trig_start 0B24                         ?_zb_decodage 0016  
                             _calibr 0044                       __CFG_STVREN$ON 000000  
                   ??_hyt221_getTemp 0013                               clear_0 089C  
                             clear_1 08A8                               _isr_hi 0008  
           _zb_handle_setHumidityRaw 0AFA               __end_of_i2c_wait_ready 0ADC  
                    _UART_writeIndex 0043                         __pdataCOMRAM 004E  
                 zb_doChecksum@frame 0011                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0080              __end_of__initialization 08CE  
               __size_of_leds_glitch 001E                __end_of_zb_doChecksum 09DA  
             __end_of_i2c_trig_start 0B30                   _hyt221_getHumidity 0AA4  
                   zb_decodage@frame 0016                       __pcstackCOMRAM 0001  
                    ??_i2c_wait_idle 0011                 zb_decodage@frameSize 0018  
                ?_hyt221_getHumidity 0011                    __end_of_i2c_setup 0982  
                    ??_i2c_trig_stop 0011                         _batt_counter 003C  
                        isr_hi@dummy 0010                      ?_i2c_wait_ready 0001  
     hyt221_getHumidity@humidity_raw 0013        zb_handle_waitAck@retryCounter 00E4  
                         __pbssBANK0 0080                   __size_of_main_loop 0168  
               ??_hyt221_getHumidity 0013                      _batt_launch_acq 084E  
     __size_of_zigbee_appendChecksum 005A        __end_of_zigbee_appendChecksum 07FA  
                         _batt_value 003F                      ?_i2c_trig_start 0001  
                 _zb_handle_sendData 06B4                 _zb_handle_setTempRaw 0AEC  
     __size_of_zb_handle_resetStatus 000E        __end_of_zb_handle_resetStatus 0B16  
        zigbee_appendChecksum@buffer 0016                 _zb_handle_setbatVolt 0B16  
                ?_zb_handle_sendData 0001                              _BAUDCON 000FB8  
                            ?_isr_hi 0001                   __size_of_zb_handle 00E0  
                 __size_of_uart_read 0060                              _OSCTUNE 000F9B  
                            i2u98_40 037E                              i2u98_48 0380  
                            _SSPCON1 000FC6                              _SSPCON2 000FC5  
                            _SSPSTAT 000FC7                     _hyt221_operation 0620  
               ??_zb_handle_sendData 001D                    _timer0_wait_262ms 0A24  
       __size_of_zb_handle_getStatus 0004                           _main_state 0046  
                 ?_timer0_wait_262ms 0001                ?_zb_handle_setTempRaw 0017  
                            __Hparam 0000                              __Lparam 0000  
                ??_timer0_wait_262ms 0011                ?_zb_handle_setbatVolt 0011  
                  _timer0_wait_ready 0AB8                        ??_calibration 0013  
                  __end_of_main_loop 033C                 __size_of_zb_decodage 01B8  
                            __pcinit 0896                   ?_timer0_wait_ready 0001  
                            __ramtop 0300                      __size_of_isr_hi 0472  
                            __ptext0 07FA                              __ptext1 0A68  
                            __ptext2 01D4                              __ptext3 0916  
                            __ptext4 047A                              __ptext5 001C  
                            __ptext6 0740                              __ptext7 0A24  
                            __ptext8 0AEC                              __ptext9 0AFA  
                          _T0CONbits 000FD5             __end_of_timer0_wait_65ms 0A68  
                ??_timer0_wait_ready 0011              __end_of_batt_launch_acq 0896  
          __end_of_timer0_wait_262ms 0A46                       __pintcode_body 033C  
               end_of_initialization 08CE                       zb_doChecksum@i 0015  
                      __Lmediumconst 0000                              int_func 033C  
                  __end_of_zb_handle 055A                    __end_of_uart_read 07A0  
          __end_of_timer0_wait_ready 0ACA           ??_zb_handle_setHumidityRaw 0017  
                          _RCSTAbits 000FAB                              postdec1 000FE5  
                            postdec2 000FDD                    zb_handle@bSuccess 0023  
                            postinc0 000FEE                              postinc2 000FDE  
                         _zb_frameID 004E                           _zb_counter 0049  
                         _uart_setup 0A68                           _uart_write 08D8  
                          _PORTBbits 000F81                            _PORTCbits 000F82  
                __end_of_calibration 0620                main_loop@bAckReceived 00E7  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                        uart_write@b 0013                          uart_write@i 0016  
             ??_zb_handle_setTempRaw 0019                            _TXSTAbits 000FAC  
             ??_zb_handle_setbatVolt 0013                     ??_i2c_wait_ready 0011  
                     _UART_readIndex 0041                        __pidataCOMRAM 0A02  
                     __end_of_isr_hi 047A                     _zb_frameReceived 00B2  
                start_initialization 0896                            _i2c_setup 0952  
         __size_of_timer0_wait_262ms 0022                     ?_batt_launch_acq 0001  
                      ??_leds_glitch 0011                     ??_i2c_trig_start 0012  
                       calibration@w 0015                     __CFG_OSC$INTIO67 000000  
         __size_of_timer0_wait_ready 0012             __end_of_hyt221_operation 06B4  
              __end_of_i2c_wait_idle 0AEC                          _calibration 055A  
                   __CFG_LPT1OSC$OFF 000000                             ??_isr_hi 0001  
                        ?_uart_setup 0001                    zb_doChecksum@size 0013  
                        ?_uart_write 0011                  _zb_handle_getStatus 0B38  
                        __pbssCOMRAM 002C                __end_of_i2c_trig_stop 0B38  
             __size_of_zb_doChecksum 002A                        __pcstackBANK0 00E4  
            __size_of_hyt221_getTemp 002E                           ?_i2c_setup 0001  
                     _zb_frameToSend 004F                 ?_zb_handle_getStatus 0001  
        __size_of_hyt221_getHumidity 0014                  __end_of_leds_glitch 0AA4  
   __end_of_zb_handle_setHumidityRaw 0B08                _zigbee_appendChecksum 07A0  
                  __CFG_CCP2MX$PORTC 000000                    _zb_handle_waitAck 0916  
                          __pintcode 0008                   ?_zb_handle_waitAck 0001  
              _zb_handle_resetStatus 0B08      zb_handle_setbatVolt@battVoltage 0011  
                  _hyt221_launch_acq 09DA              uart_read@expectedNbRead 0016  
                ??_zb_handle_waitAck 002C                            _main_loop 01D4  
                  _zb_currentFrameID 004B                   ?_hyt221_launch_acq 0001  
                  ?_timer0_wait_65ms 0001                   ??_timer0_wait_65ms 0011  
        __size_of_zb_handle_sendData 008C                  ??_hyt221_launch_acq 0013  
              ??_zb_handle_getStatus 0011                  __size_of_uart_setup 001E  
                           _LATAbits 000F89                             _LATBbits 000F8A  
                           _LATCbits 000F8B                  __size_of_uart_write 003E  
                           _PIE1bits 000F9D            __end_of_zb_handle_waitAck 0952  
                      _zb_doChecksum 09B0                             i2u100_40 03A2  
                           i2u100_48 03A4                             i2u102_40 03C6  
                           i2u102_48 03C8                             i2u104_40 03E6  
                           i2u104_48 03E8                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                        ??_zb_decodage 001B  
                   __CFG_WDTPS$16384 000000                            _zb_handle 047A  
                          _uart_read 0740                      uart_read@buffer 0011  
                         uart_read@b 0014                           uart_read@i 0017  
          __end_of_hyt221_launch_acq 0A02                            _zb_status 004D  
                         ?_main_loop 0001                          ??_i2c_setup 0011  
                          copy_data0 08C2                          _leds_glitch 0A86  
              calibration@tryCounter 0014                        _UART_rxBuffer 0080  
                     ?_zb_doChecksum 0011               ?_zigbee_appendChecksum 0016  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000       zigbee_appendChecksum@sizeFrame 0018  
                         ?_zb_handle 0001                zb_handle@decodedFrame 0024  
                         ?_uart_read 0011                zb_doChecksum@checksum 0014  
             ?_zb_handle_resetStatus 0001  zb_handle_setHumidityRaw@humidityRaw 0015  
                __end_of_zb_decodage 01D4                       _hyt221_getTemp 0982  
  __size_of_zb_handle_setHumidityRaw 000E            ?_zb_handle_setHumidityRaw 0015  
                           __ptext10 06B4                             __ptext11 07A0  
                           __ptext20 0B30                             __ptext12 09B0  
                           __ptext21 0B24                             __ptext13 08D8  
                           __ptext30 0A86                             __ptext22 0ACA  
                           __ptext14 0B08                             __ptext23 0ADC  
                           __ptext15 0B38                             __ptext24 0982  
                           __ptext16 0A46                             __ptext25 0AA4  
                           __ptext17 0AB8                             __ptext26 084E  
                           __ptext18 0620                             __ptext27 0B16  
                           __ptext19 09DA                             __ptext28 0952  
                           __ptext29 055A                        __size_of_main 0054  
                      _zb_currentAck 004A           __size_of_zb_handle_waitAck 003C  
       zb_decodage@bCorrectlyDecoded 0020               main_loop@hyt221_status 00E8  
      __size_of_zb_handle_setTempRaw 000E          zb_handle_sendData@frameSize 0020  
                 main_loop@zb_status 00E6                             _zb_state 004C  
      __size_of_zb_handle_setbatVolt 000E                         ?_calibration 0001  
         __size_of_hyt221_launch_acq 0028                    ?_hyt221_operation 0001  
                       ??_uart_setup 0011                         ??_uart_write 0013  
                 ??_hyt221_operation 0013               __end_of_hyt221_getTemp 09B0  
                        ??_main_loop 002C                           _INTCONbits 000FF2  
                           intlevel2 0000                 _timer0_interupt_done 0047  
                    ??_zb_doChecksum 0014                   __end_of_uart_setup 0A86  
                 __end_of_uart_write 0916             __size_of_batt_launch_acq 0048  
      zb_handle_waitAck@bAckReceived 00E5                           _OSCCONbits 000FD3  
                        ??_zb_handle 0021                          ??_uart_read 0014  
                        _zb_decodage 001C          zb_handle_setTempRaw@tempRaw 0017  
            zb_handle@sizeOfNextData 0021                      leds_glitch@leds 0012  
                    ?_hyt221_getTemp 0011                          _sensor_data 002C  
                  uart_read@nbToRead 0013              __size_of_i2c_wait_ready 0012  
                        _SSPCON2bits 000FC5                    _i2c_interupt_done 0045  
                         _WDTCONbits 000FD1           __end_of_hyt221_getHumidity 0AB8  
             __size_of_i2c_wait_idle 0010            __size_of_timer0_wait_65ms 0022  
            zb_decodage@decodedFrame 0019               hyt221_getTemp@temp_raw 0015  
             __size_of_i2c_trig_stop 0008  
