

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Aug 15 20:57:45 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataCOMRAM
    52  0009F4                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _zb_frameID
    56  0009F4  01                 	db	1
    57                           
    58                           ;initializer for _zb_frameToSend
    59  0009F5  7E                 	db	126
    60  0009F6  00                 	db	0
    61  0009F7  04                 	db	4
    62  0009F8  10                 	db	16
    63  0009F9  02                 	db	2
    64  0009FA  00                 	db	0
    65  0009FB  00                 	db	0
    66  0009FC  00                 	db	0
    67  0009FD  00                 	db	0
    68  0009FE  00                 	db	0
    69  0009FF  00                 	db	0
    70  000A00  00                 	db	0
    71  000A01  00                 	db	0
    72  000A02  FF                 	db	255
    73  000A03  FE                 	db	254
    74  000A04  00                 	db	0
    75  000A05  00                 	db	0
    76  000A06  00                 	db	0
    77  000A07  00                 	db	0
    78  000A08  03                 	db	3
    79  000A09  01                 	db	1
    80  000A0A  00                 	db	0
    81  000A0B  00                 	db	0
    82  000A0C  00                 	db	0
    83  000A0D  02                 	db	2
    84  000A0E  00                 	db	0
    85  000A0F  00                 	db	0
    86  000A10  00                 	db	0
    87  000A11  03                 	db	3
    88  000A12  00                 	db	0
    89  000A13  00                 	db	0
    90  000A14  00                 	db	0
    91  000A15  00                 	db	0
    92  0000                     _TMR0	set	4054
    93  0000                     _ADCON0	set	4034
    94  0000                     _ADCON1	set	4033
    95  0000                     _ADCON2	set	4032
    96  0000                     _ADRESH	set	4036
    97  0000                     _ADRESL	set	4035
    98  0000                     _BAUDCON	set	4024
    99  0000                     _INTCONbits	set	4082
   100  0000                     _LATA	set	3977
   101  0000                     _LATAbits	set	3977
   102  0000                     _LATBbits	set	3978
   103  0000                     _LATCbits	set	3979
   104  0000                     _OSCCON	set	4051
   105  0000                     _OSCCONbits	set	4051
   106  0000                     _OSCTUNE	set	3995
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PIR2bits	set	4001
   110  0000                     _PORTA	set	3968
   111  0000                     _PORTBbits	set	3969
   112  0000                     _PORTCbits	set	3970
   113  0000                     _RCREG	set	4014
   114  0000                     _RCSTA	set	4011
   115  0000                     _RCSTAbits	set	4011
   116  0000                     _SPBRG	set	4015
   117  0000                     _SPBRGH	set	4016
   118  0000                     _SSPADD	set	4040
   119  0000                     _SSPBUF	set	4041
   120  0000                     _SSPCON1	set	4038
   121  0000                     _SSPCON2	set	4037
   122  0000                     _SSPCON2bits	set	4037
   123  0000                     _SSPSTAT	set	4039
   124  0000                     _SSPSTATbits	set	4039
   125  0000                     _T0CON	set	4053
   126  0000                     _T0CONbits	set	4053
   127  0000                     _T1CON	set	4045
   128  0000                     _TMR1H	set	4047
   129  0000                     _TMR1L	set	4046
   130  0000                     _TRISA	set	3986
   131  0000                     _TRISBbits	set	3987
   132  0000                     _TRISC	set	3988
   133  0000                     _TRISCbits	set	3988
   134  0000                     _TXREG	set	4013
   135  0000                     _TXSTA	set	4012
   136  0000                     _TXSTAbits	set	4012
   137  0000                     _WDTCONbits	set	4049
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  00085A                     __pcinit:
   143                           	opt stack 0
   144  00085A                     start_initialization:
   145                           	opt stack 0
   146  00085A                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK0 (100 bytes)
   150  00085A  EE00  F080         	lfsr	0,__pbssBANK0
   151  00085E  0E64               	movlw	100
   152  000860                     clear_0:
   153  000860  6AEE               	clrf	postinc0,c
   154  000862  06E8               	decf	wreg,f,c
   155  000864  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to COMRAM (34 bytes)
   158  000866  EE00  F02C         	lfsr	0,__pbssCOMRAM
   159  00086A  0E22               	movlw	34
   160  00086C                     clear_1:
   161  00086C  6AEE               	clrf	postinc0,c
   162  00086E  06E8               	decf	wreg,f,c
   163  000870  E1FD               	bnz	clear_1
   164                           
   165                           ; Initialize objects allocated to COMRAM (34 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  000872  0EF4               	movlw	low __pidataCOMRAM
   168  000874  6EF6               	movwf	tblptrl,c
   169  000876  0E09               	movlw	high __pidataCOMRAM
   170  000878  6EF7               	movwf	tblptrh,c
   171  00087A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  00087C  6EF8               	movwf	tblptru,c
   173  00087E  EE00  F04E         	lfsr	0,__pdataCOMRAM
   174  000882  EE10 F022          	lfsr	1,34
   175  000886                     copy_data0:
   176  000886  0009               	tblrd		*+
   177  000888  CFF5 FFEE          	movff	tablat,postinc0
   178  00088C  50E5               	movf	postdec1,w,c
   179  00088E  50E1               	movf	fsr1l,w,c
   180  000890  E1FA               	bnz	copy_data0
   181  000892                     end_of_initialization:
   182                           	opt stack 0
   183  000892                     __end_of__initialization:
   184                           	opt stack 0
   185  000892  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  000894  6EF8               	movwf	tblptru,c
   187  000896  0100               	movlb	0
   188  000898  EFE2  F003         	goto	_main	;jump to C main() function
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           postdec1	equ	0xFE5
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	bssCOMRAM
   199  00002C                     __pbssCOMRAM:
   200                           	opt stack 0
   201  00002C                     _sensor_data:
   202                           	opt stack 0
   203  00002C                     	ds	9
   204  000035                     _gData:
   205                           	opt stack 0
   206  000035                     	ds	4
   207  000039                     _UART_errorStatus:
   208                           	opt stack 0
   209  000039                     	ds	3
   210  00003C                     _batt_counter:
   211                           	opt stack 0
   212  00003C                     	ds	3
   213  00003F                     _batt_value:
   214                           	opt stack 0
   215  00003F                     	ds	2
   216  000041                     _UART_readIndex:
   217                           	opt stack 0
   218  000041                     	ds	1
   219  000042                     _UART_rxBufferNb:
   220                           	opt stack 0
   221  000042                     	ds	1
   222  000043                     _UART_writeIndex:
   223                           	opt stack 0
   224  000043                     	ds	1
   225  000044                     _calibr:
   226                           	opt stack 0
   227  000044                     	ds	1
   228  000045                     _i2c_interupt_done:
   229                           	opt stack 0
   230  000045                     	ds	1
   231  000046                     _main_state:
   232                           	opt stack 0
   233  000046                     	ds	1
   234  000047                     _timer0_interupt_done:
   235                           	opt stack 0
   236  000047                     	ds	1
   237  000048                     _wait_join_counter:
   238                           	opt stack 0
   239  000048                     	ds	1
   240  000049                     _zb_counter:
   241                           	opt stack 0
   242  000049                     	ds	1
   243  00004A                     _zb_currentAck:
   244                           	opt stack 0
   245  00004A                     	ds	1
   246  00004B                     _zb_currentFrameID:
   247                           	opt stack 0
   248  00004B                     	ds	1
   249  00004C                     _zb_state:
   250                           	opt stack 0
   251  00004C                     	ds	1
   252  00004D                     _zb_status:
   253                           	opt stack 0
   254  00004D                     	ds	1
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           postdec1	equ	0xFE5
   262                           fsr1l	equ	0xFE1
   263                           
   264                           	psect	dataCOMRAM
   265  00004E                     __pdataCOMRAM:
   266                           	opt stack 0
   267  00004E                     _zb_frameID:
   268                           	opt stack 0
   269  00004E                     	ds	1
   270  00004F                     _zb_frameToSend:
   271                           	opt stack 0
   272  00004F                     	ds	33
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bssBANK0
   283  000080                     __pbssBANK0:
   284                           	opt stack 0
   285  000080                     _UART_rxBuffer:
   286                           	opt stack 0
   287  000080                     	ds	50
   288  0000B2                     _zb_frameReceived:
   289                           	opt stack 0
   290  0000B2                     	ds	50
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	cstackBANK0
   301  0000E4                     __pcstackBANK0:
   302                           	opt stack 0
   303  0000E4                     zb_handle_waitAck@waitCounter:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x0
   307  0000E4                     	ds	1
   308  0000E5                     zb_handle_waitAck@bAckReceived:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x1
   312  0000E5                     	ds	1
   313  0000E6                     main_loop@zb_status:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x2
   317  0000E6                     	ds	1
   318  0000E7                     main_loop@hyt221_status:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x3
   322  0000E7                     	ds	1
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	cstackCOMRAM
   333  000001                     __pcstackCOMRAM:
   334                           	opt stack 0
   335  000001                     ??_isr_hi:
   336  000001                     
   337                           ; 2 bytes @ 0x0
   338  000001                     	ds	15
   339  000010                     isr_hi@dummy:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0xF
   343  000010                     	ds	1
   344  000011                     ??_leds_green_glitch:
   345  000011                     ??_leds_yellow_glitch:
   346  000011                     ??_leds_red_glitch:
   347  000011                     ??_leds_red_and_yellow_glitch:
   348  000011                     ??_i2c_wait_idle:
   349  000011                     ?_hyt221_getTemp:
   350                           	opt stack 0
   351  000011                     ?_hyt221_getHumidity:
   352                           	opt stack 0
   353  000011                     uart_write@buffer:
   354                           	opt stack 0
   355  000011                     uart_read@buffer:
   356                           	opt stack 0
   357  000011                     zb_doChecksum@frame:
   358                           	opt stack 0
   359  000011                     zb_handle_setbatVolt@battVoltage:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x10
   363  000011                     	ds	1
   364  000012                     ??_calibration:
   365  000012                     ??_hyt221_operation:
   366  000012                     
   367                           ; 0 bytes @ 0x11
   368  000012                     	ds	1
   369  000013                     ??_batt_launch_acq:
   370  000013                     ??_hyt221_getTemp:
   371  000013                     uart_read@nbToRead:
   372                           	opt stack 0
   373  000013                     zb_doChecksum@size:
   374                           	opt stack 0
   375  000013                     calibration@tryCounter:
   376                           	opt stack 0
   377  000013                     uart_write@b:
   378                           	opt stack 0
   379  000013                     hyt221_getHumidity@humidity_raw:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x12
   383  000013                     	ds	1
   384  000014                     zb_doChecksum@checksum:
   385                           	opt stack 0
   386  000014                     hyt221_operation@bDeviceDataAreStale:
   387                           	opt stack 0
   388  000014                     calibration@w:
   389                           	opt stack 0
   390  000014                     uart_read@b:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x13
   394  000014                     	ds	1
   395  000015                     uart_write@size:
   396                           	opt stack 0
   397  000015                     zb_doChecksum@i:
   398                           	opt stack 0
   399  000015                     hyt221_operation@index:
   400                           	opt stack 0
   401  000015                     zb_handle_setHumidityRaw@humidityRaw:
   402                           	opt stack 0
   403  000015                     hyt221_getTemp@temp_raw:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x14
   407  000015                     	ds	1
   408  000016                     uart_write@i:
   409                           	opt stack 0
   410  000016                     uart_read@expectedNbRead:
   411                           	opt stack 0
   412  000016                     zb_decodage@frame:
   413                           	opt stack 0
   414  000016                     zigbee_appendChecksum@buffer:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x15
   418  000016                     	ds	1
   419  000017                     uart_read@i:
   420                           	opt stack 0
   421  000017                     zb_handle_setTempRaw@tempRaw:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x16
   425  000017                     	ds	1
   426  000018                     zb_decodage@frameSize:
   427                           	opt stack 0
   428  000018                     zigbee_appendChecksum@sizeFrame:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x17
   432  000018                     	ds	1
   433  000019                     zb_decodage@decodedFrame:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x18
   437  000019                     	ds	1
   438  00001A                     ??_zigbee_appendChecksum:
   439                           
   440                           ; 0 bytes @ 0x19
   441  00001A                     	ds	1
   442  00001B                     ??_zb_decodage:
   443                           
   444                           ; 0 bytes @ 0x1A
   445  00001B                     	ds	2
   446  00001D                     ??_zb_handle_sendData:
   447                           
   448                           ; 0 bytes @ 0x1C
   449  00001D                     	ds	2
   450  00001F                     zb_decodage@checksum:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x1E
   454  00001F                     	ds	1
   455  000020                     zb_decodage@bCorrectlyDecoded:
   456                           	opt stack 0
   457  000020                     zb_handle_sendData@frameSize:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x1F
   461  000020                     	ds	1
   462  000021                     zb_handle@sizeOfNextData:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x20
   466  000021                     	ds	2
   467  000023                     zb_handle@bSuccess:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x22
   471  000023                     	ds	1
   472  000024                     zb_handle@decodedFrame:
   473                           	opt stack 0
   474                           
   475                           ; 8 bytes @ 0x23
   476  000024                     	ds	8
   477  00002C                     tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           ; 0 bytes @ 0x2B
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 38 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  2   98[COMRAM] int 
   499 ;; Registers used:
   500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   506 ;;      Params:         0       0       0       0
   507 ;;      Locals:         0       0       0       0
   508 ;;      Temps:          0       0       0       0
   509 ;;      Totals:         0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels required when called:    6
   512 ;; This function calls:
   513 ;;		_calibration
   514 ;;		_i2c_setup
   515 ;;		_main_loop
   516 ;;		_uart_setup
   517 ;; This function is called by:
   518 ;;		Startup code after reset
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text0
   523  0007C4                     __ptext0:
   524                           	opt stack 0
   525  0007C4                     _main:
   526                           	opt stack 25
   527                           
   528                           ;main.c: 40: OSCTUNE = 0x00;
   529                           
   530                           ;incstack = 0
   531  0007C4  0E00               	movlw	0
   532  0007C6  6E9B               	movwf	3995,c	;volatile
   533                           
   534                           ;main.c: 42: OSCCON = 0x40;
   535  0007C8  0E40               	movlw	64
   536  0007CA  6ED3               	movwf	4051,c	;volatile
   537                           
   538                           ;main.c: 45: PORTA = 0x0;
   539  0007CC  0E00               	movlw	0
   540  0007CE  6E80               	movwf	3968,c	;volatile
   541                           
   542                           ;main.c: 46: TRISA = 0x0;
   543  0007D0  0E00               	movlw	0
   544  0007D2  6E92               	movwf	3986,c	;volatile
   545                           
   546                           ;main.c: 49: TRISBbits.RB0 = 0;
   547  0007D4  9093               	bcf	3987,0,c	;volatile
   548                           
   549                           ;main.c: 50: PORTBbits.RB0 = 0;
   550  0007D6  9081               	bcf	3969,0,c	;volatile
   551                           
   552                           ;main.c: 51: TRISBbits.RB3 = 0;
   553  0007D8  9693               	bcf	3987,3,c	;volatile
   554                           
   555                           ;main.c: 52: PORTBbits.RB3 = 0;
   556  0007DA  9681               	bcf	3969,3,c	;volatile
   557                           
   558                           ;main.c: 53: TRISBbits.RB4 = 0;
   559  0007DC  9893               	bcf	3987,4,c	;volatile
   560                           
   561                           ;main.c: 54: PORTBbits.RB4 = 0;
   562  0007DE  9881               	bcf	3969,4,c	;volatile
   563                           
   564                           ;main.c: 55: TRISCbits.RC2 = 0;
   565  0007E0  9494               	bcf	3988,2,c	;volatile
   566                           
   567                           ;main.c: 56: PORTCbits.RC2 = 0;
   568  0007E2  9482               	bcf	3970,2,c	;volatile
   569                           
   570                           ;main.c: 57: TRISCbits.RC5 = 0;
   571  0007E4  9A94               	bcf	3988,5,c	;volatile
   572                           
   573                           ;main.c: 58: PORTCbits.RC5 = 0;
   574  0007E6  9A82               	bcf	3970,5,c	;volatile
   575                           
   576                           ;main.c: 61: PORTBbits.RB1 = 0;
   577  0007E8  9281               	bcf	3969,1,c	;volatile
   578                           
   579                           ;main.c: 62: TRISBbits.RB1 = 0;
   580  0007EA  9293               	bcf	3987,1,c	;volatile
   581                           
   582                           ;main.c: 63: TRISBbits.RB2 = 1;
   583  0007EC  8493               	bsf	3987,2,c	;volatile
   584                           
   585                           ;main.c: 64: PIR1bits.ADIF = 0;
   586  0007EE  9C9E               	bcf	3998,6,c	;volatile
   587                           
   588                           ;main.c: 65: PIE1bits.ADIE = 1;
   589  0007F0  8C9D               	bsf	3997,6,c	;volatile
   590                           
   591                           ;main.c: 67: _delay((unsigned long)((5)*((1000000)/4000.0)));
   592  0007F2  0EFA               	movlw	250
   593  0007F4                     u1407:
   594  0007F4  D000               	nop2	
   595  0007F6  2EE8               	decfsz	wreg,f,c
   596  0007F8  D7FD               	goto	u1407
   597                           
   598                           ;main.c: 69: calibration();
   599  0007FA  EC91  F002         	call	_calibration	;wreg free
   600                           
   601                           ;main.c: 74: i2c_setup();
   602  0007FE  ECA8  F004         	call	_i2c_setup	;wreg free
   603                           
   604                           ;main.c: 75: uart_setup();
   605  000802  EC2D  F005         	call	_uart_setup	;wreg free
   606                           
   607                           ;main.c: 77: INTCONbits.PEIE = 1;
   608  000806  8CF2               	bsf	intcon,6,c	;volatile
   609                           
   610                           ;main.c: 78: INTCONbits.GIE = 1;
   611  000808  8EF2               	bsf	intcon,7,c	;volatile
   612                           
   613                           ;main.c: 80: (LATAbits.LA1 = 0);
   614  00080A  9289               	bcf	3977,1,c	;volatile
   615                           
   616                           ;main.c: 81: (LATAbits.LA1 = 1);
   617  00080C  8289               	bsf	3977,1,c	;volatile
   618                           
   619                           ;main.c: 83: main_loop();
   620  00080E  EC89  F001         	call	_main_loop	;wreg free
   621  000812  EF0C  F000         	goto	start
   622  000816                     __end_of_main:
   623                           	opt stack 0
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           intcon	equ	0xFF2
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1l	equ	0xFE1
   633                           
   634 ;; *************** function _uart_setup *****************
   635 ;; Defined at:
   636 ;;		line 11 in file "uart.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;		None               void
   643 ;; Registers used:
   644 ;;		wreg, status,2
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   650 ;;      Params:         0       0       0       0
   651 ;;      Locals:         0       0       0       0
   652 ;;      Temps:          0       0       0       0
   653 ;;      Totals:         0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text1
   665  000A5A                     __ptext1:
   666                           	opt stack 0
   667  000A5A                     _uart_setup:
   668                           	opt stack 29
   669                           
   670                           ;uart.c: 14: TRISCbits.RC7 = 1;
   671                           
   672                           ;incstack = 0
   673  000A5A  8E94               	bsf	3988,7,c	;volatile
   674                           
   675                           ;uart.c: 15: TRISCbits.RC6 = 1;
   676  000A5C  8C94               	bsf	3988,6,c	;volatile
   677                           
   678                           ;uart.c: 17: TXSTA = 0x24;
   679  000A5E  0E24               	movlw	36
   680  000A60  6EAC               	movwf	4012,c	;volatile
   681                           
   682                           ;uart.c: 18: RCSTA = 0x90;
   683  000A62  0E90               	movlw	144
   684  000A64  6EAB               	movwf	4011,c	;volatile
   685                           
   686                           ;uart.c: 19: BAUDCON = 0x48;
   687  000A66  0E48               	movlw	72
   688  000A68  6EB8               	movwf	4024,c	;volatile
   689                           
   690                           ;uart.c: 20: SPBRGH = 0;
   691  000A6A  0E00               	movlw	0
   692  000A6C  6EB0               	movwf	4016,c	;volatile
   693                           
   694                           ;uart.c: 21: SPBRG = 12;
   695  000A6E  0E0C               	movlw	12
   696  000A70  6EAF               	movwf	4015,c	;volatile
   697                           
   698                           ;uart.c: 23: PIR1bits.RCIF = 0;
   699  000A72  9A9E               	bcf	3998,5,c	;volatile
   700                           
   701                           ;uart.c: 24: PIE1bits.RCIE = 1;
   702  000A74  8A9D               	bsf	3997,5,c	;volatile
   703  000A76  0012               	return	
   704  000A78                     __end_of_uart_setup:
   705                           	opt stack 0
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           intcon	equ	0xFF2
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           postdec1	equ	0xFE5
   714                           fsr1l	equ	0xFE1
   715                           
   716 ;; *************** function _main_loop *****************
   717 ;; Defined at:
   718 ;;		line 86 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  hyt221_statu    1    3[BANK0 ] enum E3779
   723 ;;  zb_status       1    2[BANK0 ] enum E3761
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   733 ;;      Params:         0       0       0       0
   734 ;;      Locals:         0       2       0       0
   735 ;;      Temps:          0       0       0       0
   736 ;;      Totals:         0       2       0       0
   737 ;;Total ram usage:        2 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    5
   740 ;; This function calls:
   741 ;;		_batt_launch_acq
   742 ;;		_hyt221_getHumidity
   743 ;;		_hyt221_getTemp
   744 ;;		_hyt221_launch_acq
   745 ;;		_hyt221_operation
   746 ;;		_leds_green_glitch
   747 ;;		_leds_red_glitch
   748 ;;		_leds_yellow_glitch
   749 ;;		_timer0_wait_262ms
   750 ;;		_timer0_wait_65ms
   751 ;;		_zb_handle
   752 ;;		_zb_handle_getStatus
   753 ;;		_zb_handle_resetStatus
   754 ;;		_zb_handle_sendData
   755 ;;		_zb_handle_setHumidityRaw
   756 ;;		_zb_handle_setTempRaw
   757 ;;		_zb_handle_waitAck
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text2
   764  000312                     __ptext2:
   765                           	opt stack 0
   766  000312                     _main_loop:
   767                           	opt stack 25
   768                           
   769                           ;main.c: 88: zb_statusT zb_status;
   770                           ;main.c: 89: STATUS_T hyt221_status;
   771                           ;main.c: 91: batt_counter = (60);
   772                           
   773                           ;incstack = 0
   774  000312  0E3C               	movlw	60
   775  000314  6E3C               	movwf	_batt_counter,c
   776  000316  0E00               	movlw	0
   777  000318  6E3D               	movwf	_batt_counter+1,c
   778  00031A  0E00               	movlw	0
   779  00031C  6E3E               	movwf	_batt_counter+2,c
   780                           
   781                           ;main.c: 92: wait_join_counter = 0;
   782  00031E  0E00               	movlw	0
   783  000320  6E48               	movwf	_wait_join_counter,c
   784                           
   785                           ;main.c: 93: zb_state = NOT_JOINED;
   786  000322  0E00               	movlw	0
   787  000324  6E4C               	movwf	_zb_state,c
   788                           
   789                           ;main.c: 94: main_state = LAUNCH_ACQ;
   790  000326  0E00               	movlw	0
   791  000328  6E46               	movwf	_main_state,c
   792                           
   793                           ;main.c: 96: leds_green_glitch();
   794  00032A  EC54  F005         	call	_leds_green_glitch	;wreg free
   795  00032E                     l2629:
   796                           
   797                           ;main.c: 99: {
   798                           ;main.c: 100: zb_handle();
   799  00032E  EC25  F002         	call	_zb_handle	;wreg free
   800                           
   801                           ;main.c: 101: zb_status = zb_handle_getStatus();
   802  000332  ECAA  F005         	call	_zb_handle_getStatus	;wreg free
   803  000336  0100               	movlb	0	; () banked
   804  000338  6FE6               	movwf	main_loop@zb_status& (0+255),b
   805                           
   806                           ;main.c: 102: switch (zb_status)
   807  00033A  D012               	goto	l2649
   808  00033C                     l2633:
   809                           
   810                           ; BSR set to: 0
   811                           ;main.c: 105: zb_state = NOT_JOINED;
   812  00033C  0E00               	movlw	0
   813  00033E  6E4C               	movwf	_zb_state,c
   814                           
   815                           ; BSR set to: 0
   816                           ;main.c: 106: leds_yellow_glitch();
   817  000340  EC49  F005         	call	_leds_yellow_glitch	;wreg free
   818                           
   819                           ;main.c: 107: timer0_wait_262ms();
   820  000344  EC0B  F005         	call	_timer0_wait_262ms	;wreg free
   821                           
   822                           ;main.c: 108: timer0_wait_262ms();
   823  000348  EC0B  F005         	call	_timer0_wait_262ms	;wreg free
   824                           
   825                           ;main.c: 109: break;
   826  00034C  D076               	goto	l2703
   827  00034E                     l2641:
   828                           
   829                           ;main.c: 112: zb_state = JOINED;
   830  00034E  0E01               	movlw	1
   831  000350  6E4C               	movwf	_zb_state,c
   832                           
   833                           ;main.c: 113: break;
   834  000352  D073               	goto	l2703
   835  000354                     l2643:
   836                           
   837                           ;main.c: 117: zb_state = NOT_JOINED;
   838  000354  0E00               	movlw	0
   839  000356  6E4C               	movwf	_zb_state,c
   840                           
   841                           ;main.c: 118: leds_red_glitch();
   842  000358  EC5F  F005         	call	_leds_red_glitch	;wreg free
   843  00035C  00FF               	reset		;# 
   844                           
   845                           ;main.c: 120: break;
   846  00035E  D06D               	goto	l2703
   847  000360                     l2649:
   848  000360  0100               	movlb	0	; () banked
   849  000362  51E6               	movf	main_loop@zb_status& (0+255),w,b
   850                           
   851                           ; Switch size 1, requested type "space"
   852                           ; Number of cases is 3, Range of values is 0 to 2
   853                           ; switch strategies available:
   854                           ; Name         Instructions Cycles
   855                           ; simple_byte           10     6 (average)
   856                           ;	Chosen strategy is simple_byte
   857  000364  0A00               	xorlw	0	; case 0
   858  000366  B4D8               	btfsc	status,2,c
   859  000368  D7E9               	goto	l2633
   860  00036A  0A01               	xorlw	1	; case 1
   861  00036C  B4D8               	btfsc	status,2,c
   862  00036E  D7EF               	goto	l2641
   863  000370  0A03               	xorlw	3	; case 2
   864  000372  D7F0               	goto	l2643
   865  000374                     l2651:
   866                           
   867                           ;main.c: 129: zb_handle_resetStatus();
   868  000374  EC92  F005         	call	_zb_handle_resetStatus	;wreg free
   869                           
   870                           ;main.c: 131: batt_counter++;
   871  000378  0E01               	movlw	1
   872  00037A  263C               	addwf	_batt_counter,f,c
   873  00037C  0E00               	movlw	0
   874  00037E  223D               	addwfc	_batt_counter+1,f,c
   875  000380  0E00               	movlw	0
   876  000382  223E               	addwfc	_batt_counter+2,f,c
   877                           
   878                           ;main.c: 132: if (!(batt_counter < (60)))
   879  000384  0E3C               	movlw	60
   880  000386  5C3C               	subwf	_batt_counter,w,c
   881  000388  0E00               	movlw	0
   882  00038A  583D               	subwfb	_batt_counter+1,w,c
   883  00038C  0E00               	movlw	0
   884  00038E  583E               	subwfb	_batt_counter+2,w,c
   885  000390  A0D8               	btfss	status,0,c
   886  000392  D008               	goto	l2661
   887                           
   888                           ;main.c: 133: {
   889                           ;main.c: 134: batt_counter = 0;
   890  000394  0E00               	movlw	0
   891  000396  6E3C               	movwf	_batt_counter,c
   892  000398  0E00               	movlw	0
   893  00039A  6E3D               	movwf	_batt_counter+1,c
   894  00039C  0E00               	movlw	0
   895  00039E  6E3E               	movwf	_batt_counter+2,c
   896                           
   897                           ;main.c: 135: batt_launch_acq();
   898  0003A0  EC0B  F004         	call	_batt_launch_acq	;wreg free
   899  0003A4                     l2661:
   900                           
   901                           ;main.c: 136: }
   902                           ;main.c: 138: hyt221_status = hyt221_launch_acq();
   903  0003A4  ECD5  F004         	call	_hyt221_launch_acq	;wreg free
   904  0003A8  0100               	movlb	0	; () banked
   905  0003AA  6FE7               	movwf	main_loop@hyt221_status& (0+255),b
   906                           
   907                           ; BSR set to: 0
   908                           ;main.c: 139: if (hyt221_status == STATUS_OK)
   909  0003AC  0100               	movlb	0	; () banked
   910  0003AE  67E7               	tstfsz	main_loop@hyt221_status& (0+255),b
   911  0003B0  D7BE               	goto	l2629
   912                           
   913                           ; BSR set to: 0
   914                           ;main.c: 140: {
   915                           ;main.c: 141: main_state = WAIT_HYT221_ACQ;
   916  0003B2  0E02               	movlw	2
   917  0003B4  D02C               	goto	L2
   918  0003B6                     l2667:
   919                           
   920                           ;main.c: 146: timer0_wait_65ms();
   921  0003B6  EC1C  F005         	call	_timer0_wait_65ms	;wreg free
   922                           
   923                           ;main.c: 147: hyt221_status = hyt221_operation();
   924  0003BA  ECF1  F002         	call	_hyt221_operation	;wreg free
   925  0003BE  0100               	movlb	0	; () banked
   926  0003C0  6FE7               	movwf	main_loop@hyt221_status& (0+255),b
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 148: if (hyt221_status == STATUS_OK)
   930  0003C2  0100               	movlb	0	; () banked
   931  0003C4  67E7               	tstfsz	main_loop@hyt221_status& (0+255),b
   932  0003C6  D018               	goto	l2685
   933                           
   934                           ; BSR set to: 0
   935                           ;main.c: 149: {
   936                           ;main.c: 150: (LATAbits.LATA0 = 0);
   937  0003C8  9089               	bcf	3977,0,c	;volatile
   938                           
   939                           ; BSR set to: 0
   940                           ;main.c: 152: zb_handle_setTempRaw(hyt221_getTemp());
   941  0003CA  EC4E  F004         	call	_hyt221_getTemp	;wreg free
   942  0003CE  C011  F017         	movff	?_hyt221_getTemp,zb_handle_setTempRaw@tempRaw
   943  0003D2  C012  F018         	movff	?_hyt221_getTemp+1,zb_handle_setTempRaw@tempRaw+1
   944  0003D6  EC84  F005         	call	_zb_handle_setTempRaw	;wreg free
   945                           
   946                           ;main.c: 153: zb_handle_setHumidityRaw(hyt221_getHumidity());
   947  0003DA  ECE8  F004         	call	_hyt221_getHumidity	;wreg free
   948  0003DE  C011  F015         	movff	?_hyt221_getHumidity,zb_handle_setHumidityRaw@humidityRaw
   949  0003E2  C012  F016         	movff	?_hyt221_getHumidity+1,zb_handle_setHumidityRaw@humidityRaw+1
   950  0003E6  EC8B  F005         	call	_zb_handle_setHumidityRaw	;wreg free
   951                           
   952                           ;main.c: 154: zb_handle_sendData();
   953  0003EA  EC3F  F003         	call	_zb_handle_sendData	;wreg free
   954                           
   955                           ;main.c: 155: zb_handle_waitAck();
   956  0003EE  EC8C  F004         	call	_zb_handle_waitAck	;wreg free
   957                           
   958                           ;main.c: 156: (LATAbits.LATA0 = 1);
   959  0003F2  8089               	bsf	3977,0,c	;volatile
   960                           
   961                           ;main.c: 157: main_state = SLEEP;
   962  0003F4  0E01               	movlw	1
   963  0003F6  D00B               	goto	L2
   964  0003F8                     l2685:
   965                           
   966                           ;main.c: 159: else if (hyt221_status == STATUS_ERROR)
   967  0003F8  0100               	movlb	0	; () banked
   968  0003FA  05E7               	decf	main_loop@hyt221_status& (0+255),w,b
   969  0003FC  A4D8               	btfss	status,2,c
   970  0003FE  D797               	goto	l2629
   971                           
   972                           ; BSR set to: 0
   973                           ;main.c: 160: {
   974                           ;main.c: 161: leds_red_glitch();
   975  000400  EC5F  F005         	call	_leds_red_glitch	;wreg free
   976  000404  D794               	goto	l2629
   977  000406                     l121:
   978  000406  80D1               	bsf	4049,0,c	;volatile
   979  000408  0003               	sleep		;# 
   980  00040A  90D1               	bcf	4049,0,c	;volatile
   981  00040C  D014               	goto	l127
   982  00040E                     L2:
   983  00040E  6E46               	movwf	_main_state,c
   984                           
   985                           ;main.c: 169: break;
   986  000410  D78E               	goto	l2629
   987  000412                     l2693:
   988  000412  5046               	movf	_main_state,w,c
   989                           
   990                           ; Switch size 1, requested type "space"
   991                           ; Number of cases is 3, Range of values is 0 to 2
   992                           ; switch strategies available:
   993                           ; Name         Instructions Cycles
   994                           ; simple_byte           10     6 (average)
   995                           ;	Chosen strategy is simple_byte
   996  000414  0A00               	xorlw	0	; case 0
   997  000416  B4D8               	btfsc	status,2,c
   998  000418  D7AD               	goto	l2651
   999  00041A  0A01               	xorlw	1	; case 1
  1000  00041C  B4D8               	btfsc	status,2,c
  1001  00041E  D7F3               	goto	l121
  1002  000420  0A03               	xorlw	3	; case 2
  1003  000422  B4D8               	btfsc	status,2,c
  1004  000424  D7C8               	goto	l2667
  1005  000426  D783               	goto	l2629
  1006  000428                     l2695:
  1007                           
  1008                           ;main.c: 179: wait_join_counter++;
  1009  000428  2A48               	incf	_wait_join_counter,f,c
  1010                           
  1011                           ;main.c: 180: if (wait_join_counter >= 50)
  1012  00042A  0E31               	movlw	49
  1013  00042C  6448               	cpfsgt	_wait_join_counter,c
  1014  00042E  D003               	goto	l127
  1015                           
  1016                           ;main.c: 181: {
  1017                           ;main.c: 182: wait_join_counter = 0;
  1018  000430  0E00               	movlw	0
  1019  000432  6E48               	movwf	_wait_join_counter,c
  1020  000434  00FF               	reset		;# 
  1021  000436                     l127:
  1022                           
  1023                           ;main.c: 184: }
  1024                           ;main.c: 185: main_state = LAUNCH_ACQ;
  1025  000436  0E00               	movlw	0
  1026  000438  D7EA               	goto	L2
  1027  00043A                     l2703:
  1028  00043A  504C               	movf	_zb_state,w,c
  1029                           
  1030                           ; Switch size 1, requested type "space"
  1031                           ; Number of cases is 2, Range of values is 0 to 1
  1032                           ; switch strategies available:
  1033                           ; Name         Instructions Cycles
  1034                           ; simple_byte            7     4 (average)
  1035                           ;	Chosen strategy is simple_byte
  1036  00043C  0A00               	xorlw	0	; case 0
  1037  00043E  B4D8               	btfsc	status,2,c
  1038  000440  D7F3               	goto	l2695
  1039  000442  0A01               	xorlw	1	; case 1
  1040  000444  B4D8               	btfsc	status,2,c
  1041  000446  D7E5               	goto	l2693
  1042  000448  D7EF               	goto	l2695
  1043  00044A                     __end_of_main_loop:
  1044                           	opt stack 0
  1045                           tblptru	equ	0xFF8
  1046                           tblptrh	equ	0xFF7
  1047                           tblptrl	equ	0xFF6
  1048                           tablat	equ	0xFF5
  1049                           intcon	equ	0xFF2
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec1	equ	0xFE5
  1053                           fsr1l	equ	0xFE1
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function _zb_handle_waitAck *****************
  1057 ;; Defined at:
  1058 ;;		line 265 in file "zb_handle.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  bAckReceived    1    1[BANK0 ] enum E3195
  1063 ;;  waitCounter     1    0[BANK0 ] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      enum E3083
  1066 ;; Registers used:
  1067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1073 ;;      Params:         0       0       0       0
  1074 ;;      Locals:         0       2       0       0
  1075 ;;      Temps:          0       0       0       0
  1076 ;;      Totals:         0       2       0       0
  1077 ;;Total ram usage:        2 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    4
  1080 ;; This function calls:
  1081 ;;		_timer0_wait_262ms
  1082 ;;		_zb_handle
  1083 ;; This function is called by:
  1084 ;;		_main_loop
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text3
  1089  000918                     __ptext3:
  1090                           	opt stack 0
  1091  000918                     _zb_handle_waitAck:
  1092                           	opt stack 25
  1093                           
  1094                           ;zb_handle.c: 267: uint8_t waitCounter;
  1095                           ;zb_handle.c: 268: BOOL bAckReceived;
  1096                           ;zb_handle.c: 270: bAckReceived = FALSE;
  1097                           
  1098                           ;incstack = 0
  1099  000918  0E00               	movlw	0
  1100  00091A  0100               	movlb	0	; () banked
  1101  00091C  6FE5               	movwf	zb_handle_waitAck@bAckReceived& (0+255),b
  1102                           
  1103                           ;zb_handle.c: 271: waitCounter = 0;
  1104  00091E  0E00               	movlw	0
  1105  000920  0100               	movlb	0	; () banked
  1106  000922  6FE4               	movwf	zb_handle_waitAck@waitCounter& (0+255),b
  1107                           
  1108                           ;zb_handle.c: 273: while ((waitCounter < 4) && (bAckReceived == FALSE))
  1109  000924  D00B               	goto	l2571
  1110  000926                     l2561:
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;zb_handle.c: 274: {
  1114                           ;zb_handle.c: 275: timer0_wait_262ms();
  1115  000926  EC0B  F005         	call	_timer0_wait_262ms	;wreg free
  1116                           
  1117                           ;zb_handle.c: 276: zb_handle();
  1118  00092A  EC25  F002         	call	_zb_handle	;wreg free
  1119                           
  1120                           ;zb_handle.c: 277: if (zb_currentAck == 0)
  1121  00092E  664A               	tstfsz	_zb_currentAck,c
  1122  000930  D003               	goto	l2569
  1123                           
  1124                           ;zb_handle.c: 278: {
  1125                           ;zb_handle.c: 279: bAckReceived = TRUE;
  1126  000932  0E01               	movlw	1
  1127  000934  0100               	movlb	0	; () banked
  1128  000936  6FE5               	movwf	zb_handle_waitAck@bAckReceived& (0+255),b
  1129  000938                     l2569:
  1130                           
  1131                           ;zb_handle.c: 281: }
  1132                           ;zb_handle.c: 283: waitCounter++;
  1133  000938  0100               	movlb	0	; () banked
  1134  00093A  2BE4               	incf	zb_handle_waitAck@waitCounter& (0+255),f,b
  1135  00093C                     l2571:
  1136                           
  1137                           ; BSR set to: 0
  1138  00093C  0E04               	movlw	4
  1139  00093E  0100               	movlb	0	; () banked
  1140  000940  5DE4               	subwf	zb_handle_waitAck@waitCounter& (0+255),w,b
  1141  000942  B0D8               	btfsc	status,0,c
  1142  000944  D004               	goto	l363
  1143                           
  1144                           ; BSR set to: 0
  1145  000946  0100               	movlb	0	; () banked
  1146  000948  51E5               	movf	zb_handle_waitAck@bAckReceived& (0+255),w,b
  1147  00094A  B4D8               	btfsc	status,2,c
  1148  00094C  D7EC               	goto	l2561
  1149  00094E                     l363:
  1150                           
  1151                           ; BSR set to: 0
  1152  00094E  0012               	return	
  1153  000950                     __end_of_zb_handle_waitAck:
  1154                           	opt stack 0
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           intcon	equ	0xFF2
  1160                           postinc0	equ	0xFEE
  1161                           wreg	equ	0xFE8
  1162                           postdec1	equ	0xFE5
  1163                           fsr1l	equ	0xFE1
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _zb_handle *****************
  1167 ;; Defined at:
  1168 ;;		line 158 in file "zb_handle.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  decodedFrame    8   35[COMRAM] struct .
  1173 ;;  sizeOfNextDa    2   32[COMRAM] unsigned int 
  1174 ;;  bSuccess        1   34[COMRAM] enum E3195
  1175 ;; Return value:  Size  Location     Type
  1176 ;;		None               void
  1177 ;; Registers used:
  1178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1184 ;;      Params:         0       0       0       0
  1185 ;;      Locals:        11       0       0       0
  1186 ;;      Temps:          0       0       0       0
  1187 ;;      Totals:        11       0       0       0
  1188 ;;Total ram usage:       11 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    3
  1191 ;; This function calls:
  1192 ;;		_uart_read
  1193 ;;		_zb_decodage
  1194 ;; This function is called by:
  1195 ;;		_main_loop
  1196 ;;		_zb_handle_waitAck
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text4
  1201  00044A                     __ptext4:
  1202                           	opt stack 0
  1203  00044A                     _zb_handle:
  1204                           	opt stack 25
  1205                           
  1206                           ;zb_handle.c: 160: BOOL bSuccess;
  1207                           ;zb_handle.c: 161: uint16_t sizeOfNextData;
  1208                           ;zb_handle.c: 162: zigbee_decodedFrame decodedFrame;
  1209                           ;zb_handle.c: 164: bSuccess = uart_read(zb_frameReceived, (3));
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;incstack = 0
  1213  00044A  0100               	movlb	0	; () banked
  1214  00044C  0E00               	movlw	high _zb_frameReceived
  1215  00044E  6E12               	movwf	uart_read@buffer+1,c
  1216  000450  0100               	movlb	0	; () banked
  1217  000452  0EB2               	movlw	low _zb_frameReceived
  1218  000454  6E11               	movwf	uart_read@buffer,c
  1219  000456  0E03               	movlw	3
  1220  000458  6E13               	movwf	uart_read@nbToRead,c
  1221  00045A  EC85  F003         	call	_uart_read	;wreg free
  1222  00045E  6E23               	movwf	zb_handle@bSuccess,c
  1223                           
  1224                           ;zb_handle.c: 165: if (bSuccess)
  1225  000460  5023               	movf	zb_handle@bSuccess,w,c
  1226  000462  B4D8               	btfsc	status,2,c
  1227  000464  D01E               	goto	l333
  1228                           
  1229                           ;zb_handle.c: 166: {
  1230                           ;zb_handle.c: 167: if (zb_frameReceived[0] == (0x7E))
  1231  000466  0100               	movlb	0	; () banked
  1232  000468  51B2               	movf	_zb_frameReceived& (0+255),w,b
  1233  00046A  0A7E               	xorlw	126
  1234  00046C  A4D8               	btfss	status,2,c
  1235  00046E  D017               	goto	l2257
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;zb_handle.c: 168: {
  1239                           ;zb_handle.c: 169: sizeOfNextData = (((uint16_t) zb_frameReceived[1]) << 8) | (zb_frameR
      +                          eceived[2]);
  1240  000470  0100               	movlb	0	; () banked
  1241  000472  51B3               	movf	(_zb_frameReceived+1)& (0+255),w,b
  1242  000474  6E22               	movwf	zb_handle@sizeOfNextData+1,c
  1243  000476  0100               	movlb	0	; () banked
  1244  000478  51B4               	movf	(_zb_frameReceived+2)& (0+255),w,b
  1245  00047A  6E21               	movwf	zb_handle@sizeOfNextData,c
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;zb_handle.c: 170: if (sizeOfNextData <= ((50) - (3)))
  1249  00047C  0E30               	movlw	48
  1250  00047E  5C21               	subwf	zb_handle@sizeOfNextData,w,c
  1251  000480  0E00               	movlw	0
  1252  000482  5822               	subwfb	zb_handle@sizeOfNextData+1,w,c
  1253  000484  B0D8               	btfsc	status,0,c
  1254  000486  D00B               	goto	l2257
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;zb_handle.c: 171: {
  1258                           ;zb_handle.c: 172: bSuccess = uart_read(zb_frameReceived + (3), sizeOfNextData + 1);
  1259  000488  0100               	movlb	0	; () banked
  1260  00048A  0E00               	movlw	high (_zb_frameReceived+3)
  1261  00048C  6E12               	movwf	uart_read@buffer+1,c
  1262  00048E  0100               	movlb	0	; () banked
  1263  000490  0EB5               	movlw	low (_zb_frameReceived+3)
  1264  000492  6E11               	movwf	uart_read@buffer,c
  1265  000494  2821               	incf	zb_handle@sizeOfNextData,w,c
  1266  000496  6E13               	movwf	uart_read@nbToRead,c
  1267  000498  EC85  F003         	call	_uart_read	;wreg free
  1268  00049C  D001               	goto	L6
  1269  00049E                     l2257:
  1270                           
  1271                           ;zb_handle.c: 179: else
  1272                           ;zb_handle.c: 180: {
  1273                           ;zb_handle.c: 181: bSuccess = FALSE;
  1274  00049E  0E00               	movlw	0
  1275  0004A0                     L6:
  1276  0004A0  6E23               	movwf	zb_handle@bSuccess,c
  1277  0004A2                     l333:
  1278                           
  1279                           ;zb_handle.c: 182: }
  1280                           ;zb_handle.c: 183: }
  1281                           ;zb_handle.c: 185: if (bSuccess)
  1282  0004A2  5023               	movf	zb_handle@bSuccess,w,c
  1283  0004A4  B4D8               	btfsc	status,2,c
  1284  0004A6  D00F               	goto	l2261
  1285                           
  1286                           ;zb_handle.c: 186: {
  1287                           ;zb_handle.c: 187: bSuccess = zb_decodage(zb_frameReceived + (3), sizeOfNextData + 1, &d
      +                          ecodedFrame);
  1288  0004A8  0100               	movlb	0	; () banked
  1289  0004AA  0E00               	movlw	high (_zb_frameReceived+3)
  1290  0004AC  6E17               	movwf	zb_decodage@frame+1,c
  1291  0004AE  0100               	movlb	0	; () banked
  1292  0004B0  0EB5               	movlw	low (_zb_frameReceived+3)
  1293  0004B2  6E16               	movwf	zb_decodage@frame,c
  1294  0004B4  2821               	incf	zb_handle@sizeOfNextData,w,c
  1295  0004B6  6E18               	movwf	zb_decodage@frameSize,c
  1296  0004B8  0E00               	movlw	high zb_handle@decodedFrame
  1297  0004BA  6E1A               	movwf	zb_decodage@decodedFrame+1,c
  1298  0004BC  0E24               	movlw	low zb_handle@decodedFrame
  1299  0004BE  6E19               	movwf	zb_decodage@decodedFrame,c
  1300  0004C0  EC0E  F000         	call	_zb_decodage	;wreg free
  1301  0004C4  6E23               	movwf	zb_handle@bSuccess,c
  1302  0004C6                     l2261:
  1303                           
  1304                           ;zb_handle.c: 188: }
  1305                           ;zb_handle.c: 190: if (bSuccess)
  1306  0004C6  5023               	movf	zb_handle@bSuccess,w,c
  1307  0004C8  A4D8               	btfss	status,2,c
  1308  0004CA  D019               	goto	l2281
  1309  0004CC  D029               	goto	l354
  1310  0004CE                     l2265:
  1311                           
  1312                           ;zb_handle.c: 204: if (decodedFrame.status == 0x02)
  1313  0004CE  5025               	movf	zb_handle@decodedFrame+1,w,c
  1314  0004D0  0A02               	xorlw	2
  1315  0004D2  A4D8               	btfss	status,2,c
  1316  0004D4  D002               	goto	l2269
  1317                           
  1318                           ;zb_handle.c: 205: {
  1319                           ;zb_handle.c: 206: zb_status = ZB_STATUS_JOINED;
  1320  0004D6  0E01               	movlw	1
  1321  0004D8  D008               	goto	L5
  1322  0004DA                     l2269:
  1323                           
  1324                           ;zb_handle.c: 209: else if (decodedFrame.status > 0x03)
  1325  0004DA  EE20  F025         	lfsr	2,zb_handle@decodedFrame+1
  1326  0004DE  0E03               	movlw	3
  1327  0004E0  64DF               	cpfsgt	indf2,c
  1328  0004E2  D002               	goto	l2273
  1329                           
  1330                           ;zb_handle.c: 210: {
  1331                           ;zb_handle.c: 211: zb_status = ZB_STATUS_IN_ERROR;
  1332  0004E4  0E02               	movlw	2
  1333  0004E6  D001               	goto	L5
  1334  0004E8                     l2273:
  1335                           
  1336                           ;zb_handle.c: 214: else
  1337                           ;zb_handle.c: 215: {
  1338                           ;zb_handle.c: 216: zb_status = ZB_STATUS_NOT_JOINED;
  1339  0004E8  0E00               	movlw	0
  1340  0004EA                     L5:
  1341  0004EA  6E4D               	movwf	_zb_status,c
  1342  0004EC  D019               	goto	l354
  1343  0004EE                     l2275:
  1344                           
  1345                           ;zb_handle.c: 222: if (zb_currentFrameID == decodedFrame.frameID)
  1346  0004EE  504B               	movf	_zb_currentFrameID,w,c
  1347  0004F0  EE20  F02B         	lfsr	2,zb_handle@decodedFrame+7
  1348  0004F4  62DF               	cpfseq	indf2,c
  1349  0004F6  D014               	goto	l354
  1350                           
  1351                           ;zb_handle.c: 223: {
  1352                           ;zb_handle.c: 224: zb_currentAck = decodedFrame.status;
  1353  0004F8  C025  F04A         	movff	zb_handle@decodedFrame+1,_zb_currentAck
  1354  0004FC  D011               	goto	l354
  1355  0004FE                     l2281:
  1356  0004FE  5024               	movf	zb_handle@decodedFrame,w,c
  1357                           
  1358                           ; Switch size 1, requested type "space"
  1359                           ; Number of cases is 6, Range of values is 8 to 144
  1360                           ; switch strategies available:
  1361                           ; Name         Instructions Cycles
  1362                           ; simple_byte           19    10 (average)
  1363                           ;	Chosen strategy is simple_byte
  1364  000500  0A08               	xorlw	8	; case 8
  1365  000502  B4D8               	btfsc	status,2,c
  1366  000504  D00D               	goto	l354
  1367  000506  0A18               	xorlw	24	; case 16
  1368  000508  B4D8               	btfsc	status,2,c
  1369  00050A  D00A               	goto	l354
  1370  00050C  0A98               	xorlw	152	; case 136
  1371  00050E  B4D8               	btfsc	status,2,c
  1372  000510  D007               	goto	l354
  1373  000512  0A02               	xorlw	2	; case 138
  1374  000514  B4D8               	btfsc	status,2,c
  1375  000516  D7DB               	goto	l2265
  1376  000518  0A01               	xorlw	1	; case 139
  1377  00051A  B4D8               	btfsc	status,2,c
  1378  00051C  D7E8               	goto	l2275
  1379  00051E  0A1B               	xorlw	27	; case 144
  1380  000520                     l354:
  1381  000520  0012               	return	
  1382  000522                     __end_of_zb_handle:
  1383                           	opt stack 0
  1384                           tblptru	equ	0xFF8
  1385                           tblptrh	equ	0xFF7
  1386                           tblptrl	equ	0xFF6
  1387                           tablat	equ	0xFF5
  1388                           intcon	equ	0xFF2
  1389                           postinc0	equ	0xFEE
  1390                           wreg	equ	0xFE8
  1391                           postdec1	equ	0xFE5
  1392                           fsr1l	equ	0xFE1
  1393                           indf2	equ	0xFDF
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _zb_decodage *****************
  1397 ;; Defined at:
  1398 ;;		line 22 in file "zb.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  frame           2   21[COMRAM] PTR unsigned char 
  1401 ;;		 -> zb_frameReceived(50), 
  1402 ;;  frameSize       1   23[COMRAM] unsigned char 
  1403 ;;  decodedFrame    2   24[COMRAM] PTR struct .
  1404 ;;		 -> zb_handle@decodedFrame(8), 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  bCorrectlyDe    1   31[COMRAM] enum E3083
  1407 ;;  checksum        1   30[COMRAM] unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      enum E3083
  1410 ;; Registers used:
  1411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1417 ;;      Params:         5       0       0       0
  1418 ;;      Locals:         2       0       0       0
  1419 ;;      Temps:          4       0       0       0
  1420 ;;      Totals:        11       0       0       0
  1421 ;;Total ram usage:       11 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    2
  1424 ;; This function calls:
  1425 ;;		_zb_doChecksum
  1426 ;; This function is called by:
  1427 ;;		_zb_handle
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text5
  1432  00001C                     __ptext5:
  1433                           	opt stack 0
  1434  00001C                     _zb_decodage:
  1435                           	opt stack 25
  1436                           
  1437                           ;zb.c: 24: BOOL bCorrectlyDecoded;
  1438                           ;zb.c: 25: uint8_t checksum;
  1439                           ;zb.c: 26: bCorrectlyDecoded = FALSE;
  1440                           
  1441                           ;incstack = 0
  1442  00001C  0E00               	movlw	0
  1443  00001E  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1444                           
  1445                           ;zb.c: 28: if (frameSize >= 1)
  1446  000020  5018               	movf	zb_decodage@frameSize,w,c
  1447  000022  B4D8               	btfsc	status,2,c
  1448  000024  D022               	goto	l268
  1449                           
  1450                           ;zb.c: 29: {
  1451                           ;zb.c: 30: checksum = zb_doChecksum(frame, frameSize - 1);
  1452  000026  C017  F012         	movff	zb_decodage@frame+1,zb_doChecksum@frame+1
  1453  00002A  C016  F011         	movff	zb_decodage@frame,zb_doChecksum@frame
  1454  00002E  0418               	decf	zb_decodage@frameSize,w,c
  1455  000030  6E13               	movwf	zb_doChecksum@size,c
  1456  000032  ECC0  F004         	call	_zb_doChecksum	;wreg free
  1457  000036  6E1F               	movwf	zb_decodage@checksum,c
  1458                           
  1459                           ;zb.c: 31: if (checksum != frame[frameSize - 1])
  1460  000038  0EFF               	movlw	255
  1461  00003A  6E1B               	movwf	??_zb_decodage& (0+255),c
  1462  00003C  0EFF               	movlw	255
  1463  00003E  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  1464  000040  5018               	movf	zb_decodage@frameSize,w,c
  1465  000042  6E1D               	movwf	(??_zb_decodage+2)& (0+255),c
  1466  000044  6A1E               	clrf	(??_zb_decodage+3)& (0+255),c
  1467  000046  501B               	movf	??_zb_decodage,w,c
  1468  000048  261D               	addwf	??_zb_decodage+2,f,c
  1469  00004A  501C               	movf	??_zb_decodage+1,w,c
  1470  00004C  221E               	addwfc	??_zb_decodage+3,f,c
  1471  00004E  501D               	movf	??_zb_decodage+2,w,c
  1472  000050  2416               	addwf	zb_decodage@frame,w,c
  1473  000052  6ED9               	movwf	fsr2l,c
  1474  000054  501E               	movf	??_zb_decodage+3,w,c
  1475  000056  2017               	addwfc	zb_decodage@frame+1,w,c
  1476  000058  6EDA               	movwf	fsr2h,c
  1477  00005A  50DF               	movf	indf2,w,c
  1478  00005C  181F               	xorwf	zb_decodage@checksum,w,c
  1479  00005E  B4D8               	btfsc	status,2,c
  1480  000060  D002               	goto	l2209
  1481                           
  1482                           ;zb.c: 32: {
  1483                           ;zb.c: 34: bCorrectlyDecoded = FALSE;
  1484  000062  0E00               	movlw	0
  1485  000064  D001               	goto	L7
  1486  000066                     l2209:
  1487                           
  1488                           ;zb.c: 36: else
  1489                           ;zb.c: 37: {
  1490                           ;zb.c: 38: bCorrectlyDecoded = TRUE;
  1491  000066  0E01               	movlw	1
  1492  000068                     L7:
  1493  000068  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1494  00006A                     l268:
  1495                           
  1496                           ;zb.c: 39: }
  1497                           ;zb.c: 40: }
  1498                           ;zb.c: 42: if (bCorrectlyDecoded)
  1499  00006A  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  1500  00006C  B4D8               	btfsc	status,2,c
  1501  00006E  D0B0               	goto	l2235
  1502                           
  1503                           ;zb.c: 43: {
  1504                           ;zb.c: 44: decodedFrame->type = frame[0];
  1505  000070  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  1506  000074  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  1507  000078  C019  FFE1         	movff	zb_decodage@decodedFrame,fsr1l
  1508  00007C  C01A  FFE2         	movff	zb_decodage@decodedFrame+1,fsr1h
  1509  000080  CFDF FFE7          	movff	indf2,indf1
  1510                           
  1511                           ;zb.c: 45: switch (frame[0])
  1512  000084  D096               	goto	l2233
  1513  000086                     l2213:
  1514                           
  1515                           ;zb.c: 48: decodedFrame->frameID = frame[1];
  1516  000086  EE20 F001          	lfsr	2,1
  1517  00008A  5016               	movf	zb_decodage@frame,w,c
  1518  00008C  26D9               	addwf	fsr2l,f,c
  1519  00008E  5017               	movf	zb_decodage@frame+1,w,c
  1520  000090  22DA               	addwfc	fsr2h,f,c
  1521  000092  EE10 F007          	lfsr	1,7
  1522  000096  5019               	movf	zb_decodage@decodedFrame,w,c
  1523  000098  26E1               	addwf	fsr1l,f,c
  1524  00009A  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1525  00009C  22E2               	addwfc	fsr1h,f,c
  1526  00009E  CFDF FFE7          	movff	indf2,indf1
  1527                           
  1528                           ;zb.c: 49: decodedFrame->AT[0] = frame[2];
  1529  0000A2  EE20 F002          	lfsr	2,2
  1530  0000A6  5016               	movf	zb_decodage@frame,w,c
  1531  0000A8  26D9               	addwf	fsr2l,f,c
  1532  0000AA  5017               	movf	zb_decodage@frame+1,w,c
  1533  0000AC  22DA               	addwfc	fsr2h,f,c
  1534  0000AE  EE10 F002          	lfsr	1,2
  1535  0000B2  5019               	movf	zb_decodage@decodedFrame,w,c
  1536  0000B4  26E1               	addwf	fsr1l,f,c
  1537  0000B6  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1538  0000B8  22E2               	addwfc	fsr1h,f,c
  1539  0000BA  CFDF FFE7          	movff	indf2,indf1
  1540                           
  1541                           ;zb.c: 50: decodedFrame->AT[1] = frame[3];
  1542  0000BE  EE20 F003          	lfsr	2,3
  1543  0000C2  5016               	movf	zb_decodage@frame,w,c
  1544  0000C4  26D9               	addwf	fsr2l,f,c
  1545  0000C6  5017               	movf	zb_decodage@frame+1,w,c
  1546  0000C8  22DA               	addwfc	fsr2h,f,c
  1547  0000CA  EE10 F003          	lfsr	1,3
  1548  0000CE  5019               	movf	zb_decodage@decodedFrame,w,c
  1549  0000D0  26E1               	addwf	fsr1l,f,c
  1550  0000D2  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1551  0000D4  22E2               	addwfc	fsr1h,f,c
  1552  0000D6  CFDF FFE7          	movff	indf2,indf1
  1553                           
  1554                           ;zb.c: 51: decodedFrame->status = frame[4];
  1555  0000DA  EE20 F004          	lfsr	2,4
  1556  0000DE  5016               	movf	zb_decodage@frame,w,c
  1557  0000E0  26D9               	addwf	fsr2l,f,c
  1558  0000E2  5017               	movf	zb_decodage@frame+1,w,c
  1559  0000E4  22DA               	addwfc	fsr2h,f,c
  1560  0000E6  EE10 F001          	lfsr	1,1
  1561  0000EA  5019               	movf	zb_decodage@decodedFrame,w,c
  1562  0000EC  26E1               	addwf	fsr1l,f,c
  1563  0000EE  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1564  0000F0  22E2               	addwfc	fsr1h,f,c
  1565  0000F2  CFDF FFE7          	movff	indf2,indf1
  1566                           
  1567                           ;zb.c: 52: decodedFrame->size = frameSize - 6;
  1568  0000F6  EE20 F006          	lfsr	2,6
  1569  0000FA  5019               	movf	zb_decodage@decodedFrame,w,c
  1570  0000FC  26D9               	addwf	fsr2l,f,c
  1571  0000FE  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1572  000100  22DA               	addwfc	fsr2h,f,c
  1573  000102  5018               	movf	zb_decodage@frameSize,w,c
  1574  000104  0FFA               	addlw	250
  1575  000106  6EDF               	movwf	indf2,c
  1576                           
  1577                           ;zb.c: 53: if (decodedFrame->size == 0)
  1578  000108  EE20 F006          	lfsr	2,6
  1579  00010C  5019               	movf	zb_decodage@decodedFrame,w,c
  1580  00010E  26D9               	addwf	fsr2l,f,c
  1581  000110  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1582  000112  22DA               	addwfc	fsr2h,f,c
  1583  000114  50DF               	movf	indf2,w,c
  1584  000116  A4D8               	btfss	status,2,c
  1585  000118  D00B               	goto	l2221
  1586                           
  1587                           ;zb.c: 54: {
  1588                           ;zb.c: 55: decodedFrame->data = (0);
  1589  00011A  EE20 F004          	lfsr	2,4
  1590  00011E  5019               	movf	zb_decodage@decodedFrame,w,c
  1591  000120  26D9               	addwf	fsr2l,f,c
  1592  000122  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1593  000124  22DA               	addwfc	fsr2h,f,c
  1594  000126  0E00               	movlw	0
  1595  000128  6EDE               	movwf	postinc2,c
  1596  00012A  0E00               	movlw	0
  1597  00012C  6EDD               	movwf	postdec2,c
  1598                           
  1599                           ;zb.c: 56: }
  1600  00012E  D050               	goto	l2235
  1601  000130                     l2221:
  1602                           
  1603                           ;zb.c: 57: else
  1604                           ;zb.c: 58: {
  1605                           ;zb.c: 59: decodedFrame->data = &frame[5];
  1606  000130  0E05               	movlw	5
  1607  000132  2416               	addwf	zb_decodage@frame,w,c
  1608  000134  6E1B               	movwf	??_zb_decodage& (0+255),c
  1609  000136  0E00               	movlw	0
  1610  000138  2017               	addwfc	zb_decodage@frame+1,w,c
  1611  00013A  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  1612  00013C  EE20 F004          	lfsr	2,4
  1613  000140  5019               	movf	zb_decodage@decodedFrame,w,c
  1614  000142  26D9               	addwf	fsr2l,f,c
  1615  000144  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1616  000146  22DA               	addwfc	fsr2h,f,c
  1617  000148  C01B  FFDE         	movff	??_zb_decodage,postinc2
  1618  00014C  C01C  FFDD         	movff	??_zb_decodage+1,postdec2
  1619  000150  D03F               	goto	l2235
  1620  000152                     l2223:
  1621                           
  1622                           ;zb.c: 64: decodedFrame->status = frame[1];
  1623  000152  EE20 F001          	lfsr	2,1
  1624  000156  5016               	movf	zb_decodage@frame,w,c
  1625  000158  26D9               	addwf	fsr2l,f,c
  1626  00015A  5017               	movf	zb_decodage@frame+1,w,c
  1627  00015C  22DA               	addwfc	fsr2h,f,c
  1628  00015E  EE10 F001          	lfsr	1,1
  1629  000162  5019               	movf	zb_decodage@decodedFrame,w,c
  1630  000164  26E1               	addwf	fsr1l,f,c
  1631  000166  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1632  000168  22E2               	addwfc	fsr1h,f,c
  1633  00016A  CFDF FFE7          	movff	indf2,indf1
  1634                           
  1635                           ;zb.c: 65: bCorrectlyDecoded = TRUE;
  1636  00016E  0E01               	movlw	1
  1637  000170  D01E               	goto	L8
  1638  000172                     l2227:
  1639                           
  1640                           ;zb.c: 69: decodedFrame->frameID = frame[1];
  1641  000172  EE20 F001          	lfsr	2,1
  1642  000176  5016               	movf	zb_decodage@frame,w,c
  1643  000178  26D9               	addwf	fsr2l,f,c
  1644  00017A  5017               	movf	zb_decodage@frame+1,w,c
  1645  00017C  22DA               	addwfc	fsr2h,f,c
  1646  00017E  EE10 F007          	lfsr	1,7
  1647  000182  5019               	movf	zb_decodage@decodedFrame,w,c
  1648  000184  26E1               	addwf	fsr1l,f,c
  1649  000186  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1650  000188  22E2               	addwfc	fsr1h,f,c
  1651  00018A  CFDF FFE7          	movff	indf2,indf1
  1652                           
  1653                           ;zb.c: 70: decodedFrame->status = frame[5];
  1654  00018E  EE20 F005          	lfsr	2,5
  1655  000192  5016               	movf	zb_decodage@frame,w,c
  1656  000194  26D9               	addwf	fsr2l,f,c
  1657  000196  5017               	movf	zb_decodage@frame+1,w,c
  1658  000198  22DA               	addwfc	fsr2h,f,c
  1659  00019A  EE10 F001          	lfsr	1,1
  1660  00019E  5019               	movf	zb_decodage@decodedFrame,w,c
  1661  0001A0  26E1               	addwf	fsr1l,f,c
  1662  0001A2  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1663  0001A4  22E2               	addwfc	fsr1h,f,c
  1664  0001A6  CFDF FFE7          	movff	indf2,indf1
  1665                           
  1666                           ;zb.c: 71: break;
  1667  0001AA  D012               	goto	l2235
  1668  0001AC                     l2229:
  1669                           
  1670                           ;zb.c: 74: bCorrectlyDecoded = FALSE;
  1671  0001AC  0E00               	movlw	0
  1672  0001AE                     L8:
  1673  0001AE  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1674                           
  1675                           ;zb.c: 75: break;
  1676  0001B0  D00F               	goto	l2235
  1677  0001B2                     l2233:
  1678  0001B2  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  1679  0001B6  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  1680  0001BA  50DF               	movf	indf2,w,c
  1681                           
  1682                           ; Switch size 1, requested type "space"
  1683                           ; Number of cases is 3, Range of values is 136 to 139
  1684                           ; switch strategies available:
  1685                           ; Name         Instructions Cycles
  1686                           ; simple_byte           10     6 (average)
  1687                           ;	Chosen strategy is simple_byte
  1688  0001BC  0A88               	xorlw	136	; case 136
  1689  0001BE  B4D8               	btfsc	status,2,c
  1690  0001C0  D762               	goto	l2213
  1691  0001C2  0A02               	xorlw	2	; case 138
  1692  0001C4  B4D8               	btfsc	status,2,c
  1693  0001C6  D7C5               	goto	l2223
  1694  0001C8  0A01               	xorlw	1	; case 139
  1695  0001CA  B4D8               	btfsc	status,2,c
  1696  0001CC  D7D2               	goto	l2227
  1697  0001CE  D7EE               	goto	l2229
  1698  0001D0                     l2235:
  1699                           
  1700                           ;zb.c: 77: }
  1701                           ;zb.c: 79: return bCorrectlyDecoded;
  1702  0001D0  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  1703  0001D2  0012               	return	
  1704  0001D4                     __end_of_zb_decodage:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           indf1	equ	0xFE7
  1714                           postdec1	equ	0xFE5
  1715                           fsr1h	equ	0xFE2
  1716                           fsr1l	equ	0xFE1
  1717                           indf2	equ	0xFDF
  1718                           postinc2	equ	0xFDE
  1719                           postdec2	equ	0xFDD
  1720                           fsr2h	equ	0xFDA
  1721                           fsr2l	equ	0xFD9
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function _uart_read *****************
  1725 ;; Defined at:
  1726 ;;		line 45 in file "uart.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  1729 ;;		 -> zb_frameReceived(50), 
  1730 ;;  nbToRead        1   18[COMRAM] unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  b               2   19[COMRAM] PTR unsigned char 
  1733 ;;		 -> zb_frameReceived(50), 
  1734 ;;  i               1   22[COMRAM] unsigned char 
  1735 ;;  expectedNbRe    1   21[COMRAM] enum E3083
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      enum E3083
  1738 ;; Registers used:
  1739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1745 ;;      Params:         3       0       0       0
  1746 ;;      Locals:         4       0       0       0
  1747 ;;      Temps:          0       0       0       0
  1748 ;;      Totals:         7       0       0       0
  1749 ;;Total ram usage:        7 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_zb_handle
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text6
  1760  00070A                     __ptext6:
  1761                           	opt stack 0
  1762  00070A                     _uart_read:
  1763                           	opt stack 26
  1764                           
  1765                           ;uart.c: 47: BOOL expectedNbRead;
  1766                           ;uart.c: 48: uint8_t i;
  1767                           ;uart.c: 49: uint8_t* b;
  1768                           ;uart.c: 50: b = buffer;
  1769                           
  1770                           ;incstack = 0
  1771  00070A  C012  F015         	movff	uart_read@buffer+1,uart_read@b+1
  1772  00070E  C011  F014         	movff	uart_read@buffer,uart_read@b
  1773                           
  1774                           ;uart.c: 52: if (nbToRead <= UART_rxBufferNb)
  1775  000712  5013               	movf	uart_read@nbToRead,w,c
  1776  000714  5C42               	subwf	_UART_rxBufferNb,w,c
  1777  000716  A0D8               	btfss	status,0,c
  1778  000718  D024               	goto	l2197
  1779                           
  1780                           ;uart.c: 53: {
  1781                           ;uart.c: 55: for (i = 0; i < nbToRead; i++)
  1782  00071A  0E00               	movlw	0
  1783  00071C  6E17               	movwf	uart_read@i,c
  1784  00071E  D019               	goto	l2191
  1785  000720                     l2179:
  1786                           
  1787                           ;uart.c: 56: {
  1788                           ;uart.c: 57: *b = UART_rxBuffer[UART_readIndex];
  1789  000720  5041               	movf	_UART_readIndex,w,c
  1790  000722  0D01               	mullw	1
  1791  000724  0100               	movlb	0	; () banked
  1792  000726  0E80               	movlw	low _UART_rxBuffer
  1793  000728  24F3               	addwf	prodl,w,c
  1794  00072A  6ED9               	movwf	fsr2l,c
  1795  00072C  0100               	movlb	0	; () banked
  1796  00072E  0E00               	movlw	high _UART_rxBuffer
  1797  000730  20F4               	addwfc	prodh,w,c
  1798  000732  6EDA               	movwf	fsr2h,c
  1799  000734  C014  FFE1         	movff	uart_read@b,fsr1l
  1800  000738  C015  FFE2         	movff	uart_read@b+1,fsr1h
  1801  00073C  CFDF FFE7          	movff	indf2,indf1
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;uart.c: 58: UART_readIndex++;
  1805  000740  2A41               	incf	_UART_readIndex,f,c
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;uart.c: 59: if (UART_readIndex >= (50))
  1809  000742  0E31               	movlw	49
  1810  000744  6441               	cpfsgt	_UART_readIndex,c
  1811  000746  D002               	goto	l2187
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;uart.c: 60: {
  1815                           ;uart.c: 61: UART_readIndex = 0;
  1816  000748  0E00               	movlw	0
  1817  00074A  6E41               	movwf	_UART_readIndex,c
  1818  00074C                     l2187:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;uart.c: 62: }
  1822                           ;uart.c: 63: b++;
  1823  00074C  4A14               	infsnz	uart_read@b,f,c
  1824  00074E  2A15               	incf	uart_read@b+1,f,c
  1825                           
  1826                           ; BSR set to: 0
  1827  000750  2A17               	incf	uart_read@i,f,c
  1828  000752                     l2191:
  1829  000752  5013               	movf	uart_read@nbToRead,w,c
  1830  000754  5C17               	subwf	uart_read@i,w,c
  1831  000756  A0D8               	btfss	status,0,c
  1832  000758  D7E3               	goto	l2179
  1833                           
  1834                           ;uart.c: 64: }
  1835                           ;uart.c: 65: UART_rxBufferNb -= nbToRead;
  1836  00075A  5013               	movf	uart_read@nbToRead,w,c
  1837  00075C  5E42               	subwf	_UART_rxBufferNb,f,c
  1838                           
  1839                           ;uart.c: 66: expectedNbRead = TRUE;
  1840  00075E  0E01               	movlw	1
  1841  000760  D001               	goto	L9
  1842  000762                     l2197:
  1843                           
  1844                           ;uart.c: 68: else
  1845                           ;uart.c: 69: {
  1846                           ;uart.c: 70: expectedNbRead = FALSE;
  1847  000762  0E00               	movlw	0
  1848  000764                     L9:
  1849  000764  6E16               	movwf	uart_read@expectedNbRead,c
  1850                           
  1851                           ;uart.c: 71: }
  1852                           ;uart.c: 73: return expectedNbRead;
  1853  000766  5016               	movf	uart_read@expectedNbRead,w,c
  1854  000768  0012               	return	
  1855  00076A                     __end_of_uart_read:
  1856                           	opt stack 0
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           prodh	equ	0xFF4
  1862                           prodl	equ	0xFF3
  1863                           intcon	equ	0xFF2
  1864                           postinc0	equ	0xFEE
  1865                           wreg	equ	0xFE8
  1866                           indf1	equ	0xFE7
  1867                           postdec1	equ	0xFE5
  1868                           fsr1h	equ	0xFE2
  1869                           fsr1l	equ	0xFE1
  1870                           indf2	equ	0xFDF
  1871                           postinc2	equ	0xFDE
  1872                           postdec2	equ	0xFDD
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _timer0_wait_262ms *****************
  1878 ;; Defined at:
  1879 ;;		line 26 in file "timer.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;		None               void
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1893 ;;      Params:         0       0       0       0
  1894 ;;      Locals:         0       0       0       0
  1895 ;;      Temps:          0       0       0       0
  1896 ;;      Totals:         0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    2
  1900 ;; This function calls:
  1901 ;;		_timer0_wait_ready
  1902 ;; This function is called by:
  1903 ;;		_main_loop
  1904 ;;		_zb_handle_waitAck
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text7
  1909  000A16                     __ptext7:
  1910                           	opt stack 0
  1911  000A16                     _timer0_wait_262ms:
  1912                           	opt stack 26
  1913                           
  1914                           ;timer.c: 29: TMR0 = 0;
  1915                           
  1916                           ;incstack = 0
  1917  000A16  0E00               	movlw	0
  1918  000A18  6ED7               	movwf	4055,c	;volatile
  1919  000A1A  0E00               	movlw	0
  1920  000A1C  6ED6               	movwf	4054,c	;volatile
  1921                           
  1922                           ;timer.c: 30: T0CON = 0x47;
  1923  000A1E  0E47               	movlw	71
  1924  000A20  6ED5               	movwf	4053,c	;volatile
  1925                           
  1926                           ;timer.c: 31: INTCONbits.TMR0IF = 0;
  1927  000A22  94F2               	bcf	intcon,2,c	;volatile
  1928                           
  1929                           ;timer.c: 32: INTCONbits.TMR0IE = 1;
  1930  000A24  8AF2               	bsf	intcon,5,c	;volatile
  1931                           
  1932                           ;timer.c: 33: T0CONbits.TMR0ON = 1;
  1933  000A26  8ED5               	bsf	4053,7,c	;volatile
  1934                           
  1935                           ;timer.c: 34: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  1936  000A28  8ED3               	bsf	4051,7,c	;volatile
  1937  000A2A  0003               	sleep		;# 
  1938  000A2C  9ED3               	bcf	4051,7,c	;volatile
  1939                           
  1940                           ;timer.c: 35: timer0_wait_ready();
  1941  000A2E  EC6A  F005         	call	_timer0_wait_ready	;wreg free
  1942                           
  1943                           ;timer.c: 36: T0CONbits.TMR0ON = 0;
  1944  000A32  9ED5               	bcf	4053,7,c	;volatile
  1945                           
  1946                           ;timer.c: 37: INTCONbits.TMR0IE = 0;
  1947  000A34  9AF2               	bcf	intcon,5,c	;volatile
  1948  000A36  0012               	return	
  1949  000A38                     __end_of_timer0_wait_262ms:
  1950                           	opt stack 0
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           tblptrl	equ	0xFF6
  1954                           tablat	equ	0xFF5
  1955                           prodh	equ	0xFF4
  1956                           prodl	equ	0xFF3
  1957                           intcon	equ	0xFF2
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           indf1	equ	0xFE7
  1961                           postdec1	equ	0xFE5
  1962                           fsr1h	equ	0xFE2
  1963                           fsr1l	equ	0xFE1
  1964                           indf2	equ	0xFDF
  1965                           postinc2	equ	0xFDE
  1966                           postdec2	equ	0xFDD
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _zb_handle_setTempRaw *****************
  1972 ;; Defined at:
  1973 ;;		line 96 in file "zb_handle.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  tempRaw         2   22[COMRAM] unsigned int 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;		None               void
  1980 ;; Registers used:
  1981 ;;		wreg, status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1987 ;;      Params:         2       0       0       0
  1988 ;;      Locals:         0       0       0       0
  1989 ;;      Temps:          0       0       0       0
  1990 ;;      Totals:         2       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_main_loop
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text8
  2002  000B08                     __ptext8:
  2003                           	opt stack 0
  2004  000B08                     _zb_handle_setTempRaw:
  2005                           	opt stack 28
  2006                           
  2007                           ;zb_handle.c: 98: sensor_data.tempRaw = tempRaw;
  2008                           
  2009                           ;incstack = 0
  2010  000B08  C017  F02C         	movff	zb_handle_setTempRaw@tempRaw,_sensor_data
  2011  000B0C  C018  F02D         	movff	zb_handle_setTempRaw@tempRaw+1,_sensor_data+1
  2012                           
  2013                           ;zb_handle.c: 99: sensor_data.tempStatus = (0x03);
  2014  000B10  0E03               	movlw	3
  2015  000B12  6E2E               	movwf	_sensor_data+2,c
  2016  000B14  0012               	return	
  2017  000B16                     __end_of_zb_handle_setTempRaw:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon	equ	0xFF2
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           indf1	equ	0xFE7
  2029                           postdec1	equ	0xFE5
  2030                           fsr1h	equ	0xFE2
  2031                           fsr1l	equ	0xFE1
  2032                           indf2	equ	0xFDF
  2033                           postinc2	equ	0xFDE
  2034                           postdec2	equ	0xFDD
  2035                           fsr2h	equ	0xFDA
  2036                           fsr2l	equ	0xFD9
  2037                           status	equ	0xFD8
  2038                           
  2039 ;; *************** function _zb_handle_setHumidityRaw *****************
  2040 ;; Defined at:
  2041 ;;		line 102 in file "zb_handle.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  humidityRaw     2   20[COMRAM] unsigned int 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;		None               void
  2048 ;; Registers used:
  2049 ;;		wreg, status,2
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2055 ;;      Params:         2       0       0       0
  2056 ;;      Locals:         0       0       0       0
  2057 ;;      Temps:          0       0       0       0
  2058 ;;      Totals:         2       0       0       0
  2059 ;;Total ram usage:        2 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    1
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_main_loop
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text9
  2070  000B16                     __ptext9:
  2071                           	opt stack 0
  2072  000B16                     _zb_handle_setHumidityRaw:
  2073                           	opt stack 28
  2074                           
  2075                           ;zb_handle.c: 104: sensor_data.humidityRaw = humidityRaw;
  2076                           
  2077                           ;incstack = 0
  2078  000B16  C015  F02F         	movff	zb_handle_setHumidityRaw@humidityRaw,_sensor_data+3
  2079  000B1A  C016  F030         	movff	zb_handle_setHumidityRaw@humidityRaw+1,_sensor_data+4
  2080                           
  2081                           ;zb_handle.c: 105: sensor_data.humidityStatus = (0x03);
  2082  000B1E  0E03               	movlw	3
  2083  000B20  6E31               	movwf	_sensor_data+5,c
  2084  000B22  0012               	return	
  2085  000B24                     __end_of_zb_handle_setHumidityRaw:
  2086                           	opt stack 0
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           prodh	equ	0xFF4
  2092                           prodl	equ	0xFF3
  2093                           intcon	equ	0xFF2
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           indf1	equ	0xFE7
  2097                           postdec1	equ	0xFE5
  2098                           fsr1h	equ	0xFE2
  2099                           fsr1l	equ	0xFE1
  2100                           indf2	equ	0xFDF
  2101                           postinc2	equ	0xFDE
  2102                           postdec2	equ	0xFDD
  2103                           fsr2h	equ	0xFDA
  2104                           fsr2l	equ	0xFD9
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _zb_handle_sendData *****************
  2108 ;; Defined at:
  2109 ;;		line 122 in file "zb_handle.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  frameSize       1   31[COMRAM] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2123 ;;      Params:         0       0       0       0
  2124 ;;      Locals:         1       0       0       0
  2125 ;;      Temps:          3       0       0       0
  2126 ;;      Totals:         4       0       0       0
  2127 ;;Total ram usage:        4 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    3
  2130 ;; This function calls:
  2131 ;;		_uart_write
  2132 ;;		_zigbee_appendChecksum
  2133 ;; This function is called by:
  2134 ;;		_main_loop
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text10
  2139  00067E                     __ptext10:
  2140                           	opt stack 0
  2141  00067E                     _zb_handle_sendData:
  2142                           	opt stack 26
  2143                           
  2144                           ;zb_handle.c: 124: zb_currentFrameID = zb_frameID;
  2145                           
  2146                           ;incstack = 0
  2147  00067E  C04E  F04B         	movff	_zb_frameID,_zb_currentFrameID
  2148                           
  2149                           ;zb_handle.c: 125: zb_frameID++;
  2150  000682  2A4E               	incf	_zb_frameID,f,c
  2151                           
  2152                           ;zb_handle.c: 126: if (zb_frameID == 0)
  2153  000684  664E               	tstfsz	_zb_frameID,c
  2154  000686  D002               	goto	l2523
  2155                           
  2156                           ;zb_handle.c: 127: {
  2157                           ;zb_handle.c: 128: zb_frameID = 1;
  2158  000688  0E01               	movlw	1
  2159  00068A  6E4E               	movwf	_zb_frameID,c
  2160  00068C                     l2523:
  2161                           
  2162                           ;zb_handle.c: 129: }
  2163                           ;zb_handle.c: 130: zb_currentAck = -1;
  2164  00068C  684A               	setf	_zb_currentAck,c
  2165                           
  2166                           ;zb_handle.c: 132: zb_frameToSend[(4)] = zb_currentFrameID;
  2167  00068E  C04B  F053         	movff	_zb_currentFrameID,_zb_frameToSend+4
  2168                           
  2169                           ;zb_handle.c: 133: zb_frameToSend[(18)] = zb_counter++;
  2170  000692  C049  F061         	movff	_zb_counter,_zb_frameToSend+18
  2171  000696  2A49               	incf	_zb_counter,f,c
  2172                           
  2173                           ;zb_handle.c: 134: zb_frameToSend[(21)] = sensor_data.tempStatus;
  2174  000698  C02E  F064         	movff	_sensor_data+2,_zb_frameToSend+21
  2175                           
  2176                           ;zb_handle.c: 135: zb_frameToSend[(22)] = sensor_data.tempRaw >> 8;
  2177  00069C  C02D  F01D         	movff	_sensor_data+1,??_zb_handle_sendData
  2178  0006A0  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2179  0006A4  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2180  0006A6  501E               	movf	??_zb_handle_sendData+1,w,c
  2181  0006A8  6E65               	movwf	_zb_frameToSend+22,c
  2182                           
  2183                           ;zb_handle.c: 136: zb_frameToSend[(22) + 1] = sensor_data.tempRaw;
  2184  0006AA  C02C  F066         	movff	_sensor_data,_zb_frameToSend+23
  2185                           
  2186                           ;zb_handle.c: 137: zb_frameToSend[(25)] = sensor_data.humidityStatus;
  2187  0006AE  C031  F068         	movff	_sensor_data+5,_zb_frameToSend+25
  2188                           
  2189                           ;zb_handle.c: 138: zb_frameToSend[(26)] = sensor_data.humidityRaw >> 8;
  2190  0006B2  C030  F01D         	movff	_sensor_data+4,??_zb_handle_sendData
  2191  0006B6  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2192  0006BA  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2193  0006BC  501E               	movf	??_zb_handle_sendData+1,w,c
  2194  0006BE  6E69               	movwf	_zb_frameToSend+26,c
  2195                           
  2196                           ;zb_handle.c: 139: zb_frameToSend[(26) + 1] = sensor_data.humidityRaw;
  2197  0006C0  C02F  F06A         	movff	_sensor_data+3,_zb_frameToSend+27
  2198                           
  2199                           ;zb_handle.c: 140: zb_frameToSend[(29)] = sensor_data.battStatus;
  2200  0006C4  C034  F06C         	movff	_sensor_data+8,_zb_frameToSend+29
  2201                           
  2202                           ;zb_handle.c: 141: zb_frameToSend[(30)] = sensor_data.battRaw >> 8;
  2203  0006C8  C033  F01D         	movff	_sensor_data+7,??_zb_handle_sendData
  2204  0006CC  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2205  0006D0  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2206  0006D2  501E               	movf	??_zb_handle_sendData+1,w,c
  2207  0006D4  6E6D               	movwf	_zb_frameToSend+30,c
  2208                           
  2209                           ;zb_handle.c: 142: zb_frameToSend[(30) + 1] = sensor_data.battRaw;
  2210  0006D6  C032  F06E         	movff	_sensor_data+6,_zb_frameToSend+31
  2211                           
  2212                           ;zb_handle.c: 143: zb_frameToSend[(1)] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0xFF00) >
      +                          > 8;
  2213  0006DA  0E00               	movlw	0
  2214  0006DC  6E50               	movwf	_zb_frameToSend+1,c
  2215                           
  2216                           ;zb_handle.c: 144: zb_frameToSend[(1) + 1] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0x00F
      +                          F);
  2217  0006DE  0E1D               	movlw	29
  2218  0006E0  6E51               	movwf	_zb_frameToSend+2,c
  2219                           
  2220                           ;zb_handle.c: 146: uint8_t frameSize = sizeof(zb_frameToSend) - 1;
  2221  0006E2  0E20               	movlw	32
  2222  0006E4  6E20               	movwf	zb_handle_sendData@frameSize,c
  2223                           
  2224                           ;zb_handle.c: 147: zigbee_appendChecksum(zb_frameToSend, &frameSize);
  2225  0006E6  0E00               	movlw	high _zb_frameToSend
  2226  0006E8  6E17               	movwf	zigbee_appendChecksum@buffer+1,c
  2227  0006EA  0E4F               	movlw	low _zb_frameToSend
  2228  0006EC  6E16               	movwf	zigbee_appendChecksum@buffer,c
  2229  0006EE  0E00               	movlw	high zb_handle_sendData@frameSize
  2230  0006F0  6E19               	movwf	zigbee_appendChecksum@sizeFrame+1,c
  2231  0006F2  0E20               	movlw	low zb_handle_sendData@frameSize
  2232  0006F4  6E18               	movwf	zigbee_appendChecksum@sizeFrame,c
  2233  0006F6  ECB5  F003         	call	_zigbee_appendChecksum	;wreg free
  2234                           
  2235                           ;zb_handle.c: 148: uart_write(frameSize, zb_frameToSend);
  2236  0006FA  0E00               	movlw	high _zb_frameToSend
  2237  0006FC  6E12               	movwf	uart_write@buffer+1,c
  2238  0006FE  0E4F               	movlw	low _zb_frameToSend
  2239  000700  6E11               	movwf	uart_write@buffer,c
  2240  000702  5020               	movf	zb_handle_sendData@frameSize,w,c
  2241  000704  EC6F  F004         	call	_uart_write
  2242  000708  0012               	return	
  2243  00070A                     __end_of_zb_handle_sendData:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           prodh	equ	0xFF4
  2250                           prodl	equ	0xFF3
  2251                           intcon	equ	0xFF2
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           indf1	equ	0xFE7
  2255                           postdec1	equ	0xFE5
  2256                           fsr1h	equ	0xFE2
  2257                           fsr1l	equ	0xFE1
  2258                           indf2	equ	0xFDF
  2259                           postinc2	equ	0xFDE
  2260                           postdec2	equ	0xFDD
  2261                           fsr2h	equ	0xFDA
  2262                           fsr2l	equ	0xFD9
  2263                           status	equ	0xFD8
  2264                           
  2265 ;; *************** function _zigbee_appendChecksum *****************
  2266 ;; Defined at:
  2267 ;;		line 152 in file "zb_handle.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  buffer          2   21[COMRAM] PTR unsigned char 
  2270 ;;		 -> zb_frameToSend(33), 
  2271 ;;  sizeFrame       2   23[COMRAM] PTR unsigned char 
  2272 ;;		 -> zb_handle_sendData@frameSize(1), 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;		None               void
  2277 ;; Registers used:
  2278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2284 ;;      Params:         4       0       0       0
  2285 ;;      Locals:         0       0       0       0
  2286 ;;      Temps:          3       0       0       0
  2287 ;;      Totals:         7       0       0       0
  2288 ;;Total ram usage:        7 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    2
  2291 ;; This function calls:
  2292 ;;		_zb_doChecksum
  2293 ;; This function is called by:
  2294 ;;		_zb_handle_sendData
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text11
  2299  00076A                     __ptext11:
  2300                           	opt stack 0
  2301  00076A                     _zigbee_appendChecksum:
  2302                           	opt stack 26
  2303                           
  2304                           ;zb_handle.c: 154: buffer[*sizeFrame] = zb_doChecksum(&buffer[(3)], &buffer[*sizeFrame] 
      +                          - &buffer[(3)]);
  2305                           
  2306                           ;incstack = 0
  2307  00076A  0E03               	movlw	3
  2308  00076C  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2309  00076E  6E11               	movwf	zb_doChecksum@frame,c
  2310  000770  0E00               	movlw	0
  2311  000772  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  2312  000774  6E12               	movwf	zb_doChecksum@frame+1,c
  2313  000776  5016               	movf	zigbee_appendChecksum@buffer,w,c
  2314  000778  0F03               	addlw	3
  2315  00077A  0800               	sublw	0
  2316  00077C  6E1A               	movwf	??_zigbee_appendChecksum& (0+255),c
  2317  00077E  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2318  000782  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2319  000786  50DF               	movf	indf2,w,c
  2320  000788  0D01               	mullw	1
  2321  00078A  50F3               	movf	prodl,w,c
  2322  00078C  241A               	addwf	??_zigbee_appendChecksum,w,c
  2323  00078E  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2324  000790  6E13               	movwf	zb_doChecksum@size,c
  2325  000792  ECC0  F004         	call	_zb_doChecksum	;wreg free
  2326  000796  6E1B               	movwf	(??_zigbee_appendChecksum+1)& (0+255),c
  2327  000798  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2328  00079C  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2329  0007A0  50DF               	movf	indf2,w,c
  2330  0007A2  6E1C               	movwf	(??_zigbee_appendChecksum+2)& (0+255),c
  2331  0007A4  501C               	movf	??_zigbee_appendChecksum+2,w,c
  2332  0007A6  0D01               	mullw	1
  2333  0007A8  50F3               	movf	prodl,w,c
  2334  0007AA  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2335  0007AC  6ED9               	movwf	fsr2l,c
  2336  0007AE  50F4               	movf	prodh,w,c
  2337  0007B0  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  2338  0007B2  6EDA               	movwf	fsr2h,c
  2339  0007B4  C01B  FFDF         	movff	??_zigbee_appendChecksum+1,indf2
  2340                           
  2341                           ;zb_handle.c: 155: (*sizeFrame)++;
  2342  0007B8  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2343  0007BC  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2344  0007C0  2ADF               	incf	indf2,f,c
  2345  0007C2  0012               	return	
  2346  0007C4                     __end_of_zigbee_appendChecksum:
  2347                           	opt stack 0
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           prodh	equ	0xFF4
  2353                           prodl	equ	0xFF3
  2354                           intcon	equ	0xFF2
  2355                           postinc0	equ	0xFEE
  2356                           wreg	equ	0xFE8
  2357                           indf1	equ	0xFE7
  2358                           postdec1	equ	0xFE5
  2359                           fsr1h	equ	0xFE2
  2360                           fsr1l	equ	0xFE1
  2361                           indf2	equ	0xFDF
  2362                           postinc2	equ	0xFDE
  2363                           postdec2	equ	0xFDD
  2364                           fsr2h	equ	0xFDA
  2365                           fsr2l	equ	0xFD9
  2366                           status	equ	0xFD8
  2367                           
  2368 ;; *************** function _zb_doChecksum *****************
  2369 ;; Defined at:
  2370 ;;		line 9 in file "zb.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  frame           2   16[COMRAM] PTR unsigned char 
  2373 ;;		 -> zb_frameReceived(50), zb_frameToSend(33), 
  2374 ;;  size            1   18[COMRAM] unsigned char 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  i               1   20[COMRAM] unsigned char 
  2377 ;;  checksum        1   19[COMRAM] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      unsigned char 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2387 ;;      Params:         3       0       0       0
  2388 ;;      Locals:         2       0       0       0
  2389 ;;      Temps:          0       0       0       0
  2390 ;;      Totals:         5       0       0       0
  2391 ;;Total ram usage:        5 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    1
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_zb_decodage
  2398 ;;		_zigbee_appendChecksum
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text12
  2403  000980                     __ptext12:
  2404                           	opt stack 0
  2405  000980                     _zb_doChecksum:
  2406                           	opt stack 25
  2407                           
  2408                           ;zb.c: 11: uint8_t checksum;
  2409                           ;zb.c: 13: checksum = 0xFF;
  2410                           
  2411                           ;incstack = 0
  2412  000980  6814               	setf	zb_doChecksum@checksum,c
  2413                           
  2414                           ;zb.c: 14: for (uint8_t i = 0; i < size; i++)
  2415  000982  0E00               	movlw	0
  2416  000984  6E15               	movwf	zb_doChecksum@i,c
  2417  000986  D00B               	goto	l2159
  2418  000988                     l2155:
  2419                           
  2420                           ;zb.c: 15: {
  2421                           ;zb.c: 16: checksum -= frame[i];
  2422  000988  5015               	movf	zb_doChecksum@i,w,c
  2423  00098A  0D01               	mullw	1
  2424  00098C  50F3               	movf	prodl,w,c
  2425  00098E  2411               	addwf	zb_doChecksum@frame,w,c
  2426  000990  6ED9               	movwf	fsr2l,c
  2427  000992  50F4               	movf	prodh,w,c
  2428  000994  2012               	addwfc	zb_doChecksum@frame+1,w,c
  2429  000996  6EDA               	movwf	fsr2h,c
  2430  000998  50DF               	movf	indf2,w,c
  2431  00099A  5E14               	subwf	zb_doChecksum@checksum,f,c
  2432  00099C  2A15               	incf	zb_doChecksum@i,f,c
  2433  00099E                     l2159:
  2434  00099E  5013               	movf	zb_doChecksum@size,w,c
  2435  0009A0  5C15               	subwf	zb_doChecksum@i,w,c
  2436  0009A2  A0D8               	btfss	status,0,c
  2437  0009A4  D7F1               	goto	l2155
  2438                           
  2439                           ;zb.c: 17: }
  2440                           ;zb.c: 19: return checksum;
  2441  0009A6  5014               	movf	zb_doChecksum@checksum,w,c
  2442  0009A8  0012               	return	
  2443  0009AA                     __end_of_zb_doChecksum:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           prodh	equ	0xFF4
  2450                           prodl	equ	0xFF3
  2451                           intcon	equ	0xFF2
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           indf1	equ	0xFE7
  2455                           postdec1	equ	0xFE5
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           indf2	equ	0xFDF
  2459                           postinc2	equ	0xFDE
  2460                           postdec2	equ	0xFDD
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function _uart_write *****************
  2466 ;; Defined at:
  2467 ;;		line 28 in file "uart.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  size            1    wreg     unsigned char 
  2470 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  2471 ;;		 -> zb_frameToSend(33), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  size            1   20[COMRAM] unsigned char 
  2474 ;;  b               2   18[COMRAM] PTR unsigned char 
  2475 ;;		 -> zb_frameToSend(33), 
  2476 ;;  i               1   21[COMRAM] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;		None               void
  2479 ;; Registers used:
  2480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2486 ;;      Params:         2       0       0       0
  2487 ;;      Locals:         4       0       0       0
  2488 ;;      Temps:          0       0       0       0
  2489 ;;      Totals:         6       0       0       0
  2490 ;;Total ram usage:        6 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_zb_handle_sendData
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text13
  2501  0008DE                     __ptext13:
  2502                           	opt stack 0
  2503  0008DE                     _uart_write:
  2504                           	opt stack 27
  2505                           
  2506                           ;incstack = 0
  2507                           ;uart_write@size stored from wreg
  2508  0008DE  6E15               	movwf	uart_write@size,c
  2509                           
  2510                           ;uart.c: 30: uint8_t i;
  2511                           ;uart.c: 31: uint8_t* b;
  2512                           ;uart.c: 33: b = buffer;
  2513  0008E0  C012  F014         	movff	uart_write@buffer+1,uart_write@b+1
  2514  0008E4  C011  F013         	movff	uart_write@buffer,uart_write@b
  2515                           
  2516                           ;uart.c: 34: for (i = 0; i < size; i++)
  2517  0008E8  0E00               	movlw	0
  2518  0008EA  6E16               	movwf	uart_write@i,c
  2519  0008EC  D00F               	goto	l2331
  2520  0008EE                     l2327:
  2521                           
  2522                           ;uart.c: 35: {
  2523                           ;uart.c: 36: TXREG = buffer[i];
  2524  0008EE  5016               	movf	uart_write@i,w,c
  2525  0008F0  0D01               	mullw	1
  2526  0008F2  50F3               	movf	prodl,w,c
  2527  0008F4  2411               	addwf	uart_write@buffer,w,c
  2528  0008F6  6ED9               	movwf	fsr2l,c
  2529  0008F8  50F4               	movf	prodh,w,c
  2530  0008FA  2012               	addwfc	uart_write@buffer+1,w,c
  2531  0008FC  6EDA               	movwf	fsr2h,c
  2532  0008FE  50DF               	movf	indf2,w,c
  2533  000900  6EAD               	movwf	4013,c	;volatile
  2534  000902                     l246:
  2535  000902  A2AC               	btfss	4012,1,c	;volatile
  2536  000904  D7FE               	goto	l246
  2537                           
  2538                           ;uart.c: 39: b++;
  2539  000906  4A13               	infsnz	uart_write@b,f,c
  2540  000908  2A14               	incf	uart_write@b+1,f,c
  2541  00090A  2A16               	incf	uart_write@i,f,c
  2542  00090C                     l2331:
  2543  00090C  5015               	movf	uart_write@size,w,c
  2544  00090E  5C16               	subwf	uart_write@i,w,c
  2545  000910  A0D8               	btfss	status,0,c
  2546  000912  D7ED               	goto	l2327
  2547                           
  2548                           ;uart.c: 40: }
  2549                           ;uart.c: 41: __nop();
  2550  000914  F000               	nop	
  2551  000916  0012               	return	
  2552  000918                     __end_of_uart_write:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           prodh	equ	0xFF4
  2559                           prodl	equ	0xFF3
  2560                           intcon	equ	0xFF2
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           indf1	equ	0xFE7
  2564                           postdec1	equ	0xFE5
  2565                           fsr1h	equ	0xFE2
  2566                           fsr1l	equ	0xFE1
  2567                           indf2	equ	0xFDF
  2568                           postinc2	equ	0xFDE
  2569                           postdec2	equ	0xFDD
  2570                           fsr2h	equ	0xFDA
  2571                           fsr2l	equ	0xFD9
  2572                           status	equ	0xFD8
  2573                           
  2574 ;; *************** function _zb_handle_resetStatus *****************
  2575 ;; Defined at:
  2576 ;;		line 114 in file "zb_handle.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;		None               void
  2583 ;; Registers used:
  2584 ;;		wreg, status,2
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2590 ;;      Params:         0       0       0       0
  2591 ;;      Locals:         0       0       0       0
  2592 ;;      Temps:          0       0       0       0
  2593 ;;      Totals:         0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_main_loop
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text14
  2605  000B24                     __ptext14:
  2606                           	opt stack 0
  2607  000B24                     _zb_handle_resetStatus:
  2608                           	opt stack 28
  2609                           
  2610                           ;zb_handle.c: 116: sensor_data.battStatus = (0x00);
  2611                           
  2612                           ;incstack = 0
  2613  000B24  0E00               	movlw	0
  2614  000B26  6E34               	movwf	_sensor_data+8,c
  2615                           
  2616                           ;zb_handle.c: 117: sensor_data.humidityStatus = (0x00);
  2617  000B28  0E00               	movlw	0
  2618  000B2A  6E31               	movwf	_sensor_data+5,c
  2619                           
  2620                           ;zb_handle.c: 118: sensor_data.tempStatus = (0x00);
  2621  000B2C  0E00               	movlw	0
  2622  000B2E  6E2E               	movwf	_sensor_data+2,c
  2623  000B30  0012               	return	
  2624  000B32                     __end_of_zb_handle_resetStatus:
  2625                           	opt stack 0
  2626                           tblptru	equ	0xFF8
  2627                           tblptrh	equ	0xFF7
  2628                           tblptrl	equ	0xFF6
  2629                           tablat	equ	0xFF5
  2630                           prodh	equ	0xFF4
  2631                           prodl	equ	0xFF3
  2632                           intcon	equ	0xFF2
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           indf1	equ	0xFE7
  2636                           postdec1	equ	0xFE5
  2637                           fsr1h	equ	0xFE2
  2638                           fsr1l	equ	0xFE1
  2639                           indf2	equ	0xFDF
  2640                           postinc2	equ	0xFDE
  2641                           postdec2	equ	0xFDD
  2642                           fsr2h	equ	0xFDA
  2643                           fsr2l	equ	0xFD9
  2644                           status	equ	0xFD8
  2645                           
  2646 ;; *************** function _zb_handle_getStatus *****************
  2647 ;; Defined at:
  2648 ;;		line 91 in file "zb_handle.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      enum E3761
  2655 ;; Registers used:
  2656 ;;		wreg, status,2
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2662 ;;      Params:         0       0       0       0
  2663 ;;      Locals:         0       0       0       0
  2664 ;;      Temps:          0       0       0       0
  2665 ;;      Totals:         0       0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_main_loop
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text15
  2677  000B54                     __ptext15:
  2678                           	opt stack 0
  2679  000B54                     _zb_handle_getStatus:
  2680                           	opt stack 28
  2681                           
  2682                           ;zb_handle.c: 93: return zb_status;
  2683                           
  2684                           ;incstack = 0
  2685  000B54  504D               	movf	_zb_status,w,c
  2686  000B56  0012               	return	
  2687  000B58                     __end_of_zb_handle_getStatus:
  2688                           	opt stack 0
  2689                           tblptru	equ	0xFF8
  2690                           tblptrh	equ	0xFF7
  2691                           tblptrl	equ	0xFF6
  2692                           tablat	equ	0xFF5
  2693                           prodh	equ	0xFF4
  2694                           prodl	equ	0xFF3
  2695                           intcon	equ	0xFF2
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           indf1	equ	0xFE7
  2699                           postdec1	equ	0xFE5
  2700                           fsr1h	equ	0xFE2
  2701                           fsr1l	equ	0xFE1
  2702                           indf2	equ	0xFDF
  2703                           postinc2	equ	0xFDE
  2704                           postdec2	equ	0xFDD
  2705                           fsr2h	equ	0xFDA
  2706                           fsr2l	equ	0xFD9
  2707                           status	equ	0xFD8
  2708                           
  2709 ;; *************** function _timer0_wait_65ms *****************
  2710 ;; Defined at:
  2711 ;;		line 11 in file "timer.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;		None               void
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2725 ;;      Params:         0       0       0       0
  2726 ;;      Locals:         0       0       0       0
  2727 ;;      Temps:          0       0       0       0
  2728 ;;      Totals:         0       0       0       0
  2729 ;;Total ram usage:        0 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    2
  2732 ;; This function calls:
  2733 ;;		_timer0_wait_ready
  2734 ;; This function is called by:
  2735 ;;		_main_loop
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text16
  2740  000A38                     __ptext16:
  2741                           	opt stack 0
  2742  000A38                     _timer0_wait_65ms:
  2743                           	opt stack 27
  2744                           
  2745                           ;timer.c: 13: TMR0 = 0;
  2746                           
  2747                           ;incstack = 0
  2748  000A38  0E00               	movlw	0
  2749  000A3A  6ED7               	movwf	4055,c	;volatile
  2750  000A3C  0E00               	movlw	0
  2751  000A3E  6ED6               	movwf	4054,c	;volatile
  2752                           
  2753                           ;timer.c: 14: T0CON = 0x45;
  2754  000A40  0E45               	movlw	69
  2755  000A42  6ED5               	movwf	4053,c	;volatile
  2756                           
  2757                           ;timer.c: 15: INTCONbits.TMR0IF = 0;
  2758  000A44  94F2               	bcf	intcon,2,c	;volatile
  2759                           
  2760                           ;timer.c: 16: INTCONbits.TMR0IE = 1;
  2761  000A46  8AF2               	bsf	intcon,5,c	;volatile
  2762                           
  2763                           ;timer.c: 17: T0CONbits.TMR0ON = 1;
  2764  000A48  8ED5               	bsf	4053,7,c	;volatile
  2765                           
  2766                           ;timer.c: 19: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2767  000A4A  8ED3               	bsf	4051,7,c	;volatile
  2768  000A4C  0003               	sleep		;# 
  2769  000A4E  9ED3               	bcf	4051,7,c	;volatile
  2770                           
  2771                           ;timer.c: 20: timer0_wait_ready();
  2772  000A50  EC6A  F005         	call	_timer0_wait_ready	;wreg free
  2773                           
  2774                           ;timer.c: 22: T0CONbits.TMR0ON = 0;
  2775  000A54  9ED5               	bcf	4053,7,c	;volatile
  2776                           
  2777                           ;timer.c: 23: INTCONbits.TMR0IE = 0;
  2778  000A56  9AF2               	bcf	intcon,5,c	;volatile
  2779  000A58  0012               	return	
  2780  000A5A                     __end_of_timer0_wait_65ms:
  2781                           	opt stack 0
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           intcon	equ	0xFF2
  2789                           postinc0	equ	0xFEE
  2790                           wreg	equ	0xFE8
  2791                           indf1	equ	0xFE7
  2792                           postdec1	equ	0xFE5
  2793                           fsr1h	equ	0xFE2
  2794                           fsr1l	equ	0xFE1
  2795                           indf2	equ	0xFDF
  2796                           postinc2	equ	0xFDE
  2797                           postdec2	equ	0xFDD
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _timer0_wait_ready *****************
  2803 ;; Defined at:
  2804 ;;		line 42 in file "timer.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;		None               void
  2811 ;; Registers used:
  2812 ;;		wreg, status,2
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2818 ;;      Params:         0       0       0       0
  2819 ;;      Locals:         0       0       0       0
  2820 ;;      Temps:          0       0       0       0
  2821 ;;      Totals:         0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_timer0_wait_65ms
  2829 ;;		_timer0_wait_262ms
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text17
  2834  000AD4                     __ptext17:
  2835                           	opt stack 0
  2836  000AD4                     _timer0_wait_ready:
  2837                           	opt stack 26
  2838                           
  2839                           ;incstack = 0
  2840                           ;timer.c: 44: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2841  000AD4  8ED3               	bsf	4051,7,c	;volatile
  2842  000AD6  0003               	sleep		;# 
  2843  000AD8  9ED3               	bcf	4051,7,c	;volatile
  2844  000ADA                     l2239:
  2845  000ADA  5047               	movf	_timer0_interupt_done,w,c
  2846  000ADC  B4D8               	btfsc	status,2,c
  2847  000ADE  D7FD               	goto	l2239
  2848                           
  2849                           ;timer.c: 48: timer0_interupt_done = FALSE;
  2850  000AE0  0E00               	movlw	0
  2851  000AE2  6E47               	movwf	_timer0_interupt_done,c
  2852  000AE4  0012               	return	
  2853  000AE6                     __end_of_timer0_wait_ready:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           intcon	equ	0xFF2
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           indf1	equ	0xFE7
  2865                           postdec1	equ	0xFE5
  2866                           fsr1h	equ	0xFE2
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _leds_yellow_glitch *****************
  2876 ;; Defined at:
  2877 ;;		line 28 in file "leds.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;		None               void
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2891 ;;      Params:         0       0       0       0
  2892 ;;      Locals:         0       0       0       0
  2893 ;;      Temps:          1       0       0       0
  2894 ;;      Totals:         1       0       0       0
  2895 ;;Total ram usage:        1 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_main_loop
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text18
  2906  000A92                     __ptext18:
  2907                           	opt stack 0
  2908  000A92                     _leds_yellow_glitch:
  2909                           	opt stack 28
  2910                           
  2911                           ;leds.c: 30: LATA |= (0x04);
  2912                           
  2913                           ;incstack = 0
  2914  000A92  8489               	bsf	3977,2,c	;volatile
  2915                           
  2916                           ;leds.c: 31: _delay((unsigned long)((100)*((1000000)/4000.0)));
  2917  000A94  0E21               	movlw	33
  2918  000A96  6E11               	movwf	??_leds_yellow_glitch& (0+255),c
  2919  000A98  0E76               	movlw	118
  2920  000A9A                     u1417:
  2921  000A9A  2EE8               	decfsz	wreg,f,c
  2922  000A9C  D7FE               	goto	u1417
  2923  000A9E  2E11               	decfsz	??_leds_yellow_glitch& (0+255),f,c
  2924  000AA0  D7FC               	goto	u1417
  2925  000AA2  D000               	nop2	
  2926                           
  2927                           ;leds.c: 32: LATA &= ~(0x04);
  2928  000AA4  9489               	bcf	3977,2,c	;volatile
  2929  000AA6  0012               	return	
  2930  000AA8                     __end_of_leds_yellow_glitch:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           prodh	equ	0xFF4
  2937                           prodl	equ	0xFF3
  2938                           intcon	equ	0xFF2
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           indf1	equ	0xFE7
  2942                           postdec1	equ	0xFE5
  2943                           fsr1h	equ	0xFE2
  2944                           fsr1l	equ	0xFE1
  2945                           indf2	equ	0xFDF
  2946                           postinc2	equ	0xFDE
  2947                           postdec2	equ	0xFDD
  2948                           fsr2h	equ	0xFDA
  2949                           fsr2l	equ	0xFD9
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _leds_green_glitch *****************
  2953 ;; Defined at:
  2954 ;;		line 35 in file "leds.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2968 ;;      Params:         0       0       0       0
  2969 ;;      Locals:         0       0       0       0
  2970 ;;      Temps:          1       0       0       0
  2971 ;;      Totals:         1       0       0       0
  2972 ;;Total ram usage:        1 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_main_loop
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text19
  2983  000AA8                     __ptext19:
  2984                           	opt stack 0
  2985  000AA8                     _leds_green_glitch:
  2986                           	opt stack 28
  2987                           
  2988                           ;leds.c: 37: LATA |= (0x10);
  2989                           
  2990                           ;incstack = 0
  2991  000AA8  8889               	bsf	3977,4,c	;volatile
  2992                           
  2993                           ;leds.c: 38: _delay((unsigned long)((100)*((1000000)/4000.0)));
  2994  000AAA  0E21               	movlw	33
  2995  000AAC  6E11               	movwf	??_leds_green_glitch& (0+255),c
  2996  000AAE  0E76               	movlw	118
  2997  000AB0                     u1427:
  2998  000AB0  2EE8               	decfsz	wreg,f,c
  2999  000AB2  D7FE               	goto	u1427
  3000  000AB4  2E11               	decfsz	??_leds_green_glitch& (0+255),f,c
  3001  000AB6  D7FC               	goto	u1427
  3002  000AB8  D000               	nop2	
  3003                           
  3004                           ;leds.c: 39: LATA &= ~(0x10);
  3005  000ABA  9889               	bcf	3977,4,c	;volatile
  3006  000ABC  0012               	return	
  3007  000ABE                     __end_of_leds_green_glitch:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           indf1	equ	0xFE7
  3019                           postdec1	equ	0xFE5
  3020                           fsr1h	equ	0xFE2
  3021                           fsr1l	equ	0xFE1
  3022                           indf2	equ	0xFDF
  3023                           postinc2	equ	0xFDE
  3024                           postdec2	equ	0xFDD
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _hyt221_operation *****************
  3030 ;; Defined at:
  3031 ;;		line 44 in file "hyt221.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  index           1   20[COMRAM] char 
  3036 ;;  bDeviceDataA    1   19[COMRAM] enum E3083
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      enum E3779
  3039 ;; Registers used:
  3040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3046 ;;      Params:         0       0       0       0
  3047 ;;      Locals:         2       0       0       0
  3048 ;;      Temps:          2       0       0       0
  3049 ;;      Totals:         4       0       0       0
  3050 ;;Total ram usage:        4 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    3
  3053 ;; This function calls:
  3054 ;;		_i2c_trig_start
  3055 ;;		_i2c_trig_stop
  3056 ;;		_i2c_wait_idle
  3057 ;;		_i2c_wait_ready
  3058 ;;		_leds_red_and_yellow_glitch
  3059 ;; This function is called by:
  3060 ;;		_main_loop
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text20
  3065  0005E2                     __ptext20:
  3066                           	opt stack 0
  3067  0005E2                     _hyt221_operation:
  3068                           	opt stack 26
  3069                           
  3070                           ;hyt221.c: 46: int8_t index;
  3071                           ;hyt221.c: 47: BOOL bDeviceDataAreStale;
  3072                           ;hyt221.c: 48: bDeviceDataAreStale = FALSE;
  3073                           
  3074                           ;incstack = 0
  3075  0005E2  0E00               	movlw	0
  3076  0005E4  6E14               	movwf	hyt221_operation@bDeviceDataAreStale,c
  3077                           
  3078                           ;hyt221.c: 51: i2c_trig_start();
  3079  0005E6  ECA0  F005         	call	_i2c_trig_start	;wreg free
  3080                           
  3081                           ;hyt221.c: 54: SSPBUF = (0x51);
  3082  0005EA  0E51               	movlw	81
  3083  0005EC  6EC9               	movwf	4041,c	;volatile
  3084                           
  3085                           ;hyt221.c: 55: i2c_wait_ready();
  3086  0005EE  EC73  F005         	call	_i2c_wait_ready	;wreg free
  3087                           
  3088                           ;hyt221.c: 58: if (SSPCON2bits.ACKSTAT == 1)
  3089  0005F2  ACC5               	btfss	4037,6,c	;volatile
  3090  0005F4  D006               	goto	l2441
  3091                           
  3092                           ;hyt221.c: 59: {
  3093                           ;hyt221.c: 60: leds_red_and_yellow_glitch();
  3094  0005F6  EC3C  F005         	call	_leds_red_and_yellow_glitch	;wreg free
  3095                           
  3096                           ;hyt221.c: 61: i2c_trig_stop();
  3097  0005FA  ECA6  F005         	call	_i2c_trig_stop	;wreg free
  3098                           
  3099                           ;hyt221.c: 62: return STATUS_ERROR;
  3100  0005FE  0E01               	movlw	1
  3101  000600  D03D               	goto	l389
  3102  000602                     l2441:
  3103                           
  3104                           ;hyt221.c: 63: }
  3105                           ;hyt221.c: 65: index = 0;
  3106  000602  0E00               	movlw	0
  3107  000604  6E15               	movwf	hyt221_operation@index,c
  3108                           
  3109                           ;hyt221.c: 66: while (index < 4)
  3110  000606  D02B               	goto	l2471
  3111  000608                     l2443:
  3112                           
  3113                           ;hyt221.c: 67: {
  3114                           ;hyt221.c: 68: i2c_wait_idle();
  3115  000608  EC7C  F005         	call	_i2c_wait_idle	;wreg free
  3116                           
  3117                           ;hyt221.c: 69: SSPCON2bits.RCEN = 1;
  3118  00060C  86C5               	bsf	4037,3,c	;volatile
  3119                           
  3120                           ;hyt221.c: 71: i2c_wait_ready();
  3121  00060E  EC73  F005         	call	_i2c_wait_ready	;wreg free
  3122                           
  3123                           ;hyt221.c: 73: gData[index] = SSPBUF;
  3124  000612  5015               	movf	hyt221_operation@index,w,c
  3125  000614  0D01               	mullw	1
  3126  000616  0E35               	movlw	low _gData
  3127  000618  24F3               	addwf	prodl,w,c
  3128  00061A  6ED9               	movwf	fsr2l,c
  3129  00061C  0E00               	movlw	high _gData
  3130  00061E  20F4               	addwfc	prodh,w,c
  3131  000620  6EDA               	movwf	fsr2h,c
  3132  000622  CFC9 FFDF          	movff	4041,indf2	;volatile
  3133                           
  3134                           ;hyt221.c: 74: if (index == 0)
  3135  000626  6615               	tstfsz	hyt221_operation@index,c
  3136  000628  D00D               	goto	l2459
  3137                           
  3138                           ;hyt221.c: 75: {
  3139                           ;hyt221.c: 77: if ((gData[0] & 0x40) == 0x40)
  3140  00062A  C035  F012         	movff	_gData,??_hyt221_operation
  3141  00062E  6A13               	clrf	(??_hyt221_operation+1)& (0+255),c
  3142  000630  BE12               	btfsc	??_hyt221_operation& (0+255),7,c
  3143  000632  0613               	decf	(??_hyt221_operation+1)& (0+255),f,c
  3144  000634  AC12               	btfss	??_hyt221_operation,6,c
  3145  000636  D00C               	goto	l396
  3146                           
  3147                           ;hyt221.c: 78: {
  3148                           ;hyt221.c: 80: SSPCON2bits.ACKDT = 1;
  3149  000638  8AC5               	bsf	4037,5,c	;volatile
  3150                           
  3151                           ;hyt221.c: 81: index = 3;
  3152  00063A  0E03               	movlw	3
  3153  00063C  6E15               	movwf	hyt221_operation@index,c
  3154                           
  3155                           ;hyt221.c: 82: bDeviceDataAreStale = TRUE;
  3156  00063E  0E01               	movlw	1
  3157  000640  6E14               	movwf	hyt221_operation@bDeviceDataAreStale,c
  3158                           
  3159                           ;hyt221.c: 83: }
  3160  000642  D007               	goto	l2463
  3161  000644                     l2459:
  3162                           
  3163                           ;hyt221.c: 89: else if (index == 3)
  3164  000644  5015               	movf	hyt221_operation@index,w,c
  3165  000646  0A03               	xorlw	3
  3166  000648  A4D8               	btfss	status,2,c
  3167  00064A  D002               	goto	l396
  3168                           
  3169                           ;hyt221.c: 90: {
  3170                           ;hyt221.c: 91: SSPCON2bits.ACKDT = 1;
  3171  00064C  8AC5               	bsf	4037,5,c	;volatile
  3172                           
  3173                           ;hyt221.c: 92: }
  3174  00064E  D001               	goto	l2463
  3175  000650                     l396:
  3176                           
  3177                           ;hyt221.c: 93: else
  3178                           ;hyt221.c: 94: {
  3179                           ;hyt221.c: 95: SSPCON2bits.ACKDT = 0;
  3180  000650  9AC5               	bcf	4037,5,c	;volatile
  3181  000652                     l2463:
  3182                           
  3183                           ;hyt221.c: 96: }
  3184                           ;hyt221.c: 98: i2c_wait_idle();
  3185  000652  EC7C  F005         	call	_i2c_wait_idle	;wreg free
  3186                           
  3187                           ;hyt221.c: 101: SSPCON2bits.ACKEN = 1;
  3188  000656  88C5               	bsf	4037,4,c	;volatile
  3189                           
  3190                           ;hyt221.c: 102: i2c_wait_ready();
  3191  000658  EC73  F005         	call	_i2c_wait_ready	;wreg free
  3192                           
  3193                           ;hyt221.c: 103: index++;
  3194  00065C  2A15               	incf	hyt221_operation@index,f,c
  3195  00065E                     l2471:
  3196  00065E  5015               	movf	hyt221_operation@index,w,c
  3197  000660  0A80               	xorlw	128
  3198  000662  0F7C               	addlw	-132
  3199  000664  A0D8               	btfss	status,0,c
  3200  000666  D7D0               	goto	l2443
  3201                           
  3202                           ;hyt221.c: 104: }
  3203                           ;hyt221.c: 106: i2c_wait_idle();
  3204  000668  EC7C  F005         	call	_i2c_wait_idle	;wreg free
  3205                           
  3206                           ;hyt221.c: 107: i2c_trig_stop();
  3207  00066C  ECA6  F005         	call	_i2c_trig_stop	;wreg free
  3208                           
  3209                           ;hyt221.c: 109: if (bDeviceDataAreStale == TRUE)
  3210  000670  0414               	decf	hyt221_operation@bDeviceDataAreStale,w,c
  3211  000672  A4D8               	btfss	status,2,c
  3212  000674  D002               	goto	l2483
  3213                           
  3214                           ;hyt221.c: 110: {
  3215                           ;hyt221.c: 111: return STATUS_EBUSY;
  3216  000676  0E02               	movlw	2
  3217  000678  D001               	goto	l389
  3218  00067A                     l2483:
  3219                           
  3220                           ;hyt221.c: 112: }
  3221                           ;hyt221.c: 114: return STATUS_OK;
  3222  00067A  0E00               	movlw	0
  3223  00067C                     l389:
  3224  00067C  0012               	return	
  3225  00067E                     __end_of_hyt221_operation:
  3226                           	opt stack 0
  3227                           tblptru	equ	0xFF8
  3228                           tblptrh	equ	0xFF7
  3229                           tblptrl	equ	0xFF6
  3230                           tablat	equ	0xFF5
  3231                           prodh	equ	0xFF4
  3232                           prodl	equ	0xFF3
  3233                           intcon	equ	0xFF2
  3234                           postinc0	equ	0xFEE
  3235                           wreg	equ	0xFE8
  3236                           indf1	equ	0xFE7
  3237                           postdec1	equ	0xFE5
  3238                           fsr1h	equ	0xFE2
  3239                           fsr1l	equ	0xFE1
  3240                           indf2	equ	0xFDF
  3241                           postinc2	equ	0xFDE
  3242                           postdec2	equ	0xFDD
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function _hyt221_launch_acq *****************
  3248 ;; Defined at:
  3249 ;;		line 20 in file "hyt221.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      enum E3779
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3263 ;;      Params:         0       0       0       0
  3264 ;;      Locals:         0       0       0       0
  3265 ;;      Temps:          0       0       0       0
  3266 ;;      Totals:         0       0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    3
  3270 ;; This function calls:
  3271 ;;		_i2c_trig_start
  3272 ;;		_i2c_trig_stop
  3273 ;;		_i2c_wait_idle
  3274 ;;		_i2c_wait_ready
  3275 ;;		_leds_red_and_yellow_glitch
  3276 ;; This function is called by:
  3277 ;;		_main_loop
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text21
  3282  0009AA                     __ptext21:
  3283                           	opt stack 0
  3284  0009AA                     _hyt221_launch_acq:
  3285                           	opt stack 26
  3286                           
  3287                           ;hyt221.c: 22: i2c_trig_start();
  3288                           
  3289                           ;incstack = 0
  3290  0009AA  ECA0  F005         	call	_i2c_trig_start	;wreg free
  3291                           
  3292                           ;hyt221.c: 25: SSPBUF = (0x50);
  3293  0009AE  0E50               	movlw	80
  3294  0009B0  6EC9               	movwf	4041,c	;volatile
  3295                           
  3296                           ;hyt221.c: 27: i2c_wait_ready();
  3297  0009B2  EC73  F005         	call	_i2c_wait_ready	;wreg free
  3298                           
  3299                           ;hyt221.c: 31: if (SSPCON2bits.ACKSTAT == 1)
  3300  0009B6  ACC5               	btfss	4037,6,c	;volatile
  3301  0009B8  D004               	goto	l2395
  3302                           
  3303                           ;hyt221.c: 32: {
  3304                           ;hyt221.c: 33: leds_red_and_yellow_glitch();
  3305  0009BA  EC3C  F005         	call	_leds_red_and_yellow_glitch	;wreg free
  3306                           
  3307                           ;hyt221.c: 34: return STATUS_ERROR;
  3308  0009BE  0E01               	movlw	1
  3309  0009C0  D006               	goto	l385
  3310  0009C2                     l2395:
  3311                           
  3312                           ;hyt221.c: 35: }
  3313                           ;hyt221.c: 37: i2c_wait_idle();
  3314  0009C2  EC7C  F005         	call	_i2c_wait_idle	;wreg free
  3315                           
  3316                           ;hyt221.c: 38: i2c_trig_stop();
  3317  0009C6  ECA6  F005         	call	_i2c_trig_stop	;wreg free
  3318                           
  3319                           ;hyt221.c: 39: __nop();
  3320  0009CA  F000               	nop	
  3321                           
  3322                           ;hyt221.c: 40: return STATUS_OK;
  3323  0009CC  0E00               	movlw	0
  3324  0009CE                     l385:
  3325  0009CE  0012               	return	
  3326  0009D0                     __end_of_hyt221_launch_acq:
  3327                           	opt stack 0
  3328                           tblptru	equ	0xFF8
  3329                           tblptrh	equ	0xFF7
  3330                           tblptrl	equ	0xFF6
  3331                           tablat	equ	0xFF5
  3332                           prodh	equ	0xFF4
  3333                           prodl	equ	0xFF3
  3334                           intcon	equ	0xFF2
  3335                           postinc0	equ	0xFEE
  3336                           wreg	equ	0xFE8
  3337                           indf1	equ	0xFE7
  3338                           postdec1	equ	0xFE5
  3339                           fsr1h	equ	0xFE2
  3340                           fsr1l	equ	0xFE1
  3341                           indf2	equ	0xFDF
  3342                           postinc2	equ	0xFDE
  3343                           postdec2	equ	0xFDD
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8
  3347                           
  3348 ;; *************** function _leds_red_and_yellow_glitch *****************
  3349 ;; Defined at:
  3350 ;;		line 43 in file "leds.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;		None               void
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3364 ;;      Params:         0       0       0       0
  3365 ;;      Locals:         0       0       0       0
  3366 ;;      Temps:          1       0       0       0
  3367 ;;      Totals:         1       0       0       0
  3368 ;;Total ram usage:        1 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_hyt221_launch_acq
  3375 ;;		_hyt221_operation
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text22
  3380  000A78                     __ptext22:
  3381                           	opt stack 0
  3382  000A78                     _leds_red_and_yellow_glitch:
  3383                           	opt stack 27
  3384                           
  3385                           ;leds.c: 45: LATA |= (0x08);
  3386                           
  3387                           ;incstack = 0
  3388  000A78  8689               	bsf	3977,3,c	;volatile
  3389                           
  3390                           ;leds.c: 46: LATA |= (0x04);
  3391  000A7A  8489               	bsf	3977,2,c	;volatile
  3392                           
  3393                           ;leds.c: 47: _delay((unsigned long)((100)*((1000000)/4000.0)));
  3394  000A7C  0E21               	movlw	33
  3395  000A7E  6E11               	movwf	??_leds_red_and_yellow_glitch& (0+255),c
  3396  000A80  0E76               	movlw	118
  3397  000A82                     u1437:
  3398  000A82  2EE8               	decfsz	wreg,f,c
  3399  000A84  D7FE               	goto	u1437
  3400  000A86  2E11               	decfsz	??_leds_red_and_yellow_glitch& (0+255),f,c
  3401  000A88  D7FC               	goto	u1437
  3402  000A8A  D000               	nop2	
  3403                           
  3404                           ;leds.c: 48: LATA &= ~(0x08);
  3405  000A8C  9689               	bcf	3977,3,c	;volatile
  3406                           
  3407                           ;leds.c: 49: LATA &= ~(0x04);
  3408  000A8E  9489               	bcf	3977,2,c	;volatile
  3409  000A90  0012               	return	
  3410  000A92                     __end_of_leds_red_and_yellow_glitch:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           tblptrh	equ	0xFF7
  3414                           tblptrl	equ	0xFF6
  3415                           tablat	equ	0xFF5
  3416                           prodh	equ	0xFF4
  3417                           prodl	equ	0xFF3
  3418                           intcon	equ	0xFF2
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           indf1	equ	0xFE7
  3422                           postdec1	equ	0xFE5
  3423                           fsr1h	equ	0xFE2
  3424                           fsr1l	equ	0xFE1
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _i2c_trig_stop *****************
  3433 ;; Defined at:
  3434 ;;		line 61 in file "i2c.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;		None               void
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3448 ;;      Params:         0       0       0       0
  3449 ;;      Locals:         0       0       0       0
  3450 ;;      Temps:          0       0       0       0
  3451 ;;      Totals:         0       0       0       0
  3452 ;;Total ram usage:        0 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    2
  3455 ;; This function calls:
  3456 ;;		_i2c_wait_ready
  3457 ;; This function is called by:
  3458 ;;		_hyt221_launch_acq
  3459 ;;		_hyt221_operation
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text23
  3464  000B4C                     __ptext23:
  3465                           	opt stack 0
  3466  000B4C                     _i2c_trig_stop:
  3467                           	opt stack 26
  3468                           
  3469                           ;i2c.c: 64: SSPCON2bits.PEN = 1;
  3470                           
  3471                           ;incstack = 0
  3472  000B4C  84C5               	bsf	4037,2,c	;volatile
  3473                           
  3474                           ;i2c.c: 65: i2c_wait_ready();
  3475  000B4E  EC73  F005         	call	_i2c_wait_ready	;wreg free
  3476  000B52  0012               	return	
  3477  000B54                     __end_of_i2c_trig_stop:
  3478                           	opt stack 0
  3479                           tblptru	equ	0xFF8
  3480                           tblptrh	equ	0xFF7
  3481                           tblptrl	equ	0xFF6
  3482                           tablat	equ	0xFF5
  3483                           prodh	equ	0xFF4
  3484                           prodl	equ	0xFF3
  3485                           intcon	equ	0xFF2
  3486                           postinc0	equ	0xFEE
  3487                           wreg	equ	0xFE8
  3488                           indf1	equ	0xFE7
  3489                           postdec1	equ	0xFE5
  3490                           fsr1h	equ	0xFE2
  3491                           fsr1l	equ	0xFE1
  3492                           indf2	equ	0xFDF
  3493                           postinc2	equ	0xFDE
  3494                           postdec2	equ	0xFDD
  3495                           fsr2h	equ	0xFDA
  3496                           fsr2l	equ	0xFD9
  3497                           status	equ	0xFD8
  3498                           
  3499 ;; *************** function _i2c_trig_start *****************
  3500 ;; Defined at:
  3501 ;;		line 53 in file "i2c.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;		None               void
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3515 ;;      Params:         0       0       0       0
  3516 ;;      Locals:         0       0       0       0
  3517 ;;      Temps:          0       0       0       0
  3518 ;;      Totals:         0       0       0       0
  3519 ;;Total ram usage:        0 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    2
  3522 ;; This function calls:
  3523 ;;		_i2c_wait_idle
  3524 ;;		_i2c_wait_ready
  3525 ;; This function is called by:
  3526 ;;		_hyt221_launch_acq
  3527 ;;		_hyt221_operation
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text24
  3532  000B40                     __ptext24:
  3533                           	opt stack 0
  3534  000B40                     _i2c_trig_start:
  3535                           	opt stack 26
  3536                           
  3537                           ;i2c.c: 55: i2c_wait_idle();
  3538                           
  3539                           ;incstack = 0
  3540  000B40  EC7C  F005         	call	_i2c_wait_idle	;wreg free
  3541                           
  3542                           ;i2c.c: 57: SSPCON2bits.SEN = 1;
  3543  000B44  80C5               	bsf	4037,0,c	;volatile
  3544                           
  3545                           ;i2c.c: 58: i2c_wait_ready();
  3546  000B46  EC73  F005         	call	_i2c_wait_ready	;wreg free
  3547  000B4A  0012               	return	
  3548  000B4C                     __end_of_i2c_trig_start:
  3549                           	opt stack 0
  3550                           tblptru	equ	0xFF8
  3551                           tblptrh	equ	0xFF7
  3552                           tblptrl	equ	0xFF6
  3553                           tablat	equ	0xFF5
  3554                           prodh	equ	0xFF4
  3555                           prodl	equ	0xFF3
  3556                           intcon	equ	0xFF2
  3557                           postinc0	equ	0xFEE
  3558                           wreg	equ	0xFE8
  3559                           indf1	equ	0xFE7
  3560                           postdec1	equ	0xFE5
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function _i2c_wait_ready *****************
  3571 ;; Defined at:
  3572 ;;		line 35 in file "i2c.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;		None               void
  3579 ;; Registers used:
  3580 ;;		wreg, status,2
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3586 ;;      Params:         0       0       0       0
  3587 ;;      Locals:         0       0       0       0
  3588 ;;      Temps:          0       0       0       0
  3589 ;;      Totals:         0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    1
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_i2c_trig_start
  3597 ;;		_i2c_trig_stop
  3598 ;;		_hyt221_launch_acq
  3599 ;;		_hyt221_operation
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text25
  3604  000AE6                     __ptext25:
  3605                           	opt stack 0
  3606  000AE6                     _i2c_wait_ready:
  3607                           	opt stack 27
  3608                           
  3609                           ;incstack = 0
  3610                           ;i2c.c: 37: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while (0
      +                          );;
  3611  000AE6  8ED3               	bsf	4051,7,c	;volatile
  3612  000AE8  0003               	sleep		;# 
  3613  000AEA  9ED3               	bcf	4051,7,c	;volatile
  3614  000AEC                     l2165:
  3615  000AEC  5045               	movf	_i2c_interupt_done,w,c
  3616  000AEE  B4D8               	btfsc	status,2,c
  3617  000AF0  D7FD               	goto	l2165
  3618                           
  3619                           ;i2c.c: 43: i2c_interupt_done = FALSE;
  3620  000AF2  0E00               	movlw	0
  3621  000AF4  6E45               	movwf	_i2c_interupt_done,c
  3622  000AF6  0012               	return	
  3623  000AF8                     __end_of_i2c_wait_ready:
  3624                           	opt stack 0
  3625                           tblptru	equ	0xFF8
  3626                           tblptrh	equ	0xFF7
  3627                           tblptrl	equ	0xFF6
  3628                           tablat	equ	0xFF5
  3629                           prodh	equ	0xFF4
  3630                           prodl	equ	0xFF3
  3631                           intcon	equ	0xFF2
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           indf1	equ	0xFE7
  3635                           postdec1	equ	0xFE5
  3636                           fsr1h	equ	0xFE2
  3637                           fsr1l	equ	0xFE1
  3638                           indf2	equ	0xFDF
  3639                           postinc2	equ	0xFDE
  3640                           postdec2	equ	0xFDD
  3641                           fsr2h	equ	0xFDA
  3642                           fsr2l	equ	0xFD9
  3643                           status	equ	0xFD8
  3644                           
  3645 ;; *************** function _i2c_wait_idle *****************
  3646 ;; Defined at:
  3647 ;;		line 46 in file "i2c.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;		None               void
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3661 ;;      Params:         0       0       0       0
  3662 ;;      Locals:         0       0       0       0
  3663 ;;      Temps:          1       0       0       0
  3664 ;;      Totals:         1       0       0       0
  3665 ;;Total ram usage:        1 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    1
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_i2c_trig_start
  3672 ;;		_hyt221_launch_acq
  3673 ;;		_hyt221_operation
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text26
  3678  000AF8                     __ptext26:
  3679                           	opt stack 0
  3680  000AF8                     _i2c_wait_idle:
  3681                           	opt stack 27
  3682  000AF8                     l2171:
  3683  000AF8  CFC5 F011          	movff	4037,??_i2c_wait_idle	;volatile
  3684  000AFC  0E1F               	movlw	31
  3685  000AFE  1611               	andwf	??_i2c_wait_idle,f,c
  3686  000B00  B4D8               	btfsc	status,2,c
  3687  000B02  B4C7               	btfsc	4039,2,c	;volatile
  3688  000B04  D7F9               	goto	l2171
  3689  000B06  0012               	return	
  3690  000B08                     __end_of_i2c_wait_idle:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           intcon	equ	0xFF2
  3699                           postinc0	equ	0xFEE
  3700                           wreg	equ	0xFE8
  3701                           indf1	equ	0xFE7
  3702                           postdec1	equ	0xFE5
  3703                           fsr1h	equ	0xFE2
  3704                           fsr1l	equ	0xFE1
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _hyt221_getTemp *****************
  3713 ;; Defined at:
  3714 ;;		line 118 in file "hyt221.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  temp_raw        2   20[COMRAM] unsigned int 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  2   16[COMRAM] unsigned int 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3728 ;;      Params:         2       0       0       0
  3729 ;;      Locals:         2       0       0       0
  3730 ;;      Temps:          2       0       0       0
  3731 ;;      Totals:         6       0       0       0
  3732 ;;Total ram usage:        6 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    1
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_main_loop
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text27
  3743  00089C                     __ptext27:
  3744                           	opt stack 0
  3745  00089C                     _hyt221_getTemp:
  3746                           	opt stack 28
  3747                           
  3748                           ;hyt221.c: 120: uint16_t temp_raw;
  3749                           ;hyt221.c: 121: temp_raw = gData[2];
  3750                           
  3751                           ;incstack = 0
  3752  00089C  5037               	movf	_gData+2,w,c
  3753  00089E  6E15               	movwf	hyt221_getTemp@temp_raw,c
  3754  0008A0  6A16               	clrf	hyt221_getTemp@temp_raw+1,c
  3755  0008A2  BE15               	btfsc	hyt221_getTemp@temp_raw,7,c
  3756  0008A4  0616               	decf	hyt221_getTemp@temp_raw+1,f,c
  3757                           
  3758                           ;hyt221.c: 122: temp_raw = temp_raw << 8;
  3759  0008A6  5015               	movf	hyt221_getTemp@temp_raw,w,c
  3760  0008A8  6E16               	movwf	hyt221_getTemp@temp_raw+1,c
  3761  0008AA  6A15               	clrf	hyt221_getTemp@temp_raw,c
  3762                           
  3763                           ;hyt221.c: 123: temp_raw += gData[3];
  3764  0008AC  5038               	movf	_gData+3,w,c
  3765  0008AE  2615               	addwf	hyt221_getTemp@temp_raw,f,c
  3766  0008B0  0E00               	movlw	0
  3767  0008B2  BE38               	btfsc	_gData+3,7,c
  3768  0008B4  0EFF               	movlw	255
  3769  0008B6  2216               	addwfc	hyt221_getTemp@temp_raw+1,f,c
  3770                           
  3771                           ;hyt221.c: 124: temp_raw = temp_raw >> 2;
  3772  0008B8  C015  F013         	movff	hyt221_getTemp@temp_raw,??_hyt221_getTemp
  3773  0008BC  C016  F014         	movff	hyt221_getTemp@temp_raw+1,??_hyt221_getTemp+1
  3774  0008C0  90D8               	bcf	status,0,c
  3775  0008C2  3214               	rrcf	??_hyt221_getTemp+1,f,c
  3776  0008C4  3213               	rrcf	??_hyt221_getTemp,f,c
  3777  0008C6  90D8               	bcf	status,0,c
  3778  0008C8  3214               	rrcf	??_hyt221_getTemp+1,f,c
  3779  0008CA  3213               	rrcf	??_hyt221_getTemp,f,c
  3780  0008CC  C013  F015         	movff	??_hyt221_getTemp,hyt221_getTemp@temp_raw
  3781  0008D0  C014  F016         	movff	??_hyt221_getTemp+1,hyt221_getTemp@temp_raw+1
  3782                           
  3783                           ;hyt221.c: 125: return temp_raw;
  3784  0008D4  C015  F011         	movff	hyt221_getTemp@temp_raw,?_hyt221_getTemp
  3785  0008D8  C016  F012         	movff	hyt221_getTemp@temp_raw+1,?_hyt221_getTemp+1
  3786  0008DC  0012               	return	
  3787  0008DE                     __end_of_hyt221_getTemp:
  3788                           	opt stack 0
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           indf1	equ	0xFE7
  3799                           postdec1	equ	0xFE5
  3800                           fsr1h	equ	0xFE2
  3801                           fsr1l	equ	0xFE1
  3802                           indf2	equ	0xFDF
  3803                           postinc2	equ	0xFDE
  3804                           postdec2	equ	0xFDD
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function _hyt221_getHumidity *****************
  3810 ;; Defined at:
  3811 ;;		line 128 in file "hyt221.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  humidity_raw    2   18[COMRAM] unsigned int 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2   16[COMRAM] unsigned int 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3825 ;;      Params:         2       0       0       0
  3826 ;;      Locals:         2       0       0       0
  3827 ;;      Temps:          0       0       0       0
  3828 ;;      Totals:         4       0       0       0
  3829 ;;Total ram usage:        4 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    1
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_main_loop
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text28
  3840  0009D0                     __ptext28:
  3841                           	opt stack 0
  3842  0009D0                     _hyt221_getHumidity:
  3843                           	opt stack 28
  3844                           
  3845                           ;hyt221.c: 130: uint16_t humidity_raw;
  3846                           ;hyt221.c: 131: humidity_raw = (gData[0] & 0x3F);
  3847                           
  3848                           ;incstack = 0
  3849  0009D0  0E3F               	movlw	63
  3850  0009D2  1435               	andwf	_gData,w,c
  3851  0009D4  6E13               	movwf	hyt221_getHumidity@humidity_raw,c
  3852  0009D6  6A14               	clrf	hyt221_getHumidity@humidity_raw+1,c
  3853                           
  3854                           ;hyt221.c: 132: humidity_raw = humidity_raw << 8;
  3855  0009D8  5013               	movf	hyt221_getHumidity@humidity_raw,w,c
  3856  0009DA  6E14               	movwf	hyt221_getHumidity@humidity_raw+1,c
  3857  0009DC  6A13               	clrf	hyt221_getHumidity@humidity_raw,c
  3858                           
  3859                           ;hyt221.c: 133: humidity_raw += gData[1];
  3860  0009DE  5036               	movf	_gData+1,w,c
  3861  0009E0  2613               	addwf	hyt221_getHumidity@humidity_raw,f,c
  3862  0009E2  0E00               	movlw	0
  3863  0009E4  BE36               	btfsc	_gData+1,7,c
  3864  0009E6  0EFF               	movlw	255
  3865  0009E8  2214               	addwfc	hyt221_getHumidity@humidity_raw+1,f,c
  3866                           
  3867                           ;hyt221.c: 135: return humidity_raw;
  3868  0009EA  C013  F011         	movff	hyt221_getHumidity@humidity_raw,?_hyt221_getHumidity
  3869  0009EE  C014  F012         	movff	hyt221_getHumidity@humidity_raw+1,?_hyt221_getHumidity+1
  3870  0009F2  0012               	return	
  3871  0009F4                     __end_of_hyt221_getHumidity:
  3872                           	opt stack 0
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           prodh	equ	0xFF4
  3878                           prodl	equ	0xFF3
  3879                           intcon	equ	0xFF2
  3880                           postinc0	equ	0xFEE
  3881                           wreg	equ	0xFE8
  3882                           indf1	equ	0xFE7
  3883                           postdec1	equ	0xFE5
  3884                           fsr1h	equ	0xFE2
  3885                           fsr1l	equ	0xFE1
  3886                           indf2	equ	0xFDF
  3887                           postinc2	equ	0xFDE
  3888                           postdec2	equ	0xFDD
  3889                           fsr2h	equ	0xFDA
  3890                           fsr2l	equ	0xFD9
  3891                           status	equ	0xFD8
  3892                           
  3893 ;; *************** function _batt_launch_acq *****************
  3894 ;; Defined at:
  3895 ;;		line 191 in file "main.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;		None
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;		None
  3900 ;; Return value:  Size  Location     Type
  3901 ;;		None               void
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3909 ;;      Params:         0       0       0       0
  3910 ;;      Locals:         0       0       0       0
  3911 ;;      Temps:          2       0       0       0
  3912 ;;      Totals:         2       0       0       0
  3913 ;;Total ram usage:        2 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    2
  3916 ;; This function calls:
  3917 ;;		_zb_handle_setbatVolt
  3918 ;; This function is called by:
  3919 ;;		_main_loop
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text29
  3924  000816                     __ptext29:
  3925                           	opt stack 0
  3926  000816                     _batt_launch_acq:
  3927                           	opt stack 27
  3928                           
  3929                           ;main.c: 193: LATBbits.LATB1 = 1;
  3930                           
  3931                           ;incstack = 0
  3932  000816  828A               	bsf	3978,1,c	;volatile
  3933                           
  3934                           ;main.c: 194: ADCON1 = 0x00;
  3935  000818  0E00               	movlw	0
  3936  00081A  6EC1               	movwf	4033,c	;volatile
  3937                           
  3938                           ;main.c: 195: ADCON0 = 0x20;
  3939  00081C  0E20               	movlw	32
  3940  00081E  6EC2               	movwf	4034,c	;volatile
  3941                           
  3942                           ;main.c: 196: ADCON2 = 0x8B;
  3943  000820  0E8B               	movlw	139
  3944  000822  6EC0               	movwf	4032,c	;volatile
  3945                           
  3946                           ;main.c: 197: ADCON0 |= 0x01;
  3947  000824  80C2               	bsf	4034,0,c	;volatile
  3948                           
  3949                           ;main.c: 198: ADCON0 |= 0x02 ;
  3950  000826  82C2               	bsf	4034,1,c	;volatile
  3951                           
  3952                           ;main.c: 200: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  3953  000828  8ED3               	bsf	4051,7,c	;volatile
  3954  00082A  0003               	sleep		;# 
  3955  00082C  9ED3               	bcf	4051,7,c	;volatile
  3956  00082E                     l135:
  3957  00082E  B2C2               	btfsc	4034,1,c	;volatile
  3958  000830  D7FE               	goto	l135
  3959                           
  3960                           ;main.c: 205: batt_value = (ADRESH << 8) | ADRESL;
  3961  000832  50C3               	movf	4035,w,c	;volatile
  3962  000834  CFC4 F013          	movff	4036,??_batt_launch_acq	;volatile
  3963  000838  6A14               	clrf	(??_batt_launch_acq+1)& (0+255),c
  3964  00083A  C013  F014         	movff	??_batt_launch_acq,??_batt_launch_acq+1
  3965  00083E  6A13               	clrf	??_batt_launch_acq,c
  3966  000840  1013               	iorwf	??_batt_launch_acq,w,c
  3967  000842  6E3F               	movwf	_batt_value,c
  3968  000844  5014               	movf	??_batt_launch_acq+1,w,c
  3969  000846  6E40               	movwf	_batt_value+1,c
  3970                           
  3971                           ;main.c: 206: LATBbits.LATB1 = 0;
  3972  000848  928A               	bcf	3978,1,c	;volatile
  3973                           
  3974                           ;main.c: 207: ADCON0 &= ~0x01;
  3975  00084A  90C2               	bcf	4034,0,c	;volatile
  3976                           
  3977                           ;main.c: 208: zb_handle_setbatVolt(batt_value);
  3978  00084C  C03F  F011         	movff	_batt_value,zb_handle_setbatVolt@battVoltage
  3979  000850  C040  F012         	movff	_batt_value+1,zb_handle_setbatVolt@battVoltage+1
  3980  000854  EC99  F005         	call	_zb_handle_setbatVolt	;wreg free
  3981  000858  0012               	return	
  3982  00085A                     __end_of_batt_launch_acq:
  3983                           	opt stack 0
  3984                           tblptru	equ	0xFF8
  3985                           tblptrh	equ	0xFF7
  3986                           tblptrl	equ	0xFF6
  3987                           tablat	equ	0xFF5
  3988                           prodh	equ	0xFF4
  3989                           prodl	equ	0xFF3
  3990                           intcon	equ	0xFF2
  3991                           postinc0	equ	0xFEE
  3992                           wreg	equ	0xFE8
  3993                           indf1	equ	0xFE7
  3994                           postdec1	equ	0xFE5
  3995                           fsr1h	equ	0xFE2
  3996                           fsr1l	equ	0xFE1
  3997                           indf2	equ	0xFDF
  3998                           postinc2	equ	0xFDE
  3999                           postdec2	equ	0xFDD
  4000                           fsr2h	equ	0xFDA
  4001                           fsr2l	equ	0xFD9
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function _zb_handle_setbatVolt *****************
  4005 ;; Defined at:
  4006 ;;		line 108 in file "zb_handle.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  battVoltage     2   16[COMRAM] unsigned int 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;		None               void
  4013 ;; Registers used:
  4014 ;;		wreg, status,2
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4020 ;;      Params:         2       0       0       0
  4021 ;;      Locals:         0       0       0       0
  4022 ;;      Temps:          0       0       0       0
  4023 ;;      Totals:         2       0       0       0
  4024 ;;Total ram usage:        2 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_batt_launch_acq
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text30
  4035  000B32                     __ptext30:
  4036                           	opt stack 0
  4037  000B32                     _zb_handle_setbatVolt:
  4038                           	opt stack 27
  4039                           
  4040                           ;zb_handle.c: 110: sensor_data.battRaw = battVoltage;
  4041                           
  4042                           ;incstack = 0
  4043  000B32  C011  F032         	movff	zb_handle_setbatVolt@battVoltage,_sensor_data+6
  4044  000B36  C012  F033         	movff	zb_handle_setbatVolt@battVoltage+1,_sensor_data+7
  4045                           
  4046                           ;zb_handle.c: 111: sensor_data.battStatus = (0x03);
  4047  000B3A  0E03               	movlw	3
  4048  000B3C  6E34               	movwf	_sensor_data+8,c
  4049  000B3E  0012               	return	
  4050  000B40                     __end_of_zb_handle_setbatVolt:
  4051                           	opt stack 0
  4052                           tblptru	equ	0xFF8
  4053                           tblptrh	equ	0xFF7
  4054                           tblptrl	equ	0xFF6
  4055                           tablat	equ	0xFF5
  4056                           prodh	equ	0xFF4
  4057                           prodl	equ	0xFF3
  4058                           intcon	equ	0xFF2
  4059                           postinc0	equ	0xFEE
  4060                           wreg	equ	0xFE8
  4061                           indf1	equ	0xFE7
  4062                           postdec1	equ	0xFE5
  4063                           fsr1h	equ	0xFE2
  4064                           fsr1l	equ	0xFE1
  4065                           indf2	equ	0xFDF
  4066                           postinc2	equ	0xFDE
  4067                           postdec2	equ	0xFDD
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function _i2c_setup *****************
  4073 ;; Defined at:
  4074 ;;		line 9 in file "i2c.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;		None               void
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4088 ;;      Params:         0       0       0       0
  4089 ;;      Locals:         0       0       0       0
  4090 ;;      Temps:          0       0       0       0
  4091 ;;      Totals:         0       0       0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    1
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_main
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text31
  4103  000950                     __ptext31:
  4104                           	opt stack 0
  4105  000950                     _i2c_setup:
  4106                           	opt stack 29
  4107                           
  4108                           ;i2c.c: 15: TRISC &= ~0x18;
  4109                           
  4110                           ;incstack = 0
  4111  000950  0EE7               	movlw	231
  4112  000952  1694               	andwf	3988,f,c	;volatile
  4113                           
  4114                           ;i2c.c: 16: LATCbits.LATC3 = 0;
  4115  000954  968B               	bcf	3979,3,c	;volatile
  4116                           
  4117                           ;i2c.c: 17: LATCbits.LATC4 = 0;
  4118  000956  988B               	bcf	3979,4,c	;volatile
  4119                           
  4120                           ;i2c.c: 18: _delay((unsigned long)((100)*((1000000)/4000000.0)));
  4121  000958  0E08               	movlw	8
  4122  00095A                     u1447:
  4123  00095A  2EE8               	decfsz	wreg,f,c
  4124  00095C  D7FE               	goto	u1447
  4125  00095E  F000               	nop	
  4126                           
  4127                           ;i2c.c: 20: TRISC |= 0x18;
  4128  000960  0E18               	movlw	24
  4129  000962  1294               	iorwf	3988,f,c	;volatile
  4130                           
  4131                           ;i2c.c: 23: SSPSTAT = 0x80;
  4132  000964  0E80               	movlw	128
  4133  000966  6EC7               	movwf	4039,c	;volatile
  4134                           
  4135                           ;i2c.c: 24: SSPADD = 0x01;
  4136  000968  0E01               	movlw	1
  4137  00096A  6EC8               	movwf	4040,c	;volatile
  4138                           
  4139                           ;i2c.c: 25: SSPCON1 = 0x28;
  4140  00096C  0E28               	movlw	40
  4141  00096E  6EC6               	movwf	4038,c	;volatile
  4142                           
  4143                           ;i2c.c: 26: SSPCON2 = 0x00;
  4144  000970  0E00               	movlw	0
  4145  000972  6EC5               	movwf	4037,c	;volatile
  4146                           
  4147                           ;i2c.c: 29: i2c_interupt_done = FALSE;
  4148  000974  0E00               	movlw	0
  4149  000976  6E45               	movwf	_i2c_interupt_done,c
  4150                           
  4151                           ;i2c.c: 30: PIR1bits.SSPIF = 0;
  4152  000978  969E               	bcf	3998,3,c	;volatile
  4153                           
  4154                           ;i2c.c: 31: PIR2bits.BCLIF = 0;
  4155  00097A  96A1               	bcf	4001,3,c	;volatile
  4156                           
  4157                           ;i2c.c: 32: PIE1bits.SSPIE = 1;
  4158  00097C  869D               	bsf	3997,3,c	;volatile
  4159  00097E  0012               	return	
  4160  000980                     __end_of_i2c_setup:
  4161                           	opt stack 0
  4162                           tblptru	equ	0xFF8
  4163                           tblptrh	equ	0xFF7
  4164                           tblptrl	equ	0xFF6
  4165                           tablat	equ	0xFF5
  4166                           prodh	equ	0xFF4
  4167                           prodl	equ	0xFF3
  4168                           intcon	equ	0xFF2
  4169                           postinc0	equ	0xFEE
  4170                           wreg	equ	0xFE8
  4171                           indf1	equ	0xFE7
  4172                           postdec1	equ	0xFE5
  4173                           fsr1h	equ	0xFE2
  4174                           fsr1l	equ	0xFE1
  4175                           indf2	equ	0xFDF
  4176                           postinc2	equ	0xFDE
  4177                           postdec2	equ	0xFDD
  4178                           fsr2h	equ	0xFDA
  4179                           fsr2l	equ	0xFD9
  4180                           status	equ	0xFD8
  4181                           
  4182 ;; *************** function _calibration *****************
  4183 ;; Defined at:
  4184 ;;		line 12 in file "osc.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  w               1   19[COMRAM] char 
  4189 ;;  tryCounter      1   18[COMRAM] char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;		None               void
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4199 ;;      Params:         0       0       0       0
  4200 ;;      Locals:         2       0       0       0
  4201 ;;      Temps:          1       0       0       0
  4202 ;;      Totals:         3       0       0       0
  4203 ;;Total ram usage:        3 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:    2
  4206 ;; This function calls:
  4207 ;;		_leds_red_glitch
  4208 ;; This function is called by:
  4209 ;;		_main
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text32
  4214  000522                     __ptext32:
  4215                           	opt stack 0
  4216  000522                     _calibration:
  4217                           	opt stack 28
  4218                           
  4219                           ;osc.c: 14: int8_t w;
  4220                           ;osc.c: 15: int8_t tryCounter;
  4221                           ;osc.c: 17: T1CON = 0x0F;
  4222                           
  4223                           ;incstack = 0
  4224  000522  0E0F               	movlw	15
  4225  000524  6ECD               	movwf	4045,c	;volatile
  4226                           
  4227                           ;osc.c: 18: tryCounter = 0;
  4228  000526  0E00               	movlw	0
  4229  000528  6E13               	movwf	calibration@tryCounter,c
  4230                           
  4231                           ;osc.c: 19: while (tryCounter < 32)
  4232  00052A  D035               	goto	l460
  4233  00052C                     l2577:
  4234                           
  4235                           ;osc.c: 20: {
  4236                           ;osc.c: 21: calibr = 0;
  4237  00052C  0E00               	movlw	0
  4238  00052E  6E44               	movwf	_calibr,c	;volatile
  4239                           
  4240                           ;osc.c: 22: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4241  000530  0E52               	movlw	82
  4242  000532  6E12               	movwf	??_calibration& (0+255),c
  4243  000534  0E2A               	movlw	42
  4244  000536                     u1457:
  4245  000536  2EE8               	decfsz	wreg,f,c
  4246  000538  D7FE               	goto	u1457
  4247  00053A  2E12               	decfsz	??_calibration& (0+255),f,c
  4248  00053C  D7FC               	goto	u1457
  4249                           
  4250                           ;osc.c: 23: T1CON = 0x0F;
  4251  00053E  0E0F               	movlw	15
  4252  000540  6ECD               	movwf	4045,c	;volatile
  4253                           
  4254                           ;osc.c: 26: TMR1H = 0xFF;
  4255  000542  68CF               	setf	4047,c	;volatile
  4256                           
  4257                           ;osc.c: 27: TMR1L = 0xE7;
  4258  000544  0EE7               	movlw	231
  4259  000546  6ECE               	movwf	4046,c	;volatile
  4260                           
  4261                           ;osc.c: 28: PIR1bits.TMR1IF = 0;
  4262  000548  909E               	bcf	3998,0,c	;volatile
  4263                           
  4264                           ;osc.c: 31: while (PIR1bits.TMR1IF == 0)
  4265  00054A  D001               	goto	l2591
  4266  00054C                     l2589:
  4267                           
  4268                           ;osc.c: 32: {
  4269                           ;osc.c: 33: calibr++;
  4270  00054C  2A44               	incf	_calibr,f,c	;volatile
  4271  00054E                     l2591:
  4272  00054E  A09E               	btfss	3998,0,c	;volatile
  4273  000550  D7FD               	goto	l2589
  4274                           
  4275                           ;osc.c: 34: }
  4276                           ;osc.c: 36: w = ((int8_t)(0x30)) - calibr;
  4277  000552  5044               	movf	_calibr,w,c
  4278  000554  0800               	sublw	0
  4279  000556  0F30               	addlw	48
  4280  000558  6E14               	movwf	calibration@w,c
  4281                           
  4282                           ;osc.c: 37: if (w > 0)
  4283  00055A  5014               	movf	calibration@w,w,c
  4284  00055C  0A80               	xorlw	128
  4285  00055E  0F7F               	addlw	-129
  4286  000560  A0D8               	btfss	status,0,c
  4287  000562  D009               	goto	l2599
  4288                           
  4289                           ;osc.c: 38: {
  4290                           ;osc.c: 40: w -= ((int8_t) (2));
  4291  000564  0EFE               	movlw	254
  4292  000566  2614               	addwf	calibration@w,f,c
  4293                           
  4294                           ;osc.c: 41: if (w > 0)
  4295  000568  5014               	movf	calibration@w,w,c
  4296  00056A  0A80               	xorlw	128
  4297  00056C  0F7F               	addlw	-129
  4298  00056E  A0D8               	btfss	status,0,c
  4299  000570  D017               	goto	l2607
  4300                           
  4301                           ;osc.c: 42: {
  4302                           ;osc.c: 44: OSCTUNE = (OSCTUNE + 1) & 0x1F;
  4303  000572  289B               	incf	3995,w,c	;volatile
  4304  000574  D00A               	goto	L10
  4305  000576                     l2599:
  4306                           
  4307                           ;osc.c: 51: else
  4308                           ;osc.c: 52: {
  4309                           ;osc.c: 54: w = ((int8_t) (2)) - w;
  4310  000576  5014               	movf	calibration@w,w,c
  4311  000578  0800               	sublw	0
  4312  00057A  0F02               	addlw	2
  4313  00057C  6E14               	movwf	calibration@w,c
  4314                           
  4315                           ;osc.c: 55: if (w > 0)
  4316  00057E  5014               	movf	calibration@w,w,c
  4317  000580  0A80               	xorlw	128
  4318  000582  0F7F               	addlw	-129
  4319  000584  A0D8               	btfss	status,0,c
  4320  000586  D00C               	goto	l2607
  4321                           
  4322                           ;osc.c: 56: {
  4323                           ;osc.c: 57: OSCTUNE = (OSCTUNE - 1) & 0x1F;
  4324  000588  049B               	decf	3995,w,c	;volatile
  4325  00058A                     L10:
  4326  00058A  0B1F               	andlw	31
  4327  00058C  6E9B               	movwf	3995,c	;volatile
  4328                           
  4329                           ;osc.c: 62: }
  4330                           ;osc.c: 63: }
  4331                           ;osc.c: 64: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4332                           
  4333                           ;osc.c: 59: else
  4334                           ;osc.c: 60: {
  4335                           ;osc.c: 61: break;
  4336                           
  4337                           ;osc.c: 58: }
  4338  00058E  0E19               	movlw	25
  4339  000590                     u1467:
  4340  000590  2EE8               	decfsz	wreg,f,c
  4341  000592  D7FE               	goto	u1467
  4342                           
  4343                           ;osc.c: 65: tryCounter++;
  4344  000594  2A13               	incf	calibration@tryCounter,f,c
  4345  000596                     l460:
  4346  000596  5013               	movf	calibration@tryCounter,w,c
  4347  000598  0A80               	xorlw	128
  4348  00059A  0F60               	addlw	-160
  4349  00059C  A0D8               	btfss	status,0,c
  4350  00059E  D7C6               	goto	l2577
  4351  0005A0                     l2607:
  4352                           
  4353                           ;osc.c: 66: }
  4354                           ;osc.c: 68: if (tryCounter >= 32)
  4355  0005A0  5013               	movf	calibration@tryCounter,w,c
  4356  0005A2  0A80               	xorlw	128
  4357  0005A4  0F60               	addlw	-160
  4358  0005A6  A0D8               	btfss	status,0,c
  4359  0005A8  D019               	goto	l2623
  4360                           
  4361                           ;osc.c: 69: {
  4362                           ;osc.c: 70: OSCTUNE = 0;
  4363  0005AA  0E00               	movlw	0
  4364  0005AC  6E9B               	movwf	3995,c	;volatile
  4365                           
  4366                           ;osc.c: 71: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4367  0005AE  0E19               	movlw	25
  4368  0005B0                     u1477:
  4369  0005B0  2EE8               	decfsz	wreg,f,c
  4370  0005B2  D7FE               	goto	u1477
  4371                           
  4372                           ;osc.c: 72: leds_red_glitch();
  4373  0005B4  EC5F  F005         	call	_leds_red_glitch	;wreg free
  4374                           
  4375                           ;osc.c: 73: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4376  0005B8  0E52               	movlw	82
  4377  0005BA  6E12               	movwf	??_calibration& (0+255),c
  4378  0005BC  0E2A               	movlw	42
  4379  0005BE                     u1487:
  4380  0005BE  2EE8               	decfsz	wreg,f,c
  4381  0005C0  D7FE               	goto	u1487
  4382  0005C2  2E12               	decfsz	??_calibration& (0+255),f,c
  4383  0005C4  D7FC               	goto	u1487
  4384                           
  4385                           ;osc.c: 74: leds_red_glitch();
  4386  0005C6  EC5F  F005         	call	_leds_red_glitch	;wreg free
  4387                           
  4388                           ;osc.c: 75: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4389  0005CA  0E52               	movlw	82
  4390  0005CC  6E12               	movwf	??_calibration& (0+255),c
  4391  0005CE  0E2A               	movlw	42
  4392  0005D0                     u1497:
  4393  0005D0  2EE8               	decfsz	wreg,f,c
  4394  0005D2  D7FE               	goto	u1497
  4395  0005D4  2E12               	decfsz	??_calibration& (0+255),f,c
  4396  0005D6  D7FC               	goto	u1497
  4397                           
  4398                           ;osc.c: 76: leds_red_glitch();
  4399  0005D8  EC5F  F005         	call	_leds_red_glitch	;wreg free
  4400  0005DC                     l2623:
  4401                           
  4402                           ;osc.c: 77: }
  4403                           ;osc.c: 80: T1CON = 0;
  4404  0005DC  0E00               	movlw	0
  4405  0005DE  6ECD               	movwf	4045,c	;volatile
  4406  0005E0  0012               	return	
  4407  0005E2                     __end_of_calibration:
  4408                           	opt stack 0
  4409                           tblptru	equ	0xFF8
  4410                           tblptrh	equ	0xFF7
  4411                           tblptrl	equ	0xFF6
  4412                           tablat	equ	0xFF5
  4413                           prodh	equ	0xFF4
  4414                           prodl	equ	0xFF3
  4415                           intcon	equ	0xFF2
  4416                           postinc0	equ	0xFEE
  4417                           wreg	equ	0xFE8
  4418                           indf1	equ	0xFE7
  4419                           postdec1	equ	0xFE5
  4420                           fsr1h	equ	0xFE2
  4421                           fsr1l	equ	0xFE1
  4422                           indf2	equ	0xFDF
  4423                           postinc2	equ	0xFDE
  4424                           postdec2	equ	0xFDD
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8
  4428                           
  4429 ;; *************** function _leds_red_glitch *****************
  4430 ;; Defined at:
  4431 ;;		line 21 in file "leds.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;		None               void
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4445 ;;      Params:         0       0       0       0
  4446 ;;      Locals:         0       0       0       0
  4447 ;;      Temps:          1       0       0       0
  4448 ;;      Totals:         1       0       0       0
  4449 ;;Total ram usage:        1 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    1
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_main_loop
  4456 ;;		_calibration
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text33
  4461  000ABE                     __ptext33:
  4462                           	opt stack 0
  4463  000ABE                     _leds_red_glitch:
  4464                           	opt stack 28
  4465                           
  4466                           ;leds.c: 23: LATA |= (0x08);
  4467                           
  4468                           ;incstack = 0
  4469  000ABE  8689               	bsf	3977,3,c	;volatile
  4470                           
  4471                           ;leds.c: 24: _delay((unsigned long)((100)*((1000000)/4000.0)));
  4472  000AC0  0E21               	movlw	33
  4473  000AC2  6E11               	movwf	??_leds_red_glitch& (0+255),c
  4474  000AC4  0E76               	movlw	118
  4475  000AC6                     u1507:
  4476  000AC6  2EE8               	decfsz	wreg,f,c
  4477  000AC8  D7FE               	goto	u1507
  4478  000ACA  2E11               	decfsz	??_leds_red_glitch& (0+255),f,c
  4479  000ACC  D7FC               	goto	u1507
  4480  000ACE  D000               	nop2	
  4481                           
  4482                           ;leds.c: 25: LATA &= ~(0x08);
  4483  000AD0  9689               	bcf	3977,3,c	;volatile
  4484  000AD2  0012               	return	
  4485  000AD4                     __end_of_leds_red_glitch:
  4486                           	opt stack 0
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           postinc0	equ	0xFEE
  4495                           wreg	equ	0xFE8
  4496                           indf1	equ	0xFE7
  4497                           postdec1	equ	0xFE5
  4498                           fsr1h	equ	0xFE2
  4499                           fsr1l	equ	0xFE1
  4500                           indf2	equ	0xFDF
  4501                           postinc2	equ	0xFDE
  4502                           postdec2	equ	0xFDD
  4503                           fsr2h	equ	0xFDA
  4504                           fsr2l	equ	0xFD9
  4505                           status	equ	0xFD8
  4506                           
  4507 ;; *************** function _isr_hi *****************
  4508 ;; Defined at:
  4509 ;;		line 17 in file "interrupt.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  dummy           1   15[COMRAM] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;		None               void
  4516 ;; Registers used:
  4517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4523 ;;      Params:         0       0       0       0
  4524 ;;      Locals:         1       0       0       0
  4525 ;;      Temps:         15       0       0       0
  4526 ;;      Totals:        16       0       0       0
  4527 ;;Total ram usage:       16 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		Interrupt level 2
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	intcode
  4537  000008                     __pintcode:
  4538                           	opt stack 0
  4539  000008                     _isr_hi:
  4540                           	opt stack 25
  4541                           
  4542                           ;incstack = 0
  4543  000008  CFFA F002          	movff	pclath,??_isr_hi+1
  4544  00000C  CFFB F003          	movff	pclatu,??_isr_hi+2
  4545  000010  CFE9 F004          	movff	fsr0l,??_isr_hi+3
  4546  000014  EDEA  F000         	call	int_func,f	;refresh shadow registers
  4547                           pclatu	equ	0xFFB
  4548                           pclath	equ	0xFFA
  4549                           tblptru	equ	0xFF8
  4550                           tblptrh	equ	0xFF7
  4551                           tblptrl	equ	0xFF6
  4552                           tablat	equ	0xFF5
  4553                           prodh	equ	0xFF4
  4554                           prodl	equ	0xFF3
  4555                           intcon	equ	0xFF2
  4556                           postinc0	equ	0xFEE
  4557                           fsr0l	equ	0xFE9
  4558                           wreg	equ	0xFE8
  4559                           indf1	equ	0xFE7
  4560                           postdec1	equ	0xFE5
  4561                           fsr1h	equ	0xFE2
  4562                           fsr1l	equ	0xFE1
  4563                           indf2	equ	0xFDF
  4564                           postinc2	equ	0xFDE
  4565                           postdec2	equ	0xFDD
  4566                           fsr2h	equ	0xFDA
  4567                           fsr2l	equ	0xFD9
  4568                           status	equ	0xFD8
  4569                           
  4570                           	psect	intcode_body
  4571  0001D4                     __pintcode_body:
  4572                           	opt stack 25
  4573  0001D4                     int_func:
  4574                           	opt stack 25
  4575  0001D4  0006               	pop		; remove dummy address from shadow register refresh
  4576  0001D6  CFEA F005          	movff	fsr0h,??_isr_hi+4
  4577  0001DA  CFE1 F006          	movff	fsr1l,??_isr_hi+5
  4578  0001DE  CFE2 F007          	movff	fsr1h,??_isr_hi+6
  4579  0001E2  CFD9 F008          	movff	fsr2l,??_isr_hi+7
  4580  0001E6  CFDA F009          	movff	fsr2h,??_isr_hi+8
  4581  0001EA  CFF3 F00A          	movff	prodl,??_isr_hi+9
  4582  0001EE  CFF4 F00B          	movff	prodh,??_isr_hi+10
  4583  0001F2  CFF6 F00C          	movff	tblptrl,??_isr_hi+11
  4584  0001F6  CFF7 F00D          	movff	tblptrh,??_isr_hi+12
  4585  0001FA  CFF8 F00E          	movff	tblptru,??_isr_hi+13
  4586  0001FE  CFF5 F00F          	movff	tablat,??_isr_hi+14
  4587                           
  4588                           ;interrupt.c: 20: if (PIE1bits.SSPIE & PIR1bits.SSPIF)
  4589  000202  0E01               	movlw	1
  4590  000204  A69D               	btfss	3997,3,c	;volatile
  4591  000206  0E00               	movlw	0
  4592  000208  A69E               	btfss	3998,3,c	;volatile
  4593  00020A  0E00               	movlw	0
  4594  00020C  A0E8               	btfss	wreg,0,c
  4595  00020E  D003               	goto	i2u83_40
  4596  000210  6A01               	clrf	??_isr_hi& (0+255),c
  4597  000212  2A01               	incf	??_isr_hi& (0+255),f,c
  4598  000214  D001               	goto	i2u83_48
  4599  000216                     i2u83_40:
  4600  000216  6A01               	clrf	??_isr_hi& (0+255),c
  4601  000218                     i2u83_48:
  4602  000218  5001               	movf	??_isr_hi,w,c
  4603  00021A  B4D8               	btfsc	status,2,c
  4604  00021C  D004               	goto	i2l2107
  4605                           
  4606                           ;interrupt.c: 21: {
  4607                           ;interrupt.c: 22: PIR1bits.SSPIF = 0;
  4608  00021E  969E               	bcf	3998,3,c	;volatile
  4609                           
  4610                           ;interrupt.c: 23: i2c_interupt_done = TRUE;
  4611  000220  0E01               	movlw	1
  4612  000222  6E45               	movwf	_i2c_interupt_done,c
  4613  000224  D059               	goto	i2l431
  4614  000226                     i2l2107:
  4615                           
  4616                           ;interrupt.c: 25: }
  4617                           ;interrupt.c: 28: if (INTCONbits.TMR0IE & INTCONbits.TMR0IF)
  4618  000226  0E01               	movlw	1
  4619  000228  AAF2               	btfss	intcon,5,c	;volatile
  4620  00022A  0E00               	movlw	0
  4621  00022C  A4F2               	btfss	intcon,2,c	;volatile
  4622  00022E  0E00               	movlw	0
  4623  000230  A0E8               	btfss	wreg,0,c
  4624  000232  D003               	goto	i2u85_40
  4625  000234  6A01               	clrf	??_isr_hi& (0+255),c
  4626  000236  2A01               	incf	??_isr_hi& (0+255),f,c
  4627  000238  D001               	goto	i2u85_48
  4628  00023A                     i2u85_40:
  4629  00023A  6A01               	clrf	??_isr_hi& (0+255),c
  4630  00023C                     i2u85_48:
  4631  00023C  5001               	movf	??_isr_hi,w,c
  4632  00023E  B4D8               	btfsc	status,2,c
  4633  000240  D004               	goto	i2l2115
  4634                           
  4635                           ;interrupt.c: 29: {
  4636                           ;interrupt.c: 30: timer0_interupt_done = TRUE;
  4637  000242  0E01               	movlw	1
  4638  000244  6E47               	movwf	_timer0_interupt_done,c
  4639                           
  4640                           ;interrupt.c: 49: INTCONbits.TMR0IF = 0;
  4641  000246  94F2               	bcf	intcon,2,c	;volatile
  4642  000248  D047               	goto	i2l431
  4643  00024A                     i2l2115:
  4644                           
  4645                           ;interrupt.c: 51: }
  4646                           ;interrupt.c: 54: if (PIE1bits.ADIE & PIR1bits.ADIF)
  4647  00024A  0E01               	movlw	1
  4648  00024C  AC9D               	btfss	3997,6,c	;volatile
  4649  00024E  0E00               	movlw	0
  4650  000250  AC9E               	btfss	3998,6,c	;volatile
  4651  000252  0E00               	movlw	0
  4652  000254  A0E8               	btfss	wreg,0,c
  4653  000256  D003               	goto	i2u87_40
  4654  000258  6A01               	clrf	??_isr_hi& (0+255),c
  4655  00025A  2A01               	incf	??_isr_hi& (0+255),f,c
  4656  00025C  D001               	goto	i2u87_48
  4657  00025E                     i2u87_40:
  4658  00025E  6A01               	clrf	??_isr_hi& (0+255),c
  4659  000260                     i2u87_48:
  4660  000260  5001               	movf	??_isr_hi,w,c
  4661  000262  B4D8               	btfsc	status,2,c
  4662  000264  D002               	goto	i2l2119
  4663                           
  4664                           ;interrupt.c: 55: {
  4665                           ;interrupt.c: 56: PIR1bits.ADIF = 0;
  4666  000266  9C9E               	bcf	3998,6,c	;volatile
  4667                           
  4668                           ;interrupt.c: 57: return;
  4669  000268  D037               	goto	i2l431
  4670  00026A                     i2l2119:
  4671                           
  4672                           ;interrupt.c: 58: }
  4673                           ;interrupt.c: 61: if (PIE1bits.RC1IE & PIR1bits.RCIF)
  4674  00026A  0E01               	movlw	1
  4675  00026C  AA9D               	btfss	3997,5,c	;volatile
  4676  00026E  0E00               	movlw	0
  4677  000270  AA9E               	btfss	3998,5,c	;volatile
  4678  000272  0E00               	movlw	0
  4679  000274  A0E8               	btfss	wreg,0,c
  4680  000276  D003               	goto	i2u89_40
  4681  000278  6A01               	clrf	??_isr_hi& (0+255),c
  4682  00027A  2A01               	incf	??_isr_hi& (0+255),f,c
  4683  00027C  D001               	goto	i2u89_48
  4684  00027E                     i2u89_40:
  4685  00027E  6A01               	clrf	??_isr_hi& (0+255),c
  4686  000280                     i2u89_48:
  4687  000280  5001               	movf	??_isr_hi,w,c
  4688  000282  B4D8               	btfsc	status,2,c
  4689  000284  D029               	goto	i2l431
  4690                           
  4691                           ;interrupt.c: 62: {
  4692                           ;interrupt.c: 63: uint8_t dummy;
  4693                           ;interrupt.c: 67: if (RCSTAbits.FERR)
  4694  000286  A4AB               	btfss	4011,2,c	;volatile
  4695  000288  D005               	goto	i2l435
  4696                           
  4697                           ;interrupt.c: 68: {
  4698                           ;interrupt.c: 70: UART_errorStatus.framingError++;
  4699  00028A  2A39               	incf	_UART_errorStatus,f,c
  4700                           
  4701                           ;interrupt.c: 72: dummy = RCREG;
  4702  00028C  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4703  000290  00FF               	reset		;# 
  4704                           
  4705                           ;interrupt.c: 74: }
  4706  000292  D022               	goto	i2l431
  4707  000294                     i2l435:
  4708                           
  4709                           ;interrupt.c: 75: else if (RCSTAbits.OERR)
  4710  000294  A2AB               	btfss	4011,1,c	;volatile
  4711  000296  D005               	goto	i2l2133
  4712                           
  4713                           ;interrupt.c: 76: {
  4714                           ;interrupt.c: 78: UART_errorStatus.overrunError++;
  4715  000298  2A3A               	incf	_UART_errorStatus+1,f,c
  4716                           
  4717                           ;interrupt.c: 79: dummy = RCREG;
  4718  00029A  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4719                           
  4720                           ;interrupt.c: 81: RCSTAbits.CREN = 0;
  4721  00029E  98AB               	bcf	4011,4,c	;volatile
  4722                           
  4723                           ;interrupt.c: 82: }
  4724  0002A0  D01B               	goto	i2l431
  4725  0002A2                     i2l2133:
  4726                           
  4727                           ;interrupt.c: 83: else if (UART_rxBufferNb < (50))
  4728  0002A2  0E32               	movlw	50
  4729  0002A4  5C42               	subwf	_UART_rxBufferNb,w,c
  4730  0002A6  B0D8               	btfsc	status,0,c
  4731  0002A8  D014               	goto	i2l2145
  4732                           
  4733                           ;interrupt.c: 84: {
  4734                           ;interrupt.c: 85: UART_rxBuffer[UART_writeIndex] = RCREG;
  4735  0002AA  5043               	movf	_UART_writeIndex,w,c
  4736  0002AC  0D01               	mullw	1
  4737  0002AE  0100               	movlb	0	; () banked
  4738  0002B0  0E80               	movlw	low _UART_rxBuffer
  4739  0002B2  24F3               	addwf	prodl,w,c
  4740  0002B4  6ED9               	movwf	fsr2l,c
  4741  0002B6  0100               	movlb	0	; () banked
  4742  0002B8  0E00               	movlw	high _UART_rxBuffer
  4743  0002BA  20F4               	addwfc	prodh,w,c
  4744  0002BC  6EDA               	movwf	fsr2h,c
  4745  0002BE  CFAE FFDF          	movff	4014,indf2	;volatile
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;interrupt.c: 86: UART_writeIndex++;
  4749  0002C2  2A43               	incf	_UART_writeIndex,f,c
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;interrupt.c: 87: if (UART_writeIndex >= (50))
  4753  0002C4  0E31               	movlw	49
  4754  0002C6  6443               	cpfsgt	_UART_writeIndex,c
  4755  0002C8  D002               	goto	i2l2143
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;interrupt.c: 88: {
  4759                           ;interrupt.c: 89: UART_writeIndex = 0;
  4760  0002CA  0E00               	movlw	0
  4761  0002CC  6E43               	movwf	_UART_writeIndex,c
  4762  0002CE                     i2l2143:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;interrupt.c: 90: }
  4766                           ;interrupt.c: 91: UART_rxBufferNb++;
  4767  0002CE  2A42               	incf	_UART_rxBufferNb,f,c
  4768                           
  4769                           ;interrupt.c: 92: }
  4770  0002D0  D003               	goto	i2l431
  4771  0002D2                     i2l2145:
  4772                           
  4773                           ;interrupt.c: 93: else
  4774                           ;interrupt.c: 94: {
  4775                           ;interrupt.c: 96: UART_errorStatus.bufferOverrunError++;
  4776  0002D2  2A3B               	incf	_UART_errorStatus+2,f,c
  4777                           
  4778                           ;interrupt.c: 97: dummy = RCREG;
  4779  0002D4  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4780  0002D8                     i2l431:
  4781  0002D8  C00F  FFF5         	movff	??_isr_hi+14,tablat
  4782  0002DC  C00E  FFF8         	movff	??_isr_hi+13,tblptru
  4783  0002E0  C00D  FFF7         	movff	??_isr_hi+12,tblptrh
  4784  0002E4  C00C  FFF6         	movff	??_isr_hi+11,tblptrl
  4785  0002E8  C00B  FFF4         	movff	??_isr_hi+10,prodh
  4786  0002EC  C00A  FFF3         	movff	??_isr_hi+9,prodl
  4787  0002F0  C009  FFDA         	movff	??_isr_hi+8,fsr2h
  4788  0002F4  C008  FFD9         	movff	??_isr_hi+7,fsr2l
  4789  0002F8  C007  FFE2         	movff	??_isr_hi+6,fsr1h
  4790  0002FC  C006  FFE1         	movff	??_isr_hi+5,fsr1l
  4791  000300  C005  FFEA         	movff	??_isr_hi+4,fsr0h
  4792  000304  C004  FFE9         	movff	??_isr_hi+3,fsr0l
  4793  000308  C003  FFFB         	movff	??_isr_hi+2,pclatu
  4794  00030C  C002  FFFA         	movff	??_isr_hi+1,pclath
  4795  000310  0011               	retfie		f
  4796  000312                     __end_of_isr_hi:
  4797                           	opt stack 0
  4798  0000                     pclatu	equ	0xFFB
  4799                           pclath	equ	0xFFA
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           postinc0	equ	0xFEE
  4808                           fsr0h	equ	0xFEA
  4809                           fsr0l	equ	0xFE9
  4810                           wreg	equ	0xFE8
  4811                           indf1	equ	0xFE7
  4812                           postdec1	equ	0xFE5
  4813                           fsr1h	equ	0xFE2
  4814                           fsr1l	equ	0xFE1
  4815                           indf2	equ	0xFDF
  4816                           postinc2	equ	0xFDE
  4817                           postdec2	equ	0xFDD
  4818                           fsr2h	equ	0xFDA
  4819                           fsr2l	equ	0xFD9
  4820                           status	equ	0xFD8
  4821                           pclatu	equ	0xFFB
  4822                           pclath	equ	0xFFA
  4823                           tblptru	equ	0xFF8
  4824                           tblptrh	equ	0xFF7
  4825                           tblptrl	equ	0xFF6
  4826                           tablat	equ	0xFF5
  4827                           prodh	equ	0xFF4
  4828                           prodl	equ	0xFF3
  4829                           intcon	equ	0xFF2
  4830                           postinc0	equ	0xFEE
  4831                           fsr0h	equ	0xFEA
  4832                           fsr0l	equ	0xFE9
  4833                           wreg	equ	0xFE8
  4834                           indf1	equ	0xFE7
  4835                           postdec1	equ	0xFE5
  4836                           fsr1h	equ	0xFE2
  4837                           fsr1l	equ	0xFE1
  4838                           indf2	equ	0xFDF
  4839                           postinc2	equ	0xFDE
  4840                           postdec2	equ	0xFDD
  4841                           fsr2h	equ	0xFDA
  4842                           fsr2l	equ	0xFD9
  4843                           status	equ	0xFD8
  4844                           
  4845                           	psect	rparam
  4846  0000                     pclatu	equ	0xFFB
  4847                           pclath	equ	0xFFA
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           postinc0	equ	0xFEE
  4856                           fsr0h	equ	0xFEA
  4857                           fsr0l	equ	0xFE9
  4858                           wreg	equ	0xFE8
  4859                           indf1	equ	0xFE7
  4860                           postdec1	equ	0xFE5
  4861                           fsr1h	equ	0xFE2
  4862                           fsr1l	equ	0xFE1
  4863                           indf2	equ	0xFDF
  4864                           postinc2	equ	0xFDE
  4865                           postdec2	equ	0xFDD
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43     111
    BANK0           128      4     104
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zigbee_appendChecksum@sizeFrame	PTR unsigned char  size(2) Largest target is 1
		 -> zb_handle_sendData@frameSize(COMRAM[1]), 

    zigbee_appendChecksum@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    S1409$data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame	PTR struct . size(2) Largest target is 9
		 -> zb_handle@decodedFrame(COMRAM[8]), 

    zb_decodage@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    zb_doChecksum@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), zb_frameToSend(COMRAM[33]), 

    uart_read@buffer	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_read@b	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_write@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    uart_write@b	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 


Critical Paths under _main in COMRAM

    _main_loop->_zb_handle
    _zb_handle_waitAck->_zb_handle
    _zb_handle->_zb_decodage
    _zb_decodage->_zb_doChecksum
    _zb_handle_setTempRaw->_hyt221_getTemp
    _zb_handle_setHumidityRaw->_hyt221_getHumidity
    _zb_handle_sendData->_zigbee_appendChecksum
    _zigbee_appendChecksum->_zb_doChecksum
    _hyt221_operation->_i2c_wait_idle
    _hyt221_operation->_leds_red_and_yellow_glitch
    _hyt221_launch_acq->_i2c_wait_idle
    _hyt221_launch_acq->_leds_red_and_yellow_glitch
    _i2c_trig_start->_i2c_wait_idle
    _batt_launch_acq->_zb_handle_setbatVolt
    _calibration->_leds_red_glitch

Critical Paths under _isr_hi in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_zb_handle_waitAck

Critical Paths under _isr_hi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_hi in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_hi in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6966
                        _calibration
                          _i2c_setup
                          _main_loop
                         _uart_setup
 ---------------------------------------------------------------------------------
 (1) _uart_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                            2     2      0    6829
                                              2 BANK0      2     2      0
                    _batt_launch_acq
                 _hyt221_getHumidity
                     _hyt221_getTemp
                  _hyt221_launch_acq
                   _hyt221_operation
                  _leds_green_glitch
                    _leds_red_glitch
                 _leds_yellow_glitch
                  _timer0_wait_262ms
                   _timer0_wait_65ms
                          _zb_handle
                _zb_handle_getStatus
              _zb_handle_resetStatus
                 _zb_handle_sendData
           _zb_handle_setHumidityRaw
               _zb_handle_setTempRaw
                  _zb_handle_waitAck
 ---------------------------------------------------------------------------------
 (2) _zb_handle_waitAck                                    2     2      0    2648
                                              0 BANK0      2     2      0
                  _timer0_wait_262ms
                          _zb_handle
 ---------------------------------------------------------------------------------
 (3) _zb_handle                                           11    11      0    2567
                                             32 COMRAM    11    11      0
                          _uart_read
                        _zb_decodage
 ---------------------------------------------------------------------------------
 (4) _zb_decodage                                         11     6      5    1601
                                             21 COMRAM    11     6      5
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (4) _uart_read                                            7     4      3     495
                                             16 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (3) _timer0_wait_262ms                                    0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setTempRaw                                 2     0      2      77
                                             22 COMRAM     2     0      2
                     _hyt221_getTemp (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setHumidityRaw                             2     0      2      77
                                             20 COMRAM     2     0      2
                 _hyt221_getHumidity (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_sendData                                   4     4      0    1020
                                             28 COMRAM     4     4      0
                         _uart_write
              _zigbee_appendChecksum
 ---------------------------------------------------------------------------------
 (3) _zigbee_appendChecksum                                7     3      4     774
                                             21 COMRAM     7     3      4
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (5) _zb_doChecksum                                        5     2      3     427
                                             16 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _uart_write                                           6     4      2     169
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _zb_handle_resetStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _zb_handle_getStatus                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer0_wait_65ms                                     0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (4) _timer0_wait_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leds_yellow_glitch                                   1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _leds_green_glitch                                    1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_operation                                     4     4      0     115
                                             17 COMRAM     4     4      0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
         _leds_red_and_yellow_glitch
 ---------------------------------------------------------------------------------
 (2) _hyt221_launch_acq                                    0     0      0       0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
         _leds_red_and_yellow_glitch
 ---------------------------------------------------------------------------------
 (3) _leds_red_and_yellow_glitch                           1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_stop                                        0     0      0       0
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_start                                       0     0      0       0
                      _i2c_wait_idle
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_idle                                        1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_getTemp                                       6     4      2      70
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _hyt221_getHumidity                                   4     2      2      47
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _batt_launch_acq                                      2     2      0      75
                                             18 COMRAM     2     2      0
               _zb_handle_setbatVolt
 ---------------------------------------------------------------------------------
 (3) _zb_handle_setbatVolt                                 2     0      2      75
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration                                          3     3      0     137
                                             17 COMRAM     3     3      0
                    _leds_red_glitch
 ---------------------------------------------------------------------------------
 (2) _leds_red_glitch                                      1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr_hi                                              16    16      0       3
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration
     _leds_red_glitch
   _i2c_setup
   _main_loop
     _batt_launch_acq
       _zb_handle_setbatVolt
     _hyt221_getHumidity
     _hyt221_getTemp
     _hyt221_launch_acq
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_red_and_yellow_glitch
     _hyt221_operation
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_red_and_yellow_glitch
     _leds_green_glitch
     _leds_red_glitch
     _leds_yellow_glitch
     _timer0_wait_262ms
       _timer0_wait_ready
     _timer0_wait_65ms
       _timer0_wait_ready
     _zb_handle
       _uart_read
       _zb_decodage
         _zb_doChecksum
     _zb_handle_getStatus
     _zb_handle_resetStatus
     _zb_handle_sendData
       _uart_write
       _zigbee_appendChecksum
         _zb_doChecksum
     _zb_handle_setHumidityRaw
       _hyt221_getHumidity (ARG)
     _zb_handle_setTempRaw
       _hyt221_getTemp (ARG)
     _zb_handle_waitAck
       _timer0_wait_262ms
         _timer0_wait_ready
       _zb_handle
         _uart_read
         _zb_decodage
           _zb_doChecksum
   _uart_setup

 _isr_hi (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      4      68       5       81.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D7       3        0.0%
DATA                 0      0      D7      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Aug 15 20:57:45 2016

            __size_of_i2c_trig_start 000C                          _SSPSTATbits 000FC7  
                     uart_write@size 0015                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                                l121 0406                                  l135 082E  
                                l127 0436                                  l333 04A2  
                                l246 0902                                  l354 0520  
                                l363 094E                                  l460 0596  
                                l268 006A                                  l385 09CE  
                                l396 0650                                  l389 067C  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                prod 000FF3                                  wreg 000FE8  
        __end_of_zb_handle_getStatus 0B58           __end_of_zb_handle_sendData 070A  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               l2221 0130                                 l2213 0086  
                               l2223 0152                                 l2233 01B2  
                               l2209 0066                                 l2171 0AF8  
                               l2331 090C                                 l2155 0988  
                               l2227 0172                                 l2235 01D0  
                               l2165 0AEC                                 l2229 01AC  
                               l2261 04C6                                 l2239 0ADA  
                               l2327 08EE                                 l2159 099E  
                               l2191 0752                                 l2441 0602  
                               l2273 04E8                                 l2265 04CE  
                               l2281 04FE                                 l2257 049E  
                               l2443 0608                                 l2523 068C  
                               l2187 074C                                 l2179 0720  
                               l2275 04EE                                 l2197 0762  
                               l2269 04DA                                 l2623 05DC  
                               l2607 05A0                                 l2463 0652  
                               l2471 065E                                 l2703 043A  
                               l2561 0926                                 l2641 034E  
                               l2633 033C                                 l2395 09C2  
                               l2483 067A                                 l2459 0644  
                               l2571 093C                                 l2651 0374  
                               l2643 0354                                 l2661 03A4  
                               l2629 032E                                 l2591 054E  
                               l2577 052C                                 l2569 0938  
                               l2649 0360                                 l2667 03B6  
                               l2589 054C                                 l2685 03F8  
                               l2693 0412                                 l2599 0576  
                               l2695 0428                     uart_write@buffer 0011  
                               _LATA 000F89                                 u1407 07F4  
                               u1417 0A9A                                 u1507 0AC6  
                               u1427 0AB0                                 u1437 0A82  
                               u1447 095A                                 u1457 0536  
                               u1467 0590                        __CFG_DEBUG$ON 000000  
                               u1477 05B0                                 u1487 05BE  
                               u1497 05D0                                 _TMR0 000FD6  
            ??_zigbee_appendChecksum 001A                                 _main 07C4  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 0018  
                      __CFG_IESO$OFF 000000              ??_zb_handle_resetStatus 0011  
                      __CFG_MCLRE$ON 000000                    ??_batt_launch_acq 0013  
                      _i2c_wait_idle 0AF8             __size_of_leds_red_glitch 0016  
                              ?_main 0001                 __size_of_calibration 00C0  
                              _T0CON 000FD5                                _T1CON 000FCD  
                              i2l431 02D8                                i2l435 0294  
                              _RCREG 000FAE                                _RCSTA 000FAB  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                              _SPBRG 000FAF                                _PORTA 000F80  
                              _TRISA 000F92                                _TRISC 000F94  
                              _TXREG 000FAD                                _TXSTA 000FAC  
                      __CFG_PWRT$OFF 000000                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                              _gData 0035                        _i2c_trig_stop 0B4C  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                              tablat 000FF5                                status 000FD8  
hyt221_operation@bDeviceDataAreStale 0014                  zb_decodage@checksum 001F  
                     __CFG_PBADEN$ON 000000                    _wait_join_counter 0048  
                    _UART_rxBufferNb 0042                      __initialization 085A  
                       __end_of_main 0816         ??_leds_red_and_yellow_glitch 0011  
                     ?_i2c_wait_idle 0001                               ??_main 002C  
                      __activetblptr 000002         __end_of_zb_handle_setTempRaw 0B16  
                     ?_i2c_trig_stop 0001                       _i2c_wait_ready 0AE6  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0         __end_of_zb_handle_setbatVolt 0B40  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
          __size_of_hyt221_operation 009C                               i2l2115 024A  
                             i2l2107 0226                               i2l2133 02A2  
                             i2l2143 02CE                               i2l2119 026A  
                             i2l2145 02D2                               _OSCCON 000FD3  
                             _SPBRGH 000FB0                               _SSPADD 000FC8  
                 __size_of_i2c_setup 0030                               _SSPBUF 000FC9  
              hyt221_operation@index 0015  __size_of_leds_red_and_yellow_glitch 001A  
                   _UART_errorStatus 0039                     _timer0_wait_65ms 0A38  
                     __CFG_XINST$OFF 000000                       _i2c_trig_start 0B40  
                       ?_zb_decodage 0016                               _calibr 0044  
                     __CFG_STVREN$ON 000000                     ??_hyt221_getTemp 0013  
                             clear_0 0860                               clear_1 086C  
                             _isr_hi 0008             _zb_handle_setHumidityRaw 0B16  
             __end_of_i2c_wait_ready 0AF8                      _UART_writeIndex 0043  
                       __pdataCOMRAM 004E                   zb_doChecksum@frame 0011  
                  ??_leds_red_glitch 0011                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0080              __end_of__initialization 0892  
              __end_of_zb_doChecksum 09AA               __end_of_i2c_trig_start 0B4C  
                 _hyt221_getHumidity 09D0                     zb_decodage@frame 0016  
                     __pcstackCOMRAM 0001                      ??_i2c_wait_idle 0011  
         __end_of_leds_yellow_glitch 0AA8                 zb_decodage@frameSize 0018  
                ?_hyt221_getHumidity 0011                    __end_of_i2c_setup 0980  
                    ??_i2c_trig_stop 0011                         _batt_counter 003C  
                        isr_hi@dummy 0010                      ?_i2c_wait_ready 0001  
     hyt221_getHumidity@humidity_raw 0013                           __pbssBANK0 0080  
                 __size_of_main_loop 0138                 ??_hyt221_getHumidity 0013  
                    _batt_launch_acq 0816       __size_of_zigbee_appendChecksum 005A  
      __end_of_zigbee_appendChecksum 07C4                           _batt_value 003F  
                    ?_i2c_trig_start 0001                   _zb_handle_sendData 067E  
               _zb_handle_setTempRaw 0B08   __end_of_leds_red_and_yellow_glitch 0A92  
         _leds_red_and_yellow_glitch 0A78       __size_of_zb_handle_resetStatus 000E  
      __end_of_zb_handle_resetStatus 0B32          zigbee_appendChecksum@buffer 0016  
               _zb_handle_setbatVolt 0B32                  ?_zb_handle_sendData 0001  
                            _BAUDCON 000FB8                              ?_isr_hi 0001  
                 __size_of_zb_handle 00D8                   __size_of_uart_read 0060  
                            _OSCTUNE 000F9B                              i2u83_40 0216  
                            i2u83_48 0218                              i2u85_40 023A  
                            i2u85_48 023C                              i2u87_40 025E  
                            i2u87_48 0260                              i2u89_40 027E  
                            i2u89_48 0280                              _SSPCON1 000FC6  
                            _SSPCON2 000FC5                              _SSPSTAT 000FC7  
                   _hyt221_operation 05E2                 ??_zb_handle_sendData 001D  
                  _timer0_wait_262ms 0A16         __size_of_zb_handle_getStatus 0004  
                         _main_state 0046                   ?_timer0_wait_262ms 0001  
              ?_zb_handle_setTempRaw 0017                              __Hparam 0000  
                            __Lparam 0000                  ??_timer0_wait_262ms 0011  
              ?_zb_handle_setbatVolt 0011                    _timer0_wait_ready 0AD4  
                      ??_calibration 0012                    __end_of_main_loop 044A  
               __size_of_zb_decodage 01B8                              __pcinit 085A  
                 ?_timer0_wait_ready 0001                              __ramtop 0300  
                    __size_of_isr_hi 030A                              __ptext0 07C4  
                            __ptext1 0A5A                              __ptext2 0312  
                            __ptext3 0918                              __ptext4 044A  
                            __ptext5 001C                              __ptext6 070A  
                            __ptext7 0A16                              __ptext8 0B08  
                            __ptext9 0B16                            _T0CONbits 000FD5  
           __end_of_timer0_wait_65ms 0A5A                  ??_timer0_wait_ready 0011  
            __end_of_batt_launch_acq 085A            __end_of_timer0_wait_262ms 0A38  
                     __pintcode_body 01D4                 end_of_initialization 0892  
                     zb_doChecksum@i 0015                        __Lmediumconst 0000  
                            int_func 01D4                    __end_of_zb_handle 0522  
                  __end_of_uart_read 076A            __end_of_timer0_wait_ready 0AE6  
         ??_zb_handle_setHumidityRaw 0017                            _RCSTAbits 000FAB  
                            postdec1 000FE5                              postdec2 000FDD  
                  zb_handle@bSuccess 0023                              postinc0 000FEE  
                            postinc2 000FDE                      _leds_red_glitch 0ABE  
                         _zb_frameID 004E                           _zb_counter 0049  
                         _uart_setup 0A5A                           _uart_write 08DE  
                          _PORTBbits 000F81                            _PORTCbits 000F82  
                __end_of_calibration 05E2                            _TRISBbits 000F93  
                          _TRISCbits 000F94                          uart_write@b 0013  
                        uart_write@i 0016               ??_zb_handle_setTempRaw 0019  
                          _TXSTAbits 000FAC               ??_zb_handle_setbatVolt 0013  
                   ??_i2c_wait_ready 0011                       _UART_readIndex 0041  
                      __pidataCOMRAM 09F4                       __end_of_isr_hi 0312  
                   _zb_frameReceived 00B2                  start_initialization 085A  
                          _i2c_setup 0950           __size_of_timer0_wait_262ms 0022  
                 _leds_yellow_glitch 0A92                     ?_batt_launch_acq 0001  
                   ??_i2c_trig_start 0012                         calibration@w 0014  
                   __CFG_OSC$INTIO67 000000                  ?_leds_yellow_glitch 0001  
            __end_of_leds_red_glitch 0AD4           __size_of_timer0_wait_ready 0012  
        ?_leds_red_and_yellow_glitch 0001             __end_of_hyt221_operation 067E  
              __end_of_i2c_wait_idle 0B08                          _calibration 0522  
                   __CFG_LPT1OSC$OFF 000000                             ??_isr_hi 0001  
                        ?_uart_setup 0001                    zb_doChecksum@size 0013  
                        ?_uart_write 0011                  _zb_handle_getStatus 0B54  
               ??_leds_yellow_glitch 0011                          __pbssCOMRAM 002C  
              __end_of_i2c_trig_stop 0B54               __size_of_zb_doChecksum 002A  
                      __pcstackBANK0 00E4              __size_of_hyt221_getTemp 0042  
                         ?_i2c_setup 0001                       _zb_frameToSend 004F  
               ?_zb_handle_getStatus 0001          __size_of_hyt221_getHumidity 0024  
   __end_of_zb_handle_setHumidityRaw 0B24                _zigbee_appendChecksum 076A  
                  __CFG_CCP2MX$PORTC 000000                    _zb_handle_waitAck 0918  
                          __pintcode 0008                   ?_zb_handle_waitAck 0001  
              _zb_handle_resetStatus 0B24      zb_handle_setbatVolt@battVoltage 0011  
                  _hyt221_launch_acq 09AA              uart_read@expectedNbRead 0016  
                ??_zb_handle_waitAck 002C                            _main_loop 0312  
                  _zb_currentFrameID 004B                   ?_hyt221_launch_acq 0001  
                  ?_timer0_wait_65ms 0001                   ??_timer0_wait_65ms 0011  
        __size_of_zb_handle_sendData 008C                  ??_hyt221_launch_acq 0012  
              ??_zb_handle_getStatus 0011                  __size_of_uart_setup 001E  
                           _LATAbits 000F89                             _LATBbits 000F8A  
                           _LATCbits 000F8B                  __size_of_uart_write 003A  
                           _PIE1bits 000F9D            __end_of_zb_handle_waitAck 0950  
                      _zb_doChecksum 0980                     ?_leds_red_glitch 0001  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                      ??_zb_decodage 001B                     __CFG_WDTPS$16384 000000  
                          _zb_handle 044A                            _uart_read 070A  
                    uart_read@buffer 0011                           uart_read@b 0014  
                         uart_read@i 0017            __end_of_hyt221_launch_acq 09D0  
                          _zb_status 004D                           ?_main_loop 0001  
                        ??_i2c_setup 0011                            copy_data0 0886  
              calibration@tryCounter 0013                        _UART_rxBuffer 0080  
                  _leds_green_glitch 0AA8                       ?_zb_doChecksum 0011  
             ?_zigbee_appendChecksum 0016                   ?_leds_green_glitch 0001  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000       zigbee_appendChecksum@sizeFrame 0018  
                         ?_zb_handle 0001                zb_handle@decodedFrame 0024  
                         ?_uart_read 0011                zb_doChecksum@checksum 0014  
             ?_zb_handle_resetStatus 0001                  ??_leds_green_glitch 0011  
zb_handle_setHumidityRaw@humidityRaw 0015                  __end_of_zb_decodage 01D4  
                     _hyt221_getTemp 089C    __size_of_zb_handle_setHumidityRaw 000E  
          ?_zb_handle_setHumidityRaw 0015         zb_handle_waitAck@waitCounter 00E4  
                           __ptext10 067E                             __ptext11 076A  
                           __ptext20 05E2                             __ptext12 0980  
                           __ptext21 09AA                             __ptext13 08DE  
                           __ptext30 0B32                             __ptext22 0A78  
                           __ptext14 0B24                             __ptext31 0950  
                           __ptext23 0B4C                             __ptext15 0B54  
                           __ptext32 0522                             __ptext24 0B40  
                           __ptext16 0A38                             __ptext33 0ABE  
                           __ptext25 0AE6                             __ptext17 0AD4  
                           __ptext26 0AF8                             __ptext18 0A92  
                           __ptext27 089C                             __ptext19 0AA8  
                           __ptext28 09D0                             __ptext29 0816  
          __end_of_leds_green_glitch 0ABE                        __size_of_main 0052  
                      _zb_currentAck 004A           __size_of_zb_handle_waitAck 0038  
       zb_decodage@bCorrectlyDecoded 0020               main_loop@hyt221_status 00E7  
      __size_of_zb_handle_setTempRaw 000E          zb_handle_sendData@frameSize 0020  
                 main_loop@zb_status 00E6                             _zb_state 004C  
      __size_of_zb_handle_setbatVolt 000E                         ?_calibration 0001  
         __size_of_hyt221_launch_acq 0026                    ?_hyt221_operation 0001  
                       ??_uart_setup 0011                         ??_uart_write 0013  
                 ??_hyt221_operation 0012               __end_of_hyt221_getTemp 08DE  
                        ??_main_loop 002C                           _INTCONbits 000FF2  
                           intlevel2 0000                 _timer0_interupt_done 0047  
                    ??_zb_doChecksum 0014                   __end_of_uart_setup 0A78  
                 __end_of_uart_write 0918             __size_of_batt_launch_acq 0044  
      zb_handle_waitAck@bAckReceived 00E5                           _OSCCONbits 000FD3  
                        ??_zb_handle 0021                          ??_uart_read 0014  
                        _zb_decodage 001C          zb_handle_setTempRaw@tempRaw 0017  
            zb_handle@sizeOfNextData 0021                      ?_hyt221_getTemp 0011  
                        _sensor_data 002C          __size_of_leds_yellow_glitch 0016  
                  uart_read@nbToRead 0013              __size_of_i2c_wait_ready 0012  
                        _SSPCON2bits 000FC5                    _i2c_interupt_done 0045  
                         _WDTCONbits 000FD1           __end_of_hyt221_getHumidity 09F4  
         __size_of_leds_green_glitch 0016               __size_of_i2c_wait_idle 0010  
          __size_of_timer0_wait_65ms 0022              zb_decodage@decodedFrame 0019  
             hyt221_getTemp@temp_raw 0015               __size_of_i2c_trig_stop 0008  
