

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Sep 10 21:13:07 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           	psect	idataCOMRAM
    49  000A0A                     __pidataCOMRAM:
    50                           	opt stack 0
    51                           
    52                           ;initializer for _zb_frameID
    53  000A0A  01                 	db	1
    54                           
    55                           ;initializer for _zb_frameToSend
    56  000A0B  7E                 	db	126
    57  000A0C  00                 	db	0
    58  000A0D  04                 	db	4
    59  000A0E  10                 	db	16
    60  000A0F  02                 	db	2
    61  000A10  00                 	db	0
    62  000A11  00                 	db	0
    63  000A12  00                 	db	0
    64  000A13  00                 	db	0
    65  000A14  00                 	db	0
    66  000A15  00                 	db	0
    67  000A16  00                 	db	0
    68  000A17  00                 	db	0
    69  000A18  FF                 	db	255
    70  000A19  FE                 	db	254
    71  000A1A  00                 	db	0
    72  000A1B  00                 	db	0
    73  000A1C  00                 	db	0
    74  000A1D  00                 	db	0
    75  000A1E  03                 	db	3
    76  000A1F  01                 	db	1
    77  000A20  00                 	db	0
    78  000A21  00                 	db	0
    79  000A22  00                 	db	0
    80  000A23  02                 	db	2
    81  000A24  00                 	db	0
    82  000A25  00                 	db	0
    83  000A26  00                 	db	0
    84  000A27  03                 	db	3
    85  000A28  00                 	db	0
    86  000A29  00                 	db	0
    87  000A2A  00                 	db	0
    88  000A2B  00                 	db	0
    89  0000                     _TMR0	set	4054
    90  0000                     _ADCON0	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _BAUDCON	set	4024
    96  0000                     _INTCONbits	set	4082
    97  0000                     _LATA	set	3977
    98  0000                     _LATAbits	set	3977
    99  0000                     _LATBbits	set	3978
   100  0000                     _LATCbits	set	3979
   101  0000                     _OSCCON	set	4051
   102  0000                     _OSCCONbits	set	4051
   103  0000                     _OSCTUNE	set	3995
   104  0000                     _PIE1bits	set	3997
   105  0000                     _PIR1bits	set	3998
   106  0000                     _PIR2bits	set	4001
   107  0000                     _PORTA	set	3968
   108  0000                     _PORTBbits	set	3969
   109  0000                     _PORTCbits	set	3970
   110  0000                     _RCREG	set	4014
   111  0000                     _RCSTA	set	4011
   112  0000                     _RCSTAbits	set	4011
   113  0000                     _SPBRG	set	4015
   114  0000                     _SPBRGH	set	4016
   115  0000                     _SSPADD	set	4040
   116  0000                     _SSPBUF	set	4041
   117  0000                     _SSPCON1	set	4038
   118  0000                     _SSPCON2	set	4037
   119  0000                     _SSPCON2bits	set	4037
   120  0000                     _SSPSTAT	set	4039
   121  0000                     _SSPSTATbits	set	4039
   122  0000                     _T0CON	set	4053
   123  0000                     _T0CONbits	set	4053
   124  0000                     _T1CON	set	4045
   125  0000                     _TMR1H	set	4047
   126  0000                     _TMR1L	set	4046
   127  0000                     _TRISA	set	3986
   128  0000                     _TRISBbits	set	3987
   129  0000                     _TRISC	set	3988
   130  0000                     _TRISCbits	set	3988
   131  0000                     _TXREG	set	4013
   132  0000                     _TXSTA	set	4012
   133  0000                     _TXSTAbits	set	4012
   134  0000                     _WDTCONbits	set	4049
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  00089E                     __pcinit:
   140                           	opt stack 0
   141  00089E                     start_initialization:
   142                           	opt stack 0
   143  00089E                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to BANK0 (100 bytes)
   147  00089E  EE00  F080         	lfsr	0,__pbssBANK0
   148  0008A2  0E64               	movlw	100
   149  0008A4                     clear_0:
   150  0008A4  6AEE               	clrf	postinc0,c
   151  0008A6  06E8               	decf	wreg,f,c
   152  0008A8  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to COMRAM (34 bytes)
   155  0008AA  EE00  F02C         	lfsr	0,__pbssCOMRAM
   156  0008AE  0E22               	movlw	34
   157  0008B0                     clear_1:
   158  0008B0  6AEE               	clrf	postinc0,c
   159  0008B2  06E8               	decf	wreg,f,c
   160  0008B4  E1FD               	bnz	clear_1
   161                           
   162                           ; Initialize objects allocated to COMRAM (34 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164  0008B6  0E0A               	movlw	low __pidataCOMRAM
   165  0008B8  6EF6               	movwf	tblptrl,c
   166  0008BA  0E0A               	movlw	high __pidataCOMRAM
   167  0008BC  6EF7               	movwf	tblptrh,c
   168  0008BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169  0008C0  6EF8               	movwf	tblptru,c
   170  0008C2  EE00  F04E         	lfsr	0,__pdataCOMRAM
   171  0008C6  EE10 F022          	lfsr	1,34
   172  0008CA                     copy_data0:
   173  0008CA  0009               	tblrd		*+
   174  0008CC  CFF5 FFEE          	movff	tablat,postinc0
   175  0008D0  50E5               	movf	postdec1,w,c
   176  0008D2  50E1               	movf	fsr1l,w,c
   177  0008D4  E1FA               	bnz	copy_data0
   178  0008D6                     end_of_initialization:
   179                           	opt stack 0
   180  0008D6                     __end_of__initialization:
   181                           	opt stack 0
   182  0008D6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  0008D8  6EF8               	movwf	tblptru,c
   184  0008DA  0100               	movlb	0
   185  0008DC  EF01  F004         	goto	_main	;jump to C main() function
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           postdec1	equ	0xFE5
   193                           fsr1l	equ	0xFE1
   194                           
   195                           	psect	bssCOMRAM
   196  00002C                     __pbssCOMRAM:
   197                           	opt stack 0
   198  00002C                     _sensor_data:
   199                           	opt stack 0
   200  00002C                     	ds	9
   201  000035                     _gData:
   202                           	opt stack 0
   203  000035                     	ds	4
   204  000039                     _UART_errorStatus:
   205                           	opt stack 0
   206  000039                     	ds	3
   207  00003C                     _batt_counter:
   208                           	opt stack 0
   209  00003C                     	ds	3
   210  00003F                     _batt_value:
   211                           	opt stack 0
   212  00003F                     	ds	2
   213  000041                     _UART_readIndex:
   214                           	opt stack 0
   215  000041                     	ds	1
   216  000042                     _UART_rxBufferNb:
   217                           	opt stack 0
   218  000042                     	ds	1
   219  000043                     _UART_writeIndex:
   220                           	opt stack 0
   221  000043                     	ds	1
   222  000044                     _calibr:
   223                           	opt stack 0
   224  000044                     	ds	1
   225  000045                     _i2c_interupt_done:
   226                           	opt stack 0
   227  000045                     	ds	1
   228  000046                     _main_state:
   229                           	opt stack 0
   230  000046                     	ds	1
   231  000047                     _timer0_interupt_done:
   232                           	opt stack 0
   233  000047                     	ds	1
   234  000048                     _wait_join_counter:
   235                           	opt stack 0
   236  000048                     	ds	1
   237  000049                     _zb_counter:
   238                           	opt stack 0
   239  000049                     	ds	1
   240  00004A                     _zb_currentAck:
   241                           	opt stack 0
   242  00004A                     	ds	1
   243  00004B                     _zb_currentFrameID:
   244                           	opt stack 0
   245  00004B                     	ds	1
   246  00004C                     _zb_state:
   247                           	opt stack 0
   248  00004C                     	ds	1
   249  00004D                     _zb_status:
   250                           	opt stack 0
   251  00004D                     	ds	1
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec1	equ	0xFE5
   259                           fsr1l	equ	0xFE1
   260                           
   261                           	psect	dataCOMRAM
   262  00004E                     __pdataCOMRAM:
   263                           	opt stack 0
   264  00004E                     _zb_frameID:
   265                           	opt stack 0
   266  00004E                     	ds	1
   267  00004F                     _zb_frameToSend:
   268                           	opt stack 0
   269  00004F                     	ds	33
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	bssBANK0
   280  000080                     __pbssBANK0:
   281                           	opt stack 0
   282  000080                     _UART_rxBuffer:
   283                           	opt stack 0
   284  000080                     	ds	50
   285  0000B2                     _zb_frameReceived:
   286                           	opt stack 0
   287  0000B2                     	ds	50
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	cstackBANK0
   298  0000E4                     __pcstackBANK0:
   299                           	opt stack 0
   300  0000E4                     zb_handle_waitAck@retryCounter:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x0
   304  0000E4                     	ds	1
   305  0000E5                     zb_handle_waitAck@bAckReceived:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x1
   309  0000E5                     	ds	1
   310  0000E6                     main_loop@zb_status:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x2
   314  0000E6                     	ds	1
   315  0000E7                     main_loop@bAckReceived:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x3
   319  0000E7                     	ds	1
   320  0000E8                     main_loop@hyt221_status:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x4
   324  0000E8                     	ds	1
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	cstackCOMRAM
   335  000001                     __pcstackCOMRAM:
   336                           	opt stack 0
   337  000001                     ??_isr_hi:
   338  000001                     
   339                           ; 2 bytes @ 0x0
   340  000001                     	ds	15
   341  000010                     isr_hi@dummy:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0xF
   345  000010                     	ds	1
   346  000011                     ??_leds_glitch:
   347  000011                     ??_i2c_wait_idle:
   348  000011                     ?_hyt221_getTemp:
   349                           	opt stack 0
   350  000011                     ?_hyt221_getHumidity:
   351                           	opt stack 0
   352  000011                     uart_write@buffer:
   353                           	opt stack 0
   354  000011                     uart_read@buffer:
   355                           	opt stack 0
   356  000011                     zb_doChecksum@frame:
   357                           	opt stack 0
   358  000011                     zb_handle_setbatVolt@battVoltage:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x10
   362  000011                     	ds	1
   363  000012                     leds_glitch@leds:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x11
   367  000012                     	ds	1
   368  000013                     ??_calibration:
   369  000013                     ??_batt_launch_acq:
   370  000013                     ??_hyt221_getTemp:
   371  000013                     uart_read@nbToRead:
   372                           	opt stack 0
   373  000013                     zb_doChecksum@size:
   374                           	opt stack 0
   375  000013                     hyt221_operation@bDeviceDataAreStale:
   376                           	opt stack 0
   377  000013                     uart_write@b:
   378                           	opt stack 0
   379  000013                     hyt221_getHumidity@humidity_raw:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x12
   383  000013                     	ds	1
   384  000014                     zb_doChecksum@checksum:
   385                           	opt stack 0
   386  000014                     hyt221_operation@index:
   387                           	opt stack 0
   388  000014                     calibration@tryCounter:
   389                           	opt stack 0
   390  000014                     uart_read@b:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x13
   394  000014                     	ds	1
   395  000015                     uart_write@size:
   396                           	opt stack 0
   397  000015                     zb_doChecksum@i:
   398                           	opt stack 0
   399  000015                     calibration@w:
   400                           	opt stack 0
   401  000015                     zb_handle_setHumidityRaw@humidityRaw:
   402                           	opt stack 0
   403  000015                     hyt221_getTemp@temp_raw:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x14
   407  000015                     	ds	1
   408  000016                     uart_write@i:
   409                           	opt stack 0
   410  000016                     uart_read@expectedNbRead:
   411                           	opt stack 0
   412  000016                     zb_decodage@frame:
   413                           	opt stack 0
   414  000016                     zigbee_appendChecksum@buffer:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x15
   418  000016                     	ds	1
   419  000017                     uart_read@i:
   420                           	opt stack 0
   421  000017                     zb_handle_setTempRaw@tempRaw:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x16
   425  000017                     	ds	1
   426  000018                     zb_decodage@frameSize:
   427                           	opt stack 0
   428  000018                     zigbee_appendChecksum@sizeFrame:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x17
   432  000018                     	ds	1
   433  000019                     zb_decodage@decodedFrame:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x18
   437  000019                     	ds	1
   438  00001A                     ??_zigbee_appendChecksum:
   439                           
   440                           ; 0 bytes @ 0x19
   441  00001A                     	ds	1
   442  00001B                     ??_zb_decodage:
   443                           
   444                           ; 0 bytes @ 0x1A
   445  00001B                     	ds	2
   446  00001D                     ??_zb_handle_sendData:
   447                           
   448                           ; 0 bytes @ 0x1C
   449  00001D                     	ds	2
   450  00001F                     zb_decodage@checksum:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x1E
   454  00001F                     	ds	1
   455  000020                     zb_decodage@bCorrectlyDecoded:
   456                           	opt stack 0
   457  000020                     zb_handle_sendData@frameSize:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x1F
   461  000020                     	ds	1
   462  000021                     zb_handle@sizeOfNextData:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x20
   466  000021                     	ds	2
   467  000023                     zb_handle@bSuccess:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x22
   471  000023                     	ds	1
   472  000024                     zb_handle@decodedFrame:
   473                           	opt stack 0
   474                           
   475                           ; 8 bytes @ 0x23
   476  000024                     	ds	8
   477  00002C                     tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           ; 0 bytes @ 0x2B
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 40 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  2   96[COMRAM] int 
   499 ;; Registers used:
   500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   506 ;;      Params:         0       0       0       0
   507 ;;      Locals:         0       0       0       0
   508 ;;      Temps:          0       0       0       0
   509 ;;      Totals:         0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels required when called:    6
   512 ;; This function calls:
   513 ;;		_calibration
   514 ;;		_i2c_setup
   515 ;;		_main_loop
   516 ;;		_uart_setup
   517 ;; This function is called by:
   518 ;;		Startup code after reset
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text0
   523  000802                     __ptext0:
   524                           	opt stack 0
   525  000802                     _main:
   526                           	opt stack 25
   527                           
   528                           ;main.c: 42: OSCTUNE = 0x00;
   529                           
   530                           ;incstack = 0
   531  000802  0E00               	movlw	0
   532  000804  6E9B               	movwf	3995,c	;volatile
   533                           
   534                           ;main.c: 44: OSCCON = 0x40;
   535  000806  0E40               	movlw	64
   536  000808  6ED3               	movwf	4051,c	;volatile
   537                           
   538                           ;main.c: 47: PORTA = 0x0;
   539  00080A  0E00               	movlw	0
   540  00080C  6E80               	movwf	3968,c	;volatile
   541                           
   542                           ;main.c: 48: TRISA = 0x0;
   543  00080E  0E00               	movlw	0
   544  000810  6E92               	movwf	3986,c	;volatile
   545                           
   546                           ;main.c: 51: TRISBbits.RB0 = 0;
   547  000812  9093               	bcf	3987,0,c	;volatile
   548                           
   549                           ;main.c: 52: PORTBbits.RB0 = 0;
   550  000814  9081               	bcf	3969,0,c	;volatile
   551                           
   552                           ;main.c: 53: TRISBbits.RB3 = 0;
   553  000816  9693               	bcf	3987,3,c	;volatile
   554                           
   555                           ;main.c: 54: PORTBbits.RB3 = 0;
   556  000818  9681               	bcf	3969,3,c	;volatile
   557                           
   558                           ;main.c: 55: TRISBbits.RB4 = 0;
   559  00081A  9893               	bcf	3987,4,c	;volatile
   560                           
   561                           ;main.c: 56: PORTBbits.RB4 = 0;
   562  00081C  9881               	bcf	3969,4,c	;volatile
   563                           
   564                           ;main.c: 57: TRISCbits.RC2 = 0;
   565  00081E  9494               	bcf	3988,2,c	;volatile
   566                           
   567                           ;main.c: 58: PORTCbits.RC2 = 0;
   568  000820  9482               	bcf	3970,2,c	;volatile
   569                           
   570                           ;main.c: 59: TRISCbits.RC5 = 0;
   571  000822  9A94               	bcf	3988,5,c	;volatile
   572                           
   573                           ;main.c: 60: PORTCbits.RC5 = 0;
   574  000824  9A82               	bcf	3970,5,c	;volatile
   575                           
   576                           ;main.c: 63: PORTBbits.RB1 = 0;
   577  000826  9281               	bcf	3969,1,c	;volatile
   578                           
   579                           ;main.c: 64: TRISBbits.RB1 = 0;
   580  000828  9293               	bcf	3987,1,c	;volatile
   581                           
   582                           ;main.c: 65: TRISBbits.RB2 = 1;
   583  00082A  8493               	bsf	3987,2,c	;volatile
   584                           
   585                           ;main.c: 66: PIR1bits.ADIF = 0;
   586  00082C  9C9E               	bcf	3998,6,c	;volatile
   587                           
   588                           ;main.c: 67: PIE1bits.ADIE = 1;
   589  00082E  8C9D               	bsf	3997,6,c	;volatile
   590                           
   591                           ;main.c: 69: _delay((unsigned long)((5)*((1000000)/4000.0)));
   592  000830  0EFA               	movlw	250
   593  000832                     u1567:
   594  000832  D000               	nop2	
   595  000834  2EE8               	decfsz	wreg,f,c
   596  000836  D7FD               	goto	u1567
   597                           
   598                           ;main.c: 71: calibration();
   599  000838  ECB1  F002         	call	_calibration	;wreg free
   600                           
   601                           ;main.c: 76: i2c_setup();
   602  00083C  ECAD  F004         	call	_i2c_setup	;wreg free
   603                           
   604                           ;main.c: 77: uart_setup();
   605  000840  EC38  F005         	call	_uart_setup	;wreg free
   606                           
   607                           ;main.c: 79: INTCONbits.PEIE = 1;
   608  000844  8CF2               	bsf	intcon,6,c	;volatile
   609                           
   610                           ;main.c: 80: INTCONbits.GIE = 1;
   611  000846  8EF2               	bsf	intcon,7,c	;volatile
   612                           
   613                           ;main.c: 82: (LATAbits.LATA0 = 0);
   614  000848  9089               	bcf	3977,0,c	;volatile
   615                           
   616                           ;main.c: 83: (LATAbits.LA1 = 0);
   617  00084A  9289               	bcf	3977,1,c	;volatile
   618                           
   619                           ;main.c: 84: (LATAbits.LA1 = 1);
   620  00084C  8289               	bsf	3977,1,c	;volatile
   621                           
   622                           ;main.c: 86: main_loop();
   623  00084E  ECEA  F000         	call	_main_loop	;wreg free
   624  000852  EF0C  F000         	goto	start
   625  000856                     __end_of_main:
   626                           	opt stack 0
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           intcon	equ	0xFF2
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           
   637 ;; *************** function _uart_setup *****************
   638 ;; Defined at:
   639 ;;		line 11 in file "uart.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;		None               void
   646 ;; Registers used:
   647 ;;		wreg, status,2
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   653 ;;      Params:         0       0       0       0
   654 ;;      Locals:         0       0       0       0
   655 ;;      Temps:          0       0       0       0
   656 ;;      Totals:         0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text1
   668  000A70                     __ptext1:
   669                           	opt stack 0
   670  000A70                     _uart_setup:
   671                           	opt stack 29
   672                           
   673                           ;uart.c: 14: TRISCbits.RC7 = 1;
   674                           
   675                           ;incstack = 0
   676  000A70  8E94               	bsf	3988,7,c	;volatile
   677                           
   678                           ;uart.c: 15: TRISCbits.RC6 = 1;
   679  000A72  8C94               	bsf	3988,6,c	;volatile
   680                           
   681                           ;uart.c: 17: TXSTA = 0x24;
   682  000A74  0E24               	movlw	36
   683  000A76  6EAC               	movwf	4012,c	;volatile
   684                           
   685                           ;uart.c: 18: RCSTA = 0x90;
   686  000A78  0E90               	movlw	144
   687  000A7A  6EAB               	movwf	4011,c	;volatile
   688                           
   689                           ;uart.c: 19: BAUDCON = 0x48;
   690  000A7C  0E48               	movlw	72
   691  000A7E  6EB8               	movwf	4024,c	;volatile
   692                           
   693                           ;uart.c: 20: SPBRGH = 0;
   694  000A80  0E00               	movlw	0
   695  000A82  6EB0               	movwf	4016,c	;volatile
   696                           
   697                           ;uart.c: 21: SPBRG = 12;
   698  000A84  0E0C               	movlw	12
   699  000A86  6EAF               	movwf	4015,c	;volatile
   700                           
   701                           ;uart.c: 23: PIR1bits.RCIF = 0;
   702  000A88  9A9E               	bcf	3998,5,c	;volatile
   703                           
   704                           ;uart.c: 24: PIE1bits.RCIE = 1;
   705  000A8A  8A9D               	bsf	3997,5,c	;volatile
   706  000A8C  0012               	return	
   707  000A8E                     __end_of_uart_setup:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           intcon	equ	0xFF2
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1l	equ	0xFE1
   718                           
   719 ;; *************** function _main_loop *****************
   720 ;; Defined at:
   721 ;;		line 89 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  bAckReceived    1    3[BANK0 ] enum E3083
   726 ;;  hyt221_statu    1    4[BANK0 ] enum E3778
   727 ;;  zb_status       1    2[BANK0 ] enum E3761
   728 ;; Return value:  Size  Location     Type
   729 ;;		None               void
   730 ;; Registers used:
   731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   737 ;;      Params:         0       0       0       0
   738 ;;      Locals:         0       3       0       0
   739 ;;      Temps:          0       0       0       0
   740 ;;      Totals:         0       3       0       0
   741 ;;Total ram usage:        3 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    5
   744 ;; This function calls:
   745 ;;		_batt_launch_acq
   746 ;;		_hyt221_getHumidity
   747 ;;		_hyt221_getTemp
   748 ;;		_hyt221_launch_acq
   749 ;;		_hyt221_operation
   750 ;;		_leds_glitch
   751 ;;		_timer0_wait_262ms
   752 ;;		_timer0_wait_65ms
   753 ;;		_zb_handle
   754 ;;		_zb_handle_getStatus
   755 ;;		_zb_handle_resetStatus
   756 ;;		_zb_handle_sendData
   757 ;;		_zb_handle_setHumidityRaw
   758 ;;		_zb_handle_setTempRaw
   759 ;;		_zb_handle_waitAck
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text2
   766  0001D4                     __ptext2:
   767                           	opt stack 0
   768  0001D4                     _main_loop:
   769                           	opt stack 25
   770                           
   771                           ;main.c: 91: zb_statusT zb_status;
   772                           ;main.c: 92: STATUS_T hyt221_status;
   773                           ;main.c: 94: batt_counter = (60);
   774                           
   775                           ;incstack = 0
   776  0001D4  0E3C               	movlw	60
   777  0001D6  6E3C               	movwf	_batt_counter,c
   778  0001D8  0E00               	movlw	0
   779  0001DA  6E3D               	movwf	_batt_counter+1,c
   780  0001DC  0E00               	movlw	0
   781  0001DE  6E3E               	movwf	_batt_counter+2,c
   782                           
   783                           ;main.c: 95: wait_join_counter = 0;
   784  0001E0  0E00               	movlw	0
   785  0001E2  6E48               	movwf	_wait_join_counter,c
   786                           
   787                           ;main.c: 97: zb_state = NOT_JOINED;
   788  0001E4  0E00               	movlw	0
   789  0001E6  6E4C               	movwf	_zb_state,c
   790                           
   791                           ;main.c: 98: main_state = LAUNCH_ACQ;
   792  0001E8  0E00               	movlw	0
   793  0001EA  6E46               	movwf	_main_state,c
   794                           
   795                           ;main.c: 100: leds_glitch((0x10));
   796  0001EC  0E10               	movlw	16
   797  0001EE  EC47  F005         	call	_leds_glitch
   798  0001F2                     l2773:
   799                           
   800                           ;main.c: 103: {
   801                           ;main.c: 104: zb_handle();
   802  0001F2  EC41  F002         	call	_zb_handle	;wreg free
   803                           
   804                           ;main.c: 105: zb_status = zb_handle_getStatus();
   805  0001F6  ECA0  F005         	call	_zb_handle_getStatus	;wreg free
   806  0001FA  0100               	movlb	0	; () banked
   807  0001FC  6FE6               	movwf	main_loop@zb_status& (0+255),b
   808                           
   809                           ;main.c: 106: switch (zb_status)
   810  0001FE  D010               	goto	l2791
   811  000200                     l2777:
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 109: zb_state = NOT_JOINED;
   815  000200  0E00               	movlw	0
   816  000202  6E4C               	movwf	_zb_state,c
   817                           
   818                           ;main.c: 110: main_state = LAUNCH_ACQ;
   819  000204  0E00               	movlw	0
   820  000206  6E46               	movwf	_main_state,c
   821                           
   822                           ; BSR set to: 0
   823                           ;main.c: 111: (LATAbits.LATA0 = 0);
   824  000208  9089               	bcf	3977,0,c	;volatile
   825                           
   826                           ; BSR set to: 0
   827                           ;main.c: 112: leds_glitch((0x04));
   828  00020A  0E04               	movlw	4
   829  00020C  EC47  F005         	call	_leds_glitch
   830                           
   831                           ;main.c: 113: timer0_wait_262ms();
   832  000210  EC16  F005         	call	_timer0_wait_262ms	;wreg free
   833                           
   834                           ;main.c: 114: timer0_wait_262ms();
   835  000214  EC16  F005         	call	_timer0_wait_262ms	;wreg free
   836                           
   837                           ;main.c: 115: break;
   838  000218  D08D               	goto	l2871
   839  00021A                     l2787:
   840                           
   841                           ;main.c: 118: zb_state = JOINED;
   842  00021A  0E01               	movlw	1
   843  00021C  6E4C               	movwf	_zb_state,c
   844                           
   845                           ;main.c: 119: break;
   846  00021E  D08A               	goto	l2871
   847  000220                     l2791:
   848  000220  0100               	movlb	0	; () banked
   849  000222  51E6               	movf	main_loop@zb_status& (0+255),w,b
   850                           
   851                           ; Switch size 1, requested type "space"
   852                           ; Number of cases is 2, Range of values is 0 to 1
   853                           ; switch strategies available:
   854                           ; Name         Instructions Cycles
   855                           ; simple_byte            7     4 (average)
   856                           ;	Chosen strategy is simple_byte
   857  000224  0A00               	xorlw	0	; case 0
   858  000226  B4D8               	btfsc	status,2,c
   859  000228  D7EB               	goto	l2777
   860  00022A  0A01               	xorlw	1	; case 1
   861  00022C  B4D8               	btfsc	status,2,c
   862  00022E  D7F5               	goto	l2787
   863  000230  D081               	goto	l2871
   864  000232                     l2793:
   865                           
   866                           ;main.c: 144: zb_handle_resetStatus();
   867  000232  EC88  F005         	call	_zb_handle_resetStatus	;wreg free
   868                           
   869                           ;main.c: 146: batt_counter++;
   870  000236  0E01               	movlw	1
   871  000238  263C               	addwf	_batt_counter,f,c
   872  00023A  0E00               	movlw	0
   873  00023C  223D               	addwfc	_batt_counter+1,f,c
   874  00023E  0E00               	movlw	0
   875  000240  223E               	addwfc	_batt_counter+2,f,c
   876                           
   877                           ;main.c: 147: if (!(batt_counter < (60)))
   878  000242  0E3C               	movlw	60
   879  000244  5C3C               	subwf	_batt_counter,w,c
   880  000246  0E00               	movlw	0
   881  000248  583D               	subwfb	_batt_counter+1,w,c
   882  00024A  0E00               	movlw	0
   883  00024C  583E               	subwfb	_batt_counter+2,w,c
   884  00024E  A0D8               	btfss	status,0,c
   885  000250  D008               	goto	l2803
   886                           
   887                           ;main.c: 148: {
   888                           ;main.c: 149: batt_counter = 0;
   889  000252  0E00               	movlw	0
   890  000254  6E3C               	movwf	_batt_counter,c
   891  000256  0E00               	movlw	0
   892  000258  6E3D               	movwf	_batt_counter+1,c
   893  00025A  0E00               	movlw	0
   894  00025C  6E3E               	movwf	_batt_counter+2,c
   895                           
   896                           ;main.c: 150: batt_launch_acq();
   897  00025E  EC2B  F004         	call	_batt_launch_acq	;wreg free
   898  000262                     l2803:
   899                           
   900                           ;main.c: 151: }
   901                           ;main.c: 153: hyt221_status = hyt221_launch_acq();
   902  000262  ECF1  F004         	call	_hyt221_launch_acq	;wreg free
   903  000266  0100               	movlb	0	; () banked
   904  000268  6FE8               	movwf	main_loop@hyt221_status& (0+255),b
   905                           
   906                           ; BSR set to: 0
   907                           ;main.c: 154: if (hyt221_status == STATUS_OK)
   908  00026A  0100               	movlb	0	; () banked
   909  00026C  67E8               	tstfsz	main_loop@hyt221_status& (0+255),b
   910  00026E  D002               	goto	l2809
   911                           
   912                           ; BSR set to: 0
   913                           ;main.c: 155: {
   914                           ;main.c: 156: main_state = WAIT_HYT221_ACQ;
   915  000270  0E02               	movlw	2
   916  000272  D03E               	goto	L4
   917  000274                     l2809:
   918                           
   919                           ; BSR set to: 0
   920                           ;main.c: 158: else
   921                           ;main.c: 159: {
   922                           ;main.c: 160: leds_glitch((0x10) | (0x04));
   923  000274  0E14               	movlw	20
   924  000276  EC47  F005         	call	_leds_glitch
   925  00027A  D7BB               	goto	l2773
   926  00027C                     l2811:
   927                           
   928                           ;main.c: 165: timer0_wait_65ms();
   929  00027C  EC27  F005         	call	_timer0_wait_65ms	;wreg free
   930                           
   931                           ;main.c: 166: hyt221_status = hyt221_operation();
   932  000280  EC14  F003         	call	_hyt221_operation	;wreg free
   933  000284  0100               	movlb	0	; () banked
   934  000286  6FE8               	movwf	main_loop@hyt221_status& (0+255),b
   935                           
   936                           ; BSR set to: 0
   937                           ;main.c: 167: if (hyt221_status == STATUS_OK)
   938  000288  0100               	movlb	0	; () banked
   939  00028A  67E8               	tstfsz	main_loop@hyt221_status& (0+255),b
   940  00028C  D005               	goto	l2823
   941                           
   942                           ; BSR set to: 0
   943                           ;main.c: 168: {
   944                           ;main.c: 169: (LATAbits.LATA0 = 0);
   945  00028E  9089               	bcf	3977,0,c	;volatile
   946                           
   947                           ; BSR set to: 0
   948                           ;main.c: 170: timer0_wait_262ms();
   949  000290  EC16  F005         	call	_timer0_wait_262ms	;wreg free
   950                           
   951                           ;main.c: 171: main_state = SEND_DATA;
   952  000294  0E03               	movlw	3
   953  000296  D02C               	goto	L4
   954  000298                     l2823:
   955                           
   956                           ;main.c: 173: else if (hyt221_status == STATUS_ERROR)
   957  000298  0100               	movlb	0	; () banked
   958  00029A  05E8               	decf	main_loop@hyt221_status& (0+255),w,b
   959  00029C  A4D8               	btfss	status,2,c
   960  00029E  D7A9               	goto	l2773
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 174: {
   964                           ;main.c: 175: leds_glitch((0x08));
   965  0002A0  0E08               	movlw	8
   966  0002A2  EC47  F005         	call	_leds_glitch
   967  0002A6                     
   968                           ;main.c: 176: main_state = LAUNCH_ACQ;
   969  0002A6  0E00               	movlw	0
   970  0002A8  D023               	goto	L4
   971  0002AA                     l2829:
   972                           
   973                           ;main.c: 184: zb_handle_setTempRaw(hyt221_getTemp());
   974  0002AA  ECC5  F004         	call	_hyt221_getTemp	;wreg free
   975  0002AE  C011  F017         	movff	?_hyt221_getTemp,zb_handle_setTempRaw@tempRaw
   976  0002B2  C012  F018         	movff	?_hyt221_getTemp+1,zb_handle_setTempRaw@tempRaw+1
   977  0002B6  EC7A  F005         	call	_zb_handle_setTempRaw	;wreg free
   978                           
   979                           ;main.c: 185: zb_handle_setHumidityRaw(hyt221_getHumidity());
   980  0002BA  EC56  F005         	call	_hyt221_getHumidity	;wreg free
   981  0002BE  C011  F015         	movff	?_hyt221_getHumidity,zb_handle_setHumidityRaw@humidityRaw
   982  0002C2  C012  F016         	movff	?_hyt221_getHumidity+1,zb_handle_setHumidityRaw@humidityRaw+1
   983  0002C6  EC81  F005         	call	_zb_handle_setHumidityRaw	;wreg free
   984                           
   985                           ;main.c: 186: zb_handle_sendData();
   986  0002CA  EC5E  F003         	call	_zb_handle_sendData	;wreg free
   987                           
   988                           ;main.c: 188: BOOL bAckReceived;
   989                           ;main.c: 189: bAckReceived = zb_handle_waitAck();
   990  0002CE  EC8F  F004         	call	_zb_handle_waitAck	;wreg free
   991  0002D2  0100               	movlb	0	; () banked
   992  0002D4  6FE7               	movwf	main_loop@bAckReceived& (0+255),b
   993                           
   994                           ; BSR set to: 0
   995                           ;main.c: 190: if (bAckReceived == TRUE)
   996  0002D6  0100               	movlb	0	; () banked
   997  0002D8  05E7               	decf	main_loop@bAckReceived& (0+255),w,b
   998  0002DA  A4D8               	btfss	status,2,c
   999  0002DC  D002               	goto	l2839
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 191: {
  1003                           ;main.c: 192: main_state = SLEEP;
  1004  0002DE  0E01               	movlw	1
  1005  0002E0  D007               	goto	L4
  1006  0002E2                     l2839:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;main.c: 194: else
  1010                           ;main.c: 195: {
  1011                           ;main.c: 196: leds_glitch((0x04) | (0x10));
  1012  0002E2  0E14               	movlw	20
  1013  0002E4  EC47  F005         	call	_leds_glitch
  1014                           
  1015                           ;main.c: 197: (LATAbits.LA1 = 0);
  1016  0002E8  9289               	bcf	3977,1,c	;volatile
  1017                           
  1018                           ;main.c: 198: __nop();
  1019  0002EA  F000               	nop	
  1020                           
  1021                           ;main.c: 199: (LATAbits.LA1 = 1);
  1022  0002EC  8289               	bsf	3977,1,c	;volatile
  1023  0002EE  D7DB               	goto	L5
  1024  0002F0                     L4:
  1025  0002F0  6E46               	movwf	_main_state,c
  1026  0002F2  D77F               	goto	l2773
  1027  0002F4                     l121:
  1028                           
  1029                           ;main.c: 207: (LATAbits.LATA0 = 1);
  1030  0002F4  8089               	bsf	3977,0,c	;volatile
  1031                           
  1032                           ;main.c: 209: do { (WDTCONbits.SWDTEN = 1);asm(" sleep");(WDTCONbits.SWDTEN = 0); } whil
      +                          e (0);;
  1033  0002F6  80D1               	bsf	4049,0,c	;volatile
  1034  0002F8  0003               	sleep		;# 
  1035  0002FA  90D1               	bcf	4049,0,c	;volatile
  1036  0002FC  D7D4               	goto	L5
  1037  0002FE                     l2853:
  1038  0002FE  5046               	movf	_main_state,w,c
  1039                           
  1040                           ; Switch size 1, requested type "space"
  1041                           ; Number of cases is 4, Range of values is 0 to 3
  1042                           ; switch strategies available:
  1043                           ; Name         Instructions Cycles
  1044                           ; simple_byte           13     7 (average)
  1045                           ;	Chosen strategy is simple_byte
  1046  000300  0A00               	xorlw	0	; case 0
  1047  000302  B4D8               	btfsc	status,2,c
  1048  000304  D796               	goto	l2793
  1049  000306  0A01               	xorlw	1	; case 1
  1050  000308  B4D8               	btfsc	status,2,c
  1051  00030A  D7F4               	goto	l121
  1052  00030C  0A03               	xorlw	3	; case 2
  1053  00030E  B4D8               	btfsc	status,2,c
  1054  000310  D7B5               	goto	l2811
  1055  000312  0A01               	xorlw	1	; case 3
  1056  000314  B4D8               	btfsc	status,2,c
  1057  000316  D7C9               	goto	l2829
  1058  000318  D76C               	goto	l2773
  1059  00031A                     l2855:
  1060                           
  1061                           ;main.c: 221: wait_join_counter++;
  1062  00031A  2A48               	incf	_wait_join_counter,f,c
  1063                           
  1064                           ;main.c: 222: if (wait_join_counter >= (50))
  1065  00031C  0E31               	movlw	49
  1066  00031E  6448               	cpfsgt	_wait_join_counter,c
  1067  000320  D768               	goto	l2773
  1068                           
  1069                           ;main.c: 223: {
  1070                           ;main.c: 224: wait_join_counter = 0;
  1071  000322  0E00               	movlw	0
  1072  000324  6E48               	movwf	_wait_join_counter,c
  1073                           
  1074                           ;main.c: 225: leds_glitch((0x10));
  1075  000326  0E10               	movlw	16
  1076  000328  EC47  F005         	call	_leds_glitch
  1077                           
  1078                           ;main.c: 226: (LATAbits.LA1 = 0);
  1079  00032C  9289               	bcf	3977,1,c	;volatile
  1080                           
  1081                           ;main.c: 227: __nop();
  1082  00032E  F000               	nop	
  1083                           
  1084                           ;main.c: 228: (LATAbits.LA1 = 1);
  1085  000330  8289               	bsf	3977,1,c	;volatile
  1086  000332  D75F               	goto	l2773
  1087  000334                     l2871:
  1088  000334  504C               	movf	_zb_state,w,c
  1089                           
  1090                           ; Switch size 1, requested type "space"
  1091                           ; Number of cases is 2, Range of values is 0 to 1
  1092                           ; switch strategies available:
  1093                           ; Name         Instructions Cycles
  1094                           ; simple_byte            7     4 (average)
  1095                           ;	Chosen strategy is simple_byte
  1096  000336  0A00               	xorlw	0	; case 0
  1097  000338  B4D8               	btfsc	status,2,c
  1098  00033A  D7EF               	goto	l2855
  1099  00033C  0A01               	xorlw	1	; case 1
  1100  00033E  B4D8               	btfsc	status,2,c
  1101  000340  D7DE               	goto	l2853
  1102  000342  D7EB               	goto	l2855
  1103  000344                     __end_of_main_loop:
  1104                           	opt stack 0
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           intcon	equ	0xFF2
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           postdec1	equ	0xFE5
  1113                           fsr1l	equ	0xFE1
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _zb_handle_waitAck *****************
  1117 ;; Defined at:
  1118 ;;		line 233 in file "zb_handle.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  bAckReceived    1    1[BANK0 ] enum E3195
  1123 ;;  retryCounter    1    0[BANK0 ] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      enum E3083
  1126 ;; Registers used:
  1127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1133 ;;      Params:         0       0       0       0
  1134 ;;      Locals:         0       2       0       0
  1135 ;;      Temps:          0       0       0       0
  1136 ;;      Totals:         0       2       0       0
  1137 ;;Total ram usage:        2 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    4
  1140 ;; This function calls:
  1141 ;;		_timer0_wait_262ms
  1142 ;;		_zb_handle
  1143 ;; This function is called by:
  1144 ;;		_main_loop
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text3
  1149  00091E                     __ptext3:
  1150                           	opt stack 0
  1151  00091E                     _zb_handle_waitAck:
  1152                           	opt stack 25
  1153                           
  1154                           ;zb_handle.c: 235: uint8_t retryCounter;
  1155                           ;zb_handle.c: 236: BOOL bAckReceived;
  1156                           ;zb_handle.c: 238: bAckReceived = FALSE;
  1157                           
  1158                           ;incstack = 0
  1159  00091E  0E00               	movlw	0
  1160  000920  0100               	movlb	0	; () banked
  1161  000922  6FE5               	movwf	zb_handle_waitAck@bAckReceived& (0+255),b
  1162                           
  1163                           ;zb_handle.c: 239: retryCounter = 0;
  1164  000924  0E00               	movlw	0
  1165  000926  0100               	movlb	0	; () banked
  1166  000928  6FE4               	movwf	zb_handle_waitAck@retryCounter& (0+255),b
  1167                           
  1168                           ;zb_handle.c: 243: while ((retryCounter < 19) && (bAckReceived == FALSE))
  1169  00092A  D00B               	goto	l2711
  1170  00092C                     l2701:
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;zb_handle.c: 244: {
  1174                           ;zb_handle.c: 245: zb_handle();
  1175  00092C  EC41  F002         	call	_zb_handle	;wreg free
  1176                           
  1177                           ;zb_handle.c: 246: if (zb_currentAck == 0)
  1178  000930  664A               	tstfsz	_zb_currentAck,c
  1179  000932  D003               	goto	l2707
  1180                           
  1181                           ;zb_handle.c: 247: {
  1182                           ;zb_handle.c: 248: bAckReceived = TRUE;
  1183  000934  0E01               	movlw	1
  1184  000936  0100               	movlb	0	; () banked
  1185  000938  6FE5               	movwf	zb_handle_waitAck@bAckReceived& (0+255),b
  1186  00093A                     l2707:
  1187                           
  1188                           ;zb_handle.c: 250: }
  1189                           ;zb_handle.c: 252: timer0_wait_262ms();
  1190  00093A  EC16  F005         	call	_timer0_wait_262ms	;wreg free
  1191                           
  1192                           ;zb_handle.c: 253: retryCounter++;
  1193  00093E  0100               	movlb	0	; () banked
  1194  000940  2BE4               	incf	zb_handle_waitAck@retryCounter& (0+255),f,b
  1195  000942                     l2711:
  1196                           
  1197                           ; BSR set to: 0
  1198  000942  0E13               	movlw	19
  1199  000944  0100               	movlb	0	; () banked
  1200  000946  5DE4               	subwf	zb_handle_waitAck@retryCounter& (0+255),w,b
  1201  000948  B0D8               	btfsc	status,0,c
  1202  00094A  D004               	goto	l2715
  1203                           
  1204                           ; BSR set to: 0
  1205  00094C  0100               	movlb	0	; () banked
  1206  00094E  51E5               	movf	zb_handle_waitAck@bAckReceived& (0+255),w,b
  1207  000950  B4D8               	btfsc	status,2,c
  1208  000952  D7EC               	goto	l2701
  1209  000954                     l2715:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;zb_handle.c: 254: }
  1213                           ;zb_handle.c: 256: return bAckReceived;
  1214  000954  0100               	movlb	0	; () banked
  1215  000956  51E5               	movf	zb_handle_waitAck@bAckReceived& (0+255),w,b
  1216                           
  1217                           ; BSR set to: 0
  1218                           
  1219                           ; BSR set to: 0
  1220  000958  0012               	return	
  1221  00095A                     __end_of_zb_handle_waitAck:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           intcon	equ	0xFF2
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           postdec1	equ	0xFE5
  1231                           fsr1l	equ	0xFE1
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _zb_handle *****************
  1235 ;; Defined at:
  1236 ;;		line 159 in file "zb_handle.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  decodedFrame    8   35[COMRAM] struct .
  1241 ;;  sizeOfNextDa    2   32[COMRAM] unsigned int 
  1242 ;;  bSuccess        1   34[COMRAM] enum E3195
  1243 ;; Return value:  Size  Location     Type
  1244 ;;		None               void
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1252 ;;      Params:         0       0       0       0
  1253 ;;      Locals:        11       0       0       0
  1254 ;;      Temps:          0       0       0       0
  1255 ;;      Totals:        11       0       0       0
  1256 ;;Total ram usage:       11 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    3
  1259 ;; This function calls:
  1260 ;;		_leds_glitch
  1261 ;;		_uart_read
  1262 ;;		_zb_decodage
  1263 ;; This function is called by:
  1264 ;;		_main_loop
  1265 ;;		_zb_handle_waitAck
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text4
  1270  000482                     __ptext4:
  1271                           	opt stack 0
  1272  000482                     _zb_handle:
  1273                           	opt stack 25
  1274                           
  1275                           ;zb_handle.c: 161: BOOL bSuccess;
  1276                           ;zb_handle.c: 162: uint16_t sizeOfNextData;
  1277                           ;zb_handle.c: 163: zigbee_decodedFrame decodedFrame;
  1278                           ;zb_handle.c: 165: bSuccess = uart_read(zb_frameReceived, (3));
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;incstack = 0
  1282  000482  0100               	movlb	0	; () banked
  1283  000484  0E00               	movlw	high _zb_frameReceived
  1284  000486  6E12               	movwf	uart_read@buffer+1,c
  1285  000488  0100               	movlb	0	; () banked
  1286  00048A  0EB2               	movlw	low _zb_frameReceived
  1287  00048C  6E11               	movwf	uart_read@buffer,c
  1288  00048E  0E03               	movlw	3
  1289  000490  6E13               	movwf	uart_read@nbToRead,c
  1290  000492  ECA4  F003         	call	_uart_read	;wreg free
  1291  000496  6E23               	movwf	zb_handle@bSuccess,c
  1292                           
  1293                           ;zb_handle.c: 166: if (bSuccess)
  1294  000498  5023               	movf	zb_handle@bSuccess,w,c
  1295  00049A  B4D8               	btfsc	status,2,c
  1296  00049C  D01E               	goto	l324
  1297                           
  1298                           ;zb_handle.c: 167: {
  1299                           ;zb_handle.c: 168: if (zb_frameReceived[0] == (0x7E))
  1300  00049E  0100               	movlb	0	; () banked
  1301  0004A0  51B2               	movf	_zb_frameReceived& (0+255),w,b
  1302  0004A2  0A7E               	xorlw	126
  1303  0004A4  A4D8               	btfss	status,2,c
  1304  0004A6  D017               	goto	l2427
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;zb_handle.c: 169: {
  1308                           ;zb_handle.c: 170: sizeOfNextData = (((uint16_t) zb_frameReceived[1]) << 8) | (zb_frameR
      +                          eceived[2]);
  1309  0004A8  0100               	movlb	0	; () banked
  1310  0004AA  51B3               	movf	(_zb_frameReceived+1)& (0+255),w,b
  1311  0004AC  6E22               	movwf	zb_handle@sizeOfNextData+1,c
  1312  0004AE  0100               	movlb	0	; () banked
  1313  0004B0  51B4               	movf	(_zb_frameReceived+2)& (0+255),w,b
  1314  0004B2  6E21               	movwf	zb_handle@sizeOfNextData,c
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;zb_handle.c: 171: if (sizeOfNextData <= ((50) - (3)))
  1318  0004B4  0E30               	movlw	48
  1319  0004B6  5C21               	subwf	zb_handle@sizeOfNextData,w,c
  1320  0004B8  0E00               	movlw	0
  1321  0004BA  5822               	subwfb	zb_handle@sizeOfNextData+1,w,c
  1322  0004BC  B0D8               	btfsc	status,0,c
  1323  0004BE  D00B               	goto	l2427
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;zb_handle.c: 172: {
  1327                           ;zb_handle.c: 173: bSuccess = uart_read(zb_frameReceived + (3), sizeOfNextData + 1);
  1328  0004C0  0100               	movlb	0	; () banked
  1329  0004C2  0E00               	movlw	high (_zb_frameReceived+3)
  1330  0004C4  6E12               	movwf	uart_read@buffer+1,c
  1331  0004C6  0100               	movlb	0	; () banked
  1332  0004C8  0EB5               	movlw	low (_zb_frameReceived+3)
  1333  0004CA  6E11               	movwf	uart_read@buffer,c
  1334  0004CC  2821               	incf	zb_handle@sizeOfNextData,w,c
  1335  0004CE  6E13               	movwf	uart_read@nbToRead,c
  1336  0004D0  ECA4  F003         	call	_uart_read	;wreg free
  1337  0004D4  D001               	goto	L7
  1338  0004D6                     l2427:
  1339                           
  1340                           ;zb_handle.c: 180: else
  1341                           ;zb_handle.c: 181: {
  1342                           ;zb_handle.c: 182: bSuccess = FALSE;
  1343  0004D6  0E00               	movlw	0
  1344  0004D8                     L7:
  1345  0004D8  6E23               	movwf	zb_handle@bSuccess,c
  1346  0004DA                     l324:
  1347                           
  1348                           ;zb_handle.c: 183: }
  1349                           ;zb_handle.c: 184: }
  1350                           ;zb_handle.c: 186: if (bSuccess)
  1351  0004DA  5023               	movf	zb_handle@bSuccess,w,c
  1352  0004DC  B4D8               	btfsc	status,2,c
  1353  0004DE  D00F               	goto	l2431
  1354                           
  1355                           ;zb_handle.c: 187: {
  1356                           ;zb_handle.c: 188: bSuccess = zb_decodage(zb_frameReceived + (3), sizeOfNextData + 1, &d
      +                          ecodedFrame);
  1357  0004E0  0100               	movlb	0	; () banked
  1358  0004E2  0E00               	movlw	high (_zb_frameReceived+3)
  1359  0004E4  6E17               	movwf	zb_decodage@frame+1,c
  1360  0004E6  0100               	movlb	0	; () banked
  1361  0004E8  0EB5               	movlw	low (_zb_frameReceived+3)
  1362  0004EA  6E16               	movwf	zb_decodage@frame,c
  1363  0004EC  2821               	incf	zb_handle@sizeOfNextData,w,c
  1364  0004EE  6E18               	movwf	zb_decodage@frameSize,c
  1365  0004F0  0E00               	movlw	high zb_handle@decodedFrame
  1366  0004F2  6E1A               	movwf	zb_decodage@decodedFrame+1,c
  1367  0004F4  0E24               	movlw	low zb_handle@decodedFrame
  1368  0004F6  6E19               	movwf	zb_decodage@decodedFrame,c
  1369  0004F8  EC0E  F000         	call	_zb_decodage	;wreg free
  1370  0004FC  6E23               	movwf	zb_handle@bSuccess,c
  1371  0004FE                     l2431:
  1372                           
  1373                           ;zb_handle.c: 189: }
  1374                           ;zb_handle.c: 191: if (bSuccess)
  1375  0004FE  5023               	movf	zb_handle@bSuccess,w,c
  1376  000500  A4D8               	btfss	status,2,c
  1377  000502  D01D               	goto	l2453
  1378  000504  D02D               	goto	l344
  1379  000506                     l2435:
  1380                           
  1381                           ;zb_handle.c: 205: if (decodedFrame.status == 0x02)
  1382  000506  5025               	movf	zb_handle@decodedFrame+1,w,c
  1383  000508  0A02               	xorlw	2
  1384  00050A  A4D8               	btfss	status,2,c
  1385  00050C  D006               	goto	l2441
  1386                           
  1387                           ;zb_handle.c: 206: {
  1388                           ;zb_handle.c: 207: zb_status = ZB_STATUS_JOINED;
  1389  00050E  0E01               	movlw	1
  1390  000510  6E4D               	movwf	_zb_status,c
  1391                           
  1392                           ;zb_handle.c: 208: leds_glitch((0x10));
  1393  000512  0E10               	movlw	16
  1394  000514  EC47  F005         	call	_leds_glitch
  1395                           
  1396                           ;zb_handle.c: 209: }
  1397  000518  D023               	goto	l344
  1398  00051A                     l2441:
  1399                           
  1400                           ;zb_handle.c: 210: else if (decodedFrame.status == 0x03)
  1401  00051A  5025               	movf	zb_handle@decodedFrame+1,w,c
  1402  00051C  0A03               	xorlw	3
  1403  00051E  A4D8               	btfss	status,2,c
  1404  000520  D01F               	goto	l344
  1405                           
  1406                           ;zb_handle.c: 211: {
  1407                           ;zb_handle.c: 212: zb_status = ZB_STATUS_NOT_JOINED;
  1408  000522  0E00               	movlw	0
  1409  000524  6E4D               	movwf	_zb_status,c
  1410                           
  1411                           ;zb_handle.c: 213: leds_glitch((0x08) | (0x04) | (0x10));
  1412  000526  0E1C               	movlw	28
  1413  000528  EC47  F005         	call	_leds_glitch
  1414  00052C  D019               	goto	l344
  1415  00052E                     l2447:
  1416                           
  1417                           ;zb_handle.c: 218: if (zb_currentFrameID == decodedFrame.frameID)
  1418  00052E  504B               	movf	_zb_currentFrameID,w,c
  1419  000530  EE20  F02B         	lfsr	2,zb_handle@decodedFrame+7
  1420  000534  62DF               	cpfseq	indf2,c
  1421  000536  D014               	goto	l344
  1422                           
  1423                           ;zb_handle.c: 219: {
  1424                           ;zb_handle.c: 220: zb_currentAck = decodedFrame.status;
  1425  000538  C025  F04A         	movff	zb_handle@decodedFrame+1,_zb_currentAck
  1426  00053C  D011               	goto	l344
  1427  00053E                     l2453:
  1428  00053E  5024               	movf	zb_handle@decodedFrame,w,c
  1429                           
  1430                           ; Switch size 1, requested type "space"
  1431                           ; Number of cases is 6, Range of values is 8 to 144
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte           19    10 (average)
  1435                           ;	Chosen strategy is simple_byte
  1436  000540  0A08               	xorlw	8	; case 8
  1437  000542  B4D8               	btfsc	status,2,c
  1438  000544  D00D               	goto	l344
  1439  000546  0A18               	xorlw	24	; case 16
  1440  000548  B4D8               	btfsc	status,2,c
  1441  00054A  D00A               	goto	l344
  1442  00054C  0A98               	xorlw	152	; case 136
  1443  00054E  B4D8               	btfsc	status,2,c
  1444  000550  D007               	goto	l344
  1445  000552  0A02               	xorlw	2	; case 138
  1446  000554  B4D8               	btfsc	status,2,c
  1447  000556  D7D7               	goto	l2435
  1448  000558  0A01               	xorlw	1	; case 139
  1449  00055A  B4D8               	btfsc	status,2,c
  1450  00055C  D7E8               	goto	l2447
  1451  00055E  0A1B               	xorlw	27	; case 144
  1452  000560                     l344:
  1453  000560  0012               	return	
  1454  000562                     __end_of_zb_handle:
  1455                           	opt stack 0
  1456                           tblptru	equ	0xFF8
  1457                           tblptrh	equ	0xFF7
  1458                           tblptrl	equ	0xFF6
  1459                           tablat	equ	0xFF5
  1460                           intcon	equ	0xFF2
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postdec1	equ	0xFE5
  1464                           fsr1l	equ	0xFE1
  1465                           indf2	equ	0xFDF
  1466                           status	equ	0xFD8
  1467                           
  1468 ;; *************** function _zb_decodage *****************
  1469 ;; Defined at:
  1470 ;;		line 22 in file "zb.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  frame           2   21[COMRAM] PTR unsigned char 
  1473 ;;		 -> zb_frameReceived(50), 
  1474 ;;  frameSize       1   23[COMRAM] unsigned char 
  1475 ;;  decodedFrame    2   24[COMRAM] PTR struct .
  1476 ;;		 -> zb_handle@decodedFrame(8), 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  bCorrectlyDe    1   31[COMRAM] enum E3083
  1479 ;;  checksum        1   30[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      enum E3083
  1482 ;; Registers used:
  1483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1489 ;;      Params:         5       0       0       0
  1490 ;;      Locals:         2       0       0       0
  1491 ;;      Temps:          4       0       0       0
  1492 ;;      Totals:        11       0       0       0
  1493 ;;Total ram usage:       11 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    2
  1496 ;; This function calls:
  1497 ;;		_zb_doChecksum
  1498 ;; This function is called by:
  1499 ;;		_zb_handle
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text5
  1504  00001C                     __ptext5:
  1505                           	opt stack 0
  1506  00001C                     _zb_decodage:
  1507                           	opt stack 25
  1508                           
  1509                           ;zb.c: 24: BOOL bCorrectlyDecoded;
  1510                           ;zb.c: 25: uint8_t checksum;
  1511                           ;zb.c: 26: bCorrectlyDecoded = FALSE;
  1512                           
  1513                           ;incstack = 0
  1514  00001C  0E00               	movlw	0
  1515  00001E  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1516                           
  1517                           ;zb.c: 28: if (frameSize >= 1)
  1518  000020  5018               	movf	zb_decodage@frameSize,w,c
  1519  000022  B4D8               	btfsc	status,2,c
  1520  000024  D022               	goto	l257
  1521                           
  1522                           ;zb.c: 29: {
  1523                           ;zb.c: 30: checksum = zb_doChecksum(frame, frameSize - 1);
  1524  000026  C017  F012         	movff	zb_decodage@frame+1,zb_doChecksum@frame+1
  1525  00002A  C016  F011         	movff	zb_decodage@frame,zb_doChecksum@frame
  1526  00002E  0418               	decf	zb_decodage@frameSize,w,c
  1527  000030  6E13               	movwf	zb_doChecksum@size,c
  1528  000032  ECDC  F004         	call	_zb_doChecksum	;wreg free
  1529  000036  6E1F               	movwf	zb_decodage@checksum,c
  1530                           
  1531                           ;zb.c: 31: if (checksum != frame[frameSize - 1])
  1532  000038  0EFF               	movlw	255
  1533  00003A  6E1B               	movwf	??_zb_decodage& (0+255),c
  1534  00003C  0EFF               	movlw	255
  1535  00003E  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  1536  000040  5018               	movf	zb_decodage@frameSize,w,c
  1537  000042  6E1D               	movwf	(??_zb_decodage+2)& (0+255),c
  1538  000044  6A1E               	clrf	(??_zb_decodage+3)& (0+255),c
  1539  000046  501B               	movf	??_zb_decodage,w,c
  1540  000048  261D               	addwf	??_zb_decodage+2,f,c
  1541  00004A  501C               	movf	??_zb_decodage+1,w,c
  1542  00004C  221E               	addwfc	??_zb_decodage+3,f,c
  1543  00004E  501D               	movf	??_zb_decodage+2,w,c
  1544  000050  2416               	addwf	zb_decodage@frame,w,c
  1545  000052  6ED9               	movwf	fsr2l,c
  1546  000054  501E               	movf	??_zb_decodage+3,w,c
  1547  000056  2017               	addwfc	zb_decodage@frame+1,w,c
  1548  000058  6EDA               	movwf	fsr2h,c
  1549  00005A  50DF               	movf	indf2,w,c
  1550  00005C  181F               	xorwf	zb_decodage@checksum,w,c
  1551  00005E  B4D8               	btfsc	status,2,c
  1552  000060  D002               	goto	l2379
  1553                           
  1554                           ;zb.c: 32: {
  1555                           ;zb.c: 34: bCorrectlyDecoded = FALSE;
  1556  000062  0E00               	movlw	0
  1557  000064  D001               	goto	L8
  1558  000066                     l2379:
  1559                           
  1560                           ;zb.c: 36: else
  1561                           ;zb.c: 37: {
  1562                           ;zb.c: 38: bCorrectlyDecoded = TRUE;
  1563  000066  0E01               	movlw	1
  1564  000068                     L8:
  1565  000068  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1566  00006A                     l257:
  1567                           
  1568                           ;zb.c: 39: }
  1569                           ;zb.c: 40: }
  1570                           ;zb.c: 42: if (bCorrectlyDecoded)
  1571  00006A  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  1572  00006C  B4D8               	btfsc	status,2,c
  1573  00006E  D0B0               	goto	l2405
  1574                           
  1575                           ;zb.c: 43: {
  1576                           ;zb.c: 44: decodedFrame->type = frame[0];
  1577  000070  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  1578  000074  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  1579  000078  C019  FFE1         	movff	zb_decodage@decodedFrame,fsr1l
  1580  00007C  C01A  FFE2         	movff	zb_decodage@decodedFrame+1,fsr1h
  1581  000080  CFDF FFE7          	movff	indf2,indf1
  1582                           
  1583                           ;zb.c: 45: switch (frame[0])
  1584  000084  D096               	goto	l2403
  1585  000086                     l2383:
  1586                           
  1587                           ;zb.c: 48: decodedFrame->frameID = frame[1];
  1588  000086  EE20 F001          	lfsr	2,1
  1589  00008A  5016               	movf	zb_decodage@frame,w,c
  1590  00008C  26D9               	addwf	fsr2l,f,c
  1591  00008E  5017               	movf	zb_decodage@frame+1,w,c
  1592  000090  22DA               	addwfc	fsr2h,f,c
  1593  000092  EE10 F007          	lfsr	1,7
  1594  000096  5019               	movf	zb_decodage@decodedFrame,w,c
  1595  000098  26E1               	addwf	fsr1l,f,c
  1596  00009A  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1597  00009C  22E2               	addwfc	fsr1h,f,c
  1598  00009E  CFDF FFE7          	movff	indf2,indf1
  1599                           
  1600                           ;zb.c: 49: decodedFrame->AT[0] = frame[2];
  1601  0000A2  EE20 F002          	lfsr	2,2
  1602  0000A6  5016               	movf	zb_decodage@frame,w,c
  1603  0000A8  26D9               	addwf	fsr2l,f,c
  1604  0000AA  5017               	movf	zb_decodage@frame+1,w,c
  1605  0000AC  22DA               	addwfc	fsr2h,f,c
  1606  0000AE  EE10 F002          	lfsr	1,2
  1607  0000B2  5019               	movf	zb_decodage@decodedFrame,w,c
  1608  0000B4  26E1               	addwf	fsr1l,f,c
  1609  0000B6  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1610  0000B8  22E2               	addwfc	fsr1h,f,c
  1611  0000BA  CFDF FFE7          	movff	indf2,indf1
  1612                           
  1613                           ;zb.c: 50: decodedFrame->AT[1] = frame[3];
  1614  0000BE  EE20 F003          	lfsr	2,3
  1615  0000C2  5016               	movf	zb_decodage@frame,w,c
  1616  0000C4  26D9               	addwf	fsr2l,f,c
  1617  0000C6  5017               	movf	zb_decodage@frame+1,w,c
  1618  0000C8  22DA               	addwfc	fsr2h,f,c
  1619  0000CA  EE10 F003          	lfsr	1,3
  1620  0000CE  5019               	movf	zb_decodage@decodedFrame,w,c
  1621  0000D0  26E1               	addwf	fsr1l,f,c
  1622  0000D2  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1623  0000D4  22E2               	addwfc	fsr1h,f,c
  1624  0000D6  CFDF FFE7          	movff	indf2,indf1
  1625                           
  1626                           ;zb.c: 51: decodedFrame->status = frame[4];
  1627  0000DA  EE20 F004          	lfsr	2,4
  1628  0000DE  5016               	movf	zb_decodage@frame,w,c
  1629  0000E0  26D9               	addwf	fsr2l,f,c
  1630  0000E2  5017               	movf	zb_decodage@frame+1,w,c
  1631  0000E4  22DA               	addwfc	fsr2h,f,c
  1632  0000E6  EE10 F001          	lfsr	1,1
  1633  0000EA  5019               	movf	zb_decodage@decodedFrame,w,c
  1634  0000EC  26E1               	addwf	fsr1l,f,c
  1635  0000EE  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1636  0000F0  22E2               	addwfc	fsr1h,f,c
  1637  0000F2  CFDF FFE7          	movff	indf2,indf1
  1638                           
  1639                           ;zb.c: 52: decodedFrame->size = frameSize - 6;
  1640  0000F6  EE20 F006          	lfsr	2,6
  1641  0000FA  5019               	movf	zb_decodage@decodedFrame,w,c
  1642  0000FC  26D9               	addwf	fsr2l,f,c
  1643  0000FE  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1644  000100  22DA               	addwfc	fsr2h,f,c
  1645  000102  5018               	movf	zb_decodage@frameSize,w,c
  1646  000104  0FFA               	addlw	250
  1647  000106  6EDF               	movwf	indf2,c
  1648                           
  1649                           ;zb.c: 53: if (decodedFrame->size == 0)
  1650  000108  EE20 F006          	lfsr	2,6
  1651  00010C  5019               	movf	zb_decodage@decodedFrame,w,c
  1652  00010E  26D9               	addwf	fsr2l,f,c
  1653  000110  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1654  000112  22DA               	addwfc	fsr2h,f,c
  1655  000114  50DF               	movf	indf2,w,c
  1656  000116  A4D8               	btfss	status,2,c
  1657  000118  D00B               	goto	l2391
  1658                           
  1659                           ;zb.c: 54: {
  1660                           ;zb.c: 55: decodedFrame->data = (0);
  1661  00011A  EE20 F004          	lfsr	2,4
  1662  00011E  5019               	movf	zb_decodage@decodedFrame,w,c
  1663  000120  26D9               	addwf	fsr2l,f,c
  1664  000122  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1665  000124  22DA               	addwfc	fsr2h,f,c
  1666  000126  0E00               	movlw	0
  1667  000128  6EDE               	movwf	postinc2,c
  1668  00012A  0E00               	movlw	0
  1669  00012C  6EDD               	movwf	postdec2,c
  1670                           
  1671                           ;zb.c: 56: }
  1672  00012E  D050               	goto	l2405
  1673  000130                     l2391:
  1674                           
  1675                           ;zb.c: 57: else
  1676                           ;zb.c: 58: {
  1677                           ;zb.c: 59: decodedFrame->data = &frame[5];
  1678  000130  0E05               	movlw	5
  1679  000132  2416               	addwf	zb_decodage@frame,w,c
  1680  000134  6E1B               	movwf	??_zb_decodage& (0+255),c
  1681  000136  0E00               	movlw	0
  1682  000138  2017               	addwfc	zb_decodage@frame+1,w,c
  1683  00013A  6E1C               	movwf	(??_zb_decodage+1)& (0+255),c
  1684  00013C  EE20 F004          	lfsr	2,4
  1685  000140  5019               	movf	zb_decodage@decodedFrame,w,c
  1686  000142  26D9               	addwf	fsr2l,f,c
  1687  000144  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1688  000146  22DA               	addwfc	fsr2h,f,c
  1689  000148  C01B  FFDE         	movff	??_zb_decodage,postinc2
  1690  00014C  C01C  FFDD         	movff	??_zb_decodage+1,postdec2
  1691  000150  D03F               	goto	l2405
  1692  000152                     l2393:
  1693                           
  1694                           ;zb.c: 64: decodedFrame->status = frame[1];
  1695  000152  EE20 F001          	lfsr	2,1
  1696  000156  5016               	movf	zb_decodage@frame,w,c
  1697  000158  26D9               	addwf	fsr2l,f,c
  1698  00015A  5017               	movf	zb_decodage@frame+1,w,c
  1699  00015C  22DA               	addwfc	fsr2h,f,c
  1700  00015E  EE10 F001          	lfsr	1,1
  1701  000162  5019               	movf	zb_decodage@decodedFrame,w,c
  1702  000164  26E1               	addwf	fsr1l,f,c
  1703  000166  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1704  000168  22E2               	addwfc	fsr1h,f,c
  1705  00016A  CFDF FFE7          	movff	indf2,indf1
  1706                           
  1707                           ;zb.c: 65: bCorrectlyDecoded = TRUE;
  1708  00016E  0E01               	movlw	1
  1709  000170  D01E               	goto	L9
  1710  000172                     l2397:
  1711                           
  1712                           ;zb.c: 69: decodedFrame->frameID = frame[1];
  1713  000172  EE20 F001          	lfsr	2,1
  1714  000176  5016               	movf	zb_decodage@frame,w,c
  1715  000178  26D9               	addwf	fsr2l,f,c
  1716  00017A  5017               	movf	zb_decodage@frame+1,w,c
  1717  00017C  22DA               	addwfc	fsr2h,f,c
  1718  00017E  EE10 F007          	lfsr	1,7
  1719  000182  5019               	movf	zb_decodage@decodedFrame,w,c
  1720  000184  26E1               	addwf	fsr1l,f,c
  1721  000186  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1722  000188  22E2               	addwfc	fsr1h,f,c
  1723  00018A  CFDF FFE7          	movff	indf2,indf1
  1724                           
  1725                           ;zb.c: 70: decodedFrame->status = frame[5];
  1726  00018E  EE20 F005          	lfsr	2,5
  1727  000192  5016               	movf	zb_decodage@frame,w,c
  1728  000194  26D9               	addwf	fsr2l,f,c
  1729  000196  5017               	movf	zb_decodage@frame+1,w,c
  1730  000198  22DA               	addwfc	fsr2h,f,c
  1731  00019A  EE10 F001          	lfsr	1,1
  1732  00019E  5019               	movf	zb_decodage@decodedFrame,w,c
  1733  0001A0  26E1               	addwf	fsr1l,f,c
  1734  0001A2  501A               	movf	zb_decodage@decodedFrame+1,w,c
  1735  0001A4  22E2               	addwfc	fsr1h,f,c
  1736  0001A6  CFDF FFE7          	movff	indf2,indf1
  1737                           
  1738                           ;zb.c: 71: break;
  1739  0001AA  D012               	goto	l2405
  1740  0001AC                     l2399:
  1741                           
  1742                           ;zb.c: 74: bCorrectlyDecoded = FALSE;
  1743  0001AC  0E00               	movlw	0
  1744  0001AE                     L9:
  1745  0001AE  6E20               	movwf	zb_decodage@bCorrectlyDecoded,c
  1746                           
  1747                           ;zb.c: 75: break;
  1748  0001B0  D00F               	goto	l2405
  1749  0001B2                     l2403:
  1750  0001B2  C016  FFD9         	movff	zb_decodage@frame,fsr2l
  1751  0001B6  C017  FFDA         	movff	zb_decodage@frame+1,fsr2h
  1752  0001BA  50DF               	movf	indf2,w,c
  1753                           
  1754                           ; Switch size 1, requested type "space"
  1755                           ; Number of cases is 3, Range of values is 136 to 139
  1756                           ; switch strategies available:
  1757                           ; Name         Instructions Cycles
  1758                           ; simple_byte           10     6 (average)
  1759                           ;	Chosen strategy is simple_byte
  1760  0001BC  0A88               	xorlw	136	; case 136
  1761  0001BE  B4D8               	btfsc	status,2,c
  1762  0001C0  D762               	goto	l2383
  1763  0001C2  0A02               	xorlw	2	; case 138
  1764  0001C4  B4D8               	btfsc	status,2,c
  1765  0001C6  D7C5               	goto	l2393
  1766  0001C8  0A01               	xorlw	1	; case 139
  1767  0001CA  B4D8               	btfsc	status,2,c
  1768  0001CC  D7D2               	goto	l2397
  1769  0001CE  D7EE               	goto	l2399
  1770  0001D0                     l2405:
  1771                           
  1772                           ;zb.c: 77: }
  1773                           ;zb.c: 79: return bCorrectlyDecoded;
  1774  0001D0  5020               	movf	zb_decodage@bCorrectlyDecoded,w,c
  1775  0001D2  0012               	return	
  1776  0001D4                     __end_of_zb_decodage:
  1777                           	opt stack 0
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           intcon	equ	0xFF2
  1783                           postinc0	equ	0xFEE
  1784                           wreg	equ	0xFE8
  1785                           indf1	equ	0xFE7
  1786                           postdec1	equ	0xFE5
  1787                           fsr1h	equ	0xFE2
  1788                           fsr1l	equ	0xFE1
  1789                           indf2	equ	0xFDF
  1790                           postinc2	equ	0xFDE
  1791                           postdec2	equ	0xFDD
  1792                           fsr2h	equ	0xFDA
  1793                           fsr2l	equ	0xFD9
  1794                           status	equ	0xFD8
  1795                           
  1796 ;; *************** function _uart_read *****************
  1797 ;; Defined at:
  1798 ;;		line 48 in file "uart.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  1801 ;;		 -> zb_frameReceived(50), 
  1802 ;;  nbToRead        1   18[COMRAM] unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  b               2   19[COMRAM] PTR unsigned char 
  1805 ;;		 -> zb_frameReceived(50), 
  1806 ;;  i               1   22[COMRAM] unsigned char 
  1807 ;;  expectedNbRe    1   21[COMRAM] enum E3083
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      enum E3083
  1810 ;; Registers used:
  1811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1817 ;;      Params:         3       0       0       0
  1818 ;;      Locals:         4       0       0       0
  1819 ;;      Temps:          0       0       0       0
  1820 ;;      Totals:         7       0       0       0
  1821 ;;Total ram usage:        7 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_zb_handle
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text6
  1832  000748                     __ptext6:
  1833                           	opt stack 0
  1834  000748                     _uart_read:
  1835                           	opt stack 26
  1836                           
  1837                           ;uart.c: 50: BOOL expectedNbRead;
  1838                           ;uart.c: 51: uint8_t i;
  1839                           ;uart.c: 52: uint8_t* b;
  1840                           ;uart.c: 53: b = buffer;
  1841                           
  1842                           ;incstack = 0
  1843  000748  C012  F015         	movff	uart_read@buffer+1,uart_read@b+1
  1844  00074C  C011  F014         	movff	uart_read@buffer,uart_read@b
  1845                           
  1846                           ;uart.c: 55: if (nbToRead <= UART_rxBufferNb)
  1847  000750  5013               	movf	uart_read@nbToRead,w,c
  1848  000752  5C42               	subwf	_UART_rxBufferNb,w,c
  1849  000754  A0D8               	btfss	status,0,c
  1850  000756  D024               	goto	l2367
  1851                           
  1852                           ;uart.c: 56: {
  1853                           ;uart.c: 58: for (i = 0; i < nbToRead; i++)
  1854  000758  0E00               	movlw	0
  1855  00075A  6E17               	movwf	uart_read@i,c
  1856  00075C  D019               	goto	l2361
  1857  00075E                     l2349:
  1858                           
  1859                           ;uart.c: 59: {
  1860                           ;uart.c: 60: *b = UART_rxBuffer[UART_readIndex];
  1861  00075E  5041               	movf	_UART_readIndex,w,c
  1862  000760  0D01               	mullw	1
  1863  000762  0100               	movlb	0	; () banked
  1864  000764  0E80               	movlw	low _UART_rxBuffer
  1865  000766  24F3               	addwf	prodl,w,c
  1866  000768  6ED9               	movwf	fsr2l,c
  1867  00076A  0100               	movlb	0	; () banked
  1868  00076C  0E00               	movlw	high _UART_rxBuffer
  1869  00076E  20F4               	addwfc	prodh,w,c
  1870  000770  6EDA               	movwf	fsr2h,c
  1871  000772  C014  FFE1         	movff	uart_read@b,fsr1l
  1872  000776  C015  FFE2         	movff	uart_read@b+1,fsr1h
  1873  00077A  CFDF FFE7          	movff	indf2,indf1
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;uart.c: 61: UART_readIndex++;
  1877  00077E  2A41               	incf	_UART_readIndex,f,c
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;uart.c: 62: if (UART_readIndex >= (50))
  1881  000780  0E31               	movlw	49
  1882  000782  6441               	cpfsgt	_UART_readIndex,c
  1883  000784  D002               	goto	l2357
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;uart.c: 63: {
  1887                           ;uart.c: 64: UART_readIndex = 0;
  1888  000786  0E00               	movlw	0
  1889  000788  6E41               	movwf	_UART_readIndex,c
  1890  00078A                     l2357:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;uart.c: 65: }
  1894                           ;uart.c: 66: b++;
  1895  00078A  4A14               	infsnz	uart_read@b,f,c
  1896  00078C  2A15               	incf	uart_read@b+1,f,c
  1897                           
  1898                           ; BSR set to: 0
  1899  00078E  2A17               	incf	uart_read@i,f,c
  1900  000790                     l2361:
  1901  000790  5013               	movf	uart_read@nbToRead,w,c
  1902  000792  5C17               	subwf	uart_read@i,w,c
  1903  000794  A0D8               	btfss	status,0,c
  1904  000796  D7E3               	goto	l2349
  1905                           
  1906                           ;uart.c: 67: }
  1907                           ;uart.c: 68: UART_rxBufferNb -= nbToRead;
  1908  000798  5013               	movf	uart_read@nbToRead,w,c
  1909  00079A  5E42               	subwf	_UART_rxBufferNb,f,c
  1910                           
  1911                           ;uart.c: 69: expectedNbRead = TRUE;
  1912  00079C  0E01               	movlw	1
  1913  00079E  D001               	goto	L10
  1914  0007A0                     l2367:
  1915                           
  1916                           ;uart.c: 71: else
  1917                           ;uart.c: 72: {
  1918                           ;uart.c: 73: expectedNbRead = FALSE;
  1919  0007A0  0E00               	movlw	0
  1920  0007A2                     L10:
  1921  0007A2  6E16               	movwf	uart_read@expectedNbRead,c
  1922                           
  1923                           ;uart.c: 74: }
  1924                           ;uart.c: 76: return expectedNbRead;
  1925  0007A4  5016               	movf	uart_read@expectedNbRead,w,c
  1926  0007A6  0012               	return	
  1927  0007A8                     __end_of_uart_read:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           prodh	equ	0xFF4
  1934                           prodl	equ	0xFF3
  1935                           intcon	equ	0xFF2
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           indf1	equ	0xFE7
  1939                           postdec1	equ	0xFE5
  1940                           fsr1h	equ	0xFE2
  1941                           fsr1l	equ	0xFE1
  1942                           indf2	equ	0xFDF
  1943                           postinc2	equ	0xFDE
  1944                           postdec2	equ	0xFDD
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _timer0_wait_262ms *****************
  1950 ;; Defined at:
  1951 ;;		line 26 in file "timer.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1965 ;;      Params:         0       0       0       0
  1966 ;;      Locals:         0       0       0       0
  1967 ;;      Temps:          0       0       0       0
  1968 ;;      Totals:         0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    2
  1972 ;; This function calls:
  1973 ;;		_timer0_wait_ready
  1974 ;; This function is called by:
  1975 ;;		_main_loop
  1976 ;;		_zb_handle_waitAck
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text7
  1981  000A2C                     __ptext7:
  1982                           	opt stack 0
  1983  000A2C                     _timer0_wait_262ms:
  1984                           	opt stack 26
  1985                           
  1986                           ;timer.c: 29: TMR0 = 0;
  1987                           
  1988                           ;incstack = 0
  1989  000A2C  0E00               	movlw	0
  1990  000A2E  6ED7               	movwf	4055,c	;volatile
  1991  000A30  0E00               	movlw	0
  1992  000A32  6ED6               	movwf	4054,c	;volatile
  1993                           
  1994                           ;timer.c: 30: T0CON = 0x47;
  1995  000A34  0E47               	movlw	71
  1996  000A36  6ED5               	movwf	4053,c	;volatile
  1997                           
  1998                           ;timer.c: 31: INTCONbits.TMR0IF = 0;
  1999  000A38  94F2               	bcf	intcon,2,c	;volatile
  2000                           
  2001                           ;timer.c: 32: INTCONbits.TMR0IE = 1;
  2002  000A3A  8AF2               	bsf	intcon,5,c	;volatile
  2003                           
  2004                           ;timer.c: 33: T0CONbits.TMR0ON = 1;
  2005  000A3C  8ED5               	bsf	4053,7,c	;volatile
  2006                           
  2007                           ;timer.c: 34: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2008  000A3E  8ED3               	bsf	4051,7,c	;volatile
  2009  000A40  0003               	sleep		;# 
  2010  000A42  9ED3               	bcf	4051,7,c	;volatile
  2011                           
  2012                           ;timer.c: 35: timer0_wait_ready();
  2013  000A44  EC60  F005         	call	_timer0_wait_ready	;wreg free
  2014                           
  2015                           ;timer.c: 36: T0CONbits.TMR0ON = 0;
  2016  000A48  9ED5               	bcf	4053,7,c	;volatile
  2017                           
  2018                           ;timer.c: 37: INTCONbits.TMR0IE = 0;
  2019  000A4A  9AF2               	bcf	intcon,5,c	;volatile
  2020  000A4C  0012               	return	
  2021  000A4E                     __end_of_timer0_wait_262ms:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           prodh	equ	0xFF4
  2028                           prodl	equ	0xFF3
  2029                           intcon	equ	0xFF2
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           indf1	equ	0xFE7
  2033                           postdec1	equ	0xFE5
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           indf2	equ	0xFDF
  2037                           postinc2	equ	0xFDE
  2038                           postdec2	equ	0xFDD
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function _zb_handle_setTempRaw *****************
  2044 ;; Defined at:
  2045 ;;		line 96 in file "zb_handle.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  tempRaw         2   22[COMRAM] unsigned int 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;		None               void
  2052 ;; Registers used:
  2053 ;;		wreg, status,2
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2059 ;;      Params:         2       0       0       0
  2060 ;;      Locals:         0       0       0       0
  2061 ;;      Temps:          0       0       0       0
  2062 ;;      Totals:         2       0       0       0
  2063 ;;Total ram usage:        2 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_main_loop
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text8
  2074  000AF4                     __ptext8:
  2075                           	opt stack 0
  2076  000AF4                     _zb_handle_setTempRaw:
  2077                           	opt stack 28
  2078                           
  2079                           ;zb_handle.c: 98: sensor_data.tempRaw = tempRaw;
  2080                           
  2081                           ;incstack = 0
  2082  000AF4  C017  F02C         	movff	zb_handle_setTempRaw@tempRaw,_sensor_data
  2083  000AF8  C018  F02D         	movff	zb_handle_setTempRaw@tempRaw+1,_sensor_data+1
  2084                           
  2085                           ;zb_handle.c: 99: sensor_data.tempStatus = (0x03);
  2086  000AFC  0E03               	movlw	3
  2087  000AFE  6E2E               	movwf	_sensor_data+2,c
  2088  000B00  0012               	return	
  2089  000B02                     __end_of_zb_handle_setTempRaw:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           intcon	equ	0xFF2
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           indf1	equ	0xFE7
  2101                           postdec1	equ	0xFE5
  2102                           fsr1h	equ	0xFE2
  2103                           fsr1l	equ	0xFE1
  2104                           indf2	equ	0xFDF
  2105                           postinc2	equ	0xFDE
  2106                           postdec2	equ	0xFDD
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _zb_handle_setHumidityRaw *****************
  2112 ;; Defined at:
  2113 ;;		line 102 in file "zb_handle.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  humidityRaw     2   20[COMRAM] unsigned int 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;		None               void
  2120 ;; Registers used:
  2121 ;;		wreg, status,2
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2127 ;;      Params:         2       0       0       0
  2128 ;;      Locals:         0       0       0       0
  2129 ;;      Temps:          0       0       0       0
  2130 ;;      Totals:         2       0       0       0
  2131 ;;Total ram usage:        2 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_main_loop
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text9
  2142  000B02                     __ptext9:
  2143                           	opt stack 0
  2144  000B02                     _zb_handle_setHumidityRaw:
  2145                           	opt stack 28
  2146                           
  2147                           ;zb_handle.c: 104: sensor_data.humidityRaw = humidityRaw;
  2148                           
  2149                           ;incstack = 0
  2150  000B02  C015  F02F         	movff	zb_handle_setHumidityRaw@humidityRaw,_sensor_data+3
  2151  000B06  C016  F030         	movff	zb_handle_setHumidityRaw@humidityRaw+1,_sensor_data+4
  2152                           
  2153                           ;zb_handle.c: 105: sensor_data.humidityStatus = (0x03);
  2154  000B0A  0E03               	movlw	3
  2155  000B0C  6E31               	movwf	_sensor_data+5,c
  2156  000B0E  0012               	return	
  2157  000B10                     __end_of_zb_handle_setHumidityRaw:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodh	equ	0xFF4
  2164                           prodl	equ	0xFF3
  2165                           intcon	equ	0xFF2
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           indf1	equ	0xFE7
  2169                           postdec1	equ	0xFE5
  2170                           fsr1h	equ	0xFE2
  2171                           fsr1l	equ	0xFE1
  2172                           indf2	equ	0xFDF
  2173                           postinc2	equ	0xFDE
  2174                           postdec2	equ	0xFDD
  2175                           fsr2h	equ	0xFDA
  2176                           fsr2l	equ	0xFD9
  2177                           status	equ	0xFD8
  2178                           
  2179 ;; *************** function _zb_handle_sendData *****************
  2180 ;; Defined at:
  2181 ;;		line 122 in file "zb_handle.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  frameSize       1   31[COMRAM] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;		None               void
  2188 ;; Registers used:
  2189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2195 ;;      Params:         0       0       0       0
  2196 ;;      Locals:         1       0       0       0
  2197 ;;      Temps:          3       0       0       0
  2198 ;;      Totals:         4       0       0       0
  2199 ;;Total ram usage:        4 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    3
  2202 ;; This function calls:
  2203 ;;		_uart_write
  2204 ;;		_zigbee_appendChecksum
  2205 ;; This function is called by:
  2206 ;;		_main_loop
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text10
  2211  0006BC                     __ptext10:
  2212                           	opt stack 0
  2213  0006BC                     _zb_handle_sendData:
  2214                           	opt stack 26
  2215                           
  2216                           ;zb_handle.c: 124: zb_currentFrameID = zb_frameID;
  2217                           
  2218                           ;incstack = 0
  2219  0006BC  C04E  F04B         	movff	_zb_frameID,_zb_currentFrameID
  2220                           
  2221                           ;zb_handle.c: 125: zb_frameID++;
  2222  0006C0  2A4E               	incf	_zb_frameID,f,c
  2223                           
  2224                           ;zb_handle.c: 126: if (zb_frameID == 0)
  2225  0006C2  664E               	tstfsz	_zb_frameID,c
  2226  0006C4  D002               	goto	l2663
  2227                           
  2228                           ;zb_handle.c: 127: {
  2229                           ;zb_handle.c: 128: zb_frameID = 1;
  2230  0006C6  0E01               	movlw	1
  2231  0006C8  6E4E               	movwf	_zb_frameID,c
  2232  0006CA                     l2663:
  2233                           
  2234                           ;zb_handle.c: 129: }
  2235                           ;zb_handle.c: 130: zb_currentAck = -1;
  2236  0006CA  684A               	setf	_zb_currentAck,c
  2237                           
  2238                           ;zb_handle.c: 132: zb_frameToSend[(4)] = zb_currentFrameID;
  2239  0006CC  C04B  F053         	movff	_zb_currentFrameID,_zb_frameToSend+4
  2240                           
  2241                           ;zb_handle.c: 133: zb_frameToSend[(18)] = zb_counter++;
  2242  0006D0  C049  F061         	movff	_zb_counter,_zb_frameToSend+18
  2243  0006D4  2A49               	incf	_zb_counter,f,c
  2244                           
  2245                           ;zb_handle.c: 134: zb_frameToSend[(21)] = sensor_data.tempStatus;
  2246  0006D6  C02E  F064         	movff	_sensor_data+2,_zb_frameToSend+21
  2247                           
  2248                           ;zb_handle.c: 135: zb_frameToSend[(22)] = sensor_data.tempRaw >> 8;
  2249  0006DA  C02D  F01D         	movff	_sensor_data+1,??_zb_handle_sendData
  2250  0006DE  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2251  0006E2  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2252  0006E4  501E               	movf	??_zb_handle_sendData+1,w,c
  2253  0006E6  6E65               	movwf	_zb_frameToSend+22,c
  2254                           
  2255                           ;zb_handle.c: 136: zb_frameToSend[(22) + 1] = sensor_data.tempRaw;
  2256  0006E8  C02C  F066         	movff	_sensor_data,_zb_frameToSend+23
  2257                           
  2258                           ;zb_handle.c: 137: zb_frameToSend[(25)] = sensor_data.humidityStatus;
  2259  0006EC  C031  F068         	movff	_sensor_data+5,_zb_frameToSend+25
  2260                           
  2261                           ;zb_handle.c: 138: zb_frameToSend[(26)] = sensor_data.humidityRaw >> 8;
  2262  0006F0  C030  F01D         	movff	_sensor_data+4,??_zb_handle_sendData
  2263  0006F4  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2264  0006F8  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2265  0006FA  501E               	movf	??_zb_handle_sendData+1,w,c
  2266  0006FC  6E69               	movwf	_zb_frameToSend+26,c
  2267                           
  2268                           ;zb_handle.c: 139: zb_frameToSend[(26) + 1] = sensor_data.humidityRaw;
  2269  0006FE  C02F  F06A         	movff	_sensor_data+3,_zb_frameToSend+27
  2270                           
  2271                           ;zb_handle.c: 140: zb_frameToSend[(29)] = sensor_data.battStatus;
  2272  000702  C034  F06C         	movff	_sensor_data+8,_zb_frameToSend+29
  2273                           
  2274                           ;zb_handle.c: 141: zb_frameToSend[(30)] = sensor_data.battRaw >> 8;
  2275  000706  C033  F01D         	movff	_sensor_data+7,??_zb_handle_sendData
  2276  00070A  C01D  F01E         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  2277  00070E  6A1F               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  2278  000710  501E               	movf	??_zb_handle_sendData+1,w,c
  2279  000712  6E6D               	movwf	_zb_frameToSend+30,c
  2280                           
  2281                           ;zb_handle.c: 142: zb_frameToSend[(30) + 1] = sensor_data.battRaw;
  2282  000714  C032  F06E         	movff	_sensor_data+6,_zb_frameToSend+31
  2283                           
  2284                           ;zb_handle.c: 143: zb_frameToSend[(1)] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0xFF00) >
      +                          > 8;
  2285  000718  0E00               	movlw	0
  2286  00071A  6E50               	movwf	_zb_frameToSend+1,c
  2287                           
  2288                           ;zb_handle.c: 144: zb_frameToSend[(1) + 1] = ((sizeof(zb_frameToSend) - 1 - (3)) & 0x00F
      +                          F);
  2289  00071C  0E1D               	movlw	29
  2290  00071E  6E51               	movwf	_zb_frameToSend+2,c
  2291                           
  2292                           ;zb_handle.c: 146: uint8_t frameSize = sizeof(zb_frameToSend) - 1;
  2293  000720  0E20               	movlw	32
  2294  000722  6E20               	movwf	zb_handle_sendData@frameSize,c
  2295                           
  2296                           ;zb_handle.c: 147: zigbee_appendChecksum(zb_frameToSend, &frameSize);
  2297  000724  0E00               	movlw	high _zb_frameToSend
  2298  000726  6E17               	movwf	zigbee_appendChecksum@buffer+1,c
  2299  000728  0E4F               	movlw	low _zb_frameToSend
  2300  00072A  6E16               	movwf	zigbee_appendChecksum@buffer,c
  2301  00072C  0E00               	movlw	high zb_handle_sendData@frameSize
  2302  00072E  6E19               	movwf	zigbee_appendChecksum@sizeFrame+1,c
  2303  000730  0E20               	movlw	low zb_handle_sendData@frameSize
  2304  000732  6E18               	movwf	zigbee_appendChecksum@sizeFrame,c
  2305  000734  ECD4  F003         	call	_zigbee_appendChecksum	;wreg free
  2306                           
  2307                           ;zb_handle.c: 149: uart_write(frameSize, zb_frameToSend);
  2308  000738  0E00               	movlw	high _zb_frameToSend
  2309  00073A  6E12               	movwf	uart_write@buffer+1,c
  2310  00073C  0E4F               	movlw	low _zb_frameToSend
  2311  00073E  6E11               	movwf	uart_write@buffer,c
  2312  000740  5020               	movf	zb_handle_sendData@frameSize,w,c
  2313  000742  EC70  F004         	call	_uart_write
  2314  000746  0012               	return	
  2315  000748                     __end_of_zb_handle_sendData:
  2316                           	opt stack 0
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           intcon	equ	0xFF2
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           indf1	equ	0xFE7
  2327                           postdec1	equ	0xFE5
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           indf2	equ	0xFDF
  2331                           postinc2	equ	0xFDE
  2332                           postdec2	equ	0xFDD
  2333                           fsr2h	equ	0xFDA
  2334                           fsr2l	equ	0xFD9
  2335                           status	equ	0xFD8
  2336                           
  2337 ;; *************** function _zigbee_appendChecksum *****************
  2338 ;; Defined at:
  2339 ;;		line 153 in file "zb_handle.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  buffer          2   21[COMRAM] PTR unsigned char 
  2342 ;;		 -> zb_frameToSend(33), 
  2343 ;;  sizeFrame       2   23[COMRAM] PTR unsigned char 
  2344 ;;		 -> zb_handle_sendData@frameSize(1), 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;		None               void
  2349 ;; Registers used:
  2350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2356 ;;      Params:         4       0       0       0
  2357 ;;      Locals:         0       0       0       0
  2358 ;;      Temps:          3       0       0       0
  2359 ;;      Totals:         7       0       0       0
  2360 ;;Total ram usage:        7 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    2
  2363 ;; This function calls:
  2364 ;;		_zb_doChecksum
  2365 ;; This function is called by:
  2366 ;;		_zb_handle_sendData
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text11
  2371  0007A8                     __ptext11:
  2372                           	opt stack 0
  2373  0007A8                     _zigbee_appendChecksum:
  2374                           	opt stack 26
  2375                           
  2376                           ;zb_handle.c: 155: buffer[*sizeFrame] = zb_doChecksum(&buffer[(3)], &buffer[*sizeFrame] 
      +                          - &buffer[(3)]);
  2377                           
  2378                           ;incstack = 0
  2379  0007A8  0E03               	movlw	3
  2380  0007AA  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2381  0007AC  6E11               	movwf	zb_doChecksum@frame,c
  2382  0007AE  0E00               	movlw	0
  2383  0007B0  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  2384  0007B2  6E12               	movwf	zb_doChecksum@frame+1,c
  2385  0007B4  5016               	movf	zigbee_appendChecksum@buffer,w,c
  2386  0007B6  0F03               	addlw	3
  2387  0007B8  0800               	sublw	0
  2388  0007BA  6E1A               	movwf	??_zigbee_appendChecksum& (0+255),c
  2389  0007BC  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2390  0007C0  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2391  0007C4  50DF               	movf	indf2,w,c
  2392  0007C6  0D01               	mullw	1
  2393  0007C8  50F3               	movf	prodl,w,c
  2394  0007CA  241A               	addwf	??_zigbee_appendChecksum,w,c
  2395  0007CC  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2396  0007CE  6E13               	movwf	zb_doChecksum@size,c
  2397  0007D0  ECDC  F004         	call	_zb_doChecksum	;wreg free
  2398  0007D4  6E1B               	movwf	(??_zigbee_appendChecksum+1)& (0+255),c
  2399  0007D6  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2400  0007DA  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2401  0007DE  50DF               	movf	indf2,w,c
  2402  0007E0  6E1C               	movwf	(??_zigbee_appendChecksum+2)& (0+255),c
  2403  0007E2  501C               	movf	??_zigbee_appendChecksum+2,w,c
  2404  0007E4  0D01               	mullw	1
  2405  0007E6  50F3               	movf	prodl,w,c
  2406  0007E8  2416               	addwf	zigbee_appendChecksum@buffer,w,c
  2407  0007EA  6ED9               	movwf	fsr2l,c
  2408  0007EC  50F4               	movf	prodh,w,c
  2409  0007EE  2017               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  2410  0007F0  6EDA               	movwf	fsr2h,c
  2411  0007F2  C01B  FFDF         	movff	??_zigbee_appendChecksum+1,indf2
  2412                           
  2413                           ;zb_handle.c: 156: (*sizeFrame)++;
  2414  0007F6  C018  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  2415  0007FA  C019  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  2416  0007FE  2ADF               	incf	indf2,f,c
  2417  000800  0012               	return	
  2418  000802                     __end_of_zigbee_appendChecksum:
  2419                           	opt stack 0
  2420                           tblptru	equ	0xFF8
  2421                           tblptrh	equ	0xFF7
  2422                           tblptrl	equ	0xFF6
  2423                           tablat	equ	0xFF5
  2424                           prodh	equ	0xFF4
  2425                           prodl	equ	0xFF3
  2426                           intcon	equ	0xFF2
  2427                           postinc0	equ	0xFEE
  2428                           wreg	equ	0xFE8
  2429                           indf1	equ	0xFE7
  2430                           postdec1	equ	0xFE5
  2431                           fsr1h	equ	0xFE2
  2432                           fsr1l	equ	0xFE1
  2433                           indf2	equ	0xFDF
  2434                           postinc2	equ	0xFDE
  2435                           postdec2	equ	0xFDD
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function _zb_doChecksum *****************
  2441 ;; Defined at:
  2442 ;;		line 9 in file "zb.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  frame           2   16[COMRAM] PTR unsigned char 
  2445 ;;		 -> zb_frameReceived(50), zb_frameToSend(33), 
  2446 ;;  size            1   18[COMRAM] unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  i               1   20[COMRAM] unsigned char 
  2449 ;;  checksum        1   19[COMRAM] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      unsigned char 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2459 ;;      Params:         3       0       0       0
  2460 ;;      Locals:         2       0       0       0
  2461 ;;      Temps:          0       0       0       0
  2462 ;;      Totals:         5       0       0       0
  2463 ;;Total ram usage:        5 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_zb_decodage
  2470 ;;		_zigbee_appendChecksum
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text12
  2475  0009B8                     __ptext12:
  2476                           	opt stack 0
  2477  0009B8                     _zb_doChecksum:
  2478                           	opt stack 25
  2479                           
  2480                           ;zb.c: 11: uint8_t checksum;
  2481                           ;zb.c: 13: checksum = 0xFF;
  2482                           
  2483                           ;incstack = 0
  2484  0009B8  6814               	setf	zb_doChecksum@checksum,c
  2485                           
  2486                           ;zb.c: 14: for (uint8_t i = 0; i < size; i++)
  2487  0009BA  0E00               	movlw	0
  2488  0009BC  6E15               	movwf	zb_doChecksum@i,c
  2489  0009BE  D00B               	goto	l2323
  2490  0009C0                     l2319:
  2491                           
  2492                           ;zb.c: 15: {
  2493                           ;zb.c: 16: checksum -= frame[i];
  2494  0009C0  5015               	movf	zb_doChecksum@i,w,c
  2495  0009C2  0D01               	mullw	1
  2496  0009C4  50F3               	movf	prodl,w,c
  2497  0009C6  2411               	addwf	zb_doChecksum@frame,w,c
  2498  0009C8  6ED9               	movwf	fsr2l,c
  2499  0009CA  50F4               	movf	prodh,w,c
  2500  0009CC  2012               	addwfc	zb_doChecksum@frame+1,w,c
  2501  0009CE  6EDA               	movwf	fsr2h,c
  2502  0009D0  50DF               	movf	indf2,w,c
  2503  0009D2  5E14               	subwf	zb_doChecksum@checksum,f,c
  2504  0009D4  2A15               	incf	zb_doChecksum@i,f,c
  2505  0009D6                     l2323:
  2506  0009D6  5013               	movf	zb_doChecksum@size,w,c
  2507  0009D8  5C15               	subwf	zb_doChecksum@i,w,c
  2508  0009DA  A0D8               	btfss	status,0,c
  2509  0009DC  D7F1               	goto	l2319
  2510                           
  2511                           ;zb.c: 17: }
  2512                           ;zb.c: 19: return checksum;
  2513  0009DE  5014               	movf	zb_doChecksum@checksum,w,c
  2514  0009E0  0012               	return	
  2515  0009E2                     __end_of_zb_doChecksum:
  2516                           	opt stack 0
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           prodh	equ	0xFF4
  2522                           prodl	equ	0xFF3
  2523                           intcon	equ	0xFF2
  2524                           postinc0	equ	0xFEE
  2525                           wreg	equ	0xFE8
  2526                           indf1	equ	0xFE7
  2527                           postdec1	equ	0xFE5
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           indf2	equ	0xFDF
  2531                           postinc2	equ	0xFDE
  2532                           postdec2	equ	0xFDD
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _uart_write *****************
  2538 ;; Defined at:
  2539 ;;		line 28 in file "uart.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  size            1    wreg     unsigned char 
  2542 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  2543 ;;		 -> zb_frameToSend(33), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  size            1   20[COMRAM] unsigned char 
  2546 ;;  b               2   18[COMRAM] PTR unsigned char 
  2547 ;;		 -> zb_frameToSend(33), 
  2548 ;;  i               1   21[COMRAM] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2558 ;;      Params:         2       0       0       0
  2559 ;;      Locals:         4       0       0       0
  2560 ;;      Temps:          0       0       0       0
  2561 ;;      Totals:         6       0       0       0
  2562 ;;Total ram usage:        6 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    1
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_zb_handle_sendData
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text13
  2573  0008E0                     __ptext13:
  2574                           	opt stack 0
  2575  0008E0                     _uart_write:
  2576                           	opt stack 27
  2577                           
  2578                           ;incstack = 0
  2579                           ;uart_write@size stored from wreg
  2580  0008E0  6E15               	movwf	uart_write@size,c
  2581                           
  2582                           ;uart.c: 30: uint8_t i;
  2583                           ;uart.c: 31: uint8_t* b;
  2584                           ;uart.c: 33: b = buffer;
  2585  0008E2  C012  F014         	movff	uart_write@buffer+1,uart_write@b+1
  2586  0008E6  C011  F013         	movff	uart_write@buffer,uart_write@b
  2587                           
  2588                           ;uart.c: 34: for (i = 0; i < size; i++)
  2589  0008EA  0E00               	movlw	0
  2590  0008EC  6E16               	movwf	uart_write@i,c
  2591  0008EE  D011               	goto	l2495
  2592  0008F0                     l2491:
  2593                           
  2594                           ;uart.c: 35: {
  2595                           ;uart.c: 36: TXREG = buffer[i];
  2596  0008F0  5016               	movf	uart_write@i,w,c
  2597  0008F2  0D01               	mullw	1
  2598  0008F4  50F3               	movf	prodl,w,c
  2599  0008F6  2411               	addwf	uart_write@buffer,w,c
  2600  0008F8  6ED9               	movwf	fsr2l,c
  2601  0008FA  50F4               	movf	prodh,w,c
  2602  0008FC  2012               	addwfc	uart_write@buffer+1,w,c
  2603  0008FE  6EDA               	movwf	fsr2h,c
  2604  000900  50DF               	movf	indf2,w,c
  2605  000902  6EAD               	movwf	4013,c	;volatile
  2606                           
  2607                           ;uart.c: 37: while (TXSTAbits.TRMT == 0)
  2608  000904  D001               	goto	l235
  2609  000906                     l236:
  2610                           
  2611                           ;uart.c: 38: {
  2612                           ;uart.c: 39: __nop();
  2613  000906  F000               	nop	
  2614  000908                     l235:
  2615  000908  A2AC               	btfss	4012,1,c	;volatile
  2616  00090A  D7FD               	goto	l236
  2617                           
  2618                           ;uart.c: 40: }
  2619                           ;uart.c: 41: b++;
  2620  00090C  4A13               	infsnz	uart_write@b,f,c
  2621  00090E  2A14               	incf	uart_write@b+1,f,c
  2622  000910  2A16               	incf	uart_write@i,f,c
  2623  000912                     l2495:
  2624  000912  5015               	movf	uart_write@size,w,c
  2625  000914  5C16               	subwf	uart_write@i,w,c
  2626  000916  A0D8               	btfss	status,0,c
  2627  000918  D7EB               	goto	l2491
  2628                           
  2629                           ;uart.c: 42: }
  2630                           ;uart.c: 44: __nop();
  2631  00091A  F000               	nop	
  2632  00091C  0012               	return	
  2633  00091E                     __end_of_uart_write:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           prodh	equ	0xFF4
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           indf1	equ	0xFE7
  2645                           postdec1	equ	0xFE5
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           postdec2	equ	0xFDD
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _zb_handle_resetStatus *****************
  2656 ;; Defined at:
  2657 ;;		line 114 in file "zb_handle.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		wreg, status,2
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2671 ;;      Params:         0       0       0       0
  2672 ;;      Locals:         0       0       0       0
  2673 ;;      Temps:          0       0       0       0
  2674 ;;      Totals:         0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_main_loop
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text14
  2686  000B10                     __ptext14:
  2687                           	opt stack 0
  2688  000B10                     _zb_handle_resetStatus:
  2689                           	opt stack 28
  2690                           
  2691                           ;zb_handle.c: 116: sensor_data.battStatus = (0x00);
  2692                           
  2693                           ;incstack = 0
  2694  000B10  0E00               	movlw	0
  2695  000B12  6E34               	movwf	_sensor_data+8,c
  2696                           
  2697                           ;zb_handle.c: 117: sensor_data.humidityStatus = (0x00);
  2698  000B14  0E00               	movlw	0
  2699  000B16  6E31               	movwf	_sensor_data+5,c
  2700                           
  2701                           ;zb_handle.c: 118: sensor_data.tempStatus = (0x00);
  2702  000B18  0E00               	movlw	0
  2703  000B1A  6E2E               	movwf	_sensor_data+2,c
  2704  000B1C  0012               	return	
  2705  000B1E                     __end_of_zb_handle_resetStatus:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           prodh	equ	0xFF4
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           postinc0	equ	0xFEE
  2715                           wreg	equ	0xFE8
  2716                           indf1	equ	0xFE7
  2717                           postdec1	equ	0xFE5
  2718                           fsr1h	equ	0xFE2
  2719                           fsr1l	equ	0xFE1
  2720                           indf2	equ	0xFDF
  2721                           postinc2	equ	0xFDE
  2722                           postdec2	equ	0xFDD
  2723                           fsr2h	equ	0xFDA
  2724                           fsr2l	equ	0xFD9
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function _zb_handle_getStatus *****************
  2728 ;; Defined at:
  2729 ;;		line 91 in file "zb_handle.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      enum E3761
  2736 ;; Registers used:
  2737 ;;		wreg, status,2
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2743 ;;      Params:         0       0       0       0
  2744 ;;      Locals:         0       0       0       0
  2745 ;;      Temps:          0       0       0       0
  2746 ;;      Totals:         0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_main_loop
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text15
  2758  000B40                     __ptext15:
  2759                           	opt stack 0
  2760  000B40                     _zb_handle_getStatus:
  2761                           	opt stack 28
  2762                           
  2763                           ;zb_handle.c: 93: return zb_status;
  2764                           
  2765                           ;incstack = 0
  2766  000B40  504D               	movf	_zb_status,w,c
  2767  000B42  0012               	return	
  2768  000B44                     __end_of_zb_handle_getStatus:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           prodh	equ	0xFF4
  2775                           prodl	equ	0xFF3
  2776                           intcon	equ	0xFF2
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           indf1	equ	0xFE7
  2780                           postdec1	equ	0xFE5
  2781                           fsr1h	equ	0xFE2
  2782                           fsr1l	equ	0xFE1
  2783                           indf2	equ	0xFDF
  2784                           postinc2	equ	0xFDE
  2785                           postdec2	equ	0xFDD
  2786                           fsr2h	equ	0xFDA
  2787                           fsr2l	equ	0xFD9
  2788                           status	equ	0xFD8
  2789                           
  2790 ;; *************** function _timer0_wait_65ms *****************
  2791 ;; Defined at:
  2792 ;;		line 11 in file "timer.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;		None               void
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2806 ;;      Params:         0       0       0       0
  2807 ;;      Locals:         0       0       0       0
  2808 ;;      Temps:          0       0       0       0
  2809 ;;      Totals:         0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    2
  2813 ;; This function calls:
  2814 ;;		_timer0_wait_ready
  2815 ;; This function is called by:
  2816 ;;		_main_loop
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text16
  2821  000A4E                     __ptext16:
  2822                           	opt stack 0
  2823  000A4E                     _timer0_wait_65ms:
  2824                           	opt stack 27
  2825                           
  2826                           ;timer.c: 13: TMR0 = 0;
  2827                           
  2828                           ;incstack = 0
  2829  000A4E  0E00               	movlw	0
  2830  000A50  6ED7               	movwf	4055,c	;volatile
  2831  000A52  0E00               	movlw	0
  2832  000A54  6ED6               	movwf	4054,c	;volatile
  2833                           
  2834                           ;timer.c: 14: T0CON = 0x45;
  2835  000A56  0E45               	movlw	69
  2836  000A58  6ED5               	movwf	4053,c	;volatile
  2837                           
  2838                           ;timer.c: 15: INTCONbits.TMR0IF = 0;
  2839  000A5A  94F2               	bcf	intcon,2,c	;volatile
  2840                           
  2841                           ;timer.c: 16: INTCONbits.TMR0IE = 1;
  2842  000A5C  8AF2               	bsf	intcon,5,c	;volatile
  2843                           
  2844                           ;timer.c: 17: T0CONbits.TMR0ON = 1;
  2845  000A5E  8ED5               	bsf	4053,7,c	;volatile
  2846                           
  2847                           ;timer.c: 19: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2848  000A60  8ED3               	bsf	4051,7,c	;volatile
  2849  000A62  0003               	sleep		;# 
  2850  000A64  9ED3               	bcf	4051,7,c	;volatile
  2851                           
  2852                           ;timer.c: 20: timer0_wait_ready();
  2853  000A66  EC60  F005         	call	_timer0_wait_ready	;wreg free
  2854                           
  2855                           ;timer.c: 22: T0CONbits.TMR0ON = 0;
  2856  000A6A  9ED5               	bcf	4053,7,c	;volatile
  2857                           
  2858                           ;timer.c: 23: INTCONbits.TMR0IE = 0;
  2859  000A6C  9AF2               	bcf	intcon,5,c	;volatile
  2860  000A6E  0012               	return	
  2861  000A70                     __end_of_timer0_wait_65ms:
  2862                           	opt stack 0
  2863                           tblptru	equ	0xFF8
  2864                           tblptrh	equ	0xFF7
  2865                           tblptrl	equ	0xFF6
  2866                           tablat	equ	0xFF5
  2867                           prodh	equ	0xFF4
  2868                           prodl	equ	0xFF3
  2869                           intcon	equ	0xFF2
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           indf1	equ	0xFE7
  2873                           postdec1	equ	0xFE5
  2874                           fsr1h	equ	0xFE2
  2875                           fsr1l	equ	0xFE1
  2876                           indf2	equ	0xFDF
  2877                           postinc2	equ	0xFDE
  2878                           postdec2	equ	0xFDD
  2879                           fsr2h	equ	0xFDA
  2880                           fsr2l	equ	0xFD9
  2881                           status	equ	0xFD8
  2882                           
  2883 ;; *************** function _timer0_wait_ready *****************
  2884 ;; Defined at:
  2885 ;;		line 42 in file "timer.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;		None               void
  2892 ;; Registers used:
  2893 ;;		wreg, status,2
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2899 ;;      Params:         0       0       0       0
  2900 ;;      Locals:         0       0       0       0
  2901 ;;      Temps:          0       0       0       0
  2902 ;;      Totals:         0       0       0       0
  2903 ;;Total ram usage:        0 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_timer0_wait_65ms
  2910 ;;		_timer0_wait_262ms
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text17
  2915  000AC0                     __ptext17:
  2916                           	opt stack 0
  2917  000AC0                     _timer0_wait_ready:
  2918                           	opt stack 26
  2919                           
  2920                           ;incstack = 0
  2921                           ;timer.c: 44: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2922  000AC0  8ED3               	bsf	4051,7,c	;volatile
  2923  000AC2  0003               	sleep		;# 
  2924  000AC4  9ED3               	bcf	4051,7,c	;volatile
  2925  000AC6                     l2409:
  2926  000AC6  5047               	movf	_timer0_interupt_done,w,c
  2927  000AC8  B4D8               	btfsc	status,2,c
  2928  000ACA  D7FD               	goto	l2409
  2929                           
  2930                           ;timer.c: 48: timer0_interupt_done = FALSE;
  2931  000ACC  0E00               	movlw	0
  2932  000ACE  6E47               	movwf	_timer0_interupt_done,c
  2933  000AD0  0012               	return	
  2934  000AD2                     __end_of_timer0_wait_ready:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           prodh	equ	0xFF4
  2941                           prodl	equ	0xFF3
  2942                           intcon	equ	0xFF2
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           indf1	equ	0xFE7
  2946                           postdec1	equ	0xFE5
  2947                           fsr1h	equ	0xFE2
  2948                           fsr1l	equ	0xFE1
  2949                           indf2	equ	0xFDF
  2950                           postinc2	equ	0xFDE
  2951                           postdec2	equ	0xFDD
  2952                           fsr2h	equ	0xFDA
  2953                           fsr2l	equ	0xFD9
  2954                           status	equ	0xFD8
  2955                           
  2956 ;; *************** function _hyt221_operation *****************
  2957 ;; Defined at:
  2958 ;;		line 44 in file "hyt221.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  index           1   19[COMRAM] char 
  2963 ;;  bDeviceDataA    1   18[COMRAM] enum E3083
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      enum E3778
  2966 ;; Registers used:
  2967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2973 ;;      Params:         0       0       0       0
  2974 ;;      Locals:         2       0       0       0
  2975 ;;      Temps:          0       0       0       0
  2976 ;;      Totals:         2       0       0       0
  2977 ;;Total ram usage:        2 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    3
  2980 ;; This function calls:
  2981 ;;		_i2c_trig_start
  2982 ;;		_i2c_trig_stop
  2983 ;;		_i2c_wait_idle
  2984 ;;		_i2c_wait_ready
  2985 ;;		_leds_glitch
  2986 ;; This function is called by:
  2987 ;;		_main_loop
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text18
  2992  000628                     __ptext18:
  2993                           	opt stack 0
  2994  000628                     _hyt221_operation:
  2995                           	opt stack 26
  2996                           
  2997                           ;hyt221.c: 46: int8_t index;
  2998                           ;hyt221.c: 47: BOOL bDeviceDataAreStale;
  2999                           ;hyt221.c: 48: bDeviceDataAreStale = FALSE;
  3000                           
  3001                           ;incstack = 0
  3002  000628  0E00               	movlw	0
  3003  00062A  6E13               	movwf	hyt221_operation@bDeviceDataAreStale,c
  3004                           
  3005                           ;hyt221.c: 51: i2c_trig_start();
  3006  00062C  EC96  F005         	call	_i2c_trig_start	;wreg free
  3007                           
  3008                           ;hyt221.c: 54: SSPBUF = (0x51);
  3009  000630  0E51               	movlw	81
  3010  000632  6EC9               	movwf	4041,c	;volatile
  3011                           
  3012                           ;hyt221.c: 55: i2c_wait_ready();
  3013  000634  EC69  F005         	call	_i2c_wait_ready	;wreg free
  3014                           
  3015                           ;hyt221.c: 58: if (SSPCON2bits.ACKSTAT == 1)
  3016  000638  ACC5               	btfss	4037,6,c	;volatile
  3017  00063A  D007               	goto	l2587
  3018                           
  3019                           ;hyt221.c: 59: {
  3020                           ;hyt221.c: 60: leds_glitch((0x08) | (0x04));
  3021  00063C  0E0C               	movlw	12
  3022  00063E  EC47  F005         	call	_leds_glitch
  3023                           
  3024                           ;hyt221.c: 61: i2c_trig_stop();
  3025  000642  EC9C  F005         	call	_i2c_trig_stop	;wreg free
  3026                           
  3027                           ;hyt221.c: 62: return STATUS_ERROR;
  3028  000646  0E01               	movlw	1
  3029  000648  D038               	goto	l379
  3030  00064A                     l2587:
  3031                           
  3032                           ;hyt221.c: 63: }
  3033                           ;hyt221.c: 65: index = 0;
  3034  00064A  0E00               	movlw	0
  3035  00064C  6E14               	movwf	hyt221_operation@index,c
  3036                           
  3037                           ;hyt221.c: 66: while (index < 4)
  3038  00064E  D026               	goto	l2617
  3039  000650                     l2589:
  3040                           
  3041                           ;hyt221.c: 67: {
  3042                           ;hyt221.c: 68: i2c_wait_idle();
  3043  000650  EC72  F005         	call	_i2c_wait_idle	;wreg free
  3044                           
  3045                           ;hyt221.c: 69: SSPCON2bits.RCEN = 1;
  3046  000654  86C5               	bsf	4037,3,c	;volatile
  3047                           
  3048                           ;hyt221.c: 71: i2c_wait_ready();
  3049  000656  EC69  F005         	call	_i2c_wait_ready	;wreg free
  3050                           
  3051                           ;hyt221.c: 73: gData[index] = SSPBUF;
  3052  00065A  5014               	movf	hyt221_operation@index,w,c
  3053  00065C  0D01               	mullw	1
  3054  00065E  0E35               	movlw	low _gData
  3055  000660  24F3               	addwf	prodl,w,c
  3056  000662  6ED9               	movwf	fsr2l,c
  3057  000664  0E00               	movlw	high _gData
  3058  000666  20F4               	addwfc	prodh,w,c
  3059  000668  6EDA               	movwf	fsr2h,c
  3060  00066A  CFC9 FFDF          	movff	4041,indf2	;volatile
  3061                           
  3062                           ;hyt221.c: 74: if (index == 0)
  3063  00066E  6614               	tstfsz	hyt221_operation@index,c
  3064  000670  D008               	goto	l2605
  3065                           
  3066                           ;hyt221.c: 75: {
  3067                           ;hyt221.c: 77: if ((gData[0] & 0x40) == 0x40)
  3068  000672  AC35               	btfss	_gData,6,c
  3069  000674  D00C               	goto	l386
  3070                           
  3071                           ;hyt221.c: 78: {
  3072                           ;hyt221.c: 80: SSPCON2bits.ACKDT = 1;
  3073  000676  8AC5               	bsf	4037,5,c	;volatile
  3074                           
  3075                           ;hyt221.c: 81: index = 3;
  3076  000678  0E03               	movlw	3
  3077  00067A  6E14               	movwf	hyt221_operation@index,c
  3078                           
  3079                           ;hyt221.c: 82: bDeviceDataAreStale = TRUE;
  3080  00067C  0E01               	movlw	1
  3081  00067E  6E13               	movwf	hyt221_operation@bDeviceDataAreStale,c
  3082                           
  3083                           ;hyt221.c: 83: }
  3084  000680  D007               	goto	l2609
  3085  000682                     l2605:
  3086                           
  3087                           ;hyt221.c: 89: else if (index == 3)
  3088  000682  5014               	movf	hyt221_operation@index,w,c
  3089  000684  0A03               	xorlw	3
  3090  000686  A4D8               	btfss	status,2,c
  3091  000688  D002               	goto	l386
  3092                           
  3093                           ;hyt221.c: 90: {
  3094                           ;hyt221.c: 91: SSPCON2bits.ACKDT = 1;
  3095  00068A  8AC5               	bsf	4037,5,c	;volatile
  3096                           
  3097                           ;hyt221.c: 92: }
  3098  00068C  D001               	goto	l2609
  3099  00068E                     l386:
  3100                           
  3101                           ;hyt221.c: 93: else
  3102                           ;hyt221.c: 94: {
  3103                           ;hyt221.c: 95: SSPCON2bits.ACKDT = 0;
  3104  00068E  9AC5               	bcf	4037,5,c	;volatile
  3105  000690                     l2609:
  3106                           
  3107                           ;hyt221.c: 96: }
  3108                           ;hyt221.c: 98: i2c_wait_idle();
  3109  000690  EC72  F005         	call	_i2c_wait_idle	;wreg free
  3110                           
  3111                           ;hyt221.c: 101: SSPCON2bits.ACKEN = 1;
  3112  000694  88C5               	bsf	4037,4,c	;volatile
  3113                           
  3114                           ;hyt221.c: 102: i2c_wait_ready();
  3115  000696  EC69  F005         	call	_i2c_wait_ready	;wreg free
  3116                           
  3117                           ;hyt221.c: 103: index++;
  3118  00069A  2A14               	incf	hyt221_operation@index,f,c
  3119  00069C                     l2617:
  3120  00069C  5014               	movf	hyt221_operation@index,w,c
  3121  00069E  0A80               	xorlw	128
  3122  0006A0  0F7C               	addlw	-132
  3123  0006A2  A0D8               	btfss	status,0,c
  3124  0006A4  D7D5               	goto	l2589
  3125                           
  3126                           ;hyt221.c: 104: }
  3127                           ;hyt221.c: 106: i2c_wait_idle();
  3128  0006A6  EC72  F005         	call	_i2c_wait_idle	;wreg free
  3129                           
  3130                           ;hyt221.c: 107: i2c_trig_stop();
  3131  0006AA  EC9C  F005         	call	_i2c_trig_stop	;wreg free
  3132                           
  3133                           ;hyt221.c: 109: if (bDeviceDataAreStale == TRUE)
  3134  0006AE  0413               	decf	hyt221_operation@bDeviceDataAreStale,w,c
  3135  0006B0  A4D8               	btfss	status,2,c
  3136  0006B2  D002               	goto	l2629
  3137                           
  3138                           ;hyt221.c: 110: {
  3139                           ;hyt221.c: 111: return STATUS_EBUSY;
  3140  0006B4  0E02               	movlw	2
  3141  0006B6  D001               	goto	l379
  3142  0006B8                     l2629:
  3143                           
  3144                           ;hyt221.c: 112: }
  3145                           ;hyt221.c: 114: return STATUS_OK;
  3146  0006B8  0E00               	movlw	0
  3147  0006BA                     l379:
  3148  0006BA  0012               	return	
  3149  0006BC                     __end_of_hyt221_operation:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           prodh	equ	0xFF4
  3156                           prodl	equ	0xFF3
  3157                           intcon	equ	0xFF2
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           indf1	equ	0xFE7
  3161                           postdec1	equ	0xFE5
  3162                           fsr1h	equ	0xFE2
  3163                           fsr1l	equ	0xFE1
  3164                           indf2	equ	0xFDF
  3165                           postinc2	equ	0xFDE
  3166                           postdec2	equ	0xFDD
  3167                           fsr2h	equ	0xFDA
  3168                           fsr2l	equ	0xFD9
  3169                           status	equ	0xFD8
  3170                           
  3171 ;; *************** function _hyt221_launch_acq *****************
  3172 ;; Defined at:
  3173 ;;		line 20 in file "hyt221.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      enum E3778
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3187 ;;      Params:         0       0       0       0
  3188 ;;      Locals:         0       0       0       0
  3189 ;;      Temps:          0       0       0       0
  3190 ;;      Totals:         0       0       0       0
  3191 ;;Total ram usage:        0 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    3
  3194 ;; This function calls:
  3195 ;;		_i2c_trig_start
  3196 ;;		_i2c_trig_stop
  3197 ;;		_i2c_wait_idle
  3198 ;;		_i2c_wait_ready
  3199 ;;		_leds_glitch
  3200 ;; This function is called by:
  3201 ;;		_main_loop
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text19
  3206  0009E2                     __ptext19:
  3207                           	opt stack 0
  3208  0009E2                     _hyt221_launch_acq:
  3209                           	opt stack 26
  3210                           
  3211                           ;hyt221.c: 22: i2c_trig_start();
  3212                           
  3213                           ;incstack = 0
  3214  0009E2  EC96  F005         	call	_i2c_trig_start	;wreg free
  3215                           
  3216                           ;hyt221.c: 25: SSPBUF = (0x50);
  3217  0009E6  0E50               	movlw	80
  3218  0009E8  6EC9               	movwf	4041,c	;volatile
  3219                           
  3220                           ;hyt221.c: 27: i2c_wait_ready();
  3221  0009EA  EC69  F005         	call	_i2c_wait_ready	;wreg free
  3222                           
  3223                           ;hyt221.c: 31: if (SSPCON2bits.ACKSTAT == 1)
  3224  0009EE  ACC5               	btfss	4037,6,c	;volatile
  3225  0009F0  D005               	goto	l2541
  3226                           
  3227                           ;hyt221.c: 32: {
  3228                           ;hyt221.c: 33: leds_glitch((0x08) | (0x04));
  3229  0009F2  0E0C               	movlw	12
  3230  0009F4  EC47  F005         	call	_leds_glitch
  3231                           
  3232                           ;hyt221.c: 34: return STATUS_ERROR;
  3233  0009F8  0E01               	movlw	1
  3234  0009FA  D006               	goto	l375
  3235  0009FC                     l2541:
  3236                           
  3237                           ;hyt221.c: 35: }
  3238                           ;hyt221.c: 37: i2c_wait_idle();
  3239  0009FC  EC72  F005         	call	_i2c_wait_idle	;wreg free
  3240                           
  3241                           ;hyt221.c: 38: i2c_trig_stop();
  3242  000A00  EC9C  F005         	call	_i2c_trig_stop	;wreg free
  3243                           
  3244                           ;hyt221.c: 39: __nop();
  3245  000A04  F000               	nop	
  3246                           
  3247                           ;hyt221.c: 40: return STATUS_OK;
  3248  000A06  0E00               	movlw	0
  3249  000A08                     l375:
  3250  000A08  0012               	return	
  3251  000A0A                     __end_of_hyt221_launch_acq:
  3252                           	opt stack 0
  3253                           tblptru	equ	0xFF8
  3254                           tblptrh	equ	0xFF7
  3255                           tblptrl	equ	0xFF6
  3256                           tablat	equ	0xFF5
  3257                           prodh	equ	0xFF4
  3258                           prodl	equ	0xFF3
  3259                           intcon	equ	0xFF2
  3260                           postinc0	equ	0xFEE
  3261                           wreg	equ	0xFE8
  3262                           indf1	equ	0xFE7
  3263                           postdec1	equ	0xFE5
  3264                           fsr1h	equ	0xFE2
  3265                           fsr1l	equ	0xFE1
  3266                           indf2	equ	0xFDF
  3267                           postinc2	equ	0xFDE
  3268                           postdec2	equ	0xFDD
  3269                           fsr2h	equ	0xFDA
  3270                           fsr2l	equ	0xFD9
  3271                           status	equ	0xFD8
  3272                           
  3273 ;; *************** function _i2c_trig_stop *****************
  3274 ;; Defined at:
  3275 ;;		line 61 in file "i2c.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3289 ;;      Params:         0       0       0       0
  3290 ;;      Locals:         0       0       0       0
  3291 ;;      Temps:          0       0       0       0
  3292 ;;      Totals:         0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    2
  3296 ;; This function calls:
  3297 ;;		_i2c_wait_ready
  3298 ;; This function is called by:
  3299 ;;		_hyt221_launch_acq
  3300 ;;		_hyt221_operation
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text20
  3305  000B38                     __ptext20:
  3306                           	opt stack 0
  3307  000B38                     _i2c_trig_stop:
  3308                           	opt stack 26
  3309                           
  3310                           ;i2c.c: 64: SSPCON2bits.PEN = 1;
  3311                           
  3312                           ;incstack = 0
  3313  000B38  84C5               	bsf	4037,2,c	;volatile
  3314                           
  3315                           ;i2c.c: 65: i2c_wait_ready();
  3316  000B3A  EC69  F005         	call	_i2c_wait_ready	;wreg free
  3317  000B3E  0012               	return	
  3318  000B40                     __end_of_i2c_trig_stop:
  3319                           	opt stack 0
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           prodh	equ	0xFF4
  3325                           prodl	equ	0xFF3
  3326                           intcon	equ	0xFF2
  3327                           postinc0	equ	0xFEE
  3328                           wreg	equ	0xFE8
  3329                           indf1	equ	0xFE7
  3330                           postdec1	equ	0xFE5
  3331                           fsr1h	equ	0xFE2
  3332                           fsr1l	equ	0xFE1
  3333                           indf2	equ	0xFDF
  3334                           postinc2	equ	0xFDE
  3335                           postdec2	equ	0xFDD
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function _i2c_trig_start *****************
  3341 ;; Defined at:
  3342 ;;		line 53 in file "i2c.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;		None               void
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3356 ;;      Params:         0       0       0       0
  3357 ;;      Locals:         0       0       0       0
  3358 ;;      Temps:          0       0       0       0
  3359 ;;      Totals:         0       0       0       0
  3360 ;;Total ram usage:        0 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    2
  3363 ;; This function calls:
  3364 ;;		_i2c_wait_idle
  3365 ;;		_i2c_wait_ready
  3366 ;; This function is called by:
  3367 ;;		_hyt221_launch_acq
  3368 ;;		_hyt221_operation
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text21
  3373  000B2C                     __ptext21:
  3374                           	opt stack 0
  3375  000B2C                     _i2c_trig_start:
  3376                           	opt stack 26
  3377                           
  3378                           ;i2c.c: 55: i2c_wait_idle();
  3379                           
  3380                           ;incstack = 0
  3381  000B2C  EC72  F005         	call	_i2c_wait_idle	;wreg free
  3382                           
  3383                           ;i2c.c: 57: SSPCON2bits.SEN = 1;
  3384  000B30  80C5               	bsf	4037,0,c	;volatile
  3385                           
  3386                           ;i2c.c: 58: i2c_wait_ready();
  3387  000B32  EC69  F005         	call	_i2c_wait_ready	;wreg free
  3388  000B36  0012               	return	
  3389  000B38                     __end_of_i2c_trig_start:
  3390                           	opt stack 0
  3391                           tblptru	equ	0xFF8
  3392                           tblptrh	equ	0xFF7
  3393                           tblptrl	equ	0xFF6
  3394                           tablat	equ	0xFF5
  3395                           prodh	equ	0xFF4
  3396                           prodl	equ	0xFF3
  3397                           intcon	equ	0xFF2
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           indf1	equ	0xFE7
  3401                           postdec1	equ	0xFE5
  3402                           fsr1h	equ	0xFE2
  3403                           fsr1l	equ	0xFE1
  3404                           indf2	equ	0xFDF
  3405                           postinc2	equ	0xFDE
  3406                           postdec2	equ	0xFDD
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _i2c_wait_ready *****************
  3412 ;; Defined at:
  3413 ;;		line 35 in file "i2c.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;		None               void
  3420 ;; Registers used:
  3421 ;;		wreg, status,2
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3427 ;;      Params:         0       0       0       0
  3428 ;;      Locals:         0       0       0       0
  3429 ;;      Temps:          0       0       0       0
  3430 ;;      Totals:         0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_i2c_trig_start
  3438 ;;		_i2c_trig_stop
  3439 ;;		_hyt221_launch_acq
  3440 ;;		_hyt221_operation
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text22
  3445  000AD2                     __ptext22:
  3446                           	opt stack 0
  3447  000AD2                     _i2c_wait_ready:
  3448                           	opt stack 27
  3449                           
  3450                           ;incstack = 0
  3451                           ;i2c.c: 37: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while (0
      +                          );;
  3452  000AD2  8ED3               	bsf	4051,7,c	;volatile
  3453  000AD4  0003               	sleep		;# 
  3454  000AD6  9ED3               	bcf	4051,7,c	;volatile
  3455  000AD8                     l2335:
  3456  000AD8  5045               	movf	_i2c_interupt_done,w,c
  3457  000ADA  B4D8               	btfsc	status,2,c
  3458  000ADC  D7FD               	goto	l2335
  3459                           
  3460                           ;i2c.c: 43: i2c_interupt_done = FALSE;
  3461  000ADE  0E00               	movlw	0
  3462  000AE0  6E45               	movwf	_i2c_interupt_done,c
  3463  000AE2  0012               	return	
  3464  000AE4                     __end_of_i2c_wait_ready:
  3465                           	opt stack 0
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           prodh	equ	0xFF4
  3471                           prodl	equ	0xFF3
  3472                           intcon	equ	0xFF2
  3473                           postinc0	equ	0xFEE
  3474                           wreg	equ	0xFE8
  3475                           indf1	equ	0xFE7
  3476                           postdec1	equ	0xFE5
  3477                           fsr1h	equ	0xFE2
  3478                           fsr1l	equ	0xFE1
  3479                           indf2	equ	0xFDF
  3480                           postinc2	equ	0xFDE
  3481                           postdec2	equ	0xFDD
  3482                           fsr2h	equ	0xFDA
  3483                           fsr2l	equ	0xFD9
  3484                           status	equ	0xFD8
  3485                           
  3486 ;; *************** function _i2c_wait_idle *****************
  3487 ;; Defined at:
  3488 ;;		line 46 in file "i2c.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;		None               void
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3502 ;;      Params:         0       0       0       0
  3503 ;;      Locals:         0       0       0       0
  3504 ;;      Temps:          1       0       0       0
  3505 ;;      Totals:         1       0       0       0
  3506 ;;Total ram usage:        1 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_i2c_trig_start
  3513 ;;		_hyt221_launch_acq
  3514 ;;		_hyt221_operation
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text23
  3519  000AE4                     __ptext23:
  3520                           	opt stack 0
  3521  000AE4                     _i2c_wait_idle:
  3522                           	opt stack 27
  3523  000AE4                     l2341:
  3524  000AE4  CFC5 F011          	movff	4037,??_i2c_wait_idle	;volatile
  3525  000AE8  0E1F               	movlw	31
  3526  000AEA  1611               	andwf	??_i2c_wait_idle,f,c
  3527  000AEC  B4D8               	btfsc	status,2,c
  3528  000AEE  B4C7               	btfsc	4039,2,c	;volatile
  3529  000AF0  D7F9               	goto	l2341
  3530  000AF2  0012               	return	
  3531  000AF4                     __end_of_i2c_wait_idle:
  3532                           	opt stack 0
  3533                           tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           prodh	equ	0xFF4
  3538                           prodl	equ	0xFF3
  3539                           intcon	equ	0xFF2
  3540                           postinc0	equ	0xFEE
  3541                           wreg	equ	0xFE8
  3542                           indf1	equ	0xFE7
  3543                           postdec1	equ	0xFE5
  3544                           fsr1h	equ	0xFE2
  3545                           fsr1l	equ	0xFE1
  3546                           indf2	equ	0xFDF
  3547                           postinc2	equ	0xFDE
  3548                           postdec2	equ	0xFDD
  3549                           fsr2h	equ	0xFDA
  3550                           fsr2l	equ	0xFD9
  3551                           status	equ	0xFD8
  3552                           
  3553 ;; *************** function _hyt221_getTemp *****************
  3554 ;; Defined at:
  3555 ;;		line 118 in file "hyt221.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  temp_raw        2   20[COMRAM] unsigned int 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2   16[COMRAM] unsigned int 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3569 ;;      Params:         2       0       0       0
  3570 ;;      Locals:         2       0       0       0
  3571 ;;      Temps:          2       0       0       0
  3572 ;;      Totals:         6       0       0       0
  3573 ;;Total ram usage:        6 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_main_loop
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text24
  3584  00098A                     __ptext24:
  3585                           	opt stack 0
  3586  00098A                     _hyt221_getTemp:
  3587                           	opt stack 28
  3588                           
  3589                           ;hyt221.c: 120: uint16_t temp_raw;
  3590                           ;hyt221.c: 121: temp_raw = ((uint16_t) gData[2]) << 8 | (uint16_t) gData[3];
  3591                           
  3592                           ;incstack = 0
  3593  00098A  5037               	movf	_gData+2,w,c
  3594  00098C  6E16               	movwf	hyt221_getTemp@temp_raw+1,c
  3595  00098E  5038               	movf	_gData+3,w,c
  3596  000990  6E15               	movwf	hyt221_getTemp@temp_raw,c
  3597                           
  3598                           ;hyt221.c: 122: temp_raw = temp_raw >> 2;
  3599  000992  C015  F013         	movff	hyt221_getTemp@temp_raw,??_hyt221_getTemp
  3600  000996  C016  F014         	movff	hyt221_getTemp@temp_raw+1,??_hyt221_getTemp+1
  3601  00099A  90D8               	bcf	status,0,c
  3602  00099C  3214               	rrcf	??_hyt221_getTemp+1,f,c
  3603  00099E  3213               	rrcf	??_hyt221_getTemp,f,c
  3604  0009A0  90D8               	bcf	status,0,c
  3605  0009A2  3214               	rrcf	??_hyt221_getTemp+1,f,c
  3606  0009A4  3213               	rrcf	??_hyt221_getTemp,f,c
  3607  0009A6  C013  F015         	movff	??_hyt221_getTemp,hyt221_getTemp@temp_raw
  3608  0009AA  C014  F016         	movff	??_hyt221_getTemp+1,hyt221_getTemp@temp_raw+1
  3609                           
  3610                           ;hyt221.c: 123: return temp_raw;
  3611  0009AE  C015  F011         	movff	hyt221_getTemp@temp_raw,?_hyt221_getTemp
  3612  0009B2  C016  F012         	movff	hyt221_getTemp@temp_raw+1,?_hyt221_getTemp+1
  3613  0009B6  0012               	return	
  3614  0009B8                     __end_of_hyt221_getTemp:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           prodh	equ	0xFF4
  3621                           prodl	equ	0xFF3
  3622                           intcon	equ	0xFF2
  3623                           postinc0	equ	0xFEE
  3624                           wreg	equ	0xFE8
  3625                           indf1	equ	0xFE7
  3626                           postdec1	equ	0xFE5
  3627                           fsr1h	equ	0xFE2
  3628                           fsr1l	equ	0xFE1
  3629                           indf2	equ	0xFDF
  3630                           postinc2	equ	0xFDE
  3631                           postdec2	equ	0xFDD
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _hyt221_getHumidity *****************
  3637 ;; Defined at:
  3638 ;;		line 126 in file "hyt221.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  humidity_raw    2   18[COMRAM] unsigned int 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2   16[COMRAM] unsigned int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3652 ;;      Params:         2       0       0       0
  3653 ;;      Locals:         2       0       0       0
  3654 ;;      Temps:          0       0       0       0
  3655 ;;      Totals:         4       0       0       0
  3656 ;;Total ram usage:        4 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    1
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_main_loop
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text25
  3667  000AAC                     __ptext25:
  3668                           	opt stack 0
  3669  000AAC                     _hyt221_getHumidity:
  3670                           	opt stack 28
  3671                           
  3672                           ;hyt221.c: 128: uint16_t humidity_raw;
  3673                           ;hyt221.c: 129: humidity_raw = ((uint16_t) (gData[0] & 0x3F)) << 8 | gData[1];
  3674                           
  3675                           ;incstack = 0
  3676  000AAC  5035               	movf	_gData,w,c
  3677  000AAE  0B3F               	andlw	63
  3678  000AB0  6E14               	movwf	hyt221_getHumidity@humidity_raw+1,c
  3679  000AB2  5036               	movf	_gData+1,w,c
  3680  000AB4  6E13               	movwf	hyt221_getHumidity@humidity_raw,c
  3681                           
  3682                           ;hyt221.c: 130: return humidity_raw;
  3683  000AB6  C013  F011         	movff	hyt221_getHumidity@humidity_raw,?_hyt221_getHumidity
  3684  000ABA  C014  F012         	movff	hyt221_getHumidity@humidity_raw+1,?_hyt221_getHumidity+1
  3685  000ABE  0012               	return	
  3686  000AC0                     __end_of_hyt221_getHumidity:
  3687                           	opt stack 0
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           prodh	equ	0xFF4
  3693                           prodl	equ	0xFF3
  3694                           intcon	equ	0xFF2
  3695                           postinc0	equ	0xFEE
  3696                           wreg	equ	0xFE8
  3697                           indf1	equ	0xFE7
  3698                           postdec1	equ	0xFE5
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708 ;; *************** function _batt_launch_acq *****************
  3709 ;; Defined at:
  3710 ;;		line 235 in file "main.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;		None               void
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3724 ;;      Params:         0       0       0       0
  3725 ;;      Locals:         0       0       0       0
  3726 ;;      Temps:          2       0       0       0
  3727 ;;      Totals:         2       0       0       0
  3728 ;;Total ram usage:        2 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    2
  3731 ;; This function calls:
  3732 ;;		_zb_handle_setbatVolt
  3733 ;; This function is called by:
  3734 ;;		_main_loop
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text26
  3739  000856                     __ptext26:
  3740                           	opt stack 0
  3741  000856                     _batt_launch_acq:
  3742                           	opt stack 27
  3743                           
  3744                           ;main.c: 237: LATBbits.LATB1 = 1;
  3745                           
  3746                           ;incstack = 0
  3747  000856  828A               	bsf	3978,1,c	;volatile
  3748                           
  3749                           ;main.c: 238: ADCON1 = 0x00;
  3750  000858  0E00               	movlw	0
  3751  00085A  6EC1               	movwf	4033,c	;volatile
  3752                           
  3753                           ;main.c: 239: ADCON0 = 0x20;
  3754  00085C  0E20               	movlw	32
  3755  00085E  6EC2               	movwf	4034,c	;volatile
  3756                           
  3757                           ;main.c: 240: ADCON2 = 0x8B;
  3758  000860  0E8B               	movlw	139
  3759  000862  6EC0               	movwf	4032,c	;volatile
  3760                           
  3761                           ;main.c: 241: ADCON0 |= 0x01;
  3762  000864  80C2               	bsf	4034,0,c	;volatile
  3763                           
  3764                           ;main.c: 242: ADCON0 |= 0x02 ;
  3765  000866  82C2               	bsf	4034,1,c	;volatile
  3766                           
  3767                           ;main.c: 244: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  3768  000868  8ED3               	bsf	4051,7,c	;volatile
  3769  00086A  0003               	sleep		;# 
  3770  00086C  9ED3               	bcf	4051,7,c	;volatile
  3771  00086E  D001               	goto	l136
  3772  000870                     l137:
  3773                           
  3774                           ;main.c: 247: {
  3775                           ;main.c: 248: __nop();
  3776  000870  F000               	nop	
  3777  000872                     l136:
  3778  000872  B2C2               	btfsc	4034,1,c	;volatile
  3779  000874  D7FD               	goto	l137
  3780                           
  3781                           ;main.c: 249: }
  3782                           ;main.c: 251: batt_value = (ADRESH << 8) | ADRESL;
  3783  000876  50C3               	movf	4035,w,c	;volatile
  3784  000878  CFC4 F013          	movff	4036,??_batt_launch_acq	;volatile
  3785  00087C  6A14               	clrf	(??_batt_launch_acq+1)& (0+255),c
  3786  00087E  C013  F014         	movff	??_batt_launch_acq,??_batt_launch_acq+1
  3787  000882  6A13               	clrf	??_batt_launch_acq,c
  3788  000884  1013               	iorwf	??_batt_launch_acq,w,c
  3789  000886  6E3F               	movwf	_batt_value,c
  3790  000888  5014               	movf	??_batt_launch_acq+1,w,c
  3791  00088A  6E40               	movwf	_batt_value+1,c
  3792                           
  3793                           ;main.c: 252: LATBbits.LATB1 = 0;
  3794  00088C  928A               	bcf	3978,1,c	;volatile
  3795                           
  3796                           ;main.c: 253: ADCON0 &= ~0x01;
  3797  00088E  90C2               	bcf	4034,0,c	;volatile
  3798                           
  3799                           ;main.c: 254: zb_handle_setbatVolt(batt_value);
  3800  000890  C03F  F011         	movff	_batt_value,zb_handle_setbatVolt@battVoltage
  3801  000894  C040  F012         	movff	_batt_value+1,zb_handle_setbatVolt@battVoltage+1
  3802  000898  EC8F  F005         	call	_zb_handle_setbatVolt	;wreg free
  3803  00089C  0012               	return	
  3804  00089E                     __end_of_batt_launch_acq:
  3805                           	opt stack 0
  3806                           tblptru	equ	0xFF8
  3807                           tblptrh	equ	0xFF7
  3808                           tblptrl	equ	0xFF6
  3809                           tablat	equ	0xFF5
  3810                           prodh	equ	0xFF4
  3811                           prodl	equ	0xFF3
  3812                           intcon	equ	0xFF2
  3813                           postinc0	equ	0xFEE
  3814                           wreg	equ	0xFE8
  3815                           indf1	equ	0xFE7
  3816                           postdec1	equ	0xFE5
  3817                           fsr1h	equ	0xFE2
  3818                           fsr1l	equ	0xFE1
  3819                           indf2	equ	0xFDF
  3820                           postinc2	equ	0xFDE
  3821                           postdec2	equ	0xFDD
  3822                           fsr2h	equ	0xFDA
  3823                           fsr2l	equ	0xFD9
  3824                           status	equ	0xFD8
  3825                           
  3826 ;; *************** function _zb_handle_setbatVolt *****************
  3827 ;; Defined at:
  3828 ;;		line 108 in file "zb_handle.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  battVoltage     2   16[COMRAM] unsigned int 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;		None               void
  3835 ;; Registers used:
  3836 ;;		wreg, status,2
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3842 ;;      Params:         2       0       0       0
  3843 ;;      Locals:         0       0       0       0
  3844 ;;      Temps:          0       0       0       0
  3845 ;;      Totals:         2       0       0       0
  3846 ;;Total ram usage:        2 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_batt_launch_acq
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text27
  3857  000B1E                     __ptext27:
  3858                           	opt stack 0
  3859  000B1E                     _zb_handle_setbatVolt:
  3860                           	opt stack 27
  3861                           
  3862                           ;zb_handle.c: 110: sensor_data.battRaw = battVoltage;
  3863                           
  3864                           ;incstack = 0
  3865  000B1E  C011  F032         	movff	zb_handle_setbatVolt@battVoltage,_sensor_data+6
  3866  000B22  C012  F033         	movff	zb_handle_setbatVolt@battVoltage+1,_sensor_data+7
  3867                           
  3868                           ;zb_handle.c: 111: sensor_data.battStatus = (0x03);
  3869  000B26  0E03               	movlw	3
  3870  000B28  6E34               	movwf	_sensor_data+8,c
  3871  000B2A  0012               	return	
  3872  000B2C                     __end_of_zb_handle_setbatVolt:
  3873                           	opt stack 0
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           prodh	equ	0xFF4
  3879                           prodl	equ	0xFF3
  3880                           intcon	equ	0xFF2
  3881                           postinc0	equ	0xFEE
  3882                           wreg	equ	0xFE8
  3883                           indf1	equ	0xFE7
  3884                           postdec1	equ	0xFE5
  3885                           fsr1h	equ	0xFE2
  3886                           fsr1l	equ	0xFE1
  3887                           indf2	equ	0xFDF
  3888                           postinc2	equ	0xFDE
  3889                           postdec2	equ	0xFDD
  3890                           fsr2h	equ	0xFDA
  3891                           fsr2l	equ	0xFD9
  3892                           status	equ	0xFD8
  3893                           
  3894 ;; *************** function _i2c_setup *****************
  3895 ;; Defined at:
  3896 ;;		line 9 in file "i2c.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;		None               void
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3910 ;;      Params:         0       0       0       0
  3911 ;;      Locals:         0       0       0       0
  3912 ;;      Temps:          0       0       0       0
  3913 ;;      Totals:         0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    1
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_main
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text28
  3925  00095A                     __ptext28:
  3926                           	opt stack 0
  3927  00095A                     _i2c_setup:
  3928                           	opt stack 29
  3929                           
  3930                           ;i2c.c: 15: TRISC &= ~0x18;
  3931                           
  3932                           ;incstack = 0
  3933  00095A  0EE7               	movlw	231
  3934  00095C  1694               	andwf	3988,f,c	;volatile
  3935                           
  3936                           ;i2c.c: 16: LATCbits.LATC3 = 0;
  3937  00095E  968B               	bcf	3979,3,c	;volatile
  3938                           
  3939                           ;i2c.c: 17: LATCbits.LATC4 = 0;
  3940  000960  988B               	bcf	3979,4,c	;volatile
  3941                           
  3942                           ;i2c.c: 18: _delay((unsigned long)((100)*((1000000)/4000000.0)));
  3943  000962  0E08               	movlw	8
  3944  000964                     u1577:
  3945  000964  2EE8               	decfsz	wreg,f,c
  3946  000966  D7FE               	goto	u1577
  3947  000968  F000               	nop	
  3948                           
  3949                           ;i2c.c: 20: TRISC |= 0x18;
  3950  00096A  0E18               	movlw	24
  3951  00096C  1294               	iorwf	3988,f,c	;volatile
  3952                           
  3953                           ;i2c.c: 23: SSPSTAT = 0x80;
  3954  00096E  0E80               	movlw	128
  3955  000970  6EC7               	movwf	4039,c	;volatile
  3956                           
  3957                           ;i2c.c: 24: SSPADD = 0x01;
  3958  000972  0E01               	movlw	1
  3959  000974  6EC8               	movwf	4040,c	;volatile
  3960                           
  3961                           ;i2c.c: 25: SSPCON1 = 0x28;
  3962  000976  0E28               	movlw	40
  3963  000978  6EC6               	movwf	4038,c	;volatile
  3964                           
  3965                           ;i2c.c: 26: SSPCON2 = 0x00;
  3966  00097A  0E00               	movlw	0
  3967  00097C  6EC5               	movwf	4037,c	;volatile
  3968                           
  3969                           ;i2c.c: 29: i2c_interupt_done = FALSE;
  3970  00097E  0E00               	movlw	0
  3971  000980  6E45               	movwf	_i2c_interupt_done,c
  3972                           
  3973                           ;i2c.c: 30: PIR1bits.SSPIF = 0;
  3974  000982  969E               	bcf	3998,3,c	;volatile
  3975                           
  3976                           ;i2c.c: 31: PIR2bits.BCLIF = 0;
  3977  000984  96A1               	bcf	4001,3,c	;volatile
  3978                           
  3979                           ;i2c.c: 32: PIE1bits.SSPIE = 1;
  3980  000986  869D               	bsf	3997,3,c	;volatile
  3981  000988  0012               	return	
  3982  00098A                     __end_of_i2c_setup:
  3983                           	opt stack 0
  3984                           tblptru	equ	0xFF8
  3985                           tblptrh	equ	0xFF7
  3986                           tblptrl	equ	0xFF6
  3987                           tablat	equ	0xFF5
  3988                           prodh	equ	0xFF4
  3989                           prodl	equ	0xFF3
  3990                           intcon	equ	0xFF2
  3991                           postinc0	equ	0xFEE
  3992                           wreg	equ	0xFE8
  3993                           indf1	equ	0xFE7
  3994                           postdec1	equ	0xFE5
  3995                           fsr1h	equ	0xFE2
  3996                           fsr1l	equ	0xFE1
  3997                           indf2	equ	0xFDF
  3998                           postinc2	equ	0xFDE
  3999                           postdec2	equ	0xFDD
  4000                           fsr2h	equ	0xFDA
  4001                           fsr2l	equ	0xFD9
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function _calibration *****************
  4005 ;; Defined at:
  4006 ;;		line 12 in file "osc.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  w               1   20[COMRAM] char 
  4011 ;;  tryCounter      1   19[COMRAM] char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;		None               void
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4021 ;;      Params:         0       0       0       0
  4022 ;;      Locals:         2       0       0       0
  4023 ;;      Temps:          1       0       0       0
  4024 ;;      Totals:         3       0       0       0
  4025 ;;Total ram usage:        3 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    2
  4028 ;; This function calls:
  4029 ;;		_leds_glitch
  4030 ;; This function is called by:
  4031 ;;		_main
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text29
  4036  000562                     __ptext29:
  4037                           	opt stack 0
  4038  000562                     _calibration:
  4039                           	opt stack 28
  4040                           
  4041                           ;osc.c: 14: int8_t w;
  4042                           ;osc.c: 15: int8_t tryCounter;
  4043                           ;osc.c: 17: T1CON = 0x0F;
  4044                           
  4045                           ;incstack = 0
  4046  000562  0E0F               	movlw	15
  4047  000564  6ECD               	movwf	4045,c	;volatile
  4048                           
  4049                           ;osc.c: 18: tryCounter = 0;
  4050  000566  0E00               	movlw	0
  4051  000568  6E14               	movwf	calibration@tryCounter,c
  4052                           
  4053                           ;osc.c: 19: while (tryCounter < 32)
  4054  00056A  D035               	goto	l450
  4055  00056C                     l2721:
  4056                           
  4057                           ;osc.c: 20: {
  4058                           ;osc.c: 21: calibr = 0;
  4059  00056C  0E00               	movlw	0
  4060  00056E  6E44               	movwf	_calibr,c	;volatile
  4061                           
  4062                           ;osc.c: 22: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4063  000570  0E52               	movlw	82
  4064  000572  6E13               	movwf	??_calibration& (0+255),c
  4065  000574  0E2A               	movlw	42
  4066  000576                     u1587:
  4067  000576  2EE8               	decfsz	wreg,f,c
  4068  000578  D7FE               	goto	u1587
  4069  00057A  2E13               	decfsz	??_calibration& (0+255),f,c
  4070  00057C  D7FC               	goto	u1587
  4071                           
  4072                           ;osc.c: 23: T1CON = 0x0F;
  4073  00057E  0E0F               	movlw	15
  4074  000580  6ECD               	movwf	4045,c	;volatile
  4075                           
  4076                           ;osc.c: 26: TMR1H = 0xFF;
  4077  000582  68CF               	setf	4047,c	;volatile
  4078                           
  4079                           ;osc.c: 27: TMR1L = 0xE7;
  4080  000584  0EE7               	movlw	231
  4081  000586  6ECE               	movwf	4046,c	;volatile
  4082                           
  4083                           ;osc.c: 28: PIR1bits.TMR1IF = 0;
  4084  000588  909E               	bcf	3998,0,c	;volatile
  4085                           
  4086                           ;osc.c: 31: while (PIR1bits.TMR1IF == 0)
  4087  00058A  D001               	goto	l2735
  4088  00058C                     l2733:
  4089                           
  4090                           ;osc.c: 32: {
  4091                           ;osc.c: 33: calibr++;
  4092  00058C  2A44               	incf	_calibr,f,c	;volatile
  4093  00058E                     l2735:
  4094  00058E  A09E               	btfss	3998,0,c	;volatile
  4095  000590  D7FD               	goto	l2733
  4096                           
  4097                           ;osc.c: 34: }
  4098                           ;osc.c: 36: w = ((int8_t)(0x30)) - calibr;
  4099  000592  5044               	movf	_calibr,w,c
  4100  000594  0800               	sublw	0
  4101  000596  0F30               	addlw	48
  4102  000598  6E15               	movwf	calibration@w,c
  4103                           
  4104                           ;osc.c: 37: if (w > 0)
  4105  00059A  5015               	movf	calibration@w,w,c
  4106  00059C  0A80               	xorlw	128
  4107  00059E  0F7F               	addlw	-129
  4108  0005A0  A0D8               	btfss	status,0,c
  4109  0005A2  D009               	goto	l2743
  4110                           
  4111                           ;osc.c: 38: {
  4112                           ;osc.c: 40: w -= ((int8_t) (2));
  4113  0005A4  0EFE               	movlw	254
  4114  0005A6  2615               	addwf	calibration@w,f,c
  4115                           
  4116                           ;osc.c: 41: if (w > 0)
  4117  0005A8  5015               	movf	calibration@w,w,c
  4118  0005AA  0A80               	xorlw	128
  4119  0005AC  0F7F               	addlw	-129
  4120  0005AE  A0D8               	btfss	status,0,c
  4121  0005B0  D017               	goto	l2751
  4122                           
  4123                           ;osc.c: 42: {
  4124                           ;osc.c: 44: OSCTUNE = (OSCTUNE + 1) & 0x1F;
  4125  0005B2  289B               	incf	3995,w,c	;volatile
  4126  0005B4  D00A               	goto	L11
  4127  0005B6                     l2743:
  4128                           
  4129                           ;osc.c: 51: else
  4130                           ;osc.c: 52: {
  4131                           ;osc.c: 54: w = ((int8_t) (2)) - w;
  4132  0005B6  5015               	movf	calibration@w,w,c
  4133  0005B8  0800               	sublw	0
  4134  0005BA  0F02               	addlw	2
  4135  0005BC  6E15               	movwf	calibration@w,c
  4136                           
  4137                           ;osc.c: 55: if (w > 0)
  4138  0005BE  5015               	movf	calibration@w,w,c
  4139  0005C0  0A80               	xorlw	128
  4140  0005C2  0F7F               	addlw	-129
  4141  0005C4  A0D8               	btfss	status,0,c
  4142  0005C6  D00C               	goto	l2751
  4143                           
  4144                           ;osc.c: 56: {
  4145                           ;osc.c: 57: OSCTUNE = (OSCTUNE - 1) & 0x1F;
  4146  0005C8  049B               	decf	3995,w,c	;volatile
  4147  0005CA                     L11:
  4148  0005CA  0B1F               	andlw	31
  4149  0005CC  6E9B               	movwf	3995,c	;volatile
  4150                           
  4151                           ;osc.c: 62: }
  4152                           ;osc.c: 63: }
  4153                           ;osc.c: 64: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4154                           
  4155                           ;osc.c: 59: else
  4156                           ;osc.c: 60: {
  4157                           ;osc.c: 61: break;
  4158                           
  4159                           ;osc.c: 58: }
  4160  0005CE  0E19               	movlw	25
  4161  0005D0                     u1597:
  4162  0005D0  2EE8               	decfsz	wreg,f,c
  4163  0005D2  D7FE               	goto	u1597
  4164                           
  4165                           ;osc.c: 65: tryCounter++;
  4166  0005D4  2A14               	incf	calibration@tryCounter,f,c
  4167  0005D6                     l450:
  4168  0005D6  5014               	movf	calibration@tryCounter,w,c
  4169  0005D8  0A80               	xorlw	128
  4170  0005DA  0F60               	addlw	-160
  4171  0005DC  A0D8               	btfss	status,0,c
  4172  0005DE  D7C6               	goto	l2721
  4173  0005E0                     l2751:
  4174                           
  4175                           ;osc.c: 66: }
  4176                           ;osc.c: 68: if (tryCounter >= 32)
  4177  0005E0  5014               	movf	calibration@tryCounter,w,c
  4178  0005E2  0A80               	xorlw	128
  4179  0005E4  0F60               	addlw	-160
  4180  0005E6  A0D8               	btfss	status,0,c
  4181  0005E8  D01C               	goto	l2767
  4182                           
  4183                           ;osc.c: 69: {
  4184                           ;osc.c: 70: OSCTUNE = 0;
  4185  0005EA  0E00               	movlw	0
  4186  0005EC  6E9B               	movwf	3995,c	;volatile
  4187                           
  4188                           ;osc.c: 71: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4189  0005EE  0E19               	movlw	25
  4190  0005F0                     u1607:
  4191  0005F0  2EE8               	decfsz	wreg,f,c
  4192  0005F2  D7FE               	goto	u1607
  4193                           
  4194                           ;osc.c: 72: leds_glitch((0x08));
  4195  0005F4  0E08               	movlw	8
  4196  0005F6  EC47  F005         	call	_leds_glitch
  4197                           
  4198                           ;osc.c: 73: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4199  0005FA  0E52               	movlw	82
  4200  0005FC  6E13               	movwf	??_calibration& (0+255),c
  4201  0005FE  0E2A               	movlw	42
  4202  000600                     u1617:
  4203  000600  2EE8               	decfsz	wreg,f,c
  4204  000602  D7FE               	goto	u1617
  4205  000604  2E13               	decfsz	??_calibration& (0+255),f,c
  4206  000606  D7FC               	goto	u1617
  4207                           
  4208                           ;osc.c: 74: leds_glitch((0x08));
  4209  000608  0E08               	movlw	8
  4210  00060A  EC47  F005         	call	_leds_glitch
  4211                           
  4212                           ;osc.c: 75: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4213  00060E  0E52               	movlw	82
  4214  000610  6E13               	movwf	??_calibration& (0+255),c
  4215  000612  0E2A               	movlw	42
  4216  000614                     u1627:
  4217  000614  2EE8               	decfsz	wreg,f,c
  4218  000616  D7FE               	goto	u1627
  4219  000618  2E13               	decfsz	??_calibration& (0+255),f,c
  4220  00061A  D7FC               	goto	u1627
  4221                           
  4222                           ;osc.c: 76: leds_glitch((0x08));
  4223  00061C  0E08               	movlw	8
  4224  00061E  EC47  F005         	call	_leds_glitch
  4225  000622                     l2767:
  4226                           
  4227                           ;osc.c: 77: }
  4228                           ;osc.c: 80: T1CON = 0;
  4229  000622  0E00               	movlw	0
  4230  000624  6ECD               	movwf	4045,c	;volatile
  4231  000626  0012               	return	
  4232  000628                     __end_of_calibration:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodh	equ	0xFF4
  4239                           prodl	equ	0xFF3
  4240                           intcon	equ	0xFF2
  4241                           postinc0	equ	0xFEE
  4242                           wreg	equ	0xFE8
  4243                           indf1	equ	0xFE7
  4244                           postdec1	equ	0xFE5
  4245                           fsr1h	equ	0xFE2
  4246                           fsr1l	equ	0xFE1
  4247                           indf2	equ	0xFDF
  4248                           postinc2	equ	0xFDE
  4249                           postdec2	equ	0xFDD
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function _leds_glitch *****************
  4255 ;; Defined at:
  4256 ;;		line 17 in file "leds.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  leds            1    wreg     unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  leds            1   17[COMRAM] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4270 ;;      Params:         0       0       0       0
  4271 ;;      Locals:         1       0       0       0
  4272 ;;      Temps:          1       0       0       0
  4273 ;;      Totals:         2       0       0       0
  4274 ;;Total ram usage:        2 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    1
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_main_loop
  4281 ;;		_zb_handle
  4282 ;;		_hyt221_launch_acq
  4283 ;;		_hyt221_operation
  4284 ;;		_calibration
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text30
  4289  000A8E                     __ptext30:
  4290                           	opt stack 0
  4291  000A8E                     _leds_glitch:
  4292                           	opt stack 26
  4293                           
  4294                           ;incstack = 0
  4295                           ;leds_glitch@leds stored from wreg
  4296  000A8E  6E12               	movwf	leds_glitch@leds,c
  4297                           
  4298                           ;leds.c: 19: LATA |= leds;
  4299  000A90  5012               	movf	leds_glitch@leds,w,c
  4300  000A92  1289               	iorwf	3977,f,c	;volatile
  4301                           
  4302                           ;leds.c: 20: _delay((unsigned long)((100)*((1000000)/4000.0)));
  4303  000A94  0E21               	movlw	33
  4304  000A96  6E11               	movwf	??_leds_glitch& (0+255),c
  4305  000A98  0E76               	movlw	118
  4306  000A9A                     u1637:
  4307  000A9A  2EE8               	decfsz	wreg,f,c
  4308  000A9C  D7FE               	goto	u1637
  4309  000A9E  2E11               	decfsz	??_leds_glitch& (0+255),f,c
  4310  000AA0  D7FC               	goto	u1637
  4311  000AA2  D000               	nop2	
  4312                           
  4313                           ;leds.c: 21: LATA &= ~leds;
  4314  000AA4  5012               	movf	leds_glitch@leds,w,c
  4315  000AA6  0AFF               	xorlw	255
  4316  000AA8  1689               	andwf	3977,f,c	;volatile
  4317  000AAA  0012               	return	
  4318  000AAC                     __end_of_leds_glitch:
  4319                           	opt stack 0
  4320                           tblptru	equ	0xFF8
  4321                           tblptrh	equ	0xFF7
  4322                           tblptrl	equ	0xFF6
  4323                           tablat	equ	0xFF5
  4324                           prodh	equ	0xFF4
  4325                           prodl	equ	0xFF3
  4326                           intcon	equ	0xFF2
  4327                           postinc0	equ	0xFEE
  4328                           wreg	equ	0xFE8
  4329                           indf1	equ	0xFE7
  4330                           postdec1	equ	0xFE5
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           indf2	equ	0xFDF
  4334                           postinc2	equ	0xFDE
  4335                           postdec2	equ	0xFDD
  4336                           fsr2h	equ	0xFDA
  4337                           fsr2l	equ	0xFD9
  4338                           status	equ	0xFD8
  4339                           
  4340 ;; *************** function _isr_hi *****************
  4341 ;; Defined at:
  4342 ;;		line 17 in file "interrupt.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  dummy           1   15[COMRAM] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;		None               void
  4349 ;; Registers used:
  4350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4356 ;;      Params:         0       0       0       0
  4357 ;;      Locals:         1       0       0       0
  4358 ;;      Temps:         15       0       0       0
  4359 ;;      Totals:        16       0       0       0
  4360 ;;Total ram usage:       16 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		Interrupt level 2
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	intcode
  4370  000008                     __pintcode:
  4371                           	opt stack 0
  4372  000008                     _isr_hi:
  4373                           	opt stack 25
  4374                           
  4375                           ;incstack = 0
  4376  000008  CFFA F002          	movff	pclath,??_isr_hi+1
  4377  00000C  CFFB F003          	movff	pclatu,??_isr_hi+2
  4378  000010  CFE9 F004          	movff	fsr0l,??_isr_hi+3
  4379  000014  EDA2  F001         	call	int_func,f	;refresh shadow registers
  4380                           pclatu	equ	0xFFB
  4381                           pclath	equ	0xFFA
  4382                           tblptru	equ	0xFF8
  4383                           tblptrh	equ	0xFF7
  4384                           tblptrl	equ	0xFF6
  4385                           tablat	equ	0xFF5
  4386                           prodh	equ	0xFF4
  4387                           prodl	equ	0xFF3
  4388                           intcon	equ	0xFF2
  4389                           postinc0	equ	0xFEE
  4390                           fsr0l	equ	0xFE9
  4391                           wreg	equ	0xFE8
  4392                           indf1	equ	0xFE7
  4393                           postdec1	equ	0xFE5
  4394                           fsr1h	equ	0xFE2
  4395                           fsr1l	equ	0xFE1
  4396                           indf2	equ	0xFDF
  4397                           postinc2	equ	0xFDE
  4398                           postdec2	equ	0xFDD
  4399                           fsr2h	equ	0xFDA
  4400                           fsr2l	equ	0xFD9
  4401                           status	equ	0xFD8
  4402                           
  4403                           	psect	intcode_body
  4404  000344                     __pintcode_body:
  4405                           	opt stack 25
  4406  000344                     int_func:
  4407                           	opt stack 25
  4408  000344  0006               	pop		; remove dummy address from shadow register refresh
  4409  000346  CFEA F005          	movff	fsr0h,??_isr_hi+4
  4410  00034A  CFE1 F006          	movff	fsr1l,??_isr_hi+5
  4411  00034E  CFE2 F007          	movff	fsr1h,??_isr_hi+6
  4412  000352  CFD9 F008          	movff	fsr2l,??_isr_hi+7
  4413  000356  CFDA F009          	movff	fsr2h,??_isr_hi+8
  4414  00035A  CFF3 F00A          	movff	prodl,??_isr_hi+9
  4415  00035E  CFF4 F00B          	movff	prodh,??_isr_hi+10
  4416  000362  CFF6 F00C          	movff	tblptrl,??_isr_hi+11
  4417  000366  CFF7 F00D          	movff	tblptrh,??_isr_hi+12
  4418  00036A  CFF8 F00E          	movff	tblptru,??_isr_hi+13
  4419  00036E  CFF5 F00F          	movff	tablat,??_isr_hi+14
  4420                           
  4421                           ;interrupt.c: 20: if (PIE1bits.SSPIE & PIR1bits.SSPIF)
  4422  000372  0E01               	movlw	1
  4423  000374  A69D               	btfss	3997,3,c	;volatile
  4424  000376  0E00               	movlw	0
  4425  000378  A69E               	btfss	3998,3,c	;volatile
  4426  00037A  0E00               	movlw	0
  4427  00037C  A0E8               	btfss	wreg,0,c
  4428  00037E  D003               	goto	i2u98_40
  4429  000380  6A01               	clrf	??_isr_hi& (0+255),c
  4430  000382  2A01               	incf	??_isr_hi& (0+255),f,c
  4431  000384  D001               	goto	i2u98_48
  4432  000386                     i2u98_40:
  4433  000386  6A01               	clrf	??_isr_hi& (0+255),c
  4434  000388                     i2u98_48:
  4435  000388  5001               	movf	??_isr_hi,w,c
  4436  00038A  B4D8               	btfsc	status,2,c
  4437  00038C  D004               	goto	i2l2271
  4438                           
  4439                           ;interrupt.c: 21: {
  4440                           ;interrupt.c: 22: PIR1bits.SSPIF = 0;
  4441  00038E  969E               	bcf	3998,3,c	;volatile
  4442                           
  4443                           ;interrupt.c: 23: i2c_interupt_done = TRUE;
  4444  000390  0E01               	movlw	1
  4445  000392  6E45               	movwf	_i2c_interupt_done,c
  4446  000394  D059               	goto	i2l421
  4447  000396                     i2l2271:
  4448                           
  4449                           ;interrupt.c: 25: }
  4450                           ;interrupt.c: 28: if (INTCONbits.TMR0IE & INTCONbits.TMR0IF)
  4451  000396  0E01               	movlw	1
  4452  000398  AAF2               	btfss	intcon,5,c	;volatile
  4453  00039A  0E00               	movlw	0
  4454  00039C  A4F2               	btfss	intcon,2,c	;volatile
  4455  00039E  0E00               	movlw	0
  4456  0003A0  A0E8               	btfss	wreg,0,c
  4457  0003A2  D003               	goto	i2u100_40
  4458  0003A4  6A01               	clrf	??_isr_hi& (0+255),c
  4459  0003A6  2A01               	incf	??_isr_hi& (0+255),f,c
  4460  0003A8  D001               	goto	i2u100_48
  4461  0003AA                     i2u100_40:
  4462  0003AA  6A01               	clrf	??_isr_hi& (0+255),c
  4463  0003AC                     i2u100_48:
  4464  0003AC  5001               	movf	??_isr_hi,w,c
  4465  0003AE  B4D8               	btfsc	status,2,c
  4466  0003B0  D004               	goto	i2l2279
  4467                           
  4468                           ;interrupt.c: 29: {
  4469                           ;interrupt.c: 30: timer0_interupt_done = TRUE;
  4470  0003B2  0E01               	movlw	1
  4471  0003B4  6E47               	movwf	_timer0_interupt_done,c
  4472                           
  4473                           ;interrupt.c: 49: INTCONbits.TMR0IF = 0;
  4474  0003B6  94F2               	bcf	intcon,2,c	;volatile
  4475  0003B8  D047               	goto	i2l421
  4476  0003BA                     i2l2279:
  4477                           
  4478                           ;interrupt.c: 51: }
  4479                           ;interrupt.c: 54: if (PIE1bits.ADIE & PIR1bits.ADIF)
  4480  0003BA  0E01               	movlw	1
  4481  0003BC  AC9D               	btfss	3997,6,c	;volatile
  4482  0003BE  0E00               	movlw	0
  4483  0003C0  AC9E               	btfss	3998,6,c	;volatile
  4484  0003C2  0E00               	movlw	0
  4485  0003C4  A0E8               	btfss	wreg,0,c
  4486  0003C6  D003               	goto	i2u102_40
  4487  0003C8  6A01               	clrf	??_isr_hi& (0+255),c
  4488  0003CA  2A01               	incf	??_isr_hi& (0+255),f,c
  4489  0003CC  D001               	goto	i2u102_48
  4490  0003CE                     i2u102_40:
  4491  0003CE  6A01               	clrf	??_isr_hi& (0+255),c
  4492  0003D0                     i2u102_48:
  4493  0003D0  5001               	movf	??_isr_hi,w,c
  4494  0003D2  B4D8               	btfsc	status,2,c
  4495  0003D4  D002               	goto	i2l2283
  4496                           
  4497                           ;interrupt.c: 55: {
  4498                           ;interrupt.c: 56: PIR1bits.ADIF = 0;
  4499  0003D6  9C9E               	bcf	3998,6,c	;volatile
  4500                           
  4501                           ;interrupt.c: 57: return;
  4502  0003D8  D037               	goto	i2l421
  4503  0003DA                     i2l2283:
  4504                           
  4505                           ;interrupt.c: 58: }
  4506                           ;interrupt.c: 61: if (PIE1bits.RC1IE & PIR1bits.RCIF)
  4507  0003DA  0E01               	movlw	1
  4508  0003DC  AA9D               	btfss	3997,5,c	;volatile
  4509  0003DE  0E00               	movlw	0
  4510  0003E0  AA9E               	btfss	3998,5,c	;volatile
  4511  0003E2  0E00               	movlw	0
  4512  0003E4  A0E8               	btfss	wreg,0,c
  4513  0003E6  D003               	goto	i2u104_40
  4514  0003E8  6A01               	clrf	??_isr_hi& (0+255),c
  4515  0003EA  2A01               	incf	??_isr_hi& (0+255),f,c
  4516  0003EC  D001               	goto	i2u104_48
  4517  0003EE                     i2u104_40:
  4518  0003EE  6A01               	clrf	??_isr_hi& (0+255),c
  4519  0003F0                     i2u104_48:
  4520  0003F0  5001               	movf	??_isr_hi,w,c
  4521  0003F2  B4D8               	btfsc	status,2,c
  4522  0003F4  D029               	goto	i2l421
  4523                           
  4524                           ;interrupt.c: 62: {
  4525                           ;interrupt.c: 63: uint8_t dummy;
  4526                           ;interrupt.c: 67: if (RCSTAbits.FERR)
  4527  0003F6  A4AB               	btfss	4011,2,c	;volatile
  4528  0003F8  D005               	goto	i2l425
  4529                           
  4530                           ;interrupt.c: 68: {
  4531                           ;interrupt.c: 70: UART_errorStatus.framingError++;
  4532  0003FA  2A39               	incf	_UART_errorStatus,f,c
  4533                           
  4534                           ;interrupt.c: 72: dummy = RCREG;
  4535  0003FC  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4536  000400  00FF               	reset		;# 
  4537                           
  4538                           ;interrupt.c: 74: }
  4539  000402  D022               	goto	i2l421
  4540  000404                     i2l425:
  4541                           
  4542                           ;interrupt.c: 75: else if (RCSTAbits.OERR)
  4543  000404  A2AB               	btfss	4011,1,c	;volatile
  4544  000406  D005               	goto	i2l2297
  4545                           
  4546                           ;interrupt.c: 76: {
  4547                           ;interrupt.c: 78: UART_errorStatus.overrunError++;
  4548  000408  2A3A               	incf	_UART_errorStatus+1,f,c
  4549                           
  4550                           ;interrupt.c: 79: dummy = RCREG;
  4551  00040A  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4552                           
  4553                           ;interrupt.c: 81: RCSTAbits.CREN = 0;
  4554  00040E  98AB               	bcf	4011,4,c	;volatile
  4555                           
  4556                           ;interrupt.c: 82: }
  4557  000410  D01B               	goto	i2l421
  4558  000412                     i2l2297:
  4559                           
  4560                           ;interrupt.c: 83: else if (UART_rxBufferNb < (50))
  4561  000412  0E32               	movlw	50
  4562  000414  5C42               	subwf	_UART_rxBufferNb,w,c
  4563  000416  B0D8               	btfsc	status,0,c
  4564  000418  D014               	goto	i2l2309
  4565                           
  4566                           ;interrupt.c: 84: {
  4567                           ;interrupt.c: 85: UART_rxBuffer[UART_writeIndex] = RCREG;
  4568  00041A  5043               	movf	_UART_writeIndex,w,c
  4569  00041C  0D01               	mullw	1
  4570  00041E  0100               	movlb	0	; () banked
  4571  000420  0E80               	movlw	low _UART_rxBuffer
  4572  000422  24F3               	addwf	prodl,w,c
  4573  000424  6ED9               	movwf	fsr2l,c
  4574  000426  0100               	movlb	0	; () banked
  4575  000428  0E00               	movlw	high _UART_rxBuffer
  4576  00042A  20F4               	addwfc	prodh,w,c
  4577  00042C  6EDA               	movwf	fsr2h,c
  4578  00042E  CFAE FFDF          	movff	4014,indf2	;volatile
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;interrupt.c: 86: UART_writeIndex++;
  4582  000432  2A43               	incf	_UART_writeIndex,f,c
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;interrupt.c: 87: if (UART_writeIndex >= (50))
  4586  000434  0E31               	movlw	49
  4587  000436  6443               	cpfsgt	_UART_writeIndex,c
  4588  000438  D002               	goto	i2l2307
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;interrupt.c: 88: {
  4592                           ;interrupt.c: 89: UART_writeIndex = 0;
  4593  00043A  0E00               	movlw	0
  4594  00043C  6E43               	movwf	_UART_writeIndex,c
  4595  00043E                     i2l2307:
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;interrupt.c: 90: }
  4599                           ;interrupt.c: 91: UART_rxBufferNb++;
  4600  00043E  2A42               	incf	_UART_rxBufferNb,f,c
  4601                           
  4602                           ;interrupt.c: 92: }
  4603  000440  D003               	goto	i2l421
  4604  000442                     i2l2309:
  4605                           
  4606                           ;interrupt.c: 93: else
  4607                           ;interrupt.c: 94: {
  4608                           ;interrupt.c: 96: UART_errorStatus.bufferOverrunError++;
  4609  000442  2A3B               	incf	_UART_errorStatus+2,f,c
  4610                           
  4611                           ;interrupt.c: 97: dummy = RCREG;
  4612  000444  CFAE F010          	movff	4014,isr_hi@dummy	;volatile
  4613  000448                     i2l421:
  4614  000448  C00F  FFF5         	movff	??_isr_hi+14,tablat
  4615  00044C  C00E  FFF8         	movff	??_isr_hi+13,tblptru
  4616  000450  C00D  FFF7         	movff	??_isr_hi+12,tblptrh
  4617  000454  C00C  FFF6         	movff	??_isr_hi+11,tblptrl
  4618  000458  C00B  FFF4         	movff	??_isr_hi+10,prodh
  4619  00045C  C00A  FFF3         	movff	??_isr_hi+9,prodl
  4620  000460  C009  FFDA         	movff	??_isr_hi+8,fsr2h
  4621  000464  C008  FFD9         	movff	??_isr_hi+7,fsr2l
  4622  000468  C007  FFE2         	movff	??_isr_hi+6,fsr1h
  4623  00046C  C006  FFE1         	movff	??_isr_hi+5,fsr1l
  4624  000470  C005  FFEA         	movff	??_isr_hi+4,fsr0h
  4625  000474  C004  FFE9         	movff	??_isr_hi+3,fsr0l
  4626  000478  C003  FFFB         	movff	??_isr_hi+2,pclatu
  4627  00047C  C002  FFFA         	movff	??_isr_hi+1,pclath
  4628  000480  0011               	retfie		f
  4629  000482                     __end_of_isr_hi:
  4630                           	opt stack 0
  4631  0000                     pclatu	equ	0xFFB
  4632                           pclath	equ	0xFFA
  4633                           tblptru	equ	0xFF8
  4634                           tblptrh	equ	0xFF7
  4635                           tblptrl	equ	0xFF6
  4636                           tablat	equ	0xFF5
  4637                           prodh	equ	0xFF4
  4638                           prodl	equ	0xFF3
  4639                           intcon	equ	0xFF2
  4640                           postinc0	equ	0xFEE
  4641                           fsr0h	equ	0xFEA
  4642                           fsr0l	equ	0xFE9
  4643                           wreg	equ	0xFE8
  4644                           indf1	equ	0xFE7
  4645                           postdec1	equ	0xFE5
  4646                           fsr1h	equ	0xFE2
  4647                           fsr1l	equ	0xFE1
  4648                           indf2	equ	0xFDF
  4649                           postinc2	equ	0xFDE
  4650                           postdec2	equ	0xFDD
  4651                           fsr2h	equ	0xFDA
  4652                           fsr2l	equ	0xFD9
  4653                           status	equ	0xFD8
  4654                           pclatu	equ	0xFFB
  4655                           pclath	equ	0xFFA
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           prodh	equ	0xFF4
  4661                           prodl	equ	0xFF3
  4662                           intcon	equ	0xFF2
  4663                           postinc0	equ	0xFEE
  4664                           fsr0h	equ	0xFEA
  4665                           fsr0l	equ	0xFE9
  4666                           wreg	equ	0xFE8
  4667                           indf1	equ	0xFE7
  4668                           postdec1	equ	0xFE5
  4669                           fsr1h	equ	0xFE2
  4670                           fsr1l	equ	0xFE1
  4671                           indf2	equ	0xFDF
  4672                           postinc2	equ	0xFDE
  4673                           postdec2	equ	0xFDD
  4674                           fsr2h	equ	0xFDA
  4675                           fsr2l	equ	0xFD9
  4676                           status	equ	0xFD8
  4677                           
  4678                           	psect	rparam
  4679  0000                     pclatu	equ	0xFFB
  4680                           pclath	equ	0xFFA
  4681                           tblptru	equ	0xFF8
  4682                           tblptrh	equ	0xFF7
  4683                           tblptrl	equ	0xFF6
  4684                           tablat	equ	0xFF5
  4685                           prodh	equ	0xFF4
  4686                           prodl	equ	0xFF3
  4687                           intcon	equ	0xFF2
  4688                           postinc0	equ	0xFEE
  4689                           fsr0h	equ	0xFEA
  4690                           fsr0l	equ	0xFE9
  4691                           wreg	equ	0xFE8
  4692                           indf1	equ	0xFE7
  4693                           postdec1	equ	0xFE5
  4694                           fsr1h	equ	0xFE2
  4695                           fsr1l	equ	0xFE1
  4696                           indf2	equ	0xFDF
  4697                           postinc2	equ	0xFDE
  4698                           postdec2	equ	0xFDD
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43     111
    BANK0           128      5     105
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zigbee_appendChecksum@sizeFrame	PTR unsigned char  size(2) Largest target is 1
		 -> zb_handle_sendData@frameSize(COMRAM[1]), 

    zigbee_appendChecksum@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    S1401$data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame	PTR struct . size(2) Largest target is 9
		 -> zb_handle@decodedFrame(COMRAM[8]), 

    zb_decodage@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    zb_doChecksum@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), zb_frameToSend(COMRAM[33]), 

    uart_read@buffer	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_read@b	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_write@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 

    uart_write@b	PTR unsigned char  size(2) Largest target is 33
		 -> zb_frameToSend(COMRAM[33]), 


Critical Paths under _main in COMRAM

    _main_loop->_zb_handle
    _zb_handle_waitAck->_zb_handle
    _zb_handle->_zb_decodage
    _zb_decodage->_zb_doChecksum
    _zb_handle_setTempRaw->_hyt221_getTemp
    _zb_handle_setHumidityRaw->_hyt221_getHumidity
    _zb_handle_sendData->_zigbee_appendChecksum
    _zigbee_appendChecksum->_zb_doChecksum
    _hyt221_operation->_leds_glitch
    _hyt221_launch_acq->_leds_glitch
    _i2c_trig_start->_i2c_wait_idle
    _batt_launch_acq->_zb_handle_setbatVolt
    _calibration->_leds_glitch

Critical Paths under _isr_hi in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_zb_handle_waitAck

Critical Paths under _isr_hi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_hi in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_hi in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7467
                        _calibration
                          _i2c_setup
                          _main_loop
                         _uart_setup
 ---------------------------------------------------------------------------------
 (1) _uart_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                            3     3      0    7204
                                              2 BANK0      3     3      0
                    _batt_launch_acq
                 _hyt221_getHumidity
                     _hyt221_getTemp
                  _hyt221_launch_acq
                   _hyt221_operation
                        _leds_glitch
                  _timer0_wait_262ms
                   _timer0_wait_65ms
                          _zb_handle
                _zb_handle_getStatus
              _zb_handle_resetStatus
                 _zb_handle_sendData
           _zb_handle_setHumidityRaw
               _zb_handle_setTempRaw
                  _zb_handle_waitAck
 ---------------------------------------------------------------------------------
 (2) _zb_handle_waitAck                                    2     2      0    2734
                                              0 BANK0      2     2      0
                  _timer0_wait_262ms
                          _zb_handle
 ---------------------------------------------------------------------------------
 (3) _zb_handle                                           11    11      0    2629
                                             32 COMRAM    11    11      0
                        _leds_glitch
                          _uart_read
                        _zb_decodage
 ---------------------------------------------------------------------------------
 (4) _zb_decodage                                         11     6      5    1601
                                             21 COMRAM    11     6      5
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (4) _uart_read                                            7     4      3     495
                                             16 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (3) _timer0_wait_262ms                                    0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setTempRaw                                 2     0      2      77
                                             22 COMRAM     2     0      2
                     _hyt221_getTemp (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setHumidityRaw                             2     0      2      77
                                             20 COMRAM     2     0      2
                 _hyt221_getHumidity (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_sendData                                   4     4      0    1020
                                             28 COMRAM     4     4      0
                         _uart_write
              _zigbee_appendChecksum
 ---------------------------------------------------------------------------------
 (3) _zigbee_appendChecksum                                7     3      4     774
                                             21 COMRAM     7     3      4
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (5) _zb_doChecksum                                        5     2      3     427
                                             16 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _uart_write                                           6     4      2     169
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _zb_handle_resetStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _zb_handle_getStatus                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer0_wait_65ms                                     0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (4) _timer0_wait_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _hyt221_operation                                     2     2      0     232
                                             18 COMRAM     2     2      0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (2) _hyt221_launch_acq                                    0     0      0      62
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_stop                                        0     0      0       0
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_start                                       0     0      0       0
                      _i2c_wait_idle
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_idle                                        1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_getTemp                                       6     4      2      46
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _hyt221_getHumidity                                   4     2      2      23
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _batt_launch_acq                                      2     2      0      75
                                             18 COMRAM     2     2      0
               _zb_handle_setbatVolt
 ---------------------------------------------------------------------------------
 (3) _zb_handle_setbatVolt                                 2     0      2      75
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration                                          3     3      0     263
                                             18 COMRAM     3     3      0
                        _leds_glitch
 ---------------------------------------------------------------------------------
 (4) _leds_glitch                                          2     2      0      62
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr_hi                                              16    16      0       3
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration
     _leds_glitch
   _i2c_setup
   _main_loop
     _batt_launch_acq
       _zb_handle_setbatVolt
     _hyt221_getHumidity
     _hyt221_getTemp
     _hyt221_launch_acq
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_glitch
     _hyt221_operation
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_glitch
     _leds_glitch
     _timer0_wait_262ms
       _timer0_wait_ready
     _timer0_wait_65ms
       _timer0_wait_ready
     _zb_handle
       _leds_glitch
       _uart_read
       _zb_decodage
         _zb_doChecksum
     _zb_handle_getStatus
     _zb_handle_resetStatus
     _zb_handle_sendData
       _uart_write
       _zigbee_appendChecksum
         _zb_doChecksum
     _zb_handle_setHumidityRaw
       _hyt221_getHumidity (ARG)
     _zb_handle_setTempRaw
       _hyt221_getTemp (ARG)
     _zb_handle_waitAck
       _timer0_wait_262ms
         _timer0_wait_ready
       _zb_handle
         _leds_glitch
         _uart_read
         _zb_decodage
           _zb_doChecksum
   _uart_setup

 _isr_hi (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      5      69       5       82.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8       3        0.0%
DATA                 0      0      D8      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Sep 10 21:13:07 2016

            __size_of_i2c_trig_start 000C                          _SSPSTATbits 000FC7  
                     uart_write@size 0015                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                                l121 02F4                                  l136 0872  
                                l137 0870                                  l235 0908  
                                l236 0906                                  l324 04DA  
                                l344 0560                                  l257 006A  
                                l450 05D6                                  l375 0A08  
                                l386 068E                                  l379 06BA  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                prod 000FF3                                  wreg 000FE8  
        __end_of_zb_handle_getStatus 0B44           __end_of_zb_handle_sendData 0748  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               l2323 09D6                                 l2403 01B2  
                               l2341 0AE4                                 l2405 01D0  
                               l2335 0AD8                                 l2319 09C0  
                               l2431 04FE                                 l2409 0AC6  
                               l2361 0790                                 l2441 051A  
                               l2435 0506                                 l2427 04D6  
                               l2541 09FC                                 l2605 0682  
                               l2357 078A                                 l2349 075E  
                               l2453 053E                                 l2701 092C  
                               l2367 07A0                                 l2391 0130  
                               l2383 0086                                 l2447 052E  
                               l2711 0942                                 l2721 056C  
                               l2609 0690                                 l2617 069C  
                               l2393 0152                                 l2491 08F0  
                               l2379 0066                                 l2715 0954  
                               l2707 093A                                 l2811 027C  
                               l2803 0262                                 l2733 058C  
                               l2629 06B8                                 l2397 0172  
                               l2751 05E0                                 l2743 05B6  
                               l2735 058E                                 l2495 0912  
                               l2663 06CA                                 l2399 01AC  
                               l2823 0298                                 l2809 0274  
                               l2587 064A                                 l2589 0650  
                               l2829 02AA                                 l2853 02FE  
                               l2773 01F2                                 l2767 0622  
                               l2855 031A                                 l2839 02E2  
                               l2871 0334                                 l2791 0220  
                               l2793 0232                                 l2777 0200  
                               l2787 021A                         ?_leds_glitch 0001  
                   uart_write@buffer 0011                                 _LATA 000F89  
                               u1607 05F0                                 u1617 0600  
                               u1627 0614                        __CFG_DEBUG$ON 000000  
                               u1637 0A9A                                 u1567 0832  
                               u1577 0964                                 u1587 0576  
                               u1597 05D0                                 _TMR0 000FD6  
            ??_zigbee_appendChecksum 001A                                 _main 0802  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 0018  
                      __CFG_IESO$OFF 000000              ??_zb_handle_resetStatus 0011  
                      __CFG_MCLRE$ON 000000                    ??_batt_launch_acq 0013  
                      _i2c_wait_idle 0AE4                                ?_main 0001  
               __size_of_calibration 00C6                                _T0CON 000FD5  
                              _T1CON 000FCD                                i2l421 0448  
                              i2l425 0404                                _RCREG 000FAE  
                              _RCSTA 000FAB                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _SPBRG 000FAF  
                              _PORTA 000F80                                _TRISA 000F92  
                              _TRISC 000F94                                _TXREG 000FAD  
                              _TXSTA 000FAC                        __CFG_PWRT$OFF 000000  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                                _gData 0035  
                      _i2c_trig_stop 0B38                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                tablat 000FF5  
                              status 000FD8  hyt221_operation@bDeviceDataAreStale 0013  
                zb_decodage@checksum 001F                       __CFG_PBADEN$ON 000000  
                  _wait_join_counter 0048                      _UART_rxBufferNb 0042  
                    __initialization 089E                         __end_of_main 0856  
                     ?_i2c_wait_idle 0001                               ??_main 002C  
                      __activetblptr 000002         __end_of_zb_handle_setTempRaw 0B02  
                     ?_i2c_trig_stop 0001                       _i2c_wait_ready 0AD2  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0         __end_of_zb_handle_setbatVolt 0B2C  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
          __size_of_hyt221_operation 0094                               i2l2307 043E  
                             i2l2309 0442                               i2l2271 0396  
                             i2l2283 03DA                               i2l2279 03BA  
                             i2l2297 0412                               _OSCCON 000FD3  
                             _SPBRGH 000FB0                               _SSPADD 000FC8  
                 __size_of_i2c_setup 0030                               _SSPBUF 000FC9  
              hyt221_operation@index 0014                     _UART_errorStatus 0039  
                   _timer0_wait_65ms 0A4E                       __CFG_XINST$OFF 000000  
                     _i2c_trig_start 0B2C                         ?_zb_decodage 0016  
                             _calibr 0044                       __CFG_STVREN$ON 000000  
                   ??_hyt221_getTemp 0013                               clear_0 08A4  
                             clear_1 08B0                               _isr_hi 0008  
           _zb_handle_setHumidityRaw 0B02               __end_of_i2c_wait_ready 0AE4  
                    _UART_writeIndex 0043                         __pdataCOMRAM 004E  
                 zb_doChecksum@frame 0011                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0080              __end_of__initialization 08D6  
               __size_of_leds_glitch 001E                __end_of_zb_doChecksum 09E2  
             __end_of_i2c_trig_start 0B38                   _hyt221_getHumidity 0AAC  
                   zb_decodage@frame 0016                       __pcstackCOMRAM 0001  
                    ??_i2c_wait_idle 0011                 zb_decodage@frameSize 0018  
                ?_hyt221_getHumidity 0011                    __end_of_i2c_setup 098A  
                    ??_i2c_trig_stop 0011                         _batt_counter 003C  
                        isr_hi@dummy 0010                      ?_i2c_wait_ready 0001  
     hyt221_getHumidity@humidity_raw 0013        zb_handle_waitAck@retryCounter 00E4  
                         __pbssBANK0 0080                   __size_of_main_loop 0170  
               ??_hyt221_getHumidity 0013                      _batt_launch_acq 0856  
     __size_of_zigbee_appendChecksum 005A        __end_of_zigbee_appendChecksum 0802  
                         _batt_value 003F                      ?_i2c_trig_start 0001  
                 _zb_handle_sendData 06BC                 _zb_handle_setTempRaw 0AF4  
     __size_of_zb_handle_resetStatus 000E        __end_of_zb_handle_resetStatus 0B1E  
        zigbee_appendChecksum@buffer 0016                 _zb_handle_setbatVolt 0B1E  
                ?_zb_handle_sendData 0001                              _BAUDCON 000FB8  
                            ?_isr_hi 0001                   __size_of_zb_handle 00E0  
                 __size_of_uart_read 0060                              _OSCTUNE 000F9B  
                            i2u98_40 0386                              i2u98_48 0388  
                            _SSPCON1 000FC6                              _SSPCON2 000FC5  
                            _SSPSTAT 000FC7                     _hyt221_operation 0628  
               ??_zb_handle_sendData 001D                    _timer0_wait_262ms 0A2C  
       __size_of_zb_handle_getStatus 0004                           _main_state 0046  
                 ?_timer0_wait_262ms 0001                ?_zb_handle_setTempRaw 0017  
                            __Hparam 0000                              __Lparam 0000  
                ??_timer0_wait_262ms 0011                ?_zb_handle_setbatVolt 0011  
                  _timer0_wait_ready 0AC0                        ??_calibration 0013  
                  __end_of_main_loop 0344                 __size_of_zb_decodage 01B8  
                            __pcinit 089E                   ?_timer0_wait_ready 0001  
                            __ramtop 0300                      __size_of_isr_hi 047A  
                            __ptext0 0802                              __ptext1 0A70  
                            __ptext2 01D4                              __ptext3 091E  
                            __ptext4 0482                              __ptext5 001C  
                            __ptext6 0748                              __ptext7 0A2C  
                            __ptext8 0AF4                              __ptext9 0B02  
                          _T0CONbits 000FD5             __end_of_timer0_wait_65ms 0A70  
                ??_timer0_wait_ready 0011              __end_of_batt_launch_acq 089E  
          __end_of_timer0_wait_262ms 0A4E                       __pintcode_body 0344  
               end_of_initialization 08D6                       zb_doChecksum@i 0015  
                      __Lmediumconst 0000                              int_func 0344  
                  __end_of_zb_handle 0562                    __end_of_uart_read 07A8  
          __end_of_timer0_wait_ready 0AD2           ??_zb_handle_setHumidityRaw 0017  
                          _RCSTAbits 000FAB                              postdec1 000FE5  
                            postdec2 000FDD                    zb_handle@bSuccess 0023  
                            postinc0 000FEE                              postinc2 000FDE  
                         _zb_frameID 004E                           _zb_counter 0049  
                         _uart_setup 0A70                           _uart_write 08E0  
                          _PORTBbits 000F81                            _PORTCbits 000F82  
                __end_of_calibration 0628                main_loop@bAckReceived 00E7  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                        uart_write@b 0013                          uart_write@i 0016  
             ??_zb_handle_setTempRaw 0019                            _TXSTAbits 000FAC  
             ??_zb_handle_setbatVolt 0013                     ??_i2c_wait_ready 0011  
                     _UART_readIndex 0041                        __pidataCOMRAM 0A0A  
                     __end_of_isr_hi 0482                     _zb_frameReceived 00B2  
                start_initialization 089E                            _i2c_setup 095A  
         __size_of_timer0_wait_262ms 0022                     ?_batt_launch_acq 0001  
                      ??_leds_glitch 0011                     ??_i2c_trig_start 0012  
                       calibration@w 0015                     __CFG_OSC$INTIO67 000000  
         __size_of_timer0_wait_ready 0012             __end_of_hyt221_operation 06BC  
              __end_of_i2c_wait_idle 0AF4                          _calibration 0562  
                   __CFG_LPT1OSC$OFF 000000                             ??_isr_hi 0001  
                        ?_uart_setup 0001                    zb_doChecksum@size 0013  
                        ?_uart_write 0011                  _zb_handle_getStatus 0B40  
                        __pbssCOMRAM 002C                __end_of_i2c_trig_stop 0B40  
             __size_of_zb_doChecksum 002A                        __pcstackBANK0 00E4  
            __size_of_hyt221_getTemp 002E                           ?_i2c_setup 0001  
                     _zb_frameToSend 004F                 ?_zb_handle_getStatus 0001  
        __size_of_hyt221_getHumidity 0014                  __end_of_leds_glitch 0AAC  
   __end_of_zb_handle_setHumidityRaw 0B10                _zigbee_appendChecksum 07A8  
                  __CFG_CCP2MX$PORTC 000000                    _zb_handle_waitAck 091E  
                          __pintcode 0008                   ?_zb_handle_waitAck 0001  
              _zb_handle_resetStatus 0B10      zb_handle_setbatVolt@battVoltage 0011  
                  _hyt221_launch_acq 09E2              uart_read@expectedNbRead 0016  
                ??_zb_handle_waitAck 002C                            _main_loop 01D4  
                  _zb_currentFrameID 004B                   ?_hyt221_launch_acq 0001  
                  ?_timer0_wait_65ms 0001                   ??_timer0_wait_65ms 0011  
        __size_of_zb_handle_sendData 008C                  ??_hyt221_launch_acq 0013  
              ??_zb_handle_getStatus 0011                  __size_of_uart_setup 001E  
                           _LATAbits 000F89                             _LATBbits 000F8A  
                           _LATCbits 000F8B                  __size_of_uart_write 003E  
                           _PIE1bits 000F9D            __end_of_zb_handle_waitAck 095A  
                      _zb_doChecksum 09B8                             i2u100_40 03AA  
                           i2u100_48 03AC                             i2u102_40 03CE  
                           i2u102_48 03D0                             i2u104_40 03EE  
                           i2u104_48 03F0                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                        ??_zb_decodage 001B  
                   __CFG_WDTPS$16384 000000                            _zb_handle 0482  
                          _uart_read 0748                      uart_read@buffer 0011  
                         uart_read@b 0014                           uart_read@i 0017  
          __end_of_hyt221_launch_acq 0A0A                            _zb_status 004D  
                         ?_main_loop 0001                          ??_i2c_setup 0011  
                          copy_data0 08CA                          _leds_glitch 0A8E  
              calibration@tryCounter 0014                        _UART_rxBuffer 0080  
                     ?_zb_doChecksum 0011               ?_zigbee_appendChecksum 0016  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000       zigbee_appendChecksum@sizeFrame 0018  
                         ?_zb_handle 0001                zb_handle@decodedFrame 0024  
                         ?_uart_read 0011                zb_doChecksum@checksum 0014  
             ?_zb_handle_resetStatus 0001  zb_handle_setHumidityRaw@humidityRaw 0015  
                __end_of_zb_decodage 01D4                       _hyt221_getTemp 098A  
  __size_of_zb_handle_setHumidityRaw 000E            ?_zb_handle_setHumidityRaw 0015  
                           __ptext10 06BC                             __ptext11 07A8  
                           __ptext20 0B38                             __ptext12 09B8  
                           __ptext21 0B2C                             __ptext13 08E0  
                           __ptext30 0A8E                             __ptext22 0AD2  
                           __ptext14 0B10                             __ptext23 0AE4  
                           __ptext15 0B40                             __ptext24 098A  
                           __ptext16 0A4E                             __ptext25 0AAC  
                           __ptext17 0AC0                             __ptext26 0856  
                           __ptext18 0628                             __ptext27 0B1E  
                           __ptext19 09E2                             __ptext28 095A  
                           __ptext29 0562                        __size_of_main 0054  
                      _zb_currentAck 004A           __size_of_zb_handle_waitAck 003C  
       zb_decodage@bCorrectlyDecoded 0020               main_loop@hyt221_status 00E8  
      __size_of_zb_handle_setTempRaw 000E          zb_handle_sendData@frameSize 0020  
                 main_loop@zb_status 00E6                             _zb_state 004C  
      __size_of_zb_handle_setbatVolt 000E                         ?_calibration 0001  
         __size_of_hyt221_launch_acq 0028                    ?_hyt221_operation 0001  
                       ??_uart_setup 0011                         ??_uart_write 0013  
                 ??_hyt221_operation 0013               __end_of_hyt221_getTemp 09B8  
                        ??_main_loop 002C                           _INTCONbits 000FF2  
                           intlevel2 0000                 _timer0_interupt_done 0047  
                    ??_zb_doChecksum 0014                   __end_of_uart_setup 0A8E  
                 __end_of_uart_write 091E             __size_of_batt_launch_acq 0048  
      zb_handle_waitAck@bAckReceived 00E5                           _OSCCONbits 000FD3  
                        ??_zb_handle 0021                          ??_uart_read 0014  
                        _zb_decodage 001C          zb_handle_setTempRaw@tempRaw 0017  
            zb_handle@sizeOfNextData 0021                      leds_glitch@leds 0012  
                    ?_hyt221_getTemp 0011                          _sensor_data 002C  
                  uart_read@nbToRead 0013              __size_of_i2c_wait_ready 0012  
                        _SSPCON2bits 000FC5                    _i2c_interupt_done 0045  
                         _WDTCONbits 000FD1           __end_of_hyt221_getHumidity 0AC0  
             __size_of_i2c_wait_idle 0010            __size_of_timer0_wait_65ms 0022  
            zb_decodage@decodedFrame 0019               hyt221_getTemp@temp_raw 0015  
             __size_of_i2c_trig_stop 0008  
