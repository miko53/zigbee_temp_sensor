

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Aug 15 17:03:45 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataCOMRAM
    53  000E0C                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _zb_frameID
    57  000E0C  02                 	db	2
    58                           
    59                           	psect	smallconst
    60  000300                     __psmallconst:
    61                           	opt stack 0
    62  000300  00                 	db	0
    63  000301                     _frameData:
    64                           	opt stack 0
    65  000301  7E                 	db	126
    66  000302  00                 	db	0
    67  000303  04                 	db	4
    68  000304  10                 	db	16
    69  000305  02                 	db	2
    70  000306  00                 	db	0
    71  000307  00                 	db	0
    72  000308  00                 	db	0
    73  000309  00                 	db	0
    74  00030A  00                 	db	0
    75  00030B  00                 	db	0
    76  00030C  00                 	db	0
    77  00030D  00                 	db	0
    78  00030E  FF                 	db	255
    79  00030F  FE                 	db	254
    80  000310  00                 	db	0
    81  000311  00                 	db	0
    82  000312  00                 	db	0
    83  000313  00                 	db	0
    84  000314  03                 	db	3
    85  000315  01                 	db	1
    86  000316  00                 	db	0
    87  000317  00                 	db	0
    88  000318  00                 	db	0
    89  000319  02                 	db	2
    90  00031A  00                 	db	0
    91  00031B  00                 	db	0
    92  00031C  00                 	db	0
    93  00031D  03                 	db	3
    94  00031E  00                 	db	0
    95  00031F  00                 	db	0
    96  000320  00                 	db	0
    97  000321                     __end_of_frameData:
    98                           	opt stack 0
    99  0000                     _TMR0	set	4054
   100  0000                     _ADCON0	set	4034
   101  0000                     _ADCON1	set	4033
   102  0000                     _ADCON2	set	4032
   103  0000                     _ADRESH	set	4036
   104  0000                     _ADRESL	set	4035
   105  0000                     _BAUDCON	set	4024
   106  0000                     _INTCONbits	set	4082
   107  0000                     _LATA	set	3977
   108  0000                     _LATAbits	set	3977
   109  0000                     _LATBbits	set	3978
   110  0000                     _LATCbits	set	3979
   111  0000                     _OSCCON	set	4051
   112  0000                     _OSCCONbits	set	4051
   113  0000                     _OSCTUNE	set	3995
   114  0000                     _PIE1bits	set	3997
   115  0000                     _PIR1bits	set	3998
   116  0000                     _PIR2bits	set	4001
   117  0000                     _PORTA	set	3968
   118  0000                     _PORTBbits	set	3969
   119  0000                     _PORTCbits	set	3970
   120  0000                     _RCREG	set	4014
   121  0000                     _RCSTA	set	4011
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _SPBRG	set	4015
   124  0000                     _SPBRGH	set	4016
   125  0000                     _SSPADD	set	4040
   126  0000                     _SSPBUF	set	4041
   127  0000                     _SSPCON1	set	4038
   128  0000                     _SSPCON2	set	4037
   129  0000                     _SSPCON2bits	set	4037
   130  0000                     _SSPSTAT	set	4039
   131  0000                     _SSPSTATbits	set	4039
   132  0000                     _T0CON	set	4053
   133  0000                     _T0CONbits	set	4053
   134  0000                     _T1CON	set	4045
   135  0000                     _TMR1H	set	4047
   136  0000                     _TMR1L	set	4046
   137  0000                     _TRISA	set	3986
   138  0000                     _TRISBbits	set	3987
   139  0000                     _TRISC	set	3988
   140  0000                     _TRISCbits	set	3988
   141  0000                     _TXREG	set	4013
   142  0000                     _TXSTA	set	4012
   143  0000                     _TXSTAbits	set	4012
   144  0000                     _WDTCONbits	set	4049
   145                           
   146                           ; #config settings
   147  000321  00                 	db	0	; dummy byte at the end
   148  0000                     
   149                           	psect	cinit
   150  000BF2                     __pcinit:
   151                           	opt stack 0
   152  000BF2                     start_initialization:
   153                           	opt stack 0
   154  000BF2                     __initialization:
   155                           	opt stack 0
   156                           
   157                           ; Clear objects allocated to BANK0 (100 bytes)
   158  000BF2  EE00  F080         	lfsr	0,__pbssBANK0
   159  000BF6  0E64               	movlw	100
   160  000BF8                     clear_0:
   161  000BF8  6AEE               	clrf	postinc0,c
   162  000BFA  06E8               	decf	wreg,f,c
   163  000BFC  E1FD               	bnz	clear_0
   164                           
   165                           ; Clear objects allocated to COMRAM (69 bytes)
   166  000BFE  EE00  F001         	lfsr	0,__pbssCOMRAM
   167  000C02  0E45               	movlw	69
   168  000C04                     clear_1:
   169  000C04  6AEE               	clrf	postinc0,c
   170  000C06  06E8               	decf	wreg,f,c
   171  000C08  E1FD               	bnz	clear_1
   172                           
   173                           ; Initialize objects allocated to COMRAM (1 bytes)
   174                           ; load TBLPTR registers with __pidataCOMRAM
   175  000C0A  0E0C               	movlw	low __pidataCOMRAM
   176  000C0C  6EF6               	movwf	tblptrl,c
   177  000C0E  0E0E               	movlw	high __pidataCOMRAM
   178  000C10  6EF7               	movwf	tblptrh,c
   179  000C12  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   180  000C14  6EF8               	movwf	tblptru,c
   181  000C16  0009               	tblrd		*+	;fetch initializer
   182  000C18  CFF5 F068          	movff	tablat,__pdataCOMRAM
   183  000C1C                     end_of_initialization:
   184                           	opt stack 0
   185  000C1C                     __end_of__initialization:
   186                           	opt stack 0
   187  000C1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   188  000C1E  6EF8               	movwf	tblptru,c
   189  000C20  0100               	movlb	0
   190  000C22  EF4F  F005         	goto	_main	;jump to C main() function
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	bssCOMRAM
   199  000001                     __pbssCOMRAM:
   200                           	opt stack 0
   201  000001                     _sensor_data:
   202                           	opt stack 0
   203  000001                     	ds	9
   204  00000A                     _gData:
   205                           	opt stack 0
   206  00000A                     	ds	4
   207  00000E                     _UART_errorStatus:
   208                           	opt stack 0
   209  00000E                     	ds	3
   210  000011                     _batt_counter:
   211                           	opt stack 0
   212  000011                     	ds	3
   213  000014                     _batt_value:
   214                           	opt stack 0
   215  000014                     	ds	2
   216  000016                     _UART_readIndex:
   217                           	opt stack 0
   218  000016                     	ds	1
   219  000017                     _UART_rxBufferNb:
   220                           	opt stack 0
   221  000017                     	ds	1
   222  000018                     _UART_writeIndex:
   223                           	opt stack 0
   224  000018                     	ds	1
   225  000019                     _calibr:
   226                           	opt stack 0
   227  000019                     	ds	1
   228  00001A                     _i2c_interupt_done:
   229                           	opt stack 0
   230  00001A                     	ds	1
   231  00001B                     _main_state:
   232                           	opt stack 0
   233  00001B                     	ds	1
   234  00001C                     _timer0_interupt_done:
   235                           	opt stack 0
   236  00001C                     	ds	1
   237  00001D                     _wait_join_counter:
   238                           	opt stack 0
   239  00001D                     	ds	1
   240  00001E                     _zb_counter:
   241                           	opt stack 0
   242  00001E                     	ds	1
   243  00001F                     _zb_status:
   244                           	opt stack 0
   245  00001F                     	ds	1
   246  000020                     _zb_frameToSend:
   247                           	opt stack 0
   248  000020                     	ds	38
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           
   256                           	psect	dataCOMRAM
   257  000068                     __pdataCOMRAM:
   258                           	opt stack 0
   259  000068                     _zb_frameID:
   260                           	opt stack 0
   261  000068                     	ds	1
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           
   269                           	psect	bssBANK0
   270  000080                     __pbssBANK0:
   271                           	opt stack 0
   272  000080                     _UART_rxBuffer:
   273                           	opt stack 0
   274  000080                     	ds	50
   275  0000B2                     _zb_frameReceived:
   276                           	opt stack 0
   277  0000B2                     	ds	50
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           
   285                           	psect	cstackBANK0
   286  0000E4                     __pcstackBANK0:
   287                           	opt stack 0
   288  0000E4                     zb_handle@sizeOfNextData:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0x0
   292  0000E4                     	ds	2
   293  0000E6                     zb_handle@bSuccess:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x2
   297  0000E6                     	ds	1
   298  0000E7                     zb_handle@decodedFrame:
   299                           	opt stack 0
   300                           
   301                           ; 8 bytes @ 0x3
   302  0000E7                     	ds	8
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	cstackCOMRAM
   311  000046                     __pcstackCOMRAM:
   312                           	opt stack 0
   313  000046                     ??_isr_hi:
   314  000046                     
   315                           ; 2 bytes @ 0x0
   316  000046                     	ds	15
   317  000055                     isr_hi@dummy:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0xF
   321  000055                     	ds	1
   322  000056                     ??_leds_green_glitch:
   323  000056                     ??_leds_yellow_glitch:
   324  000056                     ??_leds_red_glitch:
   325  000056                     ??_leds_red_and_yellow_glitch:
   326  000056                     ??_i2c_wait_idle:
   327  000056                     ?_hyt221_getTemp:
   328                           	opt stack 0
   329  000056                     ?_hyt221_getHumidity:
   330                           	opt stack 0
   331  000056                     uart_write@buffer:
   332                           	opt stack 0
   333  000056                     uart_read@buffer:
   334                           	opt stack 0
   335  000056                     zb_doChecksum@frame:
   336                           	opt stack 0
   337  000056                     zb_handle_setbatVolt@battVoltage:
   338                           	opt stack 0
   339  000056                     memcpy@d1:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x10
   343  000056                     	ds	1
   344  000057                     ??_calibration:
   345  000057                     ??_hyt221_operation:
   346  000057                     
   347                           ; 0 bytes @ 0x11
   348  000057                     	ds	1
   349  000058                     ??_batt_launch_acq:
   350  000058                     ??_hyt221_getTemp:
   351  000058                     uart_read@nbToRead:
   352                           	opt stack 0
   353  000058                     zb_doChecksum@size:
   354                           	opt stack 0
   355  000058                     calibration@tryCounter:
   356                           	opt stack 0
   357  000058                     uart_write@b:
   358                           	opt stack 0
   359  000058                     hyt221_getHumidity@humidity_raw:
   360                           	opt stack 0
   361  000058                     memcpy@s1:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x12
   365  000058                     	ds	1
   366  000059                     zb_doChecksum@checksum:
   367                           	opt stack 0
   368  000059                     hyt221_operation@bDeviceDataAreStale:
   369                           	opt stack 0
   370  000059                     calibration@w:
   371                           	opt stack 0
   372  000059                     uart_read@b:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x13
   376  000059                     	ds	1
   377  00005A                     uart_write@size:
   378                           	opt stack 0
   379  00005A                     zb_doChecksum@i:
   380                           	opt stack 0
   381  00005A                     hyt221_operation@index:
   382                           	opt stack 0
   383  00005A                     zb_handle_setHumidityRaw@humidityRaw:
   384                           	opt stack 0
   385  00005A                     hyt221_getTemp@temp_raw:
   386                           	opt stack 0
   387  00005A                     memcpy@n:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x14
   391  00005A                     	ds	1
   392  00005B                     uart_write@i:
   393                           	opt stack 0
   394  00005B                     uart_read@expectedNbRead:
   395                           	opt stack 0
   396  00005B                     zb_decodage@frame:
   397                           	opt stack 0
   398  00005B                     zigbee_appendChecksum@buffer:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x15
   402  00005B                     	ds	1
   403  00005C                     uart_read@i:
   404                           	opt stack 0
   405  00005C                     zb_handle_setTempRaw@tempRaw:
   406                           	opt stack 0
   407  00005C                     memcpy@d:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x16
   411  00005C                     	ds	1
   412  00005D                     zb_decodage@frameSize:
   413                           	opt stack 0
   414  00005D                     zigbee_appendChecksum@sizeFrame:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x17
   418  00005D                     	ds	1
   419  00005E                     zb_decodage@decodedFrame:
   420                           	opt stack 0
   421  00005E                     memcpy@s:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x18
   425  00005E                     	ds	1
   426  00005F                     ??_zigbee_appendChecksum:
   427                           
   428                           ; 0 bytes @ 0x19
   429  00005F                     	ds	1
   430  000060                     ??_zb_decodage:
   431                           
   432                           ; 0 bytes @ 0x1A
   433  000060                     	ds	2
   434  000062                     ??_zb_handle_sendData:
   435                           
   436                           ; 0 bytes @ 0x1C
   437  000062                     	ds	2
   438  000064                     zb_decodage@checksum:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x1E
   442  000064                     	ds	1
   443  000065                     zb_decodage@bCorrectlyDecoded:
   444                           	opt stack 0
   445  000065                     zb_handle_sendData@frameSize:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x1F
   449  000065                     	ds	1
   450  000066                     main_loop@zb_status:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x20
   454  000066                     	ds	1
   455  000067                     main_loop@hyt221_status:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x21
   459  000067                     	ds	1
   460  000068                     tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           
   467                           ; 0 bytes @ 0x22
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 31 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  2   94[COMRAM] int 
   480 ;; Registers used:
   481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   487 ;;      Params:         0       0       0       0
   488 ;;      Locals:         0       0       0       0
   489 ;;      Temps:          0       0       0       0
   490 ;;      Totals:         0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels required when called:    5
   493 ;; This function calls:
   494 ;;		_calibration
   495 ;;		_i2c_setup
   496 ;;		_main_loop
   497 ;;		_uart_setup
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text0
   504  000A9E                     __ptext0:
   505                           	opt stack 0
   506  000A9E                     _main:
   507                           	opt stack 26
   508                           
   509                           ;main.c: 33: OSCTUNE = 0x00;
   510                           
   511                           ;incstack = 0
   512  000A9E  0E00               	movlw	0
   513  000AA0  6E9B               	movwf	3995,c	;volatile
   514                           
   515                           ;main.c: 35: OSCCON = 0x40;
   516  000AA2  0E40               	movlw	64
   517  000AA4  6ED3               	movwf	4051,c	;volatile
   518                           
   519                           ;main.c: 38: PORTA = 0x0;
   520  000AA6  0E00               	movlw	0
   521  000AA8  6E80               	movwf	3968,c	;volatile
   522                           
   523                           ;main.c: 39: TRISA = 0x0;
   524  000AAA  0E00               	movlw	0
   525  000AAC  6E92               	movwf	3986,c	;volatile
   526                           
   527                           ;main.c: 42: TRISBbits.RB0 = 0;
   528  000AAE  9093               	bcf	3987,0,c	;volatile
   529                           
   530                           ;main.c: 43: PORTBbits.RB0 = 0;
   531  000AB0  9081               	bcf	3969,0,c	;volatile
   532                           
   533                           ;main.c: 44: TRISBbits.RB3 = 0;
   534  000AB2  9693               	bcf	3987,3,c	;volatile
   535                           
   536                           ;main.c: 45: PORTBbits.RB3 = 0;
   537  000AB4  9681               	bcf	3969,3,c	;volatile
   538                           
   539                           ;main.c: 46: TRISBbits.RB4 = 0;
   540  000AB6  9893               	bcf	3987,4,c	;volatile
   541                           
   542                           ;main.c: 47: PORTBbits.RB4 = 0;
   543  000AB8  9881               	bcf	3969,4,c	;volatile
   544                           
   545                           ;main.c: 48: TRISCbits.RC2 = 0;
   546  000ABA  9494               	bcf	3988,2,c	;volatile
   547                           
   548                           ;main.c: 49: PORTCbits.RC2 = 0;
   549  000ABC  9482               	bcf	3970,2,c	;volatile
   550                           
   551                           ;main.c: 50: TRISCbits.RC5 = 0;
   552  000ABE  9A94               	bcf	3988,5,c	;volatile
   553                           
   554                           ;main.c: 51: PORTCbits.RC5 = 0;
   555  000AC0  9A82               	bcf	3970,5,c	;volatile
   556                           
   557                           ;main.c: 54: PORTBbits.RB1 = 0;
   558  000AC2  9281               	bcf	3969,1,c	;volatile
   559                           
   560                           ;main.c: 55: TRISBbits.RB1 = 0;
   561  000AC4  9293               	bcf	3987,1,c	;volatile
   562                           
   563                           ;main.c: 56: TRISBbits.RB2 = 1;
   564  000AC6  8493               	bsf	3987,2,c	;volatile
   565                           
   566                           ;main.c: 57: PIR1bits.ADIF = 0;
   567  000AC8  9C9E               	bcf	3998,6,c	;volatile
   568                           
   569                           ;main.c: 58: PIE1bits.ADIE = 1;
   570  000ACA  8C9D               	bsf	3997,6,c	;volatile
   571                           
   572                           ;main.c: 60: _delay((unsigned long)((5)*((1000000)/4000.0)));
   573  000ACC  0EFA               	movlw	250
   574  000ACE                     u1067:
   575  000ACE  D000               	nop2	
   576  000AD0  2EE8               	decfsz	wreg,f,c
   577  000AD2  D7FD               	goto	u1067
   578                           
   579                           ;main.c: 62: calibration();
   580  000AD4  ECF8  F003         	call	_calibration	;wreg free
   581                           
   582                           ;main.c: 67: i2c_setup();
   583  000AD8  EC13  F006         	call	_i2c_setup	;wreg free
   584                           
   585                           ;main.c: 68: uart_setup();
   586  000ADC  EC87  F006         	call	_uart_setup	;wreg free
   587                           
   588                           ;main.c: 70: INTCONbits.PEIE = 1;
   589  000AE0  8CF2               	bsf	intcon,6,c	;volatile
   590                           
   591                           ;main.c: 71: INTCONbits.GIE = 1;
   592  000AE2  8EF2               	bsf	intcon,7,c	;volatile
   593                           
   594                           ;main.c: 73: (LATAbits.LA1 = 0);
   595  000AE4  9289               	bcf	3977,1,c	;volatile
   596                           
   597                           ;main.c: 74: (LATAbits.LA1 = 1);
   598  000AE6  8289               	bsf	3977,1,c	;volatile
   599                           
   600                           ;main.c: 76: main_loop();
   601  000AE8  ECFE  F002         	call	_main_loop	;wreg free
   602  000AEC  EF0C  F000         	goto	start
   603  000AF0                     __end_of_main:
   604                           	opt stack 0
   605                           tblptru	equ	0xFF8
   606                           tblptrh	equ	0xFF7
   607                           tblptrl	equ	0xFF6
   608                           tablat	equ	0xFF5
   609                           intcon	equ	0xFF2
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           
   613 ;; *************** function _uart_setup *****************
   614 ;; Defined at:
   615 ;;		line 11 in file "uart.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;		None               void
   622 ;; Registers used:
   623 ;;		wreg, status,2
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   629 ;;      Params:         0       0       0       0
   630 ;;      Locals:         0       0       0       0
   631 ;;      Temps:          0       0       0       0
   632 ;;      Totals:         0       0       0       0
   633 ;;Total ram usage:        0 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text1
   644  000D0E                     __ptext1:
   645                           	opt stack 0
   646  000D0E                     _uart_setup:
   647                           	opt stack 29
   648                           
   649                           ;uart.c: 14: TRISCbits.RC7 = 1;
   650                           
   651                           ;incstack = 0
   652  000D0E  8E94               	bsf	3988,7,c	;volatile
   653                           
   654                           ;uart.c: 15: TRISCbits.RC6 = 1;
   655  000D10  8C94               	bsf	3988,6,c	;volatile
   656                           
   657                           ;uart.c: 17: TXSTA = 0x24;
   658  000D12  0E24               	movlw	36
   659  000D14  6EAC               	movwf	4012,c	;volatile
   660                           
   661                           ;uart.c: 18: RCSTA = 0x90;
   662  000D16  0E90               	movlw	144
   663  000D18  6EAB               	movwf	4011,c	;volatile
   664                           
   665                           ;uart.c: 19: BAUDCON = 0x48;
   666  000D1A  0E48               	movlw	72
   667  000D1C  6EB8               	movwf	4024,c	;volatile
   668                           
   669                           ;uart.c: 20: SPBRGH = 0;
   670  000D1E  0E00               	movlw	0
   671  000D20  6EB0               	movwf	4016,c	;volatile
   672                           
   673                           ;uart.c: 21: SPBRG = 12;
   674  000D22  0E0C               	movlw	12
   675  000D24  6EAF               	movwf	4015,c	;volatile
   676                           
   677                           ;uart.c: 23: PIR1bits.RCIF = 0;
   678  000D26  9A9E               	bcf	3998,5,c	;volatile
   679                           
   680                           ;uart.c: 24: PIE1bits.RCIE = 1;
   681  000D28  8A9D               	bsf	3997,5,c	;volatile
   682  000D2A  0012               	return	
   683  000D2C                     __end_of_uart_setup:
   684                           	opt stack 0
   685                           tblptru	equ	0xFF8
   686                           tblptrh	equ	0xFF7
   687                           tblptrl	equ	0xFF6
   688                           tablat	equ	0xFF5
   689                           intcon	equ	0xFF2
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           
   693 ;; *************** function _main_loop *****************
   694 ;; Defined at:
   695 ;;		line 79 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  hyt221_statu    1   33[COMRAM] enum E3778
   700 ;;  zb_status       1   32[COMRAM] enum E3761
   701 ;; Return value:  Size  Location     Type
   702 ;;		None               void
   703 ;; Registers used:
   704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   710 ;;      Params:         0       0       0       0
   711 ;;      Locals:         2       0       0       0
   712 ;;      Temps:          0       0       0       0
   713 ;;      Totals:         2       0       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    4
   717 ;; This function calls:
   718 ;;		_batt_launch_acq
   719 ;;		_hyt221_getHumidity
   720 ;;		_hyt221_getTemp
   721 ;;		_hyt221_launch_acq
   722 ;;		_hyt221_operation
   723 ;;		_leds_green_glitch
   724 ;;		_leds_red_glitch
   725 ;;		_leds_yellow_glitch
   726 ;;		_timer0_wait_262ms
   727 ;;		_timer0_wait_65ms
   728 ;;		_zb_handle
   729 ;;		_zb_handle_getStatus
   730 ;;		_zb_handle_resetStatus
   731 ;;		_zb_handle_sendData
   732 ;;		_zb_handle_setHumidityRaw
   733 ;;		_zb_handle_setTempRaw
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text2
   740  0005FC                     __ptext2:
   741                           	opt stack 0
   742  0005FC                     _main_loop:
   743                           	opt stack 26
   744                           
   745                           ;main.c: 81: zb_statusT zb_status;
   746                           ;main.c: 82: STATUS_T hyt221_status;
   747                           ;main.c: 84: batt_counter = (60);
   748                           
   749                           ;incstack = 0
   750  0005FC  0E3C               	movlw	60
   751  0005FE  6E11               	movwf	_batt_counter,c
   752  000600  0E00               	movlw	0
   753  000602  6E12               	movwf	_batt_counter+1,c
   754  000604  0E00               	movlw	0
   755  000606  6E13               	movwf	_batt_counter+2,c
   756                           
   757                           ;main.c: 85: wait_join_counter = 0;
   758  000608  0E00               	movlw	0
   759  00060A  6E1D               	movwf	_wait_join_counter,c
   760                           
   761                           ;main.c: 86: main_state = WAIT_JOINED;
   762  00060C  0E00               	movlw	0
   763  00060E  6E1B               	movwf	_main_state,c
   764                           
   765                           ;main.c: 88: leds_green_glitch();
   766  000610  ECAE  F006         	call	_leds_green_glitch	;wreg free
   767  000614                     l2223:
   768                           
   769                           ;main.c: 91: {
   770                           ;main.c: 92: zb_handle();
   771  000614  EC8C  F003         	call	_zb_handle	;wreg free
   772                           
   773                           ;main.c: 93: zb_status = zb_handle_getStatus();
   774  000618  EC04  F007         	call	_zb_handle_getStatus	;wreg free
   775  00061C  6E66               	movwf	main_loop@zb_status,c
   776                           
   777                           ;main.c: 94: switch (zb_status)
   778  00061E  D011               	goto	l2241
   779  000620                     l2227:
   780                           
   781                           ;main.c: 97: main_state = WAIT_JOINED;
   782  000620  0E00               	movlw	0
   783  000622  6E1B               	movwf	_main_state,c
   784                           
   785                           ;main.c: 98: leds_yellow_glitch();
   786  000624  ECA3  F006         	call	_leds_yellow_glitch	;wreg free
   787                           
   788                           ;main.c: 99: timer0_wait_262ms();
   789  000628  EC76  F006         	call	_timer0_wait_262ms	;wreg free
   790                           
   791                           ;main.c: 100: timer0_wait_262ms();
   792  00062C  EC76  F006         	call	_timer0_wait_262ms	;wreg free
   793                           
   794                           ;main.c: 101: break;
   795  000630  D065               	goto	l2291
   796  000632                     l102:
   797                           
   798                           ;main.c: 104: if (main_state == WAIT_JOINED)
   799  000632  661B               	tstfsz	_main_state,c
   800  000634  D063               	goto	l2291
   801                           
   802                           ;main.c: 105: {
   803                           ;main.c: 106: main_state = JOINED;
   804  000636  0E01               	movlw	1
   805  000638  6E1B               	movwf	_main_state,c
   806  00063A  D060               	goto	l2291
   807  00063C                     l2237:
   808                           
   809                           ;main.c: 111: leds_red_glitch();
   810  00063C  ECB9  F006         	call	_leds_red_glitch	;wreg free
   811                           
   812                           ;main.c: 112: break;
   813  000640  D05D               	goto	l2291
   814  000642                     l2241:
   815  000642  5066               	movf	main_loop@zb_status,w,c
   816                           
   817                           ; Switch size 1, requested type "space"
   818                           ; Number of cases is 3, Range of values is 0 to 2
   819                           ; switch strategies available:
   820                           ; Name         Instructions Cycles
   821                           ; simple_byte           10     6 (average)
   822                           ;	Chosen strategy is simple_byte
   823  000644  0A00               	xorlw	0	; case 0
   824  000646  B4D8               	btfsc	status,2,c
   825  000648  D7EB               	goto	l2227
   826  00064A  0A01               	xorlw	1	; case 1
   827  00064C  B4D8               	btfsc	status,2,c
   828  00064E  D7F1               	goto	l102
   829  000650  0A03               	xorlw	3	; case 2
   830  000652  B4D8               	btfsc	status,2,c
   831  000654  D7F3               	goto	l2237
   832  000656  D052               	goto	l2291
   833  000658                     l2243:
   834                           
   835                           ;main.c: 122: wait_join_counter++;
   836  000658  2A1D               	incf	_wait_join_counter,f,c
   837                           
   838                           ;main.c: 123: if (wait_join_counter >= 50)
   839  00065A  0E31               	movlw	49
   840  00065C  641D               	cpfsgt	_wait_join_counter,c
   841  00065E  D7DA               	goto	l2223
   842                           
   843                           ;main.c: 124: {
   844                           ;main.c: 125: wait_join_counter = 0;
   845  000660  0E00               	movlw	0
   846  000662  6E1D               	movwf	_wait_join_counter,c
   847  000664  00FF               	reset		;# 
   848  000666  D7D6               	goto	l2223
   849  000668                     l2249:
   850                           
   851                           ;main.c: 131: zb_handle_resetStatus();
   852  000668  ECEC  F006         	call	_zb_handle_resetStatus	;wreg free
   853                           
   854                           ;main.c: 133: batt_counter++;
   855  00066C  0E01               	movlw	1
   856  00066E  2611               	addwf	_batt_counter,f,c
   857  000670  0E00               	movlw	0
   858  000672  2212               	addwfc	_batt_counter+1,f,c
   859  000674  0E00               	movlw	0
   860  000676  2213               	addwfc	_batt_counter+2,f,c
   861                           
   862                           ;main.c: 134: if (!(batt_counter < (60)))
   863  000678  0E3C               	movlw	60
   864  00067A  5C11               	subwf	_batt_counter,w,c
   865  00067C  0E00               	movlw	0
   866  00067E  5812               	subwfb	_batt_counter+1,w,c
   867  000680  0E00               	movlw	0
   868  000682  5813               	subwfb	_batt_counter+2,w,c
   869  000684  A0D8               	btfss	status,0,c
   870  000686  D008               	goto	l2259
   871                           
   872                           ;main.c: 135: {
   873                           ;main.c: 136: batt_counter = 0;
   874  000688  0E00               	movlw	0
   875  00068A  6E11               	movwf	_batt_counter,c
   876  00068C  0E00               	movlw	0
   877  00068E  6E12               	movwf	_batt_counter+1,c
   878  000690  0E00               	movlw	0
   879  000692  6E13               	movwf	_batt_counter+2,c
   880                           
   881                           ;main.c: 137: batt_launch_acq();
   882  000694  EC78  F005         	call	_batt_launch_acq	;wreg free
   883  000698                     l2259:
   884                           
   885                           ;main.c: 138: }
   886                           ;main.c: 140: hyt221_status = hyt221_launch_acq();
   887  000698  EC40  F006         	call	_hyt221_launch_acq	;wreg free
   888  00069C  6E67               	movwf	main_loop@hyt221_status,c
   889                           
   890                           ;main.c: 141: if (hyt221_status == STATUS_OK)
   891  00069E  6667               	tstfsz	main_loop@hyt221_status,c
   892  0006A0  D7B9               	goto	l2223
   893                           
   894                           ;main.c: 142: {
   895                           ;main.c: 143: main_state = WAIT_HYT221_ACQ;
   896  0006A2  0E03               	movlw	3
   897  0006A4  D023               	goto	L2
   898  0006A6                     l114:
   899  0006A6  80D1               	bsf	4049,0,c	;volatile
   900  0006A8  0003               	sleep		;# 
   901  0006AA  90D1               	bcf	4049,0,c	;volatile
   902                           
   903                           ;main.c: 151: main_state = WAIT_JOINED;
   904  0006AC  0E00               	movlw	0
   905  0006AE  D01E               	goto	L2
   906  0006B0                     l2267:
   907                           
   908                           ;main.c: 155: timer0_wait_65ms();
   909  0006B0  EC65  F006         	call	_timer0_wait_65ms	;wreg free
   910                           
   911                           ;main.c: 156: hyt221_status = hyt221_operation();
   912  0006B4  EC58  F004         	call	_hyt221_operation	;wreg free
   913  0006B8  6E67               	movwf	main_loop@hyt221_status,c
   914                           
   915                           ;main.c: 157: if (hyt221_status == STATUS_OK)
   916  0006BA  6667               	tstfsz	main_loop@hyt221_status,c
   917  0006BC  D019               	goto	l2285
   918                           
   919                           ;main.c: 158: {
   920                           ;main.c: 159: (LATAbits.LATA0 = 0);
   921  0006BE  9089               	bcf	3977,0,c	;volatile
   922                           
   923                           ;main.c: 161: zb_handle_setTempRaw(hyt221_getTemp());
   924  0006C0  ECBB  F005         	call	_hyt221_getTemp	;wreg free
   925  0006C4  C056  F05C         	movff	?_hyt221_getTemp,zb_handle_setTempRaw@tempRaw
   926  0006C8  C057  F05D         	movff	?_hyt221_getTemp+1,zb_handle_setTempRaw@tempRaw+1
   927  0006CC  ECDE  F006         	call	_zb_handle_setTempRaw	;wreg free
   928                           
   929                           ;main.c: 162: zb_handle_setHumidityRaw(hyt221_getHumidity());
   930  0006D0  EC53  F006         	call	_hyt221_getHumidity	;wreg free
   931  0006D4  C056  F05A         	movff	?_hyt221_getHumidity,zb_handle_setHumidityRaw@humidityRaw
   932  0006D8  C057  F05B         	movff	?_hyt221_getHumidity+1,zb_handle_setHumidityRaw@humidityRaw+1
   933  0006DC  ECE5  F006         	call	_zb_handle_setHumidityRaw	;wreg free
   934                           
   935                           ;main.c: 163: zb_handle_sendData();
   936  0006E0  ECA6  F004         	call	_zb_handle_sendData	;wreg free
   937                           
   938                           ;main.c: 164: timer0_wait_262ms();
   939  0006E4  EC76  F006         	call	_timer0_wait_262ms	;wreg free
   940                           
   941                           ;main.c: 165: (LATAbits.LATA0 = 1);
   942  0006E8  8089               	bsf	3977,0,c	;volatile
   943                           
   944                           ;main.c: 166: main_state = SLEEP;
   945  0006EA  0E02               	movlw	2
   946  0006EC                     L2:
   947  0006EC  6E1B               	movwf	_main_state,c
   948                           
   949                           ;main.c: 167: }
   950  0006EE  D792               	goto	l2223
   951  0006F0                     l2285:
   952                           
   953                           ;main.c: 168: else if (hyt221_status == STATUS_ERROR)
   954  0006F0  0467               	decf	main_loop@hyt221_status,w,c
   955  0006F2  A4D8               	btfss	status,2,c
   956  0006F4  D78F               	goto	l2223
   957                           
   958                           ;main.c: 169: {
   959                           ;main.c: 170: leds_red_glitch();
   960  0006F6  ECB9  F006         	call	_leds_red_glitch	;wreg free
   961  0006FA  D78C               	goto	l2223
   962  0006FC                     l2291:
   963  0006FC  501B               	movf	_main_state,w,c
   964                           
   965                           ; Switch size 1, requested type "space"
   966                           ; Number of cases is 4, Range of values is 0 to 3
   967                           ; switch strategies available:
   968                           ; Name         Instructions Cycles
   969                           ; simple_byte           13     7 (average)
   970                           ;	Chosen strategy is simple_byte
   971  0006FE  0A00               	xorlw	0	; case 0
   972  000700  B4D8               	btfsc	status,2,c
   973  000702  D7AA               	goto	l2243
   974  000704  0A01               	xorlw	1	; case 1
   975  000706  B4D8               	btfsc	status,2,c
   976  000708  D7AF               	goto	l2249
   977  00070A  0A03               	xorlw	3	; case 2
   978  00070C  B4D8               	btfsc	status,2,c
   979  00070E  D7CB               	goto	l114
   980  000710  0A01               	xorlw	1	; case 3
   981  000712  B4D8               	btfsc	status,2,c
   982  000714  D7CD               	goto	l2267
   983  000716  D77E               	goto	l2223
   984  000718                     __end_of_main_loop:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _zb_handle_setTempRaw *****************
   996 ;; Defined at:
   997 ;;		line 215 in file "zb_handle.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  tempRaw         2   22[COMRAM] unsigned int 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;		None               void
  1004 ;; Registers used:
  1005 ;;		wreg, status,2
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1011 ;;      Params:         2       0       0       0
  1012 ;;      Locals:         0       0       0       0
  1013 ;;      Temps:          0       0       0       0
  1014 ;;      Totals:         2       0       0       0
  1015 ;;Total ram usage:        2 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main_loop
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text3
  1026  000DBC                     __ptext3:
  1027                           	opt stack 0
  1028  000DBC                     _zb_handle_setTempRaw:
  1029                           	opt stack 28
  1030                           
  1031                           ;zb_handle.c: 217: sensor_data.tempRaw = tempRaw;
  1032                           
  1033                           ;incstack = 0
  1034  000DBC  C05C  F001         	movff	zb_handle_setTempRaw@tempRaw,_sensor_data
  1035  000DC0  C05D  F002         	movff	zb_handle_setTempRaw@tempRaw+1,_sensor_data+1
  1036                           
  1037                           ;zb_handle.c: 218: sensor_data.tempStatus = (0x03);
  1038  000DC4  0E03               	movlw	3
  1039  000DC6  6E03               	movwf	_sensor_data+2,c
  1040  000DC8  0012               	return	
  1041  000DCA                     __end_of_zb_handle_setTempRaw:
  1042                           	opt stack 0
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           intcon	equ	0xFF2
  1048                           postinc0	equ	0xFEE
  1049                           wreg	equ	0xFE8
  1050                           status	equ	0xFD8
  1051                           
  1052 ;; *************** function _zb_handle_setHumidityRaw *****************
  1053 ;; Defined at:
  1054 ;;		line 221 in file "zb_handle.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  humidityRaw     2   20[COMRAM] unsigned int 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;		None               void
  1061 ;; Registers used:
  1062 ;;		wreg, status,2
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1068 ;;      Params:         2       0       0       0
  1069 ;;      Locals:         0       0       0       0
  1070 ;;      Temps:          0       0       0       0
  1071 ;;      Totals:         2       0       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main_loop
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text4
  1083  000DCA                     __ptext4:
  1084                           	opt stack 0
  1085  000DCA                     _zb_handle_setHumidityRaw:
  1086                           	opt stack 28
  1087                           
  1088                           ;zb_handle.c: 223: sensor_data.humidityRaw = humidityRaw;
  1089                           
  1090                           ;incstack = 0
  1091  000DCA  C05A  F004         	movff	zb_handle_setHumidityRaw@humidityRaw,_sensor_data+3
  1092  000DCE  C05B  F005         	movff	zb_handle_setHumidityRaw@humidityRaw+1,_sensor_data+4
  1093                           
  1094                           ;zb_handle.c: 224: sensor_data.humidityStatus = (0x03);
  1095  000DD2  0E03               	movlw	3
  1096  000DD4  6E06               	movwf	_sensor_data+5,c
  1097  000DD6  0012               	return	
  1098  000DD8                     __end_of_zb_handle_setHumidityRaw:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           intcon	equ	0xFF2
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           status	equ	0xFD8
  1108                           
  1109 ;; *************** function _zb_handle_sendData *****************
  1110 ;; Defined at:
  1111 ;;		line 193 in file "zb_handle.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  frameSize       1   31[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;		None               void
  1118 ;; Registers used:
  1119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1125 ;;      Params:         0       0       0       0
  1126 ;;      Locals:         1       0       0       0
  1127 ;;      Temps:          3       0       0       0
  1128 ;;      Totals:         4       0       0       0
  1129 ;;Total ram usage:        4 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    3
  1132 ;; This function calls:
  1133 ;;		_memcpy
  1134 ;;		_uart_write
  1135 ;;		_zigbee_appendChecksum
  1136 ;; This function is called by:
  1137 ;;		_main_loop
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text5
  1142  00094C                     __ptext5:
  1143                           	opt stack 0
  1144  00094C                     _zb_handle_sendData:
  1145                           	opt stack 26
  1146                           
  1147                           ;zb_handle.c: 195: memcpy(zb_frameToSend, frameData, sizeof(frameData));
  1148                           
  1149                           ;incstack = 0
  1150  00094C  0E00               	movlw	high _zb_frameToSend
  1151  00094E  6E57               	movwf	memcpy@d1+1,c
  1152  000950  0E20               	movlw	low _zb_frameToSend
  1153  000952  6E56               	movwf	memcpy@d1,c
  1154  000954  0E03               	movlw	high _frameData
  1155  000956  6E59               	movwf	memcpy@s1+1,c
  1156  000958  0E01               	movlw	low _frameData
  1157  00095A  6E58               	movwf	memcpy@s1,c
  1158  00095C  0E00               	movlw	0
  1159  00095E  6E5B               	movwf	memcpy@n+1,c
  1160  000960  0E20               	movlw	32
  1161  000962  6E5A               	movwf	memcpy@n,c
  1162  000964  EC9A  F005         	call	_memcpy	;wreg free
  1163                           
  1164                           ;zb_handle.c: 196: zb_frameToSend[(4)] = 0;
  1165  000968  0E00               	movlw	0
  1166  00096A  6E24               	movwf	_zb_frameToSend+4,c
  1167                           
  1168                           ;zb_handle.c: 197: zb_frameToSend[(18)] = zb_counter++;
  1169  00096C  C01E  F032         	movff	_zb_counter,_zb_frameToSend+18
  1170  000970  2A1E               	incf	_zb_counter,f,c
  1171                           
  1172                           ;zb_handle.c: 198: zb_frameToSend[(21)] = sensor_data.tempStatus;
  1173  000972  C003  F035         	movff	_sensor_data+2,_zb_frameToSend+21
  1174                           
  1175                           ;zb_handle.c: 199: zb_frameToSend[(22)] = sensor_data.tempRaw >> 8;
  1176  000976  C002  F062         	movff	_sensor_data+1,??_zb_handle_sendData
  1177  00097A  C062  F063         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  1178  00097E  6A64               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  1179  000980  5063               	movf	??_zb_handle_sendData+1,w,c
  1180  000982  6E36               	movwf	_zb_frameToSend+22,c
  1181                           
  1182                           ;zb_handle.c: 200: zb_frameToSend[(22) + 1] = sensor_data.tempRaw;
  1183  000984  C001  F037         	movff	_sensor_data,_zb_frameToSend+23
  1184                           
  1185                           ;zb_handle.c: 201: zb_frameToSend[(25)] = sensor_data.humidityStatus;
  1186  000988  C006  F039         	movff	_sensor_data+5,_zb_frameToSend+25
  1187                           
  1188                           ;zb_handle.c: 202: zb_frameToSend[(26)] = sensor_data.humidityRaw >> 8;
  1189  00098C  C005  F062         	movff	_sensor_data+4,??_zb_handle_sendData
  1190  000990  C062  F063         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  1191  000994  6A64               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  1192  000996  5063               	movf	??_zb_handle_sendData+1,w,c
  1193  000998  6E3A               	movwf	_zb_frameToSend+26,c
  1194                           
  1195                           ;zb_handle.c: 203: zb_frameToSend[(26) + 1] = sensor_data.humidityRaw;
  1196  00099A  C004  F03B         	movff	_sensor_data+3,_zb_frameToSend+27
  1197                           
  1198                           ;zb_handle.c: 204: zb_frameToSend[(29)] = sensor_data.battStatus;
  1199  00099E  C009  F03D         	movff	_sensor_data+8,_zb_frameToSend+29
  1200                           
  1201                           ;zb_handle.c: 205: zb_frameToSend[(30)] = sensor_data.battRaw >> 8;
  1202  0009A2  C008  F062         	movff	_sensor_data+7,??_zb_handle_sendData
  1203  0009A6  C062  F063         	movff	??_zb_handle_sendData,??_zb_handle_sendData+1
  1204  0009AA  6A64               	clrf	(??_zb_handle_sendData+2)& (0+255),c
  1205  0009AC  5063               	movf	??_zb_handle_sendData+1,w,c
  1206  0009AE  6E3E               	movwf	_zb_frameToSend+30,c
  1207                           
  1208                           ;zb_handle.c: 206: zb_frameToSend[(30) + 1] = sensor_data.battRaw;
  1209  0009B0  C007  F03F         	movff	_sensor_data+6,_zb_frameToSend+31
  1210                           
  1211                           ;zb_handle.c: 207: zb_frameToSend[(1)] = ((sizeof(frameData) - (3)) & 0xFF00) >> 8;
  1212  0009B4  0E00               	movlw	0
  1213  0009B6  6E21               	movwf	_zb_frameToSend+1,c
  1214                           
  1215                           ;zb_handle.c: 208: zb_frameToSend[(1) + 1] = ((sizeof(frameData) - (3)) & 0x00FF);
  1216  0009B8  0E1D               	movlw	29
  1217  0009BA  6E22               	movwf	_zb_frameToSend+2,c
  1218                           
  1219                           ;zb_handle.c: 210: uint8_t frameSize = sizeof(frameData);
  1220  0009BC  0E20               	movlw	32
  1221  0009BE  6E65               	movwf	zb_handle_sendData@frameSize,c
  1222                           
  1223                           ;zb_handle.c: 211: zigbee_appendChecksum(zb_frameToSend, &frameSize);
  1224  0009C0  0E00               	movlw	high _zb_frameToSend
  1225  0009C2  6E5C               	movwf	zigbee_appendChecksum@buffer+1,c
  1226  0009C4  0E20               	movlw	low _zb_frameToSend
  1227  0009C6  6E5B               	movwf	zigbee_appendChecksum@buffer,c
  1228  0009C8  0E00               	movlw	high zb_handle_sendData@frameSize
  1229  0009CA  6E5E               	movwf	zigbee_appendChecksum@sizeFrame+1,c
  1230  0009CC  0E65               	movlw	low zb_handle_sendData@frameSize
  1231  0009CE  6E5D               	movwf	zigbee_appendChecksum@sizeFrame,c
  1232  0009D0  EC22  F005         	call	_zigbee_appendChecksum	;wreg free
  1233                           
  1234                           ;zb_handle.c: 212: uart_write(frameSize, zb_frameToSend);
  1235  0009D4  0E00               	movlw	high _zb_frameToSend
  1236  0009D6  6E57               	movwf	uart_write@buffer+1,c
  1237  0009D8  0E20               	movlw	low _zb_frameToSend
  1238  0009DA  6E56               	movwf	uart_write@buffer,c
  1239  0009DC  5065               	movf	zb_handle_sendData@frameSize,w,c
  1240  0009DE  ECDC  F005         	call	_uart_write
  1241  0009E2  0012               	return	
  1242  0009E4                     __end_of_zb_handle_sendData:
  1243                           	opt stack 0
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           intcon	equ	0xFF2
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           status	equ	0xFD8
  1252                           
  1253 ;; *************** function _zigbee_appendChecksum *****************
  1254 ;; Defined at:
  1255 ;;		line 240 in file "zb_handle.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  buffer          2   21[COMRAM] PTR unsigned char 
  1258 ;;		 -> zb_frameToSend(38), 
  1259 ;;  sizeFrame       2   23[COMRAM] PTR unsigned char 
  1260 ;;		 -> zb_handle_sendData@frameSize(1), 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;		None               void
  1265 ;; Registers used:
  1266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1272 ;;      Params:         4       0       0       0
  1273 ;;      Locals:         0       0       0       0
  1274 ;;      Temps:          3       0       0       0
  1275 ;;      Totals:         7       0       0       0
  1276 ;;Total ram usage:        7 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    2
  1279 ;; This function calls:
  1280 ;;		_zb_doChecksum
  1281 ;; This function is called by:
  1282 ;;		_zb_handle_sendData
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text6
  1287  000A44                     __ptext6:
  1288                           	opt stack 0
  1289  000A44                     _zigbee_appendChecksum:
  1290                           	opt stack 26
  1291                           
  1292                           ;zb_handle.c: 242: buffer[*sizeFrame] = zb_doChecksum(&buffer[(3)], &buffer[*sizeFrame] 
      +                          - &buffer[(3)]);
  1293                           
  1294                           ;incstack = 0
  1295  000A44  0E03               	movlw	3
  1296  000A46  245B               	addwf	zigbee_appendChecksum@buffer,w,c
  1297  000A48  6E56               	movwf	zb_doChecksum@frame,c
  1298  000A4A  0E00               	movlw	0
  1299  000A4C  205C               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  1300  000A4E  6E57               	movwf	zb_doChecksum@frame+1,c
  1301  000A50  505B               	movf	zigbee_appendChecksum@buffer,w,c
  1302  000A52  0F03               	addlw	3
  1303  000A54  0800               	sublw	0
  1304  000A56  6E5F               	movwf	??_zigbee_appendChecksum& (0+255),c
  1305  000A58  C05D  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  1306  000A5C  C05E  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  1307  000A60  50DF               	movf	indf2,w,c
  1308  000A62  0D01               	mullw	1
  1309  000A64  50F3               	movf	prodl,w,c
  1310  000A66  245F               	addwf	??_zigbee_appendChecksum,w,c
  1311  000A68  245B               	addwf	zigbee_appendChecksum@buffer,w,c
  1312  000A6A  6E58               	movwf	zb_doChecksum@size,c
  1313  000A6C  EC2B  F006         	call	_zb_doChecksum	;wreg free
  1314  000A70  6E60               	movwf	(??_zigbee_appendChecksum+1)& (0+255),c
  1315  000A72  C05D  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  1316  000A76  C05E  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  1317  000A7A  50DF               	movf	indf2,w,c
  1318  000A7C  6E61               	movwf	(??_zigbee_appendChecksum+2)& (0+255),c
  1319  000A7E  5061               	movf	??_zigbee_appendChecksum+2,w,c
  1320  000A80  0D01               	mullw	1
  1321  000A82  50F3               	movf	prodl,w,c
  1322  000A84  245B               	addwf	zigbee_appendChecksum@buffer,w,c
  1323  000A86  6ED9               	movwf	fsr2l,c
  1324  000A88  50F4               	movf	prodh,w,c
  1325  000A8A  205C               	addwfc	zigbee_appendChecksum@buffer+1,w,c
  1326  000A8C  6EDA               	movwf	fsr2h,c
  1327  000A8E  C060  FFDF         	movff	??_zigbee_appendChecksum+1,indf2
  1328                           
  1329                           ;zb_handle.c: 243: (*sizeFrame)++;
  1330  000A92  C05D  FFD9         	movff	zigbee_appendChecksum@sizeFrame,fsr2l
  1331  000A96  C05E  FFDA         	movff	zigbee_appendChecksum@sizeFrame+1,fsr2h
  1332  000A9A  2ADF               	incf	indf2,f,c
  1333  000A9C  0012               	return	
  1334  000A9E                     __end_of_zigbee_appendChecksum:
  1335                           	opt stack 0
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           prodh	equ	0xFF4
  1341                           prodl	equ	0xFF3
  1342                           intcon	equ	0xFF2
  1343                           postinc0	equ	0xFEE
  1344                           wreg	equ	0xFE8
  1345                           indf2	equ	0xFDF
  1346                           fsr2h	equ	0xFDA
  1347                           fsr2l	equ	0xFD9
  1348                           status	equ	0xFD8
  1349                           
  1350 ;; *************** function _uart_write *****************
  1351 ;; Defined at:
  1352 ;;		line 28 in file "uart.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  size            1    wreg     unsigned char 
  1355 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  1356 ;;		 -> zb_frameToSend(38), 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  size            1   20[COMRAM] unsigned char 
  1359 ;;  b               2   18[COMRAM] PTR unsigned char 
  1360 ;;		 -> zb_frameToSend(38), 
  1361 ;;  i               1   21[COMRAM] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;		None               void
  1364 ;; Registers used:
  1365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1371 ;;      Params:         2       0       0       0
  1372 ;;      Locals:         4       0       0       0
  1373 ;;      Temps:          0       0       0       0
  1374 ;;      Totals:         6       0       0       0
  1375 ;;Total ram usage:        6 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_zb_handle_sendData
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text7
  1386  000BB8                     __ptext7:
  1387                           	opt stack 0
  1388  000BB8                     _uart_write:
  1389                           	opt stack 27
  1390                           
  1391                           ;incstack = 0
  1392                           ;uart_write@size stored from wreg
  1393  000BB8  6E5A               	movwf	uart_write@size,c
  1394                           
  1395                           ;uart.c: 30: uint8_t i;
  1396                           ;uart.c: 31: uint8_t* b;
  1397                           ;uart.c: 33: b = buffer;
  1398  000BBA  C057  F059         	movff	uart_write@buffer+1,uart_write@b+1
  1399  000BBE  C056  F058         	movff	uart_write@buffer,uart_write@b
  1400                           
  1401                           ;uart.c: 34: for (i = 0; i < size; i++)
  1402  000BC2  0E00               	movlw	0
  1403  000BC4  6E5B               	movwf	uart_write@i,c
  1404  000BC6  D00F               	goto	l1127
  1405  000BC8                     l1123:
  1406                           
  1407                           ;uart.c: 35: {
  1408                           ;uart.c: 36: TXREG = buffer[i];
  1409  000BC8  505B               	movf	uart_write@i,w,c
  1410  000BCA  0D01               	mullw	1
  1411  000BCC  50F3               	movf	prodl,w,c
  1412  000BCE  2456               	addwf	uart_write@buffer,w,c
  1413  000BD0  6ED9               	movwf	fsr2l,c
  1414  000BD2  50F4               	movf	prodh,w,c
  1415  000BD4  2057               	addwfc	uart_write@buffer+1,w,c
  1416  000BD6  6EDA               	movwf	fsr2h,c
  1417  000BD8  50DF               	movf	indf2,w,c
  1418  000BDA  6EAD               	movwf	4013,c	;volatile
  1419  000BDC                     l239:
  1420  000BDC  A2AC               	btfss	4012,1,c	;volatile
  1421  000BDE  D7FE               	goto	l239
  1422                           
  1423                           ;uart.c: 39: b++;
  1424  000BE0  4A58               	infsnz	uart_write@b,f,c
  1425  000BE2  2A59               	incf	uart_write@b+1,f,c
  1426  000BE4  2A5B               	incf	uart_write@i,f,c
  1427  000BE6                     l1127:
  1428  000BE6  505A               	movf	uart_write@size,w,c
  1429  000BE8  5C5B               	subwf	uart_write@i,w,c
  1430  000BEA  A0D8               	btfss	status,0,c
  1431  000BEC  D7ED               	goto	l1123
  1432                           
  1433                           ;uart.c: 40: }
  1434                           ;uart.c: 41: __nop();
  1435  000BEE  F000               	nop	
  1436  000BF0  0012               	return	
  1437  000BF2                     __end_of_uart_write:
  1438                           	opt stack 0
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           prodh	equ	0xFF4
  1444                           prodl	equ	0xFF3
  1445                           intcon	equ	0xFF2
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           indf2	equ	0xFDF
  1449                           fsr2h	equ	0xFDA
  1450                           fsr2l	equ	0xFD9
  1451                           status	equ	0xFD8
  1452                           
  1453 ;; *************** function _memcpy *****************
  1454 ;; Defined at:
  1455 ;;		line 11 in file "/opt/microchip/xc8/v1.33/sources/common/memcpy.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  d1              2   16[COMRAM] PTR void 
  1458 ;;		 -> zb_frameToSend(38), 
  1459 ;;  s1              2   18[COMRAM] PTR const void 
  1460 ;;		 -> frameData(32), 
  1461 ;;  n               2   20[COMRAM] unsigned int 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  s               2   24[COMRAM] PTR const unsigned char 
  1464 ;;		 -> frameData(32), 
  1465 ;;  d               2   22[COMRAM] PTR unsigned char 
  1466 ;;		 -> zb_frameToSend(38), 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2   16[COMRAM] PTR void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1476 ;;      Params:         6       0       0       0
  1477 ;;      Locals:         4       0       0       0
  1478 ;;      Temps:          0       0       0       0
  1479 ;;      Totals:        10       0       0       0
  1480 ;;Total ram usage:       10 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_zb_handle_sendData
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text8
  1491  000B34                     __ptext8:
  1492                           	opt stack 0
  1493  000B34                     _memcpy:
  1494                           	opt stack 27
  1495                           
  1496                           ;incstack = 0
  1497  000B34  C059  F05F         	movff	memcpy@s1+1,memcpy@s+1
  1498  000B38  C058  F05E         	movff	memcpy@s1,memcpy@s
  1499  000B3C  C057  F05D         	movff	memcpy@d1+1,memcpy@d+1
  1500  000B40  C056  F05C         	movff	memcpy@d1,memcpy@d
  1501  000B44  D00F               	goto	l1201
  1502  000B46                     l1195:
  1503  000B46  C05E  FFF6         	movff	memcpy@s,tblptrl
  1504  000B4A  C05F  FFF7         	movff	memcpy@s+1,tblptrh
  1505  000B4E                     	if	0	;tblptru may be non-zero
  1506  000B4E                     	endif
  1507  000B4E                     	if	0	;tblptru may be non-zero
  1508  000B4E                     	endif
  1509  000B4E  C05C  FFD9         	movff	memcpy@d,fsr2l
  1510  000B52  C05D  FFDA         	movff	memcpy@d+1,fsr2h
  1511  000B56  0008               	tblrd		*
  1512  000B58  CFF5 FFDF          	movff	tablat,indf2
  1513  000B5C  4A5E               	infsnz	memcpy@s,f,c
  1514  000B5E  2A5F               	incf	memcpy@s+1,f,c
  1515  000B60  4A5C               	infsnz	memcpy@d,f,c
  1516  000B62  2A5D               	incf	memcpy@d+1,f,c
  1517  000B64                     l1201:
  1518  000B64  065A               	decf	memcpy@n,f,c
  1519  000B66  A0D8               	btfss	status,0,c
  1520  000B68  065B               	decf	memcpy@n+1,f,c
  1521  000B6A  285A               	incf	memcpy@n& (0+255),w,c
  1522  000B6C  B4D8               	btfsc	status,2,c
  1523  000B6E  285B               	incf	(memcpy@n+1)& (0+255),w,c
  1524  000B70  B4D8               	btfsc	status,2,c
  1525                           
  1526                           ;	Return value of _memcpy is never used
  1527  000B72  0012               	return	
  1528  000B74  D7E8               	goto	l1195
  1529  000B76                     __end_of_memcpy:
  1530                           	opt stack 0
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           prodh	equ	0xFF4
  1536                           prodl	equ	0xFF3
  1537                           intcon	equ	0xFF2
  1538                           postinc0	equ	0xFEE
  1539                           wreg	equ	0xFE8
  1540                           indf2	equ	0xFDF
  1541                           fsr2h	equ	0xFDA
  1542                           fsr2l	equ	0xFD9
  1543                           status	equ	0xFD8
  1544                           
  1545 ;; *************** function _zb_handle_resetStatus *****************
  1546 ;; Defined at:
  1547 ;;		line 233 in file "zb_handle.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;		None               void
  1554 ;; Registers used:
  1555 ;;		wreg, status,2
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1561 ;;      Params:         0       0       0       0
  1562 ;;      Locals:         0       0       0       0
  1563 ;;      Temps:          0       0       0       0
  1564 ;;      Totals:         0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_main_loop
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text9
  1576  000DD8                     __ptext9:
  1577                           	opt stack 0
  1578  000DD8                     _zb_handle_resetStatus:
  1579                           	opt stack 28
  1580                           
  1581                           ;zb_handle.c: 235: sensor_data.battStatus = (0x00);
  1582                           
  1583                           ;incstack = 0
  1584  000DD8  0E00               	movlw	0
  1585  000DDA  6E09               	movwf	_sensor_data+8,c
  1586                           
  1587                           ;zb_handle.c: 236: sensor_data.humidityStatus = (0x00);
  1588  000DDC  0E00               	movlw	0
  1589  000DDE  6E06               	movwf	_sensor_data+5,c
  1590                           
  1591                           ;zb_handle.c: 237: sensor_data.tempStatus = (0x00);
  1592  000DE0  0E00               	movlw	0
  1593  000DE2  6E03               	movwf	_sensor_data+2,c
  1594  000DE4  0012               	return	
  1595  000DE6                     __end_of_zb_handle_resetStatus:
  1596                           	opt stack 0
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           prodh	equ	0xFF4
  1602                           prodl	equ	0xFF3
  1603                           intcon	equ	0xFF2
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           indf2	equ	0xFDF
  1607                           fsr2h	equ	0xFDA
  1608                           fsr2l	equ	0xFD9
  1609                           status	equ	0xFD8
  1610                           
  1611 ;; *************** function _zb_handle_getStatus *****************
  1612 ;; Defined at:
  1613 ;;		line 16 in file "zb_handle.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      enum E3761
  1620 ;; Registers used:
  1621 ;;		wreg, status,2
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1627 ;;      Params:         0       0       0       0
  1628 ;;      Locals:         0       0       0       0
  1629 ;;      Temps:          0       0       0       0
  1630 ;;      Totals:         0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_main_loop
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text10
  1642  000E08                     __ptext10:
  1643                           	opt stack 0
  1644  000E08                     _zb_handle_getStatus:
  1645                           	opt stack 28
  1646                           
  1647                           ;zb_handle.c: 18: return zb_status;
  1648                           
  1649                           ;incstack = 0
  1650  000E08  501F               	movf	_zb_status,w,c
  1651  000E0A  0012               	return	
  1652  000E0C                     __end_of_zb_handle_getStatus:
  1653                           	opt stack 0
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           prodh	equ	0xFF4
  1659                           prodl	equ	0xFF3
  1660                           intcon	equ	0xFF2
  1661                           postinc0	equ	0xFEE
  1662                           wreg	equ	0xFE8
  1663                           indf2	equ	0xFDF
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _zb_handle *****************
  1669 ;; Defined at:
  1670 ;;		line 21 in file "zb_handle.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  decodedFrame    8    3[BANK0 ] struct .
  1675 ;;  sizeOfNextDa    2    0[BANK0 ] unsigned int 
  1676 ;;  bSuccess        1    2[BANK0 ] enum E3212
  1677 ;; Return value:  Size  Location     Type
  1678 ;;		None               void
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1686 ;;      Params:         0       0       0       0
  1687 ;;      Locals:         0      11       0       0
  1688 ;;      Temps:          0       0       0       0
  1689 ;;      Totals:         0      11       0       0
  1690 ;;Total ram usage:       11 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    3
  1693 ;; This function calls:
  1694 ;;		_uart_read
  1695 ;;		_zb_decodage
  1696 ;; This function is called by:
  1697 ;;		_main_loop
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text11
  1702  000718                     __ptext11:
  1703                           	opt stack 0
  1704  000718                     _zb_handle:
  1705                           	opt stack 26
  1706                           
  1707                           ;zb_handle.c: 23: BOOL bSuccess;
  1708                           ;zb_handle.c: 24: uint16_t sizeOfNextData;
  1709                           ;zb_handle.c: 25: zigbee_decodedFrame decodedFrame;
  1710                           ;zb_handle.c: 27: bSuccess = uart_read(zb_frameReceived, (3));
  1711                           
  1712                           ;incstack = 0
  1713  000718  0100               	movlb	0	; () banked
  1714  00071A  0E00               	movlw	high _zb_frameReceived
  1715  00071C  6E57               	movwf	uart_read@buffer+1,c
  1716  00071E  0100               	movlb	0	; () banked
  1717  000720  0EB2               	movlw	low _zb_frameReceived
  1718  000722  6E56               	movwf	uart_read@buffer,c
  1719  000724  0E03               	movlw	3
  1720  000726  6E58               	movwf	uart_read@nbToRead,c
  1721  000728  ECF2  F004         	call	_uart_read	;wreg free
  1722  00072C  0100               	movlb	0	; () banked
  1723  00072E  6FE6               	movwf	zb_handle@bSuccess& (0+255),b
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;zb_handle.c: 28: if (bSuccess)
  1727  000730  0100               	movlb	0	; () banked
  1728  000732  51E6               	movf	zb_handle@bSuccess& (0+255),w,b
  1729  000734  B4D8               	btfsc	status,2,c
  1730  000736  D024               	goto	l295
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;zb_handle.c: 29: {
  1734                           ;zb_handle.c: 30: if (zb_frameReceived[0] == (0x7E))
  1735  000738  0100               	movlb	0	; () banked
  1736  00073A  51B2               	movf	_zb_frameReceived& (0+255),w,b
  1737  00073C  0A7E               	xorlw	126
  1738  00073E  A4D8               	btfss	status,2,c
  1739  000740  D01C               	goto	l2165
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;zb_handle.c: 31: {
  1743                           ;zb_handle.c: 32: sizeOfNextData = (((uint16_t) zb_frameReceived[1]) << 8) | (zb_frameRe
      +                          ceived[2]);
  1744  000742  0100               	movlb	0	; () banked
  1745  000744  51B3               	movf	(_zb_frameReceived+1)& (0+255),w,b
  1746  000746  0100               	movlb	0	; () banked
  1747  000748  6FE5               	movwf	(zb_handle@sizeOfNextData+1)& (0+255),b
  1748  00074A  0100               	movlb	0	; () banked
  1749  00074C  51B4               	movf	(_zb_frameReceived+2)& (0+255),w,b
  1750  00074E  0100               	movlb	0	; () banked
  1751  000750  6FE4               	movwf	zb_handle@sizeOfNextData& (0+255),b
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;zb_handle.c: 33: if (sizeOfNextData <= ((50) - (3)))
  1755  000752  0E30               	movlw	48
  1756  000754  0100               	movlb	0	; () banked
  1757  000756  5DE4               	subwf	zb_handle@sizeOfNextData& (0+255),w,b
  1758  000758  0E00               	movlw	0
  1759  00075A  0100               	movlb	0	; () banked
  1760  00075C  59E5               	subwfb	(zb_handle@sizeOfNextData+1)& (0+255),w,b
  1761  00075E  B0D8               	btfsc	status,0,c
  1762  000760  D00C               	goto	l2165
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;zb_handle.c: 34: {
  1766                           ;zb_handle.c: 35: bSuccess = uart_read(zb_frameReceived + (3), sizeOfNextData + 1);
  1767  000762  0100               	movlb	0	; () banked
  1768  000764  0E00               	movlw	high (_zb_frameReceived+3)
  1769  000766  6E57               	movwf	uart_read@buffer+1,c
  1770  000768  0100               	movlb	0	; () banked
  1771  00076A  0EB5               	movlw	low (_zb_frameReceived+3)
  1772  00076C  6E56               	movwf	uart_read@buffer,c
  1773  00076E  0100               	movlb	0	; () banked
  1774  000770  29E4               	incf	zb_handle@sizeOfNextData& (0+255),w,b
  1775  000772  6E58               	movwf	uart_read@nbToRead,c
  1776  000774  ECF2  F004         	call	_uart_read	;wreg free
  1777  000778  D001               	goto	L5
  1778  00077A                     l2165:
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;zb_handle.c: 42: else
  1782                           ;zb_handle.c: 43: {
  1783                           ;zb_handle.c: 44: bSuccess = FALSE;
  1784  00077A  0E00               	movlw	0
  1785  00077C                     L5:
  1786  00077C  0100               	movlb	0	; () banked
  1787  00077E  6FE6               	movwf	zb_handle@bSuccess& (0+255),b
  1788  000780                     l295:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;zb_handle.c: 45: }
  1792                           ;zb_handle.c: 46: }
  1793                           ;zb_handle.c: 48: if (bSuccess)
  1794  000780  0100               	movlb	0	; () banked
  1795  000782  51E6               	movf	zb_handle@bSuccess& (0+255),w,b
  1796  000784  B4D8               	btfsc	status,2,c
  1797  000786  D013               	goto	l2169
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;zb_handle.c: 49: {
  1801                           ;zb_handle.c: 50: bSuccess = zb_decodage(zb_frameReceived + (3), sizeOfNextData + 1, &de
      +                          codedFrame);
  1802  000788  0100               	movlb	0	; () banked
  1803  00078A  0E00               	movlw	high (_zb_frameReceived+3)
  1804  00078C  6E5C               	movwf	zb_decodage@frame+1,c
  1805  00078E  0100               	movlb	0	; () banked
  1806  000790  0EB5               	movlw	low (_zb_frameReceived+3)
  1807  000792  6E5B               	movwf	zb_decodage@frame,c
  1808  000794  0100               	movlb	0	; () banked
  1809  000796  29E4               	incf	zb_handle@sizeOfNextData& (0+255),w,b
  1810  000798  6E5D               	movwf	zb_decodage@frameSize,c
  1811  00079A  0100               	movlb	0	; () banked
  1812  00079C  0E00               	movlw	high zb_handle@decodedFrame
  1813  00079E  6E5F               	movwf	zb_decodage@decodedFrame+1,c
  1814  0007A0  0100               	movlb	0	; () banked
  1815  0007A2  0EE7               	movlw	low zb_handle@decodedFrame
  1816  0007A4  6E5E               	movwf	zb_decodage@decodedFrame,c
  1817  0007A6  EC91  F001         	call	_zb_decodage	;wreg free
  1818  0007AA  0100               	movlb	0	; () banked
  1819  0007AC  6FE6               	movwf	zb_handle@bSuccess& (0+255),b
  1820  0007AE                     l2169:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;zb_handle.c: 51: }
  1824                           ;zb_handle.c: 53: if (bSuccess)
  1825  0007AE  0100               	movlb	0	; () banked
  1826  0007B0  51E6               	movf	zb_handle@bSuccess& (0+255),w,b
  1827  0007B2  A4D8               	btfss	status,2,c
  1828  0007B4  D00B               	goto	l2181
  1829  0007B6  D01B               	goto	l313
  1830  0007B8                     l2173:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;zb_handle.c: 67: if (decodedFrame.status == 0x02)
  1834  0007B8  0100               	movlb	0	; () banked
  1835  0007BA  51E8               	movf	(zb_handle@decodedFrame+1)& (0+255),w,b
  1836  0007BC  0A02               	xorlw	2
  1837  0007BE  A4D8               	btfss	status,2,c
  1838  0007C0  D002               	goto	l2177
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;zb_handle.c: 68: {
  1842                           ;zb_handle.c: 69: zb_status = ZB_STATUS_JOINED;
  1843  0007C2  0E01               	movlw	1
  1844  0007C4  D001               	goto	L4
  1845  0007C6                     l2177:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;zb_handle.c: 72: else
  1849                           ;zb_handle.c: 73: {
  1850                           ;zb_handle.c: 74: zb_status = ZB_STATUS_NOT_JOINED;
  1851  0007C6  0E00               	movlw	0
  1852  0007C8                     L4:
  1853  0007C8  6E1F               	movwf	_zb_status,c
  1854  0007CA  D011               	goto	l313
  1855  0007CC                     l2181:
  1856                           
  1857                           ; BSR set to: 0
  1858  0007CC  0100               	movlb	0	; () banked
  1859  0007CE  51E7               	movf	zb_handle@decodedFrame& (0+255),w,b
  1860                           
  1861                           ; Switch size 1, requested type "space"
  1862                           ; Number of cases is 6, Range of values is 8 to 144
  1863                           ; switch strategies available:
  1864                           ; Name         Instructions Cycles
  1865                           ; simple_byte           19    10 (average)
  1866                           ;	Chosen strategy is simple_byte
  1867  0007D0  0A08               	xorlw	8	; case 8
  1868  0007D2  B4D8               	btfsc	status,2,c
  1869  0007D4  D00C               	goto	l313
  1870  0007D6  0A18               	xorlw	24	; case 16
  1871  0007D8  B4D8               	btfsc	status,2,c
  1872  0007DA  D009               	goto	l313
  1873  0007DC  0A98               	xorlw	152	; case 136
  1874  0007DE  B4D8               	btfsc	status,2,c
  1875  0007E0  D006               	goto	l313
  1876  0007E2  0A02               	xorlw	2	; case 138
  1877  0007E4  B4D8               	btfsc	status,2,c
  1878  0007E6  D7E8               	goto	l2173
  1879  0007E8  0A01               	xorlw	1	; case 139
  1880  0007EA  A4D8               	btfss	status,2,c
  1881  0007EC  0A1B               	xorlw	27	; case 144
  1882  0007EE                     l313:
  1883                           
  1884                           ; BSR set to: 0
  1885  0007EE  0012               	return	
  1886  0007F0                     __end_of_zb_handle:
  1887                           	opt stack 0
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           prodh	equ	0xFF4
  1893                           prodl	equ	0xFF3
  1894                           intcon	equ	0xFF2
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           indf2	equ	0xFDF
  1898                           fsr2h	equ	0xFDA
  1899                           fsr2l	equ	0xFD9
  1900                           status	equ	0xFD8
  1901                           
  1902 ;; *************** function _zb_decodage *****************
  1903 ;; Defined at:
  1904 ;;		line 22 in file "zb.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  frame           2   21[COMRAM] PTR unsigned char 
  1907 ;;		 -> zb_frameReceived(50), 
  1908 ;;  frameSize       1   23[COMRAM] unsigned char 
  1909 ;;  decodedFrame    2   24[COMRAM] PTR struct .
  1910 ;;		 -> zb_handle@decodedFrame(8), 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  bCorrectlyDe    1   31[COMRAM] enum E3083
  1913 ;;  checksum        1   30[COMRAM] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      enum E3083
  1916 ;; Registers used:
  1917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1923 ;;      Params:         5       0       0       0
  1924 ;;      Locals:         2       0       0       0
  1925 ;;      Temps:          4       0       0       0
  1926 ;;      Totals:        11       0       0       0
  1927 ;;Total ram usage:       11 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    2
  1930 ;; This function calls:
  1931 ;;		_zb_doChecksum
  1932 ;; This function is called by:
  1933 ;;		_zb_handle
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text12
  1938  000322                     __ptext12:
  1939                           	opt stack 0
  1940  000322                     _zb_decodage:
  1941                           	opt stack 26
  1942                           
  1943                           ;zb.c: 24: BOOL bCorrectlyDecoded;
  1944                           ;zb.c: 25: uint8_t checksum;
  1945                           ;zb.c: 26: bCorrectlyDecoded = FALSE;
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;incstack = 0
  1949  000322  0E00               	movlw	0
  1950  000324  6E65               	movwf	zb_decodage@bCorrectlyDecoded,c
  1951                           
  1952                           ;zb.c: 28: if (frameSize >= 1)
  1953  000326  505D               	movf	zb_decodage@frameSize,w,c
  1954  000328  B4D8               	btfsc	status,2,c
  1955  00032A  D022               	goto	l261
  1956                           
  1957                           ;zb.c: 29: {
  1958                           ;zb.c: 30: checksum = zb_doChecksum(frame, frameSize - 1);
  1959  00032C  C05C  F057         	movff	zb_decodage@frame+1,zb_doChecksum@frame+1
  1960  000330  C05B  F056         	movff	zb_decodage@frame,zb_doChecksum@frame
  1961  000334  045D               	decf	zb_decodage@frameSize,w,c
  1962  000336  6E58               	movwf	zb_doChecksum@size,c
  1963  000338  EC2B  F006         	call	_zb_doChecksum	;wreg free
  1964  00033C  6E64               	movwf	zb_decodage@checksum,c
  1965                           
  1966                           ;zb.c: 31: if (checksum != frame[frameSize - 1])
  1967  00033E  0EFF               	movlw	255
  1968  000340  6E60               	movwf	??_zb_decodage& (0+255),c
  1969  000342  0EFF               	movlw	255
  1970  000344  6E61               	movwf	(??_zb_decodage+1)& (0+255),c
  1971  000346  505D               	movf	zb_decodage@frameSize,w,c
  1972  000348  6E62               	movwf	(??_zb_decodage+2)& (0+255),c
  1973  00034A  6A63               	clrf	(??_zb_decodage+3)& (0+255),c
  1974  00034C  5060               	movf	??_zb_decodage,w,c
  1975  00034E  2662               	addwf	??_zb_decodage+2,f,c
  1976  000350  5061               	movf	??_zb_decodage+1,w,c
  1977  000352  2263               	addwfc	??_zb_decodage+3,f,c
  1978  000354  5062               	movf	??_zb_decodage+2,w,c
  1979  000356  245B               	addwf	zb_decodage@frame,w,c
  1980  000358  6ED9               	movwf	fsr2l,c
  1981  00035A  5063               	movf	??_zb_decodage+3,w,c
  1982  00035C  205C               	addwfc	zb_decodage@frame+1,w,c
  1983  00035E  6EDA               	movwf	fsr2h,c
  1984  000360  50DF               	movf	indf2,w,c
  1985  000362  1864               	xorwf	zb_decodage@checksum,w,c
  1986  000364  B4D8               	btfsc	status,2,c
  1987  000366  D002               	goto	l2117
  1988                           
  1989                           ;zb.c: 32: {
  1990                           ;zb.c: 34: bCorrectlyDecoded = FALSE;
  1991  000368  0E00               	movlw	0
  1992  00036A  D001               	goto	L6
  1993  00036C                     l2117:
  1994                           
  1995                           ;zb.c: 36: else
  1996                           ;zb.c: 37: {
  1997                           ;zb.c: 38: bCorrectlyDecoded = TRUE;
  1998  00036C  0E01               	movlw	1
  1999  00036E                     L6:
  2000  00036E  6E65               	movwf	zb_decodage@bCorrectlyDecoded,c
  2001  000370                     l261:
  2002                           
  2003                           ;zb.c: 39: }
  2004                           ;zb.c: 40: }
  2005                           ;zb.c: 42: if (bCorrectlyDecoded)
  2006  000370  5065               	movf	zb_decodage@bCorrectlyDecoded,w,c
  2007  000372  B4D8               	btfsc	status,2,c
  2008  000374  D0A2               	goto	l2143
  2009                           
  2010                           ;zb.c: 43: {
  2011                           ;zb.c: 44: decodedFrame->type = frame[0];
  2012  000376  C05B  FFD9         	movff	zb_decodage@frame,fsr2l
  2013  00037A  C05C  FFDA         	movff	zb_decodage@frame+1,fsr2h
  2014  00037E  C05E  FFE1         	movff	zb_decodage@decodedFrame,fsr1l
  2015  000382  C05F  FFE2         	movff	zb_decodage@decodedFrame+1,fsr1h
  2016  000386  CFDF FFE7          	movff	indf2,indf1
  2017                           
  2018                           ;zb.c: 45: switch (frame[0])
  2019  00038A  D088               	goto	l2141
  2020  00038C                     l2121:
  2021                           
  2022                           ;zb.c: 48: decodedFrame->frameID = frame[1];
  2023  00038C  EE20 F001          	lfsr	2,1
  2024  000390  505B               	movf	zb_decodage@frame,w,c
  2025  000392  26D9               	addwf	fsr2l,f,c
  2026  000394  505C               	movf	zb_decodage@frame+1,w,c
  2027  000396  22DA               	addwfc	fsr2h,f,c
  2028  000398  EE10 F007          	lfsr	1,7
  2029  00039C  505E               	movf	zb_decodage@decodedFrame,w,c
  2030  00039E  26E1               	addwf	fsr1l,f,c
  2031  0003A0  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2032  0003A2  22E2               	addwfc	fsr1h,f,c
  2033  0003A4  CFDF FFE7          	movff	indf2,indf1
  2034                           
  2035                           ;zb.c: 49: decodedFrame->AT[0] = frame[2];
  2036  0003A8  EE20 F002          	lfsr	2,2
  2037  0003AC  505B               	movf	zb_decodage@frame,w,c
  2038  0003AE  26D9               	addwf	fsr2l,f,c
  2039  0003B0  505C               	movf	zb_decodage@frame+1,w,c
  2040  0003B2  22DA               	addwfc	fsr2h,f,c
  2041  0003B4  EE10 F002          	lfsr	1,2
  2042  0003B8  505E               	movf	zb_decodage@decodedFrame,w,c
  2043  0003BA  26E1               	addwf	fsr1l,f,c
  2044  0003BC  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2045  0003BE  22E2               	addwfc	fsr1h,f,c
  2046  0003C0  CFDF FFE7          	movff	indf2,indf1
  2047                           
  2048                           ;zb.c: 50: decodedFrame->AT[1] = frame[3];
  2049  0003C4  EE20 F003          	lfsr	2,3
  2050  0003C8  505B               	movf	zb_decodage@frame,w,c
  2051  0003CA  26D9               	addwf	fsr2l,f,c
  2052  0003CC  505C               	movf	zb_decodage@frame+1,w,c
  2053  0003CE  22DA               	addwfc	fsr2h,f,c
  2054  0003D0  EE10 F003          	lfsr	1,3
  2055  0003D4  505E               	movf	zb_decodage@decodedFrame,w,c
  2056  0003D6  26E1               	addwf	fsr1l,f,c
  2057  0003D8  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2058  0003DA  22E2               	addwfc	fsr1h,f,c
  2059  0003DC  CFDF FFE7          	movff	indf2,indf1
  2060                           
  2061                           ;zb.c: 51: decodedFrame->status = frame[4];
  2062  0003E0  EE20 F004          	lfsr	2,4
  2063  0003E4  505B               	movf	zb_decodage@frame,w,c
  2064  0003E6  26D9               	addwf	fsr2l,f,c
  2065  0003E8  505C               	movf	zb_decodage@frame+1,w,c
  2066  0003EA  22DA               	addwfc	fsr2h,f,c
  2067  0003EC  EE10 F001          	lfsr	1,1
  2068  0003F0  505E               	movf	zb_decodage@decodedFrame,w,c
  2069  0003F2  26E1               	addwf	fsr1l,f,c
  2070  0003F4  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2071  0003F6  22E2               	addwfc	fsr1h,f,c
  2072  0003F8  CFDF FFE7          	movff	indf2,indf1
  2073                           
  2074                           ;zb.c: 52: decodedFrame->size = frameSize - 6;
  2075  0003FC  EE20 F006          	lfsr	2,6
  2076  000400  505E               	movf	zb_decodage@decodedFrame,w,c
  2077  000402  26D9               	addwf	fsr2l,f,c
  2078  000404  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2079  000406  22DA               	addwfc	fsr2h,f,c
  2080  000408  505D               	movf	zb_decodage@frameSize,w,c
  2081  00040A  0FFA               	addlw	250
  2082  00040C  6EDF               	movwf	indf2,c
  2083                           
  2084                           ;zb.c: 53: if (decodedFrame->size == 0)
  2085  00040E  EE20 F006          	lfsr	2,6
  2086  000412  505E               	movf	zb_decodage@decodedFrame,w,c
  2087  000414  26D9               	addwf	fsr2l,f,c
  2088  000416  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2089  000418  22DA               	addwfc	fsr2h,f,c
  2090  00041A  50DF               	movf	indf2,w,c
  2091  00041C  A4D8               	btfss	status,2,c
  2092  00041E  D00B               	goto	l2129
  2093                           
  2094                           ;zb.c: 54: {
  2095                           ;zb.c: 55: decodedFrame->data = (0);
  2096  000420  EE20 F004          	lfsr	2,4
  2097  000424  505E               	movf	zb_decodage@decodedFrame,w,c
  2098  000426  26D9               	addwf	fsr2l,f,c
  2099  000428  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2100  00042A  22DA               	addwfc	fsr2h,f,c
  2101  00042C  0E00               	movlw	0
  2102  00042E  6EDE               	movwf	postinc2,c
  2103  000430  0E00               	movlw	0
  2104  000432  6EDD               	movwf	postdec2,c
  2105                           
  2106                           ;zb.c: 56: }
  2107  000434  D042               	goto	l2143
  2108  000436                     l2129:
  2109                           
  2110                           ;zb.c: 57: else
  2111                           ;zb.c: 58: {
  2112                           ;zb.c: 59: decodedFrame->data = &frame[5];
  2113  000436  0E05               	movlw	5
  2114  000438  245B               	addwf	zb_decodage@frame,w,c
  2115  00043A  6E60               	movwf	??_zb_decodage& (0+255),c
  2116  00043C  0E00               	movlw	0
  2117  00043E  205C               	addwfc	zb_decodage@frame+1,w,c
  2118  000440  6E61               	movwf	(??_zb_decodage+1)& (0+255),c
  2119  000442  EE20 F004          	lfsr	2,4
  2120  000446  505E               	movf	zb_decodage@decodedFrame,w,c
  2121  000448  26D9               	addwf	fsr2l,f,c
  2122  00044A  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2123  00044C  22DA               	addwfc	fsr2h,f,c
  2124  00044E  C060  FFDE         	movff	??_zb_decodage,postinc2
  2125  000452  C061  FFDD         	movff	??_zb_decodage+1,postdec2
  2126  000456  D031               	goto	l2143
  2127  000458                     l2131:
  2128                           
  2129                           ;zb.c: 64: decodedFrame->status = frame[1];
  2130  000458  EE20 F001          	lfsr	2,1
  2131  00045C  505B               	movf	zb_decodage@frame,w,c
  2132  00045E  26D9               	addwf	fsr2l,f,c
  2133  000460  505C               	movf	zb_decodage@frame+1,w,c
  2134  000462  22DA               	addwfc	fsr2h,f,c
  2135  000464  EE10 F001          	lfsr	1,1
  2136  000468  505E               	movf	zb_decodage@decodedFrame,w,c
  2137  00046A  26E1               	addwf	fsr1l,f,c
  2138  00046C  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2139  00046E  22E2               	addwfc	fsr1h,f,c
  2140  000470  CFDF FFE7          	movff	indf2,indf1
  2141                           
  2142                           ;zb.c: 65: bCorrectlyDecoded = TRUE;
  2143  000474  0E01               	movlw	1
  2144  000476  D010               	goto	L7
  2145  000478                     l2135:
  2146                           
  2147                           ;zb.c: 69: decodedFrame->status = frame[5];
  2148  000478  EE20 F005          	lfsr	2,5
  2149  00047C  505B               	movf	zb_decodage@frame,w,c
  2150  00047E  26D9               	addwf	fsr2l,f,c
  2151  000480  505C               	movf	zb_decodage@frame+1,w,c
  2152  000482  22DA               	addwfc	fsr2h,f,c
  2153  000484  EE10 F001          	lfsr	1,1
  2154  000488  505E               	movf	zb_decodage@decodedFrame,w,c
  2155  00048A  26E1               	addwf	fsr1l,f,c
  2156  00048C  505F               	movf	zb_decodage@decodedFrame+1,w,c
  2157  00048E  22E2               	addwfc	fsr1h,f,c
  2158  000490  CFDF FFE7          	movff	indf2,indf1
  2159                           
  2160                           ;zb.c: 70: break;
  2161  000494  D012               	goto	l2143
  2162  000496                     l2137:
  2163                           
  2164                           ;zb.c: 73: bCorrectlyDecoded = FALSE;
  2165  000496  0E00               	movlw	0
  2166  000498                     L7:
  2167  000498  6E65               	movwf	zb_decodage@bCorrectlyDecoded,c
  2168                           
  2169                           ;zb.c: 74: break;
  2170  00049A  D00F               	goto	l2143
  2171  00049C                     l2141:
  2172  00049C  C05B  FFD9         	movff	zb_decodage@frame,fsr2l
  2173  0004A0  C05C  FFDA         	movff	zb_decodage@frame+1,fsr2h
  2174  0004A4  50DF               	movf	indf2,w,c
  2175                           
  2176                           ; Switch size 1, requested type "space"
  2177                           ; Number of cases is 3, Range of values is 136 to 139
  2178                           ; switch strategies available:
  2179                           ; Name         Instructions Cycles
  2180                           ; simple_byte           10     6 (average)
  2181                           ;	Chosen strategy is simple_byte
  2182  0004A6  0A88               	xorlw	136	; case 136
  2183  0004A8  B4D8               	btfsc	status,2,c
  2184  0004AA  D770               	goto	l2121
  2185  0004AC  0A02               	xorlw	2	; case 138
  2186  0004AE  B4D8               	btfsc	status,2,c
  2187  0004B0  D7D3               	goto	l2131
  2188  0004B2  0A01               	xorlw	1	; case 139
  2189  0004B4  B4D8               	btfsc	status,2,c
  2190  0004B6  D7E0               	goto	l2135
  2191  0004B8  D7EE               	goto	l2137
  2192  0004BA                     l2143:
  2193                           
  2194                           ;zb.c: 76: }
  2195                           ;zb.c: 78: return bCorrectlyDecoded;
  2196  0004BA  5065               	movf	zb_decodage@bCorrectlyDecoded,w,c
  2197  0004BC  0012               	return	
  2198  0004BE                     __end_of_zb_decodage:
  2199                           	opt stack 0
  2200                           tblptru	equ	0xFF8
  2201                           tblptrh	equ	0xFF7
  2202                           tblptrl	equ	0xFF6
  2203                           tablat	equ	0xFF5
  2204                           prodh	equ	0xFF4
  2205                           prodl	equ	0xFF3
  2206                           intcon	equ	0xFF2
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           indf1	equ	0xFE7
  2210                           fsr1h	equ	0xFE2
  2211                           fsr1l	equ	0xFE1
  2212                           indf2	equ	0xFDF
  2213                           postinc2	equ	0xFDE
  2214                           postdec2	equ	0xFDD
  2215                           fsr2h	equ	0xFDA
  2216                           fsr2l	equ	0xFD9
  2217                           status	equ	0xFD8
  2218                           
  2219 ;; *************** function _zb_doChecksum *****************
  2220 ;; Defined at:
  2221 ;;		line 9 in file "zb.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  frame           2   16[COMRAM] PTR unsigned char 
  2224 ;;		 -> zb_frameToSend(38), zb_frameReceived(50), 
  2225 ;;  size            1   18[COMRAM] unsigned char 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  i               1   20[COMRAM] unsigned char 
  2228 ;;  checksum        1   19[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      unsigned char 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2238 ;;      Params:         3       0       0       0
  2239 ;;      Locals:         2       0       0       0
  2240 ;;      Temps:          0       0       0       0
  2241 ;;      Totals:         5       0       0       0
  2242 ;;Total ram usage:        5 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_zb_decodage
  2249 ;;		_zigbee_appendChecksum
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text13
  2254  000C56                     __ptext13:
  2255                           	opt stack 0
  2256  000C56                     _zb_doChecksum:
  2257                           	opt stack 26
  2258                           
  2259                           ;zb.c: 11: uint8_t checksum;
  2260                           ;zb.c: 13: checksum = 0xFF;
  2261                           
  2262                           ;incstack = 0
  2263  000C56  6859               	setf	zb_doChecksum@checksum,c
  2264                           
  2265                           ;zb.c: 14: for (uint8_t i = 0; i < size; i++)
  2266  000C58  0E00               	movlw	0
  2267  000C5A  6E5A               	movwf	zb_doChecksum@i,c
  2268  000C5C  D00B               	goto	l2077
  2269  000C5E                     l2073:
  2270                           
  2271                           ;zb.c: 15: {
  2272                           ;zb.c: 16: checksum -= frame[i];
  2273  000C5E  505A               	movf	zb_doChecksum@i,w,c
  2274  000C60  0D01               	mullw	1
  2275  000C62  50F3               	movf	prodl,w,c
  2276  000C64  2456               	addwf	zb_doChecksum@frame,w,c
  2277  000C66  6ED9               	movwf	fsr2l,c
  2278  000C68  50F4               	movf	prodh,w,c
  2279  000C6A  2057               	addwfc	zb_doChecksum@frame+1,w,c
  2280  000C6C  6EDA               	movwf	fsr2h,c
  2281  000C6E  50DF               	movf	indf2,w,c
  2282  000C70  5E59               	subwf	zb_doChecksum@checksum,f,c
  2283  000C72  2A5A               	incf	zb_doChecksum@i,f,c
  2284  000C74                     l2077:
  2285  000C74  5058               	movf	zb_doChecksum@size,w,c
  2286  000C76  5C5A               	subwf	zb_doChecksum@i,w,c
  2287  000C78  A0D8               	btfss	status,0,c
  2288  000C7A  D7F1               	goto	l2073
  2289                           
  2290                           ;zb.c: 17: }
  2291                           ;zb.c: 19: return checksum;
  2292  000C7C  5059               	movf	zb_doChecksum@checksum,w,c
  2293  000C7E  0012               	return	
  2294  000C80                     __end_of_zb_doChecksum:
  2295                           	opt stack 0
  2296                           tblptru	equ	0xFF8
  2297                           tblptrh	equ	0xFF7
  2298                           tblptrl	equ	0xFF6
  2299                           tablat	equ	0xFF5
  2300                           prodh	equ	0xFF4
  2301                           prodl	equ	0xFF3
  2302                           intcon	equ	0xFF2
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           indf1	equ	0xFE7
  2306                           fsr1h	equ	0xFE2
  2307                           fsr1l	equ	0xFE1
  2308                           indf2	equ	0xFDF
  2309                           postinc2	equ	0xFDE
  2310                           postdec2	equ	0xFDD
  2311                           fsr2h	equ	0xFDA
  2312                           fsr2l	equ	0xFD9
  2313                           status	equ	0xFD8
  2314                           
  2315 ;; *************** function _uart_read *****************
  2316 ;; Defined at:
  2317 ;;		line 45 in file "uart.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  buffer          2   16[COMRAM] PTR unsigned char 
  2320 ;;		 -> zb_frameReceived(50), 
  2321 ;;  nbToRead        1   18[COMRAM] unsigned char 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  b               2   19[COMRAM] PTR unsigned char 
  2324 ;;		 -> zb_frameReceived(50), 
  2325 ;;  i               1   22[COMRAM] unsigned char 
  2326 ;;  expectedNbRe    1   21[COMRAM] enum E3083
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      enum E3083
  2329 ;; Registers used:
  2330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2336 ;;      Params:         3       0       0       0
  2337 ;;      Locals:         4       0       0       0
  2338 ;;      Temps:          0       0       0       0
  2339 ;;      Totals:         7       0       0       0
  2340 ;;Total ram usage:        7 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_zb_handle
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text14
  2351  0009E4                     __ptext14:
  2352                           	opt stack 0
  2353  0009E4                     _uart_read:
  2354                           	opt stack 27
  2355                           
  2356                           ;uart.c: 47: BOOL expectedNbRead;
  2357                           ;uart.c: 48: uint8_t i;
  2358                           ;uart.c: 49: uint8_t* b;
  2359                           ;uart.c: 50: b = buffer;
  2360                           
  2361                           ;incstack = 0
  2362  0009E4  C057  F05A         	movff	uart_read@buffer+1,uart_read@b+1
  2363  0009E8  C056  F059         	movff	uart_read@buffer,uart_read@b
  2364                           
  2365                           ;uart.c: 52: if (nbToRead <= UART_rxBufferNb)
  2366  0009EC  5058               	movf	uart_read@nbToRead,w,c
  2367  0009EE  5C17               	subwf	_UART_rxBufferNb,w,c
  2368  0009F0  A0D8               	btfss	status,0,c
  2369  0009F2  D024               	goto	l2105
  2370                           
  2371                           ;uart.c: 53: {
  2372                           ;uart.c: 55: for (i = 0; i < nbToRead; i++)
  2373  0009F4  0E00               	movlw	0
  2374  0009F6  6E5C               	movwf	uart_read@i,c
  2375  0009F8  D019               	goto	l2099
  2376  0009FA                     l2087:
  2377                           
  2378                           ;uart.c: 56: {
  2379                           ;uart.c: 57: *b = UART_rxBuffer[UART_readIndex];
  2380  0009FA  5016               	movf	_UART_readIndex,w,c
  2381  0009FC  0D01               	mullw	1
  2382  0009FE  0100               	movlb	0	; () banked
  2383  000A00  0E80               	movlw	low _UART_rxBuffer
  2384  000A02  24F3               	addwf	prodl,w,c
  2385  000A04  6ED9               	movwf	fsr2l,c
  2386  000A06  0100               	movlb	0	; () banked
  2387  000A08  0E00               	movlw	high _UART_rxBuffer
  2388  000A0A  20F4               	addwfc	prodh,w,c
  2389  000A0C  6EDA               	movwf	fsr2h,c
  2390  000A0E  C059  FFE1         	movff	uart_read@b,fsr1l
  2391  000A12  C05A  FFE2         	movff	uart_read@b+1,fsr1h
  2392  000A16  CFDF FFE7          	movff	indf2,indf1
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;uart.c: 58: UART_readIndex++;
  2396  000A1A  2A16               	incf	_UART_readIndex,f,c
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;uart.c: 59: if (UART_readIndex >= (50))
  2400  000A1C  0E31               	movlw	49
  2401  000A1E  6416               	cpfsgt	_UART_readIndex,c
  2402  000A20  D002               	goto	l2095
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;uart.c: 60: {
  2406                           ;uart.c: 61: UART_readIndex = 0;
  2407  000A22  0E00               	movlw	0
  2408  000A24  6E16               	movwf	_UART_readIndex,c
  2409  000A26                     l2095:
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;uart.c: 62: }
  2413                           ;uart.c: 63: b++;
  2414  000A26  4A59               	infsnz	uart_read@b,f,c
  2415  000A28  2A5A               	incf	uart_read@b+1,f,c
  2416                           
  2417                           ; BSR set to: 0
  2418  000A2A  2A5C               	incf	uart_read@i,f,c
  2419  000A2C                     l2099:
  2420  000A2C  5058               	movf	uart_read@nbToRead,w,c
  2421  000A2E  5C5C               	subwf	uart_read@i,w,c
  2422  000A30  A0D8               	btfss	status,0,c
  2423  000A32  D7E3               	goto	l2087
  2424                           
  2425                           ;uart.c: 64: }
  2426                           ;uart.c: 65: UART_rxBufferNb -= nbToRead;
  2427  000A34  5058               	movf	uart_read@nbToRead,w,c
  2428  000A36  5E17               	subwf	_UART_rxBufferNb,f,c
  2429                           
  2430                           ;uart.c: 66: expectedNbRead = TRUE;
  2431  000A38  0E01               	movlw	1
  2432  000A3A  D001               	goto	L8
  2433  000A3C                     l2105:
  2434                           
  2435                           ;uart.c: 68: else
  2436                           ;uart.c: 69: {
  2437                           ;uart.c: 70: expectedNbRead = FALSE;
  2438  000A3C  0E00               	movlw	0
  2439  000A3E                     L8:
  2440  000A3E  6E5B               	movwf	uart_read@expectedNbRead,c
  2441                           
  2442                           ;uart.c: 71: }
  2443                           ;uart.c: 73: return expectedNbRead;
  2444  000A40  505B               	movf	uart_read@expectedNbRead,w,c
  2445  000A42  0012               	return	
  2446  000A44                     __end_of_uart_read:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           prodh	equ	0xFF4
  2453                           prodl	equ	0xFF3
  2454                           intcon	equ	0xFF2
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           indf1	equ	0xFE7
  2458                           fsr1h	equ	0xFE2
  2459                           fsr1l	equ	0xFE1
  2460                           indf2	equ	0xFDF
  2461                           postinc2	equ	0xFDE
  2462                           postdec2	equ	0xFDD
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _timer0_wait_65ms *****************
  2468 ;; Defined at:
  2469 ;;		line 11 in file "timer.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;		None               void
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2483 ;;      Params:         0       0       0       0
  2484 ;;      Locals:         0       0       0       0
  2485 ;;      Temps:          0       0       0       0
  2486 ;;      Totals:         0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    2
  2490 ;; This function calls:
  2491 ;;		_timer0_wait_ready
  2492 ;; This function is called by:
  2493 ;;		_main_loop
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text15
  2498  000CCA                     __ptext15:
  2499                           	opt stack 0
  2500  000CCA                     _timer0_wait_65ms:
  2501                           	opt stack 27
  2502                           
  2503                           ;timer.c: 13: TMR0 = 0;
  2504                           
  2505                           ;incstack = 0
  2506  000CCA  0E00               	movlw	0
  2507  000CCC  6ED7               	movwf	4055,c	;volatile
  2508  000CCE  0E00               	movlw	0
  2509  000CD0  6ED6               	movwf	4054,c	;volatile
  2510                           
  2511                           ;timer.c: 14: T0CON = 0x45;
  2512  000CD2  0E45               	movlw	69
  2513  000CD4  6ED5               	movwf	4053,c	;volatile
  2514                           
  2515                           ;timer.c: 15: INTCONbits.TMR0IF = 0;
  2516  000CD6  94F2               	bcf	intcon,2,c	;volatile
  2517                           
  2518                           ;timer.c: 16: INTCONbits.TMR0IE = 1;
  2519  000CD8  8AF2               	bsf	intcon,5,c	;volatile
  2520                           
  2521                           ;timer.c: 17: T0CONbits.TMR0ON = 1;
  2522  000CDA  8ED5               	bsf	4053,7,c	;volatile
  2523                           
  2524                           ;timer.c: 19: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2525  000CDC  8ED3               	bsf	4051,7,c	;volatile
  2526  000CDE  0003               	sleep		;# 
  2527  000CE0  9ED3               	bcf	4051,7,c	;volatile
  2528                           
  2529                           ;timer.c: 20: timer0_wait_ready();
  2530  000CE2  ECC4  F006         	call	_timer0_wait_ready	;wreg free
  2531                           
  2532                           ;timer.c: 22: T0CONbits.TMR0ON = 0;
  2533  000CE6  9ED5               	bcf	4053,7,c	;volatile
  2534                           
  2535                           ;timer.c: 23: INTCONbits.TMR0IE = 0;
  2536  000CE8  9AF2               	bcf	intcon,5,c	;volatile
  2537  000CEA  0012               	return	
  2538  000CEC                     __end_of_timer0_wait_65ms:
  2539                           	opt stack 0
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           prodh	equ	0xFF4
  2545                           prodl	equ	0xFF3
  2546                           intcon	equ	0xFF2
  2547                           postinc0	equ	0xFEE
  2548                           wreg	equ	0xFE8
  2549                           indf1	equ	0xFE7
  2550                           fsr1h	equ	0xFE2
  2551                           fsr1l	equ	0xFE1
  2552                           indf2	equ	0xFDF
  2553                           postinc2	equ	0xFDE
  2554                           postdec2	equ	0xFDD
  2555                           fsr2h	equ	0xFDA
  2556                           fsr2l	equ	0xFD9
  2557                           status	equ	0xFD8
  2558                           
  2559 ;; *************** function _timer0_wait_262ms *****************
  2560 ;; Defined at:
  2561 ;;		line 26 in file "timer.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;		None               void
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2575 ;;      Params:         0       0       0       0
  2576 ;;      Locals:         0       0       0       0
  2577 ;;      Temps:          0       0       0       0
  2578 ;;      Totals:         0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    2
  2582 ;; This function calls:
  2583 ;;		_timer0_wait_ready
  2584 ;; This function is called by:
  2585 ;;		_main_loop
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text16
  2590  000CEC                     __ptext16:
  2591                           	opt stack 0
  2592  000CEC                     _timer0_wait_262ms:
  2593                           	opt stack 27
  2594                           
  2595                           ;timer.c: 29: TMR0 = 0;
  2596                           
  2597                           ;incstack = 0
  2598  000CEC  0E00               	movlw	0
  2599  000CEE  6ED7               	movwf	4055,c	;volatile
  2600  000CF0  0E00               	movlw	0
  2601  000CF2  6ED6               	movwf	4054,c	;volatile
  2602                           
  2603                           ;timer.c: 30: T0CON = 0x47;
  2604  000CF4  0E47               	movlw	71
  2605  000CF6  6ED5               	movwf	4053,c	;volatile
  2606                           
  2607                           ;timer.c: 31: INTCONbits.TMR0IF = 0;
  2608  000CF8  94F2               	bcf	intcon,2,c	;volatile
  2609                           
  2610                           ;timer.c: 32: INTCONbits.TMR0IE = 1;
  2611  000CFA  8AF2               	bsf	intcon,5,c	;volatile
  2612                           
  2613                           ;timer.c: 33: T0CONbits.TMR0ON = 1;
  2614  000CFC  8ED5               	bsf	4053,7,c	;volatile
  2615                           
  2616                           ;timer.c: 34: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2617  000CFE  8ED3               	bsf	4051,7,c	;volatile
  2618  000D00  0003               	sleep		;# 
  2619  000D02  9ED3               	bcf	4051,7,c	;volatile
  2620                           
  2621                           ;timer.c: 35: timer0_wait_ready();
  2622  000D04  ECC4  F006         	call	_timer0_wait_ready	;wreg free
  2623                           
  2624                           ;timer.c: 36: T0CONbits.TMR0ON = 0;
  2625  000D08  9ED5               	bcf	4053,7,c	;volatile
  2626                           
  2627                           ;timer.c: 37: INTCONbits.TMR0IE = 0;
  2628  000D0A  9AF2               	bcf	intcon,5,c	;volatile
  2629  000D0C  0012               	return	
  2630  000D0E                     __end_of_timer0_wait_262ms:
  2631                           	opt stack 0
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           prodh	equ	0xFF4
  2637                           prodl	equ	0xFF3
  2638                           intcon	equ	0xFF2
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           indf1	equ	0xFE7
  2642                           fsr1h	equ	0xFE2
  2643                           fsr1l	equ	0xFE1
  2644                           indf2	equ	0xFDF
  2645                           postinc2	equ	0xFDE
  2646                           postdec2	equ	0xFDD
  2647                           fsr2h	equ	0xFDA
  2648                           fsr2l	equ	0xFD9
  2649                           status	equ	0xFD8
  2650                           
  2651 ;; *************** function _timer0_wait_ready *****************
  2652 ;; Defined at:
  2653 ;;		line 42 in file "timer.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;		None               void
  2660 ;; Registers used:
  2661 ;;		wreg, status,2
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2667 ;;      Params:         0       0       0       0
  2668 ;;      Locals:         0       0       0       0
  2669 ;;      Temps:          0       0       0       0
  2670 ;;      Totals:         0       0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_timer0_wait_65ms
  2678 ;;		_timer0_wait_262ms
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text17
  2683  000D88                     __ptext17:
  2684                           	opt stack 0
  2685  000D88                     _timer0_wait_ready:
  2686                           	opt stack 27
  2687                           
  2688                           ;incstack = 0
  2689                           ;timer.c: 44: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  2690  000D88  8ED3               	bsf	4051,7,c	;volatile
  2691  000D8A  0003               	sleep		;# 
  2692  000D8C  9ED3               	bcf	4051,7,c	;volatile
  2693  000D8E                     l1207:
  2694  000D8E  501C               	movf	_timer0_interupt_done,w,c
  2695  000D90  B4D8               	btfsc	status,2,c
  2696  000D92  D7FD               	goto	l1207
  2697                           
  2698                           ;timer.c: 48: timer0_interupt_done = FALSE;
  2699  000D94  0E00               	movlw	0
  2700  000D96  6E1C               	movwf	_timer0_interupt_done,c
  2701  000D98  0012               	return	
  2702  000D9A                     __end_of_timer0_wait_ready:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           prodh	equ	0xFF4
  2709                           prodl	equ	0xFF3
  2710                           intcon	equ	0xFF2
  2711                           postinc0	equ	0xFEE
  2712                           wreg	equ	0xFE8
  2713                           indf1	equ	0xFE7
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           indf2	equ	0xFDF
  2717                           postinc2	equ	0xFDE
  2718                           postdec2	equ	0xFDD
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _leds_yellow_glitch *****************
  2724 ;; Defined at:
  2725 ;;		line 28 in file "leds.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;		None               void
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2739 ;;      Params:         0       0       0       0
  2740 ;;      Locals:         0       0       0       0
  2741 ;;      Temps:          1       0       0       0
  2742 ;;      Totals:         1       0       0       0
  2743 ;;Total ram usage:        1 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    1
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_main_loop
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text18
  2754  000D46                     __ptext18:
  2755                           	opt stack 0
  2756  000D46                     _leds_yellow_glitch:
  2757                           	opt stack 28
  2758                           
  2759                           ;leds.c: 30: LATA |= (0x04);
  2760                           
  2761                           ;incstack = 0
  2762  000D46  8489               	bsf	3977,2,c	;volatile
  2763                           
  2764                           ;leds.c: 31: _delay((unsigned long)((100)*((1000000)/4000.0)));
  2765  000D48  0E21               	movlw	33
  2766  000D4A  6E56               	movwf	??_leds_yellow_glitch& (0+255),c
  2767  000D4C  0E76               	movlw	118
  2768  000D4E                     u1077:
  2769  000D4E  2EE8               	decfsz	wreg,f,c
  2770  000D50  D7FE               	goto	u1077
  2771  000D52  2E56               	decfsz	??_leds_yellow_glitch& (0+255),f,c
  2772  000D54  D7FC               	goto	u1077
  2773  000D56  D000               	nop2	
  2774                           
  2775                           ;leds.c: 32: LATA &= ~(0x04);
  2776  000D58  9489               	bcf	3977,2,c	;volatile
  2777  000D5A  0012               	return	
  2778  000D5C                     __end_of_leds_yellow_glitch:
  2779                           	opt stack 0
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           prodh	equ	0xFF4
  2785                           prodl	equ	0xFF3
  2786                           intcon	equ	0xFF2
  2787                           postinc0	equ	0xFEE
  2788                           wreg	equ	0xFE8
  2789                           indf1	equ	0xFE7
  2790                           fsr1h	equ	0xFE2
  2791                           fsr1l	equ	0xFE1
  2792                           indf2	equ	0xFDF
  2793                           postinc2	equ	0xFDE
  2794                           postdec2	equ	0xFDD
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function _leds_green_glitch *****************
  2800 ;; Defined at:
  2801 ;;		line 35 in file "leds.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;		None               void
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2815 ;;      Params:         0       0       0       0
  2816 ;;      Locals:         0       0       0       0
  2817 ;;      Temps:          1       0       0       0
  2818 ;;      Totals:         1       0       0       0
  2819 ;;Total ram usage:        1 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_main_loop
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text19
  2830  000D5C                     __ptext19:
  2831                           	opt stack 0
  2832  000D5C                     _leds_green_glitch:
  2833                           	opt stack 28
  2834                           
  2835                           ;leds.c: 37: LATA |= (0x10);
  2836                           
  2837                           ;incstack = 0
  2838  000D5C  8889               	bsf	3977,4,c	;volatile
  2839                           
  2840                           ;leds.c: 38: _delay((unsigned long)((100)*((1000000)/4000.0)));
  2841  000D5E  0E21               	movlw	33
  2842  000D60  6E56               	movwf	??_leds_green_glitch& (0+255),c
  2843  000D62  0E76               	movlw	118
  2844  000D64                     u1087:
  2845  000D64  2EE8               	decfsz	wreg,f,c
  2846  000D66  D7FE               	goto	u1087
  2847  000D68  2E56               	decfsz	??_leds_green_glitch& (0+255),f,c
  2848  000D6A  D7FC               	goto	u1087
  2849  000D6C  D000               	nop2	
  2850                           
  2851                           ;leds.c: 39: LATA &= ~(0x10);
  2852  000D6E  9889               	bcf	3977,4,c	;volatile
  2853  000D70  0012               	return	
  2854  000D72                     __end_of_leds_green_glitch:
  2855                           	opt stack 0
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           intcon	equ	0xFF2
  2863                           postinc0	equ	0xFEE
  2864                           wreg	equ	0xFE8
  2865                           indf1	equ	0xFE7
  2866                           fsr1h	equ	0xFE2
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _hyt221_operation *****************
  2876 ;; Defined at:
  2877 ;;		line 44 in file "hyt221.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  index           1   20[COMRAM] char 
  2882 ;;  bDeviceDataA    1   19[COMRAM] enum E3083
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      enum E3778
  2885 ;; Registers used:
  2886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2892 ;;      Params:         0       0       0       0
  2893 ;;      Locals:         2       0       0       0
  2894 ;;      Temps:          2       0       0       0
  2895 ;;      Totals:         4       0       0       0
  2896 ;;Total ram usage:        4 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    3
  2899 ;; This function calls:
  2900 ;;		_i2c_trig_start
  2901 ;;		_i2c_trig_stop
  2902 ;;		_i2c_wait_idle
  2903 ;;		_i2c_wait_ready
  2904 ;;		_leds_red_and_yellow_glitch
  2905 ;; This function is called by:
  2906 ;;		_main_loop
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text20
  2911  0008B0                     __ptext20:
  2912                           	opt stack 0
  2913  0008B0                     _hyt221_operation:
  2914                           	opt stack 26
  2915                           
  2916                           ;hyt221.c: 46: int8_t index;
  2917                           ;hyt221.c: 47: BOOL bDeviceDataAreStale;
  2918                           ;hyt221.c: 48: bDeviceDataAreStale = FALSE;
  2919                           
  2920                           ;incstack = 0
  2921  0008B0  0E00               	movlw	0
  2922  0008B2  6E59               	movwf	hyt221_operation@bDeviceDataAreStale,c
  2923                           
  2924                           ;hyt221.c: 51: i2c_trig_start();
  2925  0008B4  ECFA  F006         	call	_i2c_trig_start	;wreg free
  2926                           
  2927                           ;hyt221.c: 54: SSPBUF = (0x51);
  2928  0008B8  0E51               	movlw	81
  2929  0008BA  6EC9               	movwf	4041,c	;volatile
  2930                           
  2931                           ;hyt221.c: 55: i2c_wait_ready();
  2932  0008BC  ECCD  F006         	call	_i2c_wait_ready	;wreg free
  2933                           
  2934                           ;hyt221.c: 58: if (SSPCON2bits.ACKSTAT == 1)
  2935  0008C0  ACC5               	btfss	4037,6,c	;volatile
  2936  0008C2  D006               	goto	l1365
  2937                           
  2938                           ;hyt221.c: 59: {
  2939                           ;hyt221.c: 60: leds_red_and_yellow_glitch();
  2940  0008C4  EC96  F006         	call	_leds_red_and_yellow_glitch	;wreg free
  2941                           
  2942                           ;hyt221.c: 61: i2c_trig_stop();
  2943  0008C8  EC00  F007         	call	_i2c_trig_stop	;wreg free
  2944                           
  2945                           ;hyt221.c: 62: return STATUS_ERROR;
  2946  0008CC  0E01               	movlw	1
  2947  0008CE  D03D               	goto	l367
  2948  0008D0                     l1365:
  2949                           
  2950                           ;hyt221.c: 63: }
  2951                           ;hyt221.c: 65: index = 0;
  2952  0008D0  0E00               	movlw	0
  2953  0008D2  6E5A               	movwf	hyt221_operation@index,c
  2954                           
  2955                           ;hyt221.c: 66: while (index < 4)
  2956  0008D4  D02B               	goto	l1395
  2957  0008D6                     l1367:
  2958                           
  2959                           ;hyt221.c: 67: {
  2960                           ;hyt221.c: 68: i2c_wait_idle();
  2961  0008D6  ECD6  F006         	call	_i2c_wait_idle	;wreg free
  2962                           
  2963                           ;hyt221.c: 69: SSPCON2bits.RCEN = 1;
  2964  0008DA  86C5               	bsf	4037,3,c	;volatile
  2965                           
  2966                           ;hyt221.c: 71: i2c_wait_ready();
  2967  0008DC  ECCD  F006         	call	_i2c_wait_ready	;wreg free
  2968                           
  2969                           ;hyt221.c: 73: gData[index] = SSPBUF;
  2970  0008E0  505A               	movf	hyt221_operation@index,w,c
  2971  0008E2  0D01               	mullw	1
  2972  0008E4  0E0A               	movlw	low _gData
  2973  0008E6  24F3               	addwf	prodl,w,c
  2974  0008E8  6ED9               	movwf	fsr2l,c
  2975  0008EA  0E00               	movlw	high _gData
  2976  0008EC  20F4               	addwfc	prodh,w,c
  2977  0008EE  6EDA               	movwf	fsr2h,c
  2978  0008F0  CFC9 FFDF          	movff	4041,indf2	;volatile
  2979                           
  2980                           ;hyt221.c: 74: if (index == 0)
  2981  0008F4  665A               	tstfsz	hyt221_operation@index,c
  2982  0008F6  D00D               	goto	l1383
  2983                           
  2984                           ;hyt221.c: 75: {
  2985                           ;hyt221.c: 77: if ((gData[0] & 0x40) == 0x40)
  2986  0008F8  C00A  F057         	movff	_gData,??_hyt221_operation
  2987  0008FC  6A58               	clrf	(??_hyt221_operation+1)& (0+255),c
  2988  0008FE  BE57               	btfsc	??_hyt221_operation& (0+255),7,c
  2989  000900  0658               	decf	(??_hyt221_operation+1)& (0+255),f,c
  2990  000902  AC57               	btfss	??_hyt221_operation,6,c
  2991  000904  D00C               	goto	l374
  2992                           
  2993                           ;hyt221.c: 78: {
  2994                           ;hyt221.c: 80: SSPCON2bits.ACKDT = 1;
  2995  000906  8AC5               	bsf	4037,5,c	;volatile
  2996                           
  2997                           ;hyt221.c: 81: index = 3;
  2998  000908  0E03               	movlw	3
  2999  00090A  6E5A               	movwf	hyt221_operation@index,c
  3000                           
  3001                           ;hyt221.c: 82: bDeviceDataAreStale = TRUE;
  3002  00090C  0E01               	movlw	1
  3003  00090E  6E59               	movwf	hyt221_operation@bDeviceDataAreStale,c
  3004                           
  3005                           ;hyt221.c: 83: }
  3006  000910  D007               	goto	l1387
  3007  000912                     l1383:
  3008                           
  3009                           ;hyt221.c: 89: else if (index == 3)
  3010  000912  505A               	movf	hyt221_operation@index,w,c
  3011  000914  0A03               	xorlw	3
  3012  000916  A4D8               	btfss	status,2,c
  3013  000918  D002               	goto	l374
  3014                           
  3015                           ;hyt221.c: 90: {
  3016                           ;hyt221.c: 91: SSPCON2bits.ACKDT = 1;
  3017  00091A  8AC5               	bsf	4037,5,c	;volatile
  3018                           
  3019                           ;hyt221.c: 92: }
  3020  00091C  D001               	goto	l1387
  3021  00091E                     l374:
  3022                           
  3023                           ;hyt221.c: 93: else
  3024                           ;hyt221.c: 94: {
  3025                           ;hyt221.c: 95: SSPCON2bits.ACKDT = 0;
  3026  00091E  9AC5               	bcf	4037,5,c	;volatile
  3027  000920                     l1387:
  3028                           
  3029                           ;hyt221.c: 96: }
  3030                           ;hyt221.c: 98: i2c_wait_idle();
  3031  000920  ECD6  F006         	call	_i2c_wait_idle	;wreg free
  3032                           
  3033                           ;hyt221.c: 101: SSPCON2bits.ACKEN = 1;
  3034  000924  88C5               	bsf	4037,4,c	;volatile
  3035                           
  3036                           ;hyt221.c: 102: i2c_wait_ready();
  3037  000926  ECCD  F006         	call	_i2c_wait_ready	;wreg free
  3038                           
  3039                           ;hyt221.c: 103: index++;
  3040  00092A  2A5A               	incf	hyt221_operation@index,f,c
  3041  00092C                     l1395:
  3042  00092C  505A               	movf	hyt221_operation@index,w,c
  3043  00092E  0A80               	xorlw	128
  3044  000930  0F7C               	addlw	-132
  3045  000932  A0D8               	btfss	status,0,c
  3046  000934  D7D0               	goto	l1367
  3047                           
  3048                           ;hyt221.c: 104: }
  3049                           ;hyt221.c: 106: i2c_wait_idle();
  3050  000936  ECD6  F006         	call	_i2c_wait_idle	;wreg free
  3051                           
  3052                           ;hyt221.c: 107: i2c_trig_stop();
  3053  00093A  EC00  F007         	call	_i2c_trig_stop	;wreg free
  3054                           
  3055                           ;hyt221.c: 109: if (bDeviceDataAreStale == TRUE)
  3056  00093E  0459               	decf	hyt221_operation@bDeviceDataAreStale,w,c
  3057  000940  A4D8               	btfss	status,2,c
  3058  000942  D002               	goto	l1407
  3059                           
  3060                           ;hyt221.c: 110: {
  3061                           ;hyt221.c: 111: return STATUS_EBUSY;
  3062  000944  0E02               	movlw	2
  3063  000946  D001               	goto	l367
  3064  000948                     l1407:
  3065                           
  3066                           ;hyt221.c: 112: }
  3067                           ;hyt221.c: 114: return STATUS_OK;
  3068  000948  0E00               	movlw	0
  3069  00094A                     l367:
  3070  00094A  0012               	return	
  3071  00094C                     __end_of_hyt221_operation:
  3072                           	opt stack 0
  3073                           tblptru	equ	0xFF8
  3074                           tblptrh	equ	0xFF7
  3075                           tblptrl	equ	0xFF6
  3076                           tablat	equ	0xFF5
  3077                           prodh	equ	0xFF4
  3078                           prodl	equ	0xFF3
  3079                           intcon	equ	0xFF2
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           indf1	equ	0xFE7
  3083                           fsr1h	equ	0xFE2
  3084                           fsr1l	equ	0xFE1
  3085                           indf2	equ	0xFDF
  3086                           postinc2	equ	0xFDE
  3087                           postdec2	equ	0xFDD
  3088                           fsr2h	equ	0xFDA
  3089                           fsr2l	equ	0xFD9
  3090                           status	equ	0xFD8
  3091                           
  3092 ;; *************** function _hyt221_launch_acq *****************
  3093 ;; Defined at:
  3094 ;;		line 20 in file "hyt221.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      enum E3778
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3108 ;;      Params:         0       0       0       0
  3109 ;;      Locals:         0       0       0       0
  3110 ;;      Temps:          0       0       0       0
  3111 ;;      Totals:         0       0       0       0
  3112 ;;Total ram usage:        0 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		_i2c_trig_start
  3117 ;;		_i2c_trig_stop
  3118 ;;		_i2c_wait_idle
  3119 ;;		_i2c_wait_ready
  3120 ;;		_leds_red_and_yellow_glitch
  3121 ;; This function is called by:
  3122 ;;		_main_loop
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text21
  3127  000C80                     __ptext21:
  3128                           	opt stack 0
  3129  000C80                     _hyt221_launch_acq:
  3130                           	opt stack 26
  3131                           
  3132                           ;hyt221.c: 22: i2c_trig_start();
  3133                           
  3134                           ;incstack = 0
  3135  000C80  ECFA  F006         	call	_i2c_trig_start	;wreg free
  3136                           
  3137                           ;hyt221.c: 25: SSPBUF = (0x50);
  3138  000C84  0E50               	movlw	80
  3139  000C86  6EC9               	movwf	4041,c	;volatile
  3140                           
  3141                           ;hyt221.c: 27: i2c_wait_ready();
  3142  000C88  ECCD  F006         	call	_i2c_wait_ready	;wreg free
  3143                           
  3144                           ;hyt221.c: 31: if (SSPCON2bits.ACKSTAT == 1)
  3145  000C8C  ACC5               	btfss	4037,6,c	;volatile
  3146  000C8E  D004               	goto	l1319
  3147                           
  3148                           ;hyt221.c: 32: {
  3149                           ;hyt221.c: 33: leds_red_and_yellow_glitch();
  3150  000C90  EC96  F006         	call	_leds_red_and_yellow_glitch	;wreg free
  3151                           
  3152                           ;hyt221.c: 34: return STATUS_ERROR;
  3153  000C94  0E01               	movlw	1
  3154  000C96  D006               	goto	l363
  3155  000C98                     l1319:
  3156                           
  3157                           ;hyt221.c: 35: }
  3158                           ;hyt221.c: 37: i2c_wait_idle();
  3159  000C98  ECD6  F006         	call	_i2c_wait_idle	;wreg free
  3160                           
  3161                           ;hyt221.c: 38: i2c_trig_stop();
  3162  000C9C  EC00  F007         	call	_i2c_trig_stop	;wreg free
  3163                           
  3164                           ;hyt221.c: 39: __nop();
  3165  000CA0  F000               	nop	
  3166                           
  3167                           ;hyt221.c: 40: return STATUS_OK;
  3168  000CA2  0E00               	movlw	0
  3169  000CA4                     l363:
  3170  000CA4  0012               	return	
  3171  000CA6                     __end_of_hyt221_launch_acq:
  3172                           	opt stack 0
  3173                           tblptru	equ	0xFF8
  3174                           tblptrh	equ	0xFF7
  3175                           tblptrl	equ	0xFF6
  3176                           tablat	equ	0xFF5
  3177                           prodh	equ	0xFF4
  3178                           prodl	equ	0xFF3
  3179                           intcon	equ	0xFF2
  3180                           postinc0	equ	0xFEE
  3181                           wreg	equ	0xFE8
  3182                           indf1	equ	0xFE7
  3183                           fsr1h	equ	0xFE2
  3184                           fsr1l	equ	0xFE1
  3185                           indf2	equ	0xFDF
  3186                           postinc2	equ	0xFDE
  3187                           postdec2	equ	0xFDD
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _leds_red_and_yellow_glitch *****************
  3193 ;; Defined at:
  3194 ;;		line 43 in file "leds.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;		None               void
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3208 ;;      Params:         0       0       0       0
  3209 ;;      Locals:         0       0       0       0
  3210 ;;      Temps:          1       0       0       0
  3211 ;;      Totals:         1       0       0       0
  3212 ;;Total ram usage:        1 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    1
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_hyt221_launch_acq
  3219 ;;		_hyt221_operation
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text22
  3224  000D2C                     __ptext22:
  3225                           	opt stack 0
  3226  000D2C                     _leds_red_and_yellow_glitch:
  3227                           	opt stack 27
  3228                           
  3229                           ;leds.c: 45: LATA |= (0x08);
  3230                           
  3231                           ;incstack = 0
  3232  000D2C  8689               	bsf	3977,3,c	;volatile
  3233                           
  3234                           ;leds.c: 46: LATA |= (0x04);
  3235  000D2E  8489               	bsf	3977,2,c	;volatile
  3236                           
  3237                           ;leds.c: 47: _delay((unsigned long)((100)*((1000000)/4000.0)));
  3238  000D30  0E21               	movlw	33
  3239  000D32  6E56               	movwf	??_leds_red_and_yellow_glitch& (0+255),c
  3240  000D34  0E76               	movlw	118
  3241  000D36                     u1097:
  3242  000D36  2EE8               	decfsz	wreg,f,c
  3243  000D38  D7FE               	goto	u1097
  3244  000D3A  2E56               	decfsz	??_leds_red_and_yellow_glitch& (0+255),f,c
  3245  000D3C  D7FC               	goto	u1097
  3246  000D3E  D000               	nop2	
  3247                           
  3248                           ;leds.c: 48: LATA &= ~(0x08);
  3249  000D40  9689               	bcf	3977,3,c	;volatile
  3250                           
  3251                           ;leds.c: 49: LATA &= ~(0x04);
  3252  000D42  9489               	bcf	3977,2,c	;volatile
  3253  000D44  0012               	return	
  3254  000D46                     __end_of_leds_red_and_yellow_glitch:
  3255                           	opt stack 0
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           prodh	equ	0xFF4
  3261                           prodl	equ	0xFF3
  3262                           intcon	equ	0xFF2
  3263                           postinc0	equ	0xFEE
  3264                           wreg	equ	0xFE8
  3265                           indf1	equ	0xFE7
  3266                           fsr1h	equ	0xFE2
  3267                           fsr1l	equ	0xFE1
  3268                           indf2	equ	0xFDF
  3269                           postinc2	equ	0xFDE
  3270                           postdec2	equ	0xFDD
  3271                           fsr2h	equ	0xFDA
  3272                           fsr2l	equ	0xFD9
  3273                           status	equ	0xFD8
  3274                           
  3275 ;; *************** function _i2c_trig_stop *****************
  3276 ;; Defined at:
  3277 ;;		line 61 in file "i2c.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3291 ;;      Params:         0       0       0       0
  3292 ;;      Locals:         0       0       0       0
  3293 ;;      Temps:          0       0       0       0
  3294 ;;      Totals:         0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    2
  3298 ;; This function calls:
  3299 ;;		_i2c_wait_ready
  3300 ;; This function is called by:
  3301 ;;		_hyt221_launch_acq
  3302 ;;		_hyt221_operation
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text23
  3307  000E00                     __ptext23:
  3308                           	opt stack 0
  3309  000E00                     _i2c_trig_stop:
  3310                           	opt stack 26
  3311                           
  3312                           ;i2c.c: 64: SSPCON2bits.PEN = 1;
  3313                           
  3314                           ;incstack = 0
  3315  000E00  84C5               	bsf	4037,2,c	;volatile
  3316                           
  3317                           ;i2c.c: 65: i2c_wait_ready();
  3318  000E02  ECCD  F006         	call	_i2c_wait_ready	;wreg free
  3319  000E06  0012               	return	
  3320  000E08                     __end_of_i2c_trig_stop:
  3321                           	opt stack 0
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           prodh	equ	0xFF4
  3327                           prodl	equ	0xFF3
  3328                           intcon	equ	0xFF2
  3329                           postinc0	equ	0xFEE
  3330                           wreg	equ	0xFE8
  3331                           indf1	equ	0xFE7
  3332                           fsr1h	equ	0xFE2
  3333                           fsr1l	equ	0xFE1
  3334                           indf2	equ	0xFDF
  3335                           postinc2	equ	0xFDE
  3336                           postdec2	equ	0xFDD
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8
  3340                           
  3341 ;; *************** function _i2c_trig_start *****************
  3342 ;; Defined at:
  3343 ;;		line 53 in file "i2c.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;		None               void
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3357 ;;      Params:         0       0       0       0
  3358 ;;      Locals:         0       0       0       0
  3359 ;;      Temps:          0       0       0       0
  3360 ;;      Totals:         0       0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    2
  3364 ;; This function calls:
  3365 ;;		_i2c_wait_idle
  3366 ;;		_i2c_wait_ready
  3367 ;; This function is called by:
  3368 ;;		_hyt221_launch_acq
  3369 ;;		_hyt221_operation
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text24
  3374  000DF4                     __ptext24:
  3375                           	opt stack 0
  3376  000DF4                     _i2c_trig_start:
  3377                           	opt stack 26
  3378                           
  3379                           ;i2c.c: 55: i2c_wait_idle();
  3380                           
  3381                           ;incstack = 0
  3382  000DF4  ECD6  F006         	call	_i2c_wait_idle	;wreg free
  3383                           
  3384                           ;i2c.c: 57: SSPCON2bits.SEN = 1;
  3385  000DF8  80C5               	bsf	4037,0,c	;volatile
  3386                           
  3387                           ;i2c.c: 58: i2c_wait_ready();
  3388  000DFA  ECCD  F006         	call	_i2c_wait_ready	;wreg free
  3389  000DFE  0012               	return	
  3390  000E00                     __end_of_i2c_trig_start:
  3391                           	opt stack 0
  3392                           tblptru	equ	0xFF8
  3393                           tblptrh	equ	0xFF7
  3394                           tblptrl	equ	0xFF6
  3395                           tablat	equ	0xFF5
  3396                           prodh	equ	0xFF4
  3397                           prodl	equ	0xFF3
  3398                           intcon	equ	0xFF2
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           indf1	equ	0xFE7
  3402                           fsr1h	equ	0xFE2
  3403                           fsr1l	equ	0xFE1
  3404                           indf2	equ	0xFDF
  3405                           postinc2	equ	0xFDE
  3406                           postdec2	equ	0xFDD
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _i2c_wait_ready *****************
  3412 ;; Defined at:
  3413 ;;		line 35 in file "i2c.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;		None               void
  3420 ;; Registers used:
  3421 ;;		wreg, status,2
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3427 ;;      Params:         0       0       0       0
  3428 ;;      Locals:         0       0       0       0
  3429 ;;      Temps:          0       0       0       0
  3430 ;;      Totals:         0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_i2c_trig_start
  3438 ;;		_i2c_trig_stop
  3439 ;;		_hyt221_launch_acq
  3440 ;;		_hyt221_operation
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text25
  3445  000D9A                     __ptext25:
  3446                           	opt stack 0
  3447  000D9A                     _i2c_wait_ready:
  3448                           	opt stack 27
  3449                           
  3450                           ;incstack = 0
  3451                           ;i2c.c: 37: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while (0
      +                          );;
  3452  000D9A  8ED3               	bsf	4051,7,c	;volatile
  3453  000D9C  0003               	sleep		;# 
  3454  000D9E  9ED3               	bcf	4051,7,c	;volatile
  3455  000DA0                     l1073:
  3456  000DA0  501A               	movf	_i2c_interupt_done,w,c
  3457  000DA2  B4D8               	btfsc	status,2,c
  3458  000DA4  D7FD               	goto	l1073
  3459                           
  3460                           ;i2c.c: 43: i2c_interupt_done = FALSE;
  3461  000DA6  0E00               	movlw	0
  3462  000DA8  6E1A               	movwf	_i2c_interupt_done,c
  3463  000DAA  0012               	return	
  3464  000DAC                     __end_of_i2c_wait_ready:
  3465                           	opt stack 0
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           prodh	equ	0xFF4
  3471                           prodl	equ	0xFF3
  3472                           intcon	equ	0xFF2
  3473                           postinc0	equ	0xFEE
  3474                           wreg	equ	0xFE8
  3475                           indf1	equ	0xFE7
  3476                           fsr1h	equ	0xFE2
  3477                           fsr1l	equ	0xFE1
  3478                           indf2	equ	0xFDF
  3479                           postinc2	equ	0xFDE
  3480                           postdec2	equ	0xFDD
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _i2c_wait_idle *****************
  3486 ;; Defined at:
  3487 ;;		line 46 in file "i2c.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;		None               void
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3501 ;;      Params:         0       0       0       0
  3502 ;;      Locals:         0       0       0       0
  3503 ;;      Temps:          1       0       0       0
  3504 ;;      Totals:         1       0       0       0
  3505 ;;Total ram usage:        1 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    1
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_i2c_trig_start
  3512 ;;		_hyt221_launch_acq
  3513 ;;		_hyt221_operation
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text26
  3518  000DAC                     __ptext26:
  3519                           	opt stack 0
  3520  000DAC                     _i2c_wait_idle:
  3521                           	opt stack 27
  3522  000DAC                     l1079:
  3523  000DAC  CFC5 F056          	movff	4037,??_i2c_wait_idle	;volatile
  3524  000DB0  0E1F               	movlw	31
  3525  000DB2  1656               	andwf	??_i2c_wait_idle,f,c
  3526  000DB4  B4D8               	btfsc	status,2,c
  3527  000DB6  B4C7               	btfsc	4039,2,c	;volatile
  3528  000DB8  D7F9               	goto	l1079
  3529  000DBA  0012               	return	
  3530  000DBC                     __end_of_i2c_wait_idle:
  3531                           	opt stack 0
  3532                           tblptru	equ	0xFF8
  3533                           tblptrh	equ	0xFF7
  3534                           tblptrl	equ	0xFF6
  3535                           tablat	equ	0xFF5
  3536                           prodh	equ	0xFF4
  3537                           prodl	equ	0xFF3
  3538                           intcon	equ	0xFF2
  3539                           postinc0	equ	0xFEE
  3540                           wreg	equ	0xFE8
  3541                           indf1	equ	0xFE7
  3542                           fsr1h	equ	0xFE2
  3543                           fsr1l	equ	0xFE1
  3544                           indf2	equ	0xFDF
  3545                           postinc2	equ	0xFDE
  3546                           postdec2	equ	0xFDD
  3547                           fsr2h	equ	0xFDA
  3548                           fsr2l	equ	0xFD9
  3549                           status	equ	0xFD8
  3550                           
  3551 ;; *************** function _hyt221_getTemp *****************
  3552 ;; Defined at:
  3553 ;;		line 118 in file "hyt221.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  temp_raw        2   20[COMRAM] unsigned int 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  2   16[COMRAM] unsigned int 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3567 ;;      Params:         2       0       0       0
  3568 ;;      Locals:         2       0       0       0
  3569 ;;      Temps:          2       0       0       0
  3570 ;;      Totals:         6       0       0       0
  3571 ;;Total ram usage:        6 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_main_loop
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text27
  3582  000B76                     __ptext27:
  3583                           	opt stack 0
  3584  000B76                     _hyt221_getTemp:
  3585                           	opt stack 28
  3586                           
  3587                           ;hyt221.c: 120: uint16_t temp_raw;
  3588                           ;hyt221.c: 121: temp_raw = gData[2];
  3589                           
  3590                           ;incstack = 0
  3591  000B76  500C               	movf	_gData+2,w,c
  3592  000B78  6E5A               	movwf	hyt221_getTemp@temp_raw,c
  3593  000B7A  6A5B               	clrf	hyt221_getTemp@temp_raw+1,c
  3594  000B7C  BE5A               	btfsc	hyt221_getTemp@temp_raw,7,c
  3595  000B7E  065B               	decf	hyt221_getTemp@temp_raw+1,f,c
  3596                           
  3597                           ;hyt221.c: 122: temp_raw = temp_raw << 8;
  3598  000B80  505A               	movf	hyt221_getTemp@temp_raw,w,c
  3599  000B82  6E5B               	movwf	hyt221_getTemp@temp_raw+1,c
  3600  000B84  6A5A               	clrf	hyt221_getTemp@temp_raw,c
  3601                           
  3602                           ;hyt221.c: 123: temp_raw += gData[3];
  3603  000B86  500D               	movf	_gData+3,w,c
  3604  000B88  265A               	addwf	hyt221_getTemp@temp_raw,f,c
  3605  000B8A  0E00               	movlw	0
  3606  000B8C  BE0D               	btfsc	_gData+3,7,c
  3607  000B8E  0EFF               	movlw	255
  3608  000B90  225B               	addwfc	hyt221_getTemp@temp_raw+1,f,c
  3609                           
  3610                           ;hyt221.c: 124: temp_raw = temp_raw >> 2;
  3611  000B92  C05A  F058         	movff	hyt221_getTemp@temp_raw,??_hyt221_getTemp
  3612  000B96  C05B  F059         	movff	hyt221_getTemp@temp_raw+1,??_hyt221_getTemp+1
  3613  000B9A  90D8               	bcf	status,0,c
  3614  000B9C  3259               	rrcf	??_hyt221_getTemp+1,f,c
  3615  000B9E  3258               	rrcf	??_hyt221_getTemp,f,c
  3616  000BA0  90D8               	bcf	status,0,c
  3617  000BA2  3259               	rrcf	??_hyt221_getTemp+1,f,c
  3618  000BA4  3258               	rrcf	??_hyt221_getTemp,f,c
  3619  000BA6  C058  F05A         	movff	??_hyt221_getTemp,hyt221_getTemp@temp_raw
  3620  000BAA  C059  F05B         	movff	??_hyt221_getTemp+1,hyt221_getTemp@temp_raw+1
  3621                           
  3622                           ;hyt221.c: 125: return temp_raw;
  3623  000BAE  C05A  F056         	movff	hyt221_getTemp@temp_raw,?_hyt221_getTemp
  3624  000BB2  C05B  F057         	movff	hyt221_getTemp@temp_raw+1,?_hyt221_getTemp+1
  3625  000BB6  0012               	return	
  3626  000BB8                     __end_of_hyt221_getTemp:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodh	equ	0xFF4
  3633                           prodl	equ	0xFF3
  3634                           intcon	equ	0xFF2
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           indf1	equ	0xFE7
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           indf2	equ	0xFDF
  3641                           postinc2	equ	0xFDE
  3642                           postdec2	equ	0xFDD
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _hyt221_getHumidity *****************
  3648 ;; Defined at:
  3649 ;;		line 128 in file "hyt221.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  humidity_raw    2   18[COMRAM] unsigned int 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  2   16[COMRAM] unsigned int 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3663 ;;      Params:         2       0       0       0
  3664 ;;      Locals:         2       0       0       0
  3665 ;;      Temps:          0       0       0       0
  3666 ;;      Totals:         4       0       0       0
  3667 ;;Total ram usage:        4 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_main_loop
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text28
  3678  000CA6                     __ptext28:
  3679                           	opt stack 0
  3680  000CA6                     _hyt221_getHumidity:
  3681                           	opt stack 28
  3682                           
  3683                           ;hyt221.c: 130: uint16_t humidity_raw;
  3684                           ;hyt221.c: 131: humidity_raw = (gData[0] & 0x3F);
  3685                           
  3686                           ;incstack = 0
  3687  000CA6  0E3F               	movlw	63
  3688  000CA8  140A               	andwf	_gData,w,c
  3689  000CAA  6E58               	movwf	hyt221_getHumidity@humidity_raw,c
  3690  000CAC  6A59               	clrf	hyt221_getHumidity@humidity_raw+1,c
  3691                           
  3692                           ;hyt221.c: 132: humidity_raw = humidity_raw << 8;
  3693  000CAE  5058               	movf	hyt221_getHumidity@humidity_raw,w,c
  3694  000CB0  6E59               	movwf	hyt221_getHumidity@humidity_raw+1,c
  3695  000CB2  6A58               	clrf	hyt221_getHumidity@humidity_raw,c
  3696                           
  3697                           ;hyt221.c: 133: humidity_raw += gData[1];
  3698  000CB4  500B               	movf	_gData+1,w,c
  3699  000CB6  2658               	addwf	hyt221_getHumidity@humidity_raw,f,c
  3700  000CB8  0E00               	movlw	0
  3701  000CBA  BE0B               	btfsc	_gData+1,7,c
  3702  000CBC  0EFF               	movlw	255
  3703  000CBE  2259               	addwfc	hyt221_getHumidity@humidity_raw+1,f,c
  3704                           
  3705                           ;hyt221.c: 135: return humidity_raw;
  3706  000CC0  C058  F056         	movff	hyt221_getHumidity@humidity_raw,?_hyt221_getHumidity
  3707  000CC4  C059  F057         	movff	hyt221_getHumidity@humidity_raw+1,?_hyt221_getHumidity+1
  3708  000CC8  0012               	return	
  3709  000CCA                     __end_of_hyt221_getHumidity:
  3710                           	opt stack 0
  3711                           tblptru	equ	0xFF8
  3712                           tblptrh	equ	0xFF7
  3713                           tblptrl	equ	0xFF6
  3714                           tablat	equ	0xFF5
  3715                           prodh	equ	0xFF4
  3716                           prodl	equ	0xFF3
  3717                           intcon	equ	0xFF2
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           indf1	equ	0xFE7
  3721                           fsr1h	equ	0xFE2
  3722                           fsr1l	equ	0xFE1
  3723                           indf2	equ	0xFDF
  3724                           postinc2	equ	0xFDE
  3725                           postdec2	equ	0xFDD
  3726                           fsr2h	equ	0xFDA
  3727                           fsr2l	equ	0xFD9
  3728                           status	equ	0xFD8
  3729                           
  3730 ;; *************** function _batt_launch_acq *****************
  3731 ;; Defined at:
  3732 ;;		line 180 in file "main.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;		None               void
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3746 ;;      Params:         0       0       0       0
  3747 ;;      Locals:         0       0       0       0
  3748 ;;      Temps:          2       0       0       0
  3749 ;;      Totals:         2       0       0       0
  3750 ;;Total ram usage:        2 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    2
  3753 ;; This function calls:
  3754 ;;		_zb_handle_setbatVolt
  3755 ;; This function is called by:
  3756 ;;		_main_loop
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text29
  3761  000AF0                     __ptext29:
  3762                           	opt stack 0
  3763  000AF0                     _batt_launch_acq:
  3764                           	opt stack 27
  3765                           
  3766                           ;main.c: 182: LATBbits.LATB1 = 1;
  3767                           
  3768                           ;incstack = 0
  3769  000AF0  828A               	bsf	3978,1,c	;volatile
  3770                           
  3771                           ;main.c: 183: ADCON1 = 0x00;
  3772  000AF2  0E00               	movlw	0
  3773  000AF4  6EC1               	movwf	4033,c	;volatile
  3774                           
  3775                           ;main.c: 184: ADCON0 = 0x20;
  3776  000AF6  0E20               	movlw	32
  3777  000AF8  6EC2               	movwf	4034,c	;volatile
  3778                           
  3779                           ;main.c: 185: ADCON2 = 0x8B;
  3780  000AFA  0E8B               	movlw	139
  3781  000AFC  6EC0               	movwf	4032,c	;volatile
  3782                           
  3783                           ;main.c: 186: ADCON0 |= 0x01;
  3784  000AFE  80C2               	bsf	4034,0,c	;volatile
  3785                           
  3786                           ;main.c: 187: ADCON0 |= 0x02 ;
  3787  000B00  82C2               	bsf	4034,1,c	;volatile
  3788                           
  3789                           ;main.c: 189: do { (OSCCONbits.IDLEN = 1);asm(" sleep");(OSCCONbits.IDLEN = 0); } while 
      +                          (0);;
  3790  000B02  8ED3               	bsf	4051,7,c	;volatile
  3791  000B04  0003               	sleep		;# 
  3792  000B06  9ED3               	bcf	4051,7,c	;volatile
  3793  000B08                     l128:
  3794  000B08  B2C2               	btfsc	4034,1,c	;volatile
  3795  000B0A  D7FE               	goto	l128
  3796                           
  3797                           ;main.c: 194: batt_value = (ADRESH << 8) | ADRESL;
  3798  000B0C  50C3               	movf	4035,w,c	;volatile
  3799  000B0E  CFC4 F058          	movff	4036,??_batt_launch_acq	;volatile
  3800  000B12  6A59               	clrf	(??_batt_launch_acq+1)& (0+255),c
  3801  000B14  C058  F059         	movff	??_batt_launch_acq,??_batt_launch_acq+1
  3802  000B18  6A58               	clrf	??_batt_launch_acq,c
  3803  000B1A  1058               	iorwf	??_batt_launch_acq,w,c
  3804  000B1C  6E14               	movwf	_batt_value,c
  3805  000B1E  5059               	movf	??_batt_launch_acq+1,w,c
  3806  000B20  6E15               	movwf	_batt_value+1,c
  3807                           
  3808                           ;main.c: 195: LATBbits.LATB1 = 0;
  3809  000B22  928A               	bcf	3978,1,c	;volatile
  3810                           
  3811                           ;main.c: 196: ADCON0 &= ~0x01;
  3812  000B24  90C2               	bcf	4034,0,c	;volatile
  3813                           
  3814                           ;main.c: 197: zb_handle_setbatVolt(batt_value);
  3815  000B26  C014  F056         	movff	_batt_value,zb_handle_setbatVolt@battVoltage
  3816  000B2A  C015  F057         	movff	_batt_value+1,zb_handle_setbatVolt@battVoltage+1
  3817  000B2E  ECF3  F006         	call	_zb_handle_setbatVolt	;wreg free
  3818  000B32  0012               	return	
  3819  000B34                     __end_of_batt_launch_acq:
  3820                           	opt stack 0
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           prodh	equ	0xFF4
  3826                           prodl	equ	0xFF3
  3827                           intcon	equ	0xFF2
  3828                           postinc0	equ	0xFEE
  3829                           wreg	equ	0xFE8
  3830                           indf1	equ	0xFE7
  3831                           fsr1h	equ	0xFE2
  3832                           fsr1l	equ	0xFE1
  3833                           indf2	equ	0xFDF
  3834                           postinc2	equ	0xFDE
  3835                           postdec2	equ	0xFDD
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8
  3839                           
  3840 ;; *************** function _zb_handle_setbatVolt *****************
  3841 ;; Defined at:
  3842 ;;		line 227 in file "zb_handle.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  battVoltage     2   16[COMRAM] unsigned int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;		None               void
  3849 ;; Registers used:
  3850 ;;		wreg, status,2
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3856 ;;      Params:         2       0       0       0
  3857 ;;      Locals:         0       0       0       0
  3858 ;;      Temps:          0       0       0       0
  3859 ;;      Totals:         2       0       0       0
  3860 ;;Total ram usage:        2 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_batt_launch_acq
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text30
  3871  000DE6                     __ptext30:
  3872                           	opt stack 0
  3873  000DE6                     _zb_handle_setbatVolt:
  3874                           	opt stack 27
  3875                           
  3876                           ;zb_handle.c: 229: sensor_data.battRaw = battVoltage;
  3877                           
  3878                           ;incstack = 0
  3879  000DE6  C056  F007         	movff	zb_handle_setbatVolt@battVoltage,_sensor_data+6
  3880  000DEA  C057  F008         	movff	zb_handle_setbatVolt@battVoltage+1,_sensor_data+7
  3881                           
  3882                           ;zb_handle.c: 230: sensor_data.battStatus = (0x03);
  3883  000DEE  0E03               	movlw	3
  3884  000DF0  6E09               	movwf	_sensor_data+8,c
  3885  000DF2  0012               	return	
  3886  000DF4                     __end_of_zb_handle_setbatVolt:
  3887                           	opt stack 0
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           prodh	equ	0xFF4
  3893                           prodl	equ	0xFF3
  3894                           intcon	equ	0xFF2
  3895                           postinc0	equ	0xFEE
  3896                           wreg	equ	0xFE8
  3897                           indf1	equ	0xFE7
  3898                           fsr1h	equ	0xFE2
  3899                           fsr1l	equ	0xFE1
  3900                           indf2	equ	0xFDF
  3901                           postinc2	equ	0xFDE
  3902                           postdec2	equ	0xFDD
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _i2c_setup *****************
  3908 ;; Defined at:
  3909 ;;		line 9 in file "i2c.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;		None               void
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3923 ;;      Params:         0       0       0       0
  3924 ;;      Locals:         0       0       0       0
  3925 ;;      Temps:          0       0       0       0
  3926 ;;      Totals:         0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    1
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_main
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text31
  3938  000C26                     __ptext31:
  3939                           	opt stack 0
  3940  000C26                     _i2c_setup:
  3941                           	opt stack 29
  3942                           
  3943                           ;i2c.c: 15: TRISC &= ~0x18;
  3944                           
  3945                           ;incstack = 0
  3946  000C26  0EE7               	movlw	231
  3947  000C28  1694               	andwf	3988,f,c	;volatile
  3948                           
  3949                           ;i2c.c: 16: LATCbits.LATC3 = 0;
  3950  000C2A  968B               	bcf	3979,3,c	;volatile
  3951                           
  3952                           ;i2c.c: 17: LATCbits.LATC4 = 0;
  3953  000C2C  988B               	bcf	3979,4,c	;volatile
  3954                           
  3955                           ;i2c.c: 18: _delay((unsigned long)((100)*((1000000)/4000000.0)));
  3956  000C2E  0E08               	movlw	8
  3957  000C30                     u1107:
  3958  000C30  2EE8               	decfsz	wreg,f,c
  3959  000C32  D7FE               	goto	u1107
  3960  000C34  F000               	nop	
  3961                           
  3962                           ;i2c.c: 20: TRISC |= 0x18;
  3963  000C36  0E18               	movlw	24
  3964  000C38  1294               	iorwf	3988,f,c	;volatile
  3965                           
  3966                           ;i2c.c: 23: SSPSTAT = 0x80;
  3967  000C3A  0E80               	movlw	128
  3968  000C3C  6EC7               	movwf	4039,c	;volatile
  3969                           
  3970                           ;i2c.c: 24: SSPADD = 0x01;
  3971  000C3E  0E01               	movlw	1
  3972  000C40  6EC8               	movwf	4040,c	;volatile
  3973                           
  3974                           ;i2c.c: 25: SSPCON1 = 0x28;
  3975  000C42  0E28               	movlw	40
  3976  000C44  6EC6               	movwf	4038,c	;volatile
  3977                           
  3978                           ;i2c.c: 26: SSPCON2 = 0x00;
  3979  000C46  0E00               	movlw	0
  3980  000C48  6EC5               	movwf	4037,c	;volatile
  3981                           
  3982                           ;i2c.c: 29: i2c_interupt_done = FALSE;
  3983  000C4A  0E00               	movlw	0
  3984  000C4C  6E1A               	movwf	_i2c_interupt_done,c
  3985                           
  3986                           ;i2c.c: 30: PIR1bits.SSPIF = 0;
  3987  000C4E  969E               	bcf	3998,3,c	;volatile
  3988                           
  3989                           ;i2c.c: 31: PIR2bits.BCLIF = 0;
  3990  000C50  96A1               	bcf	4001,3,c	;volatile
  3991                           
  3992                           ;i2c.c: 32: PIE1bits.SSPIE = 1;
  3993  000C52  869D               	bsf	3997,3,c	;volatile
  3994  000C54  0012               	return	
  3995  000C56                     __end_of_i2c_setup:
  3996                           	opt stack 0
  3997                           tblptru	equ	0xFF8
  3998                           tblptrh	equ	0xFF7
  3999                           tblptrl	equ	0xFF6
  4000                           tablat	equ	0xFF5
  4001                           prodh	equ	0xFF4
  4002                           prodl	equ	0xFF3
  4003                           intcon	equ	0xFF2
  4004                           postinc0	equ	0xFEE
  4005                           wreg	equ	0xFE8
  4006                           indf1	equ	0xFE7
  4007                           fsr1h	equ	0xFE2
  4008                           fsr1l	equ	0xFE1
  4009                           indf2	equ	0xFDF
  4010                           postinc2	equ	0xFDE
  4011                           postdec2	equ	0xFDD
  4012                           fsr2h	equ	0xFDA
  4013                           fsr2l	equ	0xFD9
  4014                           status	equ	0xFD8
  4015                           
  4016 ;; *************** function _calibration *****************
  4017 ;; Defined at:
  4018 ;;		line 12 in file "osc.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  w               1   19[COMRAM] char 
  4023 ;;  tryCounter      1   18[COMRAM] char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;		None               void
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4033 ;;      Params:         0       0       0       0
  4034 ;;      Locals:         2       0       0       0
  4035 ;;      Temps:          1       0       0       0
  4036 ;;      Totals:         3       0       0       0
  4037 ;;Total ram usage:        3 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    2
  4040 ;; This function calls:
  4041 ;;		_leds_red_glitch
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text32
  4048  0007F0                     __ptext32:
  4049                           	opt stack 0
  4050  0007F0                     _calibration:
  4051                           	opt stack 28
  4052                           
  4053                           ;osc.c: 14: int8_t w;
  4054                           ;osc.c: 15: int8_t tryCounter;
  4055                           ;osc.c: 17: T1CON = 0x0F;
  4056                           
  4057                           ;incstack = 0
  4058  0007F0  0E0F               	movlw	15
  4059  0007F2  6ECD               	movwf	4045,c	;volatile
  4060                           
  4061                           ;osc.c: 18: tryCounter = 0;
  4062  0007F4  0E00               	movlw	0
  4063  0007F6  6E58               	movwf	calibration@tryCounter,c
  4064                           
  4065                           ;osc.c: 19: while (tryCounter < 32)
  4066  0007F8  D035               	goto	l438
  4067  0007FA                     l1477:
  4068                           
  4069                           ;osc.c: 20: {
  4070                           ;osc.c: 21: calibr = 0;
  4071  0007FA  0E00               	movlw	0
  4072  0007FC  6E19               	movwf	_calibr,c	;volatile
  4073                           
  4074                           ;osc.c: 22: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4075  0007FE  0E52               	movlw	82
  4076  000800  6E57               	movwf	??_calibration& (0+255),c
  4077  000802  0E2A               	movlw	42
  4078  000804                     u1117:
  4079  000804  2EE8               	decfsz	wreg,f,c
  4080  000806  D7FE               	goto	u1117
  4081  000808  2E57               	decfsz	??_calibration& (0+255),f,c
  4082  00080A  D7FC               	goto	u1117
  4083                           
  4084                           ;osc.c: 23: T1CON = 0x0F;
  4085  00080C  0E0F               	movlw	15
  4086  00080E  6ECD               	movwf	4045,c	;volatile
  4087                           
  4088                           ;osc.c: 26: TMR1H = 0xFF;
  4089  000810  68CF               	setf	4047,c	;volatile
  4090                           
  4091                           ;osc.c: 27: TMR1L = 0xE7;
  4092  000812  0EE7               	movlw	231
  4093  000814  6ECE               	movwf	4046,c	;volatile
  4094                           
  4095                           ;osc.c: 28: PIR1bits.TMR1IF = 0;
  4096  000816  909E               	bcf	3998,0,c	;volatile
  4097                           
  4098                           ;osc.c: 31: while (PIR1bits.TMR1IF == 0)
  4099  000818  D001               	goto	l1491
  4100  00081A                     l1489:
  4101                           
  4102                           ;osc.c: 32: {
  4103                           ;osc.c: 33: calibr++;
  4104  00081A  2A19               	incf	_calibr,f,c	;volatile
  4105  00081C                     l1491:
  4106  00081C  A09E               	btfss	3998,0,c	;volatile
  4107  00081E  D7FD               	goto	l1489
  4108                           
  4109                           ;osc.c: 34: }
  4110                           ;osc.c: 36: w = ((int8_t)(0x30)) - calibr;
  4111  000820  5019               	movf	_calibr,w,c
  4112  000822  0800               	sublw	0
  4113  000824  0F30               	addlw	48
  4114  000826  6E59               	movwf	calibration@w,c
  4115                           
  4116                           ;osc.c: 37: if (w > 0)
  4117  000828  5059               	movf	calibration@w,w,c
  4118  00082A  0A80               	xorlw	128
  4119  00082C  0F7F               	addlw	-129
  4120  00082E  A0D8               	btfss	status,0,c
  4121  000830  D009               	goto	l1499
  4122                           
  4123                           ;osc.c: 38: {
  4124                           ;osc.c: 40: w -= ((int8_t) (2));
  4125  000832  0EFE               	movlw	254
  4126  000834  2659               	addwf	calibration@w,f,c
  4127                           
  4128                           ;osc.c: 41: if (w > 0)
  4129  000836  5059               	movf	calibration@w,w,c
  4130  000838  0A80               	xorlw	128
  4131  00083A  0F7F               	addlw	-129
  4132  00083C  A0D8               	btfss	status,0,c
  4133  00083E  D017               	goto	l1507
  4134                           
  4135                           ;osc.c: 42: {
  4136                           ;osc.c: 44: OSCTUNE = (OSCTUNE + 1) & 0x1F;
  4137  000840  289B               	incf	3995,w,c	;volatile
  4138  000842  D00A               	goto	L9
  4139  000844                     l1499:
  4140                           
  4141                           ;osc.c: 51: else
  4142                           ;osc.c: 52: {
  4143                           ;osc.c: 54: w = ((int8_t) (2)) - w;
  4144  000844  5059               	movf	calibration@w,w,c
  4145  000846  0800               	sublw	0
  4146  000848  0F02               	addlw	2
  4147  00084A  6E59               	movwf	calibration@w,c
  4148                           
  4149                           ;osc.c: 55: if (w > 0)
  4150  00084C  5059               	movf	calibration@w,w,c
  4151  00084E  0A80               	xorlw	128
  4152  000850  0F7F               	addlw	-129
  4153  000852  A0D8               	btfss	status,0,c
  4154  000854  D00C               	goto	l1507
  4155                           
  4156                           ;osc.c: 56: {
  4157                           ;osc.c: 57: OSCTUNE = (OSCTUNE - 1) & 0x1F;
  4158  000856  049B               	decf	3995,w,c	;volatile
  4159  000858                     L9:
  4160  000858  0B1F               	andlw	31
  4161  00085A  6E9B               	movwf	3995,c	;volatile
  4162                           
  4163                           ;osc.c: 62: }
  4164                           ;osc.c: 63: }
  4165                           ;osc.c: 64: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4166                           
  4167                           ;osc.c: 59: else
  4168                           ;osc.c: 60: {
  4169                           ;osc.c: 61: break;
  4170                           
  4171                           ;osc.c: 58: }
  4172  00085C  0E19               	movlw	25
  4173  00085E                     u1127:
  4174  00085E  2EE8               	decfsz	wreg,f,c
  4175  000860  D7FE               	goto	u1127
  4176                           
  4177                           ;osc.c: 65: tryCounter++;
  4178  000862  2A58               	incf	calibration@tryCounter,f,c
  4179  000864                     l438:
  4180  000864  5058               	movf	calibration@tryCounter,w,c
  4181  000866  0A80               	xorlw	128
  4182  000868  0F60               	addlw	-160
  4183  00086A  A0D8               	btfss	status,0,c
  4184  00086C  D7C6               	goto	l1477
  4185  00086E                     l1507:
  4186                           
  4187                           ;osc.c: 66: }
  4188                           ;osc.c: 68: if (tryCounter >= 32)
  4189  00086E  5058               	movf	calibration@tryCounter,w,c
  4190  000870  0A80               	xorlw	128
  4191  000872  0F60               	addlw	-160
  4192  000874  A0D8               	btfss	status,0,c
  4193  000876  D019               	goto	l1523
  4194                           
  4195                           ;osc.c: 69: {
  4196                           ;osc.c: 70: OSCTUNE = 0;
  4197  000878  0E00               	movlw	0
  4198  00087A  6E9B               	movwf	3995,c	;volatile
  4199                           
  4200                           ;osc.c: 71: _delay((unsigned long)((300)*((1000000)/4000000.0)));
  4201  00087C  0E19               	movlw	25
  4202  00087E                     u1137:
  4203  00087E  2EE8               	decfsz	wreg,f,c
  4204  000880  D7FE               	goto	u1137
  4205                           
  4206                           ;osc.c: 72: leds_red_glitch();
  4207  000882  ECB9  F006         	call	_leds_red_glitch	;wreg free
  4208                           
  4209                           ;osc.c: 73: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4210  000886  0E52               	movlw	82
  4211  000888  6E57               	movwf	??_calibration& (0+255),c
  4212  00088A  0E2A               	movlw	42
  4213  00088C                     u1147:
  4214  00088C  2EE8               	decfsz	wreg,f,c
  4215  00088E  D7FE               	goto	u1147
  4216  000890  2E57               	decfsz	??_calibration& (0+255),f,c
  4217  000892  D7FC               	goto	u1147
  4218                           
  4219                           ;osc.c: 74: leds_red_glitch();
  4220  000894  ECB9  F006         	call	_leds_red_glitch	;wreg free
  4221                           
  4222                           ;osc.c: 75: _delay((unsigned long)((250)*((1000000)/4000.0)));
  4223  000898  0E52               	movlw	82
  4224  00089A  6E57               	movwf	??_calibration& (0+255),c
  4225  00089C  0E2A               	movlw	42
  4226  00089E                     u1157:
  4227  00089E  2EE8               	decfsz	wreg,f,c
  4228  0008A0  D7FE               	goto	u1157
  4229  0008A2  2E57               	decfsz	??_calibration& (0+255),f,c
  4230  0008A4  D7FC               	goto	u1157
  4231                           
  4232                           ;osc.c: 76: leds_red_glitch();
  4233  0008A6  ECB9  F006         	call	_leds_red_glitch	;wreg free
  4234  0008AA                     l1523:
  4235                           
  4236                           ;osc.c: 77: }
  4237                           ;osc.c: 80: T1CON = 0;
  4238  0008AA  0E00               	movlw	0
  4239  0008AC  6ECD               	movwf	4045,c	;volatile
  4240  0008AE  0012               	return	
  4241  0008B0                     __end_of_calibration:
  4242                           	opt stack 0
  4243                           tblptru	equ	0xFF8
  4244                           tblptrh	equ	0xFF7
  4245                           tblptrl	equ	0xFF6
  4246                           tablat	equ	0xFF5
  4247                           prodh	equ	0xFF4
  4248                           prodl	equ	0xFF3
  4249                           intcon	equ	0xFF2
  4250                           postinc0	equ	0xFEE
  4251                           wreg	equ	0xFE8
  4252                           indf1	equ	0xFE7
  4253                           fsr1h	equ	0xFE2
  4254                           fsr1l	equ	0xFE1
  4255                           indf2	equ	0xFDF
  4256                           postinc2	equ	0xFDE
  4257                           postdec2	equ	0xFDD
  4258                           fsr2h	equ	0xFDA
  4259                           fsr2l	equ	0xFD9
  4260                           status	equ	0xFD8
  4261                           
  4262 ;; *************** function _leds_red_glitch *****************
  4263 ;; Defined at:
  4264 ;;		line 21 in file "leds.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;		None
  4269 ;; Return value:  Size  Location     Type
  4270 ;;		None               void
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4278 ;;      Params:         0       0       0       0
  4279 ;;      Locals:         0       0       0       0
  4280 ;;      Temps:          1       0       0       0
  4281 ;;      Totals:         1       0       0       0
  4282 ;;Total ram usage:        1 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:    1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_main_loop
  4289 ;;		_calibration
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text33
  4294  000D72                     __ptext33:
  4295                           	opt stack 0
  4296  000D72                     _leds_red_glitch:
  4297                           	opt stack 28
  4298                           
  4299                           ;leds.c: 23: LATA |= (0x08);
  4300                           
  4301                           ;incstack = 0
  4302  000D72  8689               	bsf	3977,3,c	;volatile
  4303                           
  4304                           ;leds.c: 24: _delay((unsigned long)((100)*((1000000)/4000.0)));
  4305  000D74  0E21               	movlw	33
  4306  000D76  6E56               	movwf	??_leds_red_glitch& (0+255),c
  4307  000D78  0E76               	movlw	118
  4308  000D7A                     u1167:
  4309  000D7A  2EE8               	decfsz	wreg,f,c
  4310  000D7C  D7FE               	goto	u1167
  4311  000D7E  2E56               	decfsz	??_leds_red_glitch& (0+255),f,c
  4312  000D80  D7FC               	goto	u1167
  4313  000D82  D000               	nop2	
  4314                           
  4315                           ;leds.c: 25: LATA &= ~(0x08);
  4316  000D84  9689               	bcf	3977,3,c	;volatile
  4317  000D86  0012               	return	
  4318  000D88                     __end_of_leds_red_glitch:
  4319                           	opt stack 0
  4320                           tblptru	equ	0xFF8
  4321                           tblptrh	equ	0xFF7
  4322                           tblptrl	equ	0xFF6
  4323                           tablat	equ	0xFF5
  4324                           prodh	equ	0xFF4
  4325                           prodl	equ	0xFF3
  4326                           intcon	equ	0xFF2
  4327                           postinc0	equ	0xFEE
  4328                           wreg	equ	0xFE8
  4329                           indf1	equ	0xFE7
  4330                           fsr1h	equ	0xFE2
  4331                           fsr1l	equ	0xFE1
  4332                           indf2	equ	0xFDF
  4333                           postinc2	equ	0xFDE
  4334                           postdec2	equ	0xFDD
  4335                           fsr2h	equ	0xFDA
  4336                           fsr2l	equ	0xFD9
  4337                           status	equ	0xFD8
  4338                           
  4339 ;; *************** function _isr_hi *****************
  4340 ;; Defined at:
  4341 ;;		line 17 in file "interrupt.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  dummy           1   15[COMRAM] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;		None               void
  4348 ;; Registers used:
  4349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4355 ;;      Params:         0       0       0       0
  4356 ;;      Locals:         1       0       0       0
  4357 ;;      Temps:         15       0       0       0
  4358 ;;      Totals:        16       0       0       0
  4359 ;;Total ram usage:       16 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		Interrupt level 2
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	intcode
  4369  000008                     __pintcode:
  4370                           	opt stack 0
  4371  000008                     _isr_hi:
  4372                           	opt stack 26
  4373                           
  4374                           ;incstack = 0
  4375  000008  CFFA F047          	movff	pclath,??_isr_hi+1
  4376  00000C  CFFB F048          	movff	pclatu,??_isr_hi+2
  4377  000010  CFE9 F049          	movff	fsr0l,??_isr_hi+3
  4378  000014  ED5F  F002         	call	int_func,f	;refresh shadow registers
  4379                           pclatu	equ	0xFFB
  4380                           pclath	equ	0xFFA
  4381                           tblptru	equ	0xFF8
  4382                           tblptrh	equ	0xFF7
  4383                           tblptrl	equ	0xFF6
  4384                           tablat	equ	0xFF5
  4385                           prodh	equ	0xFF4
  4386                           prodl	equ	0xFF3
  4387                           intcon	equ	0xFF2
  4388                           postinc0	equ	0xFEE
  4389                           fsr0l	equ	0xFE9
  4390                           wreg	equ	0xFE8
  4391                           indf1	equ	0xFE7
  4392                           fsr1h	equ	0xFE2
  4393                           fsr1l	equ	0xFE1
  4394                           indf2	equ	0xFDF
  4395                           postinc2	equ	0xFDE
  4396                           postdec2	equ	0xFDD
  4397                           fsr2h	equ	0xFDA
  4398                           fsr2l	equ	0xFD9
  4399                           status	equ	0xFD8
  4400                           
  4401                           	psect	intcode_body
  4402  0004BE                     __pintcode_body:
  4403                           	opt stack 26
  4404  0004BE                     int_func:
  4405                           	opt stack 26
  4406  0004BE  0006               	pop		; remove dummy address from shadow register refresh
  4407  0004C0  CFEA F04A          	movff	fsr0h,??_isr_hi+4
  4408  0004C4  CFE1 F04B          	movff	fsr1l,??_isr_hi+5
  4409  0004C8  CFE2 F04C          	movff	fsr1h,??_isr_hi+6
  4410  0004CC  CFD9 F04D          	movff	fsr2l,??_isr_hi+7
  4411  0004D0  CFDA F04E          	movff	fsr2h,??_isr_hi+8
  4412  0004D4  CFF3 F04F          	movff	prodl,??_isr_hi+9
  4413  0004D8  CFF4 F050          	movff	prodh,??_isr_hi+10
  4414  0004DC  CFF6 F051          	movff	tblptrl,??_isr_hi+11
  4415  0004E0  CFF7 F052          	movff	tblptrh,??_isr_hi+12
  4416  0004E4  CFF8 F053          	movff	tblptru,??_isr_hi+13
  4417  0004E8  CFF5 F054          	movff	tablat,??_isr_hi+14
  4418                           
  4419                           ;interrupt.c: 20: if (PIE1bits.SSPIE & PIR1bits.SSPIF)
  4420  0004EC  0E01               	movlw	1
  4421  0004EE  A69D               	btfss	3997,3,c	;volatile
  4422  0004F0  0E00               	movlw	0
  4423  0004F2  A69E               	btfss	3998,3,c	;volatile
  4424  0004F4  0E00               	movlw	0
  4425  0004F6  A0E8               	btfss	wreg,0,c
  4426  0004F8  D003               	goto	i2u74_40
  4427  0004FA  6A46               	clrf	??_isr_hi& (0+255),c
  4428  0004FC  2A46               	incf	??_isr_hi& (0+255),f,c
  4429  0004FE  D001               	goto	i2u74_48
  4430  000500                     i2u74_40:
  4431  000500  6A46               	clrf	??_isr_hi& (0+255),c
  4432  000502                     i2u74_48:
  4433  000502  5046               	movf	??_isr_hi,w,c
  4434  000504  B4D8               	btfsc	status,2,c
  4435  000506  D004               	goto	i2l2025
  4436                           
  4437                           ;interrupt.c: 21: {
  4438                           ;interrupt.c: 22: PIR1bits.SSPIF = 0;
  4439  000508  969E               	bcf	3998,3,c	;volatile
  4440                           
  4441                           ;interrupt.c: 23: i2c_interupt_done = TRUE;
  4442  00050A  0E01               	movlw	1
  4443  00050C  6E1A               	movwf	_i2c_interupt_done,c
  4444  00050E  D059               	goto	i2l409
  4445  000510                     i2l2025:
  4446                           
  4447                           ;interrupt.c: 25: }
  4448                           ;interrupt.c: 28: if (INTCONbits.TMR0IE & INTCONbits.TMR0IF)
  4449  000510  0E01               	movlw	1
  4450  000512  AAF2               	btfss	intcon,5,c	;volatile
  4451  000514  0E00               	movlw	0
  4452  000516  A4F2               	btfss	intcon,2,c	;volatile
  4453  000518  0E00               	movlw	0
  4454  00051A  A0E8               	btfss	wreg,0,c
  4455  00051C  D003               	goto	i2u76_40
  4456  00051E  6A46               	clrf	??_isr_hi& (0+255),c
  4457  000520  2A46               	incf	??_isr_hi& (0+255),f,c
  4458  000522  D001               	goto	i2u76_48
  4459  000524                     i2u76_40:
  4460  000524  6A46               	clrf	??_isr_hi& (0+255),c
  4461  000526                     i2u76_48:
  4462  000526  5046               	movf	??_isr_hi,w,c
  4463  000528  B4D8               	btfsc	status,2,c
  4464  00052A  D004               	goto	i2l2033
  4465                           
  4466                           ;interrupt.c: 29: {
  4467                           ;interrupt.c: 30: timer0_interupt_done = TRUE;
  4468  00052C  0E01               	movlw	1
  4469  00052E  6E1C               	movwf	_timer0_interupt_done,c
  4470                           
  4471                           ;interrupt.c: 49: INTCONbits.TMR0IF = 0;
  4472  000530  94F2               	bcf	intcon,2,c	;volatile
  4473  000532  D047               	goto	i2l409
  4474  000534                     i2l2033:
  4475                           
  4476                           ;interrupt.c: 51: }
  4477                           ;interrupt.c: 54: if (PIE1bits.ADIE & PIR1bits.ADIF)
  4478  000534  0E01               	movlw	1
  4479  000536  AC9D               	btfss	3997,6,c	;volatile
  4480  000538  0E00               	movlw	0
  4481  00053A  AC9E               	btfss	3998,6,c	;volatile
  4482  00053C  0E00               	movlw	0
  4483  00053E  A0E8               	btfss	wreg,0,c
  4484  000540  D003               	goto	i2u78_40
  4485  000542  6A46               	clrf	??_isr_hi& (0+255),c
  4486  000544  2A46               	incf	??_isr_hi& (0+255),f,c
  4487  000546  D001               	goto	i2u78_48
  4488  000548                     i2u78_40:
  4489  000548  6A46               	clrf	??_isr_hi& (0+255),c
  4490  00054A                     i2u78_48:
  4491  00054A  5046               	movf	??_isr_hi,w,c
  4492  00054C  B4D8               	btfsc	status,2,c
  4493  00054E  D002               	goto	i2l2037
  4494                           
  4495                           ;interrupt.c: 55: {
  4496                           ;interrupt.c: 56: PIR1bits.ADIF = 0;
  4497  000550  9C9E               	bcf	3998,6,c	;volatile
  4498                           
  4499                           ;interrupt.c: 57: return;
  4500  000552  D037               	goto	i2l409
  4501  000554                     i2l2037:
  4502                           
  4503                           ;interrupt.c: 58: }
  4504                           ;interrupt.c: 61: if (PIE1bits.RC1IE & PIR1bits.RCIF)
  4505  000554  0E01               	movlw	1
  4506  000556  AA9D               	btfss	3997,5,c	;volatile
  4507  000558  0E00               	movlw	0
  4508  00055A  AA9E               	btfss	3998,5,c	;volatile
  4509  00055C  0E00               	movlw	0
  4510  00055E  A0E8               	btfss	wreg,0,c
  4511  000560  D003               	goto	i2u80_40
  4512  000562  6A46               	clrf	??_isr_hi& (0+255),c
  4513  000564  2A46               	incf	??_isr_hi& (0+255),f,c
  4514  000566  D001               	goto	i2u80_48
  4515  000568                     i2u80_40:
  4516  000568  6A46               	clrf	??_isr_hi& (0+255),c
  4517  00056A                     i2u80_48:
  4518  00056A  5046               	movf	??_isr_hi,w,c
  4519  00056C  B4D8               	btfsc	status,2,c
  4520  00056E  D029               	goto	i2l409
  4521                           
  4522                           ;interrupt.c: 62: {
  4523                           ;interrupt.c: 63: uint8_t dummy;
  4524                           ;interrupt.c: 67: if (RCSTAbits.FERR)
  4525  000570  A4AB               	btfss	4011,2,c	;volatile
  4526  000572  D005               	goto	i2l413
  4527                           
  4528                           ;interrupt.c: 68: {
  4529                           ;interrupt.c: 70: UART_errorStatus.framingError++;
  4530  000574  2A0E               	incf	_UART_errorStatus,f,c
  4531                           
  4532                           ;interrupt.c: 72: dummy = RCREG;
  4533  000576  CFAE F055          	movff	4014,isr_hi@dummy	;volatile
  4534  00057A  00FF               	reset		;# 
  4535                           
  4536                           ;interrupt.c: 74: }
  4537  00057C  D022               	goto	i2l409
  4538  00057E                     i2l413:
  4539                           
  4540                           ;interrupt.c: 75: else if (RCSTAbits.OERR)
  4541  00057E  A2AB               	btfss	4011,1,c	;volatile
  4542  000580  D005               	goto	i2l2051
  4543                           
  4544                           ;interrupt.c: 76: {
  4545                           ;interrupt.c: 78: UART_errorStatus.overrunError++;
  4546  000582  2A0F               	incf	_UART_errorStatus+1,f,c
  4547                           
  4548                           ;interrupt.c: 79: dummy = RCREG;
  4549  000584  CFAE F055          	movff	4014,isr_hi@dummy	;volatile
  4550                           
  4551                           ;interrupt.c: 81: RCSTAbits.CREN = 0;
  4552  000588  98AB               	bcf	4011,4,c	;volatile
  4553                           
  4554                           ;interrupt.c: 82: }
  4555  00058A  D01B               	goto	i2l409
  4556  00058C                     i2l2051:
  4557                           
  4558                           ;interrupt.c: 83: else if (UART_rxBufferNb < (50))
  4559  00058C  0E32               	movlw	50
  4560  00058E  5C17               	subwf	_UART_rxBufferNb,w,c
  4561  000590  B0D8               	btfsc	status,0,c
  4562  000592  D014               	goto	i2l2063
  4563                           
  4564                           ;interrupt.c: 84: {
  4565                           ;interrupt.c: 85: UART_rxBuffer[UART_writeIndex] = RCREG;
  4566  000594  5018               	movf	_UART_writeIndex,w,c
  4567  000596  0D01               	mullw	1
  4568  000598  0100               	movlb	0	; () banked
  4569  00059A  0E80               	movlw	low _UART_rxBuffer
  4570  00059C  24F3               	addwf	prodl,w,c
  4571  00059E  6ED9               	movwf	fsr2l,c
  4572  0005A0  0100               	movlb	0	; () banked
  4573  0005A2  0E00               	movlw	high _UART_rxBuffer
  4574  0005A4  20F4               	addwfc	prodh,w,c
  4575  0005A6  6EDA               	movwf	fsr2h,c
  4576  0005A8  CFAE FFDF          	movff	4014,indf2	;volatile
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;interrupt.c: 86: UART_writeIndex++;
  4580  0005AC  2A18               	incf	_UART_writeIndex,f,c
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;interrupt.c: 87: if (UART_writeIndex >= (50))
  4584  0005AE  0E31               	movlw	49
  4585  0005B0  6418               	cpfsgt	_UART_writeIndex,c
  4586  0005B2  D002               	goto	i2l2061
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;interrupt.c: 88: {
  4590                           ;interrupt.c: 89: UART_writeIndex = 0;
  4591  0005B4  0E00               	movlw	0
  4592  0005B6  6E18               	movwf	_UART_writeIndex,c
  4593  0005B8                     i2l2061:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;interrupt.c: 90: }
  4597                           ;interrupt.c: 91: UART_rxBufferNb++;
  4598  0005B8  2A17               	incf	_UART_rxBufferNb,f,c
  4599                           
  4600                           ;interrupt.c: 92: }
  4601  0005BA  D003               	goto	i2l409
  4602  0005BC                     i2l2063:
  4603                           
  4604                           ;interrupt.c: 93: else
  4605                           ;interrupt.c: 94: {
  4606                           ;interrupt.c: 96: UART_errorStatus.bufferOverrunError++;
  4607  0005BC  2A10               	incf	_UART_errorStatus+2,f,c
  4608                           
  4609                           ;interrupt.c: 97: dummy = RCREG;
  4610  0005BE  CFAE F055          	movff	4014,isr_hi@dummy	;volatile
  4611  0005C2                     i2l409:
  4612  0005C2  C054  FFF5         	movff	??_isr_hi+14,tablat
  4613  0005C6  C053  FFF8         	movff	??_isr_hi+13,tblptru
  4614  0005CA  C052  FFF7         	movff	??_isr_hi+12,tblptrh
  4615  0005CE  C051  FFF6         	movff	??_isr_hi+11,tblptrl
  4616  0005D2  C050  FFF4         	movff	??_isr_hi+10,prodh
  4617  0005D6  C04F  FFF3         	movff	??_isr_hi+9,prodl
  4618  0005DA  C04E  FFDA         	movff	??_isr_hi+8,fsr2h
  4619  0005DE  C04D  FFD9         	movff	??_isr_hi+7,fsr2l
  4620  0005E2  C04C  FFE2         	movff	??_isr_hi+6,fsr1h
  4621  0005E6  C04B  FFE1         	movff	??_isr_hi+5,fsr1l
  4622  0005EA  C04A  FFEA         	movff	??_isr_hi+4,fsr0h
  4623  0005EE  C049  FFE9         	movff	??_isr_hi+3,fsr0l
  4624  0005F2  C048  FFFB         	movff	??_isr_hi+2,pclatu
  4625  0005F6  C047  FFFA         	movff	??_isr_hi+1,pclath
  4626  0005FA  0011               	retfie		f
  4627  0005FC                     __end_of_isr_hi:
  4628                           	opt stack 0
  4629                           pclatu	equ	0xFFB
  4630                           pclath	equ	0xFFA
  4631                           tblptru	equ	0xFF8
  4632                           tblptrh	equ	0xFF7
  4633                           tblptrl	equ	0xFF6
  4634                           tablat	equ	0xFF5
  4635                           prodh	equ	0xFF4
  4636                           prodl	equ	0xFF3
  4637                           intcon	equ	0xFF2
  4638                           postinc0	equ	0xFEE
  4639                           fsr0h	equ	0xFEA
  4640                           fsr0l	equ	0xFE9
  4641                           wreg	equ	0xFE8
  4642                           indf1	equ	0xFE7
  4643                           fsr1h	equ	0xFE2
  4644                           fsr1l	equ	0xFE1
  4645                           indf2	equ	0xFDF
  4646                           postinc2	equ	0xFDE
  4647                           postdec2	equ	0xFDD
  4648                           fsr2h	equ	0xFDA
  4649                           fsr2l	equ	0xFD9
  4650                           status	equ	0xFD8
  4651                           pclatu	equ	0xFFB
  4652                           pclath	equ	0xFFA
  4653                           tblptru	equ	0xFF8
  4654                           tblptrh	equ	0xFF7
  4655                           tblptrl	equ	0xFF6
  4656                           tablat	equ	0xFF5
  4657                           prodh	equ	0xFF4
  4658                           prodl	equ	0xFF3
  4659                           intcon	equ	0xFF2
  4660                           postinc0	equ	0xFEE
  4661                           fsr0h	equ	0xFEA
  4662                           fsr0l	equ	0xFE9
  4663                           wreg	equ	0xFE8
  4664                           indf1	equ	0xFE7
  4665                           fsr1h	equ	0xFE2
  4666                           fsr1l	equ	0xFE1
  4667                           indf2	equ	0xFDF
  4668                           postinc2	equ	0xFDE
  4669                           postdec2	equ	0xFDD
  4670                           fsr2h	equ	0xFDA
  4671                           fsr2l	equ	0xFD9
  4672                           status	equ	0xFD8
  4673                           
  4674                           	psect	rparam
  4675  0000                     pclatu	equ	0xFFB
  4676                           pclath	equ	0xFFA
  4677                           tblptru	equ	0xFF8
  4678                           tblptrh	equ	0xFF7
  4679                           tblptrl	equ	0xFF6
  4680                           tablat	equ	0xFF5
  4681                           prodh	equ	0xFF4
  4682                           prodl	equ	0xFF3
  4683                           intcon	equ	0xFF2
  4684                           postinc0	equ	0xFEE
  4685                           fsr0h	equ	0xFEA
  4686                           fsr0l	equ	0xFE9
  4687                           wreg	equ	0xFE8
  4688                           indf1	equ	0xFE7
  4689                           fsr1h	equ	0xFE2
  4690                           fsr1l	equ	0xFE1
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           postdec2	equ	0xFDD
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    32
    Data        1
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     34     104
    BANK0           128     11     111
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 38
		 -> zb_frameToSend(COMRAM[38]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 38
		 -> zb_frameToSend(COMRAM[38]), 

    memcpy@s1	PTR const void  size(2) Largest target is 32
		 -> frameData(CODE[32]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 32
		 -> frameData(CODE[32]), 

    zigbee_appendChecksum@sizeFrame	PTR unsigned char  size(2) Largest target is 1
		 -> zb_handle_sendData@frameSize(COMRAM[1]), 

    zigbee_appendChecksum@buffer	PTR unsigned char  size(2) Largest target is 38
		 -> zb_frameToSend(COMRAM[38]), 

    sp__memcpy	PTR void  size(2) Largest target is 38
		 -> zb_frameToSend(COMRAM[38]), 

    decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    S1399$data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame.data	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), NULL(NULL[0]), 

    zb_decodage@decodedFrame	PTR struct . size(2) Largest target is 9
		 -> zb_handle@decodedFrame(BANK0[8]), 

    zb_decodage@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    zb_doChecksum@frame	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameToSend(COMRAM[38]), zb_frameReceived(BANK0[50]), 

    uart_read@buffer	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_read@b	PTR unsigned char  size(2) Largest target is 50
		 -> zb_frameReceived(BANK0[50]), 

    uart_write@buffer	PTR unsigned char  size(2) Largest target is 38
		 -> zb_frameToSend(COMRAM[38]), 

    uart_write@b	PTR unsigned char  size(2) Largest target is 38
		 -> zb_frameToSend(COMRAM[38]), 


Critical Paths under _main in COMRAM

    _main->_main_loop
    _main_loop->_zb_handle_sendData
    _zb_handle_setTempRaw->_hyt221_getTemp
    _zb_handle_setHumidityRaw->_hyt221_getHumidity
    _zb_handle_sendData->_zigbee_appendChecksum
    _zigbee_appendChecksum->_zb_doChecksum
    _zb_handle->_zb_decodage
    _zb_decodage->_zb_doChecksum
    _hyt221_operation->_i2c_wait_idle
    _hyt221_operation->_leds_red_and_yellow_glitch
    _hyt221_launch_acq->_i2c_wait_idle
    _hyt221_launch_acq->_leds_red_and_yellow_glitch
    _i2c_trig_start->_i2c_wait_idle
    _batt_launch_acq->_zb_handle_setbatVolt
    _calibration->_leds_red_glitch

Critical Paths under _isr_hi in COMRAM

    None.

Critical Paths under _main in BANK0

    _main_loop->_zb_handle

Critical Paths under _isr_hi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_hi in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_hi in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4122
                        _calibration
                          _i2c_setup
                          _main_loop
                         _uart_setup
 ---------------------------------------------------------------------------------
 (1) _uart_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                            2     2      0    4032
                                             32 COMRAM     2     2      0
                    _batt_launch_acq
                 _hyt221_getHumidity
                     _hyt221_getTemp
                  _hyt221_launch_acq
                   _hyt221_operation
                  _leds_green_glitch
                    _leds_red_glitch
                 _leds_yellow_glitch
                  _timer0_wait_262ms
                   _timer0_wait_65ms
                          _zb_handle
                _zb_handle_getStatus
              _zb_handle_resetStatus
                 _zb_handle_sendData
           _zb_handle_setHumidityRaw
               _zb_handle_setTempRaw
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setTempRaw                                 2     0      2      58
                                             22 COMRAM     2     0      2
                     _hyt221_getTemp (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_setHumidityRaw                             2     0      2      58
                                             20 COMRAM     2     0      2
                 _hyt221_getHumidity (ARG)
 ---------------------------------------------------------------------------------
 (2) _zb_handle_sendData                                   4     4      0    1178
                                             28 COMRAM     4     4      0
                             _memcpy
                         _uart_write
              _zigbee_appendChecksum
 ---------------------------------------------------------------------------------
 (3) _zigbee_appendChecksum                                7     3      4     774
                                             21 COMRAM     7     3      4
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (3) _uart_write                                           6     4      2     118
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     209
                                             16 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _zb_handle_resetStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _zb_handle_getStatus                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _zb_handle                                           11    11      0    2397
                                              0 BANK0     11    11      0
                          _uart_read
                        _zb_decodage
 ---------------------------------------------------------------------------------
 (3) _zb_decodage                                         11     6      5    1539
                                             21 COMRAM    11     6      5
                      _zb_doChecksum
 ---------------------------------------------------------------------------------
 (4) _zb_doChecksum                                        5     2      3     427
                                             16 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _uart_read                                            7     4      3     495
                                             16 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _timer0_wait_65ms                                     0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (2) _timer0_wait_262ms                                    0     0      0       0
                  _timer0_wait_ready
 ---------------------------------------------------------------------------------
 (3) _timer0_wait_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leds_yellow_glitch                                   1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _leds_green_glitch                                    1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_operation                                     4     4      0      75
                                             17 COMRAM     4     4      0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
         _leds_red_and_yellow_glitch
 ---------------------------------------------------------------------------------
 (2) _hyt221_launch_acq                                    0     0      0       0
                     _i2c_trig_start
                      _i2c_trig_stop
                      _i2c_wait_idle
                     _i2c_wait_ready
         _leds_red_and_yellow_glitch
 ---------------------------------------------------------------------------------
 (3) _leds_red_and_yellow_glitch                           1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_stop                                        0     0      0       0
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_trig_start                                       0     0      0       0
                      _i2c_wait_idle
                     _i2c_wait_ready
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_idle                                        1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _hyt221_getTemp                                       6     4      2      45
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _hyt221_getHumidity                                   4     2      2      30
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _batt_launch_acq                                      2     2      0      58
                                             18 COMRAM     2     2      0
               _zb_handle_setbatVolt
 ---------------------------------------------------------------------------------
 (3) _zb_handle_setbatVolt                                 2     0      2      58
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration                                          3     3      0      90
                                             17 COMRAM     3     3      0
                    _leds_red_glitch
 ---------------------------------------------------------------------------------
 (2) _leds_red_glitch                                      1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr_hi                                              16    16      0       3
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration
     _leds_red_glitch
   _i2c_setup
   _main_loop
     _batt_launch_acq
       _zb_handle_setbatVolt
     _hyt221_getHumidity
     _hyt221_getTemp
     _hyt221_launch_acq
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_red_and_yellow_glitch
     _hyt221_operation
       _i2c_trig_start
         _i2c_wait_idle
         _i2c_wait_ready
       _i2c_trig_stop
         _i2c_wait_ready
       _i2c_wait_idle
       _i2c_wait_ready
       _leds_red_and_yellow_glitch
     _leds_green_glitch
     _leds_red_glitch
     _leds_yellow_glitch
     _timer0_wait_262ms
       _timer0_wait_ready
     _timer0_wait_65ms
       _timer0_wait_ready
     _zb_handle
       _uart_read
       _zb_decodage
         _zb_doChecksum
     _zb_handle_getStatus
     _zb_handle_resetStatus
     _zb_handle_sendData
       _memcpy
       _uart_write
       _zigbee_appendChecksum
         _zb_doChecksum
     _zb_handle_setHumidityRaw
       _hyt221_getHumidity (ARG)
     _zb_handle_setTempRaw
       _hyt221_getTemp (ARG)
   _uart_setup

 _isr_hi (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      B      6F       5       86.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     22      68       1       81.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D7       3        0.0%
DATA                 0      0      D7      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Aug 15 17:03:45 2016

            __size_of_i2c_trig_start 000C                          _SSPSTATbits 000FC7  
                     uart_write@size 005A                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                                l102 0632                                  l114 06A6  
                                l128 0B08                                  l313 07EE  
                                l261 0370                                  l239 0BDC  
                                l363 0CA4                                  l438 0864  
                                l374 091E                                  l367 094A  
                                l295 0780                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  prod 000FF3  
                                wreg 000FE8          __end_of_zb_handle_getStatus 0E0C  
         __end_of_zb_handle_sendData 09E4                         __CFG_LVP$OFF 000000  
                       __CFG_WDT$OFF 000000                                 l1201 0B64  
                               l1123 0BC8                                 l1207 0D8E  
                               l1127 0BE6                                 l1073 0DA0  
                               l2105 0A3C                                 l2121 038C  
                               l2131 0458                                 l2141 049C  
                               l2117 036C                                 l1079 0DAC  
                               l1319 0C98                                 l1407 0948  
                               l2135 0478                                 l2143 04BA  
                               l2223 0614                                 l2073 0C5E  
                               l2137 0496                                 l2129 0436  
                               l2241 0642                                 l1523 08AA  
                               l1507 086E                                 l1195 0B46  
                               l2243 0658                                 l2227 0620  
                               l1365 08D0                                 l2077 0C74  
                               l2173 07B8                                 l2181 07CC  
                               l2165 077A                                 l2237 063C  
                               l1383 0912                                 l1367 08D6  
                               l2095 0A26                                 l2087 09FA  
                               l2177 07C6                                 l2169 07AE  
                               l2249 0668                                 l1491 081C  
                               l1387 0920                                 l1395 092C  
                               l2099 0A2C                                 l2267 06B0  
                               l2259 0698                                 l2291 06FC  
                               l1477 07FA                                 l2285 06F0  
                               l1489 081A                                 l1499 0844  
                   uart_write@buffer 0056                                 u1107 0C30  
                               u1117 0804                                 u1127 085E  
                               u1137 087E                                 u1147 088C  
                               u1067 0ACE                                 u1157 089E  
                               u1077 0D4E                                 _LATA 000F89  
                               u1167 0D7A                                 u1087 0D64  
                               u1097 0D36                        __CFG_DEBUG$ON 000000  
                               _TMR0 000FD6              ??_zigbee_appendChecksum 005F  
                               _main 0A9E                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0018                        __CFG_IESO$OFF 000000  
            ??_zb_handle_resetStatus 0056                        __CFG_MCLRE$ON 000000  
                  ??_batt_launch_acq 0058                        _i2c_wait_idle 0DAC  
           __size_of_leds_red_glitch 0016                                ?_main 0046  
               __size_of_calibration 00C0                                _T0CON 000FD5  
                              _T1CON 000FCD                                i2l413 057E  
                              i2l409 05C2                                _RCREG 000FAE  
                              _RCSTA 000FAB                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _SPBRG 000FAF  
                              _PORTA 000F80                                _TRISA 000F92  
                              _TRISC 000F94                                _TXREG 000FAD  
                              _TXSTA 000FAC                        __CFG_PWRT$OFF 000000  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                                _gData 000A  
                      _i2c_trig_stop 0E00                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                tablat 000FF5  
                              status 000FD8  hyt221_operation@bDeviceDataAreStale 0059  
                zb_decodage@checksum 0064                       __CFG_PBADEN$ON 000000  
                  _wait_join_counter 001D                      _UART_rxBufferNb 0017  
                    __initialization 0BF2                         __end_of_main 0AF0  
       ??_leds_red_and_yellow_glitch 0056                       ?_i2c_wait_idle 0046  
                             ??_main 0068                        __activetblptr 000002  
       __end_of_zb_handle_setTempRaw 0DCA                       ?_i2c_trig_stop 0046  
                     _i2c_wait_ready 0D9A                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
       __end_of_zb_handle_setbatVolt 0DF4                               _ADRESH 000FC4  
                             _ADRESL 000FC3            __size_of_hyt221_operation 009C  
                             i2l2033 0534                               i2l2025 0510  
                             i2l2051 058C                               i2l2061 05B8  
                             i2l2037 0554                               i2l2063 05BC  
                             _OSCCON 000FD3                               _SPBRGH 000FB0  
                             _SSPADD 000FC8                   __size_of_i2c_setup 0030  
                             _SSPBUF 000FC9                hyt221_operation@index 005A  
__size_of_leds_red_and_yellow_glitch 001A                     _UART_errorStatus 000E  
                   _timer0_wait_65ms 0CCA                       __CFG_XINST$OFF 000000  
                     _i2c_trig_start 0DF4                         ?_zb_decodage 005B  
                             _calibr 0019                       __CFG_STVREN$ON 000000  
                   ??_hyt221_getTemp 0058                               _memcpy 0B34  
                             clear_0 0BF8                               clear_1 0C04  
                             _isr_hi 0008             _zb_handle_setHumidityRaw 0DCA  
             __end_of_i2c_wait_ready 0DAC                      _UART_writeIndex 0018  
                       __pdataCOMRAM 0068                   zb_doChecksum@frame 0056  
                       __mediumconst 0000                    ??_leds_red_glitch 0056  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           __accesstop 0080  
            __end_of__initialization 0C1C                __end_of_zb_doChecksum 0C80  
             __end_of_i2c_trig_start 0E00                   _hyt221_getHumidity 0CA6  
                   zb_decodage@frame 005B                       __pcstackCOMRAM 0046  
                    ??_i2c_wait_idle 0056           __end_of_leds_yellow_glitch 0D5C  
               zb_decodage@frameSize 005D                  ?_hyt221_getHumidity 0056  
                  __end_of_i2c_setup 0C56                      ??_i2c_trig_stop 0056  
                       _batt_counter 0011                          isr_hi@dummy 0055  
                    ?_i2c_wait_ready 0046       hyt221_getHumidity@humidity_raw 0058  
                         __pbssBANK0 0080                   __size_of_main_loop 011C  
               ??_hyt221_getHumidity 0058                      _batt_launch_acq 0AF0  
     __size_of_zigbee_appendChecksum 005A        __end_of_zigbee_appendChecksum 0A9E  
                         _batt_value 0014                      ?_i2c_trig_start 0046  
                 _zb_handle_sendData 094C                 _zb_handle_setTempRaw 0DBC  
 __end_of_leds_red_and_yellow_glitch 0D46           _leds_red_and_yellow_glitch 0D2C  
     __size_of_zb_handle_resetStatus 000E        __end_of_zb_handle_resetStatus 0DE6  
        zigbee_appendChecksum@buffer 005B                 _zb_handle_setbatVolt 0DE6  
                ?_zb_handle_sendData 0046                              ?_memcpy 0056  
                            _BAUDCON 000FB8                              ?_isr_hi 0046  
                 __size_of_zb_handle 00D8                   __size_of_uart_read 0060  
                            _OSCTUNE 000F9B                              i2u80_40 0568  
                            i2u80_48 056A                              i2u74_40 0500  
                            i2u74_48 0502                              i2u76_40 0524  
                            i2u76_48 0526                              i2u78_40 0548  
                            i2u78_48 054A                              _SSPCON1 000FC6  
                            _SSPCON2 000FC5                              _SSPSTAT 000FC7  
                   _hyt221_operation 08B0                 ??_zb_handle_sendData 0062  
                  _timer0_wait_262ms 0CEC         __size_of_zb_handle_getStatus 0004  
                         _main_state 001B                   ?_timer0_wait_262ms 0046  
              ?_zb_handle_setTempRaw 005C                              __Hparam 0000  
                            __Lparam 0000                  ??_timer0_wait_262ms 0056  
                  __end_of_frameData 0321                ?_zb_handle_setbatVolt 0056  
                  _timer0_wait_ready 0D88                        ??_calibration 0057  
                       __psmallconst 0300                    __end_of_main_loop 0718  
               __size_of_zb_decodage 019C                              __pcinit 0BF2  
                 ?_timer0_wait_ready 0046                      __size_of_memcpy 0042  
                            __ramtop 0300                      __size_of_isr_hi 05F4  
                            __ptext0 0A9E                              __ptext1 0D0E  
                            __ptext2 05FC                              __ptext3 0DBC  
                            __ptext4 0DCA                              __ptext5 094C  
                            __ptext6 0A44                              __ptext7 0BB8  
                            __ptext8 0B34                              __ptext9 0DD8  
                          _T0CONbits 000FD5             __end_of_timer0_wait_65ms 0CEC  
                ??_timer0_wait_ready 0056              __end_of_batt_launch_acq 0B34  
          __end_of_timer0_wait_262ms 0D0E                       __pintcode_body 04BE  
               end_of_initialization 0C1C                              memcpy@d 005C  
                            memcpy@n 005A                              memcpy@s 005E  
                     zb_doChecksum@i 005A                        __Lmediumconst 0000  
                            int_func 04BE                    __end_of_zb_handle 07F0  
                  __end_of_uart_read 0A44            __end_of_timer0_wait_ready 0D9A  
         ??_zb_handle_setHumidityRaw 005C                            _RCSTAbits 000FAB  
                            postdec2 000FDD                    zb_handle@bSuccess 00E6  
                            postinc0 000FEE                              postinc2 000FDE  
                    _leds_red_glitch 0D72                           _zb_frameID 0068  
                         _zb_counter 001E                           _uart_setup 0D0E  
                         _uart_write 0BB8                            _PORTBbits 000F81  
                          _PORTCbits 000F82                  __end_of_calibration 08B0  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                        uart_write@b 0058                          uart_write@i 005B  
             ??_zb_handle_setTempRaw 005E                            _TXSTAbits 000FAC  
             ??_zb_handle_setbatVolt 0058                     ??_i2c_wait_ready 0056  
                     _UART_readIndex 0016                        __pidataCOMRAM 0E0C  
                     __end_of_memcpy 0B76                       __end_of_isr_hi 05FC  
                   _zb_frameReceived 00B2                  start_initialization 0BF2  
                          _i2c_setup 0C26           __size_of_timer0_wait_262ms 0022  
                 _leds_yellow_glitch 0D46                     ?_batt_launch_acq 0046  
                   ??_i2c_trig_start 0057                         calibration@w 0059  
                   __CFG_OSC$INTIO67 000000                  ?_leds_yellow_glitch 0046  
            __end_of_leds_red_glitch 0D88           __size_of_timer0_wait_ready 0012  
        ?_leds_red_and_yellow_glitch 0046             __end_of_hyt221_operation 094C  
              __end_of_i2c_wait_idle 0DBC                          _calibration 07F0  
                   __CFG_LPT1OSC$OFF 000000                             ??_memcpy 005C  
                           ??_isr_hi 0046                          ?_uart_setup 0046  
                  zb_doChecksum@size 0058                          ?_uart_write 0056  
                _zb_handle_getStatus 0E08                 ??_leds_yellow_glitch 0056  
                        __pbssCOMRAM 0001                __end_of_i2c_trig_stop 0E08  
             __size_of_zb_doChecksum 002A                        __pcstackBANK0 00E4  
            __size_of_hyt221_getTemp 0042                           ?_i2c_setup 0046  
                     _zb_frameToSend 0020                 ?_zb_handle_getStatus 0046  
        __size_of_hyt221_getHumidity 0024     __end_of_zb_handle_setHumidityRaw 0DD8  
              _zigbee_appendChecksum 0A44                    __CFG_CCP2MX$PORTC 000000  
                          __pintcode 0008                _zb_handle_resetStatus 0DD8  
    zb_handle_setbatVolt@battVoltage 0056                            _frameData 0301  
                  _hyt221_launch_acq 0C80              uart_read@expectedNbRead 005B  
                        __smallconst 0300                            _main_loop 05FC  
                 ?_hyt221_launch_acq 0046                    ?_timer0_wait_65ms 0046  
                 ??_timer0_wait_65ms 0056          __size_of_zb_handle_sendData 0098  
                ??_hyt221_launch_acq 0057                ??_zb_handle_getStatus 0056  
                __size_of_uart_setup 001E                             _LATAbits 000F89  
                           _LATBbits 000F8A                             _LATCbits 000F8B  
                __size_of_uart_write 003A                             _PIE1bits 000F9D  
                      _zb_doChecksum 0C56                     ?_leds_red_glitch 0046  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                      ??_zb_decodage 0060                     __CFG_WDTPS$16384 000000  
                          _zb_handle 0718                            _uart_read 09E4  
                    uart_read@buffer 0056                           uart_read@b 0059  
                         uart_read@i 005C            __end_of_hyt221_launch_acq 0CA6  
                          _zb_status 001F                           ?_main_loop 0046  
                        ??_i2c_setup 0056                calibration@tryCounter 0058  
                      _UART_rxBuffer 0080                    _leds_green_glitch 0D5C  
                     ?_zb_doChecksum 0056               ?_zigbee_appendChecksum 005B  
                 ?_leds_green_glitch 0046                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
     zigbee_appendChecksum@sizeFrame 005D                           ?_zb_handle 0046  
              zb_handle@decodedFrame 00E7                           ?_uart_read 0056  
              zb_doChecksum@checksum 0059               ?_zb_handle_resetStatus 0046  
                ??_leds_green_glitch 0056  zb_handle_setHumidityRaw@humidityRaw 005A  
                __end_of_zb_decodage 04BE                       _hyt221_getTemp 0B76  
  __size_of_zb_handle_setHumidityRaw 000E            ?_zb_handle_setHumidityRaw 005A  
                           __ptext10 0E08                             __ptext11 0718  
                           __ptext20 08B0                             __ptext12 0322  
                           __ptext21 0C80                             __ptext13 0C56  
                           __ptext30 0DE6                             __ptext22 0D2C  
                           __ptext14 09E4                             __ptext31 0C26  
                           __ptext23 0E00                             __ptext15 0CCA  
                           __ptext32 07F0                             __ptext24 0DF4  
                           __ptext16 0CEC                             __ptext33 0D72  
                           __ptext25 0D9A                             __ptext17 0D88  
                           __ptext26 0DAC                             __ptext18 0D46  
                           __ptext27 0B76                             __ptext19 0D5C  
                           __ptext28 0CA6                             __ptext29 0AF0  
          __end_of_leds_green_glitch 0D72                        __size_of_main 0052  
       zb_decodage@bCorrectlyDecoded 0065               main_loop@hyt221_status 0067  
      __size_of_zb_handle_setTempRaw 000E          zb_handle_sendData@frameSize 0065  
                 main_loop@zb_status 0066        __size_of_zb_handle_setbatVolt 000E  
                       ?_calibration 0046           __size_of_hyt221_launch_acq 0026  
                  ?_hyt221_operation 0046                         ??_uart_setup 0056  
                       ??_uart_write 0058                   ??_hyt221_operation 0057  
             __end_of_hyt221_getTemp 0BB8                          ??_main_loop 0066  
                         _INTCONbits 000FF2                             memcpy@d1 0056  
                           memcpy@s1 0058                             intlevel2 0000  
               _timer0_interupt_done 001C                      ??_zb_doChecksum 0059  
                 __end_of_uart_setup 0D2C                   __end_of_uart_write 0BF2  
           __size_of_batt_launch_acq 0044                           _OSCCONbits 000FD3  
                        ??_zb_handle 0066                          ??_uart_read 0059  
                        _zb_decodage 0322          zb_handle_setTempRaw@tempRaw 005C  
            zb_handle@sizeOfNextData 00E4                      ?_hyt221_getTemp 0056  
                        _sensor_data 0001          __size_of_leds_yellow_glitch 0016  
                  uart_read@nbToRead 0058              __size_of_i2c_wait_ready 0012  
                        _SSPCON2bits 000FC5                    _i2c_interupt_done 001A  
                         _WDTCONbits 000FD1           __end_of_hyt221_getHumidity 0CCA  
         __size_of_leds_green_glitch 0016               __size_of_i2c_wait_idle 0010  
          __size_of_timer0_wait_65ms 0022              zb_decodage@decodedFrame 005E  
             hyt221_getTemp@temp_raw 005A               __size_of_i2c_trig_stop 0008  
